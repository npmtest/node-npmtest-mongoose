{"/home/travis/build/npmtest/node-npmtest-mongoose/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_mongoose */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/lib.npmtest_mongoose.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/lib.npmtest_mongoose.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":53}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":59}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_mongoose */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_mongoose = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_mongoose = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":52}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":66},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-mongoose && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_mongoose */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_mongoose","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_mongoose.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_mongoose.rollup.js'] =","            local.assetsDict['/assets.npmtest_mongoose.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_mongoose.__dirname + '/lib.npmtest_mongoose.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}}},"branchMap":{},"code":["","/**"," * Export lib/mongoose"," *"," */","","module.exports = require('./lib/');",""],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":2,"7":2,"8":2,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":0,"40":0,"41":0,"42":0,"43":0,"44":2,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":1,"124":0,"125":0,"126":1,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":1,"138":1,"139":0,"140":0,"141":1,"142":1,"143":0,"144":1,"145":0,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":0,"162":0,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":1,"190":0,"191":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[2,0,0],"7":[0,2],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[1,1],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":2,"2":0,"3":0,"4":2,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"fnMap":{"1":{"name":"Mongoose","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":20}}},"2":{"name":"(anonymous_2)","line":68,"loc":{"start":{"line":68,"column":25},"end":{"line":68,"column":46}}},"3":{"name":"(anonymous_3)","line":110,"loc":{"start":{"line":110,"column":27},"end":{"line":110,"column":41}}},"4":{"name":"(anonymous_4)","line":177,"loc":{"start":{"line":177,"column":38},"end":{"line":177,"column":61}}},"5":{"name":"(anonymous_5)","line":184,"loc":{"start":{"line":184,"column":48},"end":{"line":184,"column":59}}},"6":{"name":"(anonymous_6)","line":187,"loc":{"start":{"line":187,"column":48},"end":{"line":187,"column":59}}},"7":{"name":"(anonymous_7)","line":189,"loc":{"start":{"line":189,"column":45},"end":{"line":189,"column":56}}},"8":{"name":"(anonymous_8)","line":236,"loc":{"start":{"line":236,"column":29},"end":{"line":236,"column":40}}},"9":{"name":"(anonymous_9)","line":254,"loc":{"start":{"line":254,"column":32},"end":{"line":254,"column":45}}},"10":{"name":"(anonymous_10)","line":256,"loc":{"start":{"line":256,"column":27},"end":{"line":256,"column":42}}},"11":{"name":"(anonymous_11)","line":257,"loc":{"start":{"line":257,"column":15},"end":{"line":257,"column":29}}},"12":{"name":"(anonymous_12)","line":268,"loc":{"start":{"line":268,"column":52},"end":{"line":268,"column":78}}},"13":{"name":"(anonymous_13)","line":319,"loc":{"start":{"line":319,"column":27},"end":{"line":319,"column":72}}},"14":{"name":"(anonymous_14)","line":434,"loc":{"start":{"line":434,"column":32},"end":{"line":434,"column":43}}},"15":{"name":"(anonymous_15)","line":447,"loc":{"start":{"line":447,"column":35},"end":{"line":447,"column":52}}},"16":{"name":"(anonymous_16)","line":475,"loc":{"start":{"line":475,"column":28},"end":{"line":475,"column":47}}},"17":{"name":"(anonymous_17)","line":497,"loc":{"start":{"line":497,"column":50},"end":{"line":497,"column":61}}},"18":{"name":"(anonymous_18)","line":501,"loc":{"start":{"line":501,"column":50},"end":{"line":501,"column":62}}},"19":{"name":"(anonymous_19)","line":666,"loc":{"start":{"line":666,"column":7},"end":{"line":666,"column":18}}},"20":{"name":"(anonymous_20)","line":669,"loc":{"start":{"line":669,"column":7},"end":{"line":669,"column":21}}},"21":{"name":"MongooseThenable","line":758,"loc":{"start":{"line":758,"column":0},"end":{"line":758,"column":45}}},"22":{"name":"(anonymous_22)","line":762,"loc":{"start":{"line":762,"column":7},"end":{"line":762,"column":21}}},"23":{"name":"(anonymous_23)","line":763,"loc":{"start":{"line":763,"column":21},"end":{"line":763,"column":32}}},"24":{"name":"(anonymous_24)","line":786,"loc":{"start":{"line":786,"column":34},"end":{"line":786,"column":68}}},"25":{"name":"(anonymous_25)","line":789,"loc":{"start":{"line":789,"column":27},"end":{"line":789,"column":53}}},"26":{"name":"(anonymous_26)","line":808,"loc":{"start":{"line":808,"column":35},"end":{"line":808,"column":56}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":17,"column":37}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":41}},"3":{"start":{"line":21,"column":0},"end":{"line":21,"column":39}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":52}},"5":{"start":{"line":33,"column":0},"end":{"line":44,"column":1}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":20}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":19}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":25}},"10":{"start":{"line":39,"column":2},"end":{"line":41,"column":4}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":37}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":28}},"13":{"start":{"line":50,"column":0},"end":{"line":50,"column":35}},"14":{"start":{"line":68,"column":0},"end":{"line":75,"column":2}},"15":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"16":{"start":{"line":70,"column":4},"end":{"line":70,"column":29}},"17":{"start":{"line":73,"column":2},"end":{"line":73,"column":28}},"18":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"19":{"start":{"line":76,"column":0},"end":{"line":76,"column":46}},"20":{"start":{"line":90,"column":0},"end":{"line":90,"column":48}},"21":{"start":{"line":96,"column":0},"end":{"line":96,"column":27}},"22":{"start":{"line":110,"column":0},"end":{"line":129,"column":2}},"23":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"24":{"start":{"line":112,"column":4},"end":{"line":112,"column":17}},"25":{"start":{"line":115,"column":2},"end":{"line":115,"column":42}},"26":{"start":{"line":116,"column":2},"end":{"line":116,"column":27}},"27":{"start":{"line":117,"column":2},"end":{"line":126,"column":3}},"28":{"start":{"line":118,"column":4},"end":{"line":125,"column":5}},"29":{"start":{"line":119,"column":6},"end":{"line":119,"column":68}},"30":{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},"31":{"start":{"line":121,"column":8},"end":{"line":121,"column":28}},"32":{"start":{"line":124,"column":6},"end":{"line":124,"column":19}},"33":{"start":{"line":128,"column":2},"end":{"line":128,"column":22}},"34":{"start":{"line":177,"column":0},"end":{"line":194,"column":2}},"35":{"start":{"line":178,"column":2},"end":{"line":178,"column":34}},"36":{"start":{"line":179,"column":2},"end":{"line":179,"column":30}},"37":{"start":{"line":181,"column":2},"end":{"line":181,"column":65}},"38":{"start":{"line":182,"column":2},"end":{"line":191,"column":3}},"39":{"start":{"line":183,"column":4},"end":{"line":190,"column":5}},"40":{"start":{"line":184,"column":6},"end":{"line":184,"column":63}},"41":{"start":{"line":185,"column":11},"end":{"line":190,"column":5}},"42":{"start":{"line":187,"column":6},"end":{"line":187,"column":63}},"43":{"start":{"line":189,"column":6},"end":{"line":189,"column":60}},"44":{"start":{"line":193,"column":2},"end":{"line":193,"column":14}},"45":{"start":{"line":195,"column":0},"end":{"line":195,"column":59}},"46":{"start":{"line":236,"column":0},"end":{"line":243,"column":2}},"47":{"start":{"line":237,"column":2},"end":{"line":237,"column":29}},"48":{"start":{"line":238,"column":2},"end":{"line":240,"column":3}},"49":{"start":{"line":239,"column":4},"end":{"line":239,"column":75}},"50":{"start":{"line":242,"column":2},"end":{"line":242,"column":70}},"51":{"start":{"line":244,"column":0},"end":{"line":244,"column":50}},"52":{"start":{"line":254,"column":0},"end":{"line":276,"column":2}},"53":{"start":{"line":255,"column":2},"end":{"line":255,"column":12}},"54":{"start":{"line":256,"column":2},"end":{"line":265,"column":5}},"55":{"start":{"line":257,"column":4},"end":{"line":264,"column":7}},"56":{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},"57":{"start":{"line":259,"column":8},"end":{"line":259,"column":15}},"58":{"start":{"line":261,"column":6},"end":{"line":263,"column":7}},"59":{"start":{"line":262,"column":8},"end":{"line":262,"column":20}},"60":{"start":{"line":267,"column":2},"end":{"line":267,"column":38}},"61":{"start":{"line":268,"column":2},"end":{"line":275,"column":6}},"62":{"start":{"line":269,"column":4},"end":{"line":269,"column":20}},"63":{"start":{"line":270,"column":4},"end":{"line":273,"column":5}},"64":{"start":{"line":271,"column":6},"end":{"line":271,"column":20}},"65":{"start":{"line":272,"column":6},"end":{"line":272,"column":13}},"66":{"start":{"line":274,"column":4},"end":{"line":274,"column":14}},"67":{"start":{"line":277,"column":0},"end":{"line":277,"column":53}},"68":{"start":{"line":319,"column":0},"end":{"line":420,"column":2}},"69":{"start":{"line":320,"column":2},"end":{"line":320,"column":12}},"70":{"start":{"line":321,"column":2},"end":{"line":327,"column":3}},"71":{"start":{"line":322,"column":4},"end":{"line":322,"column":17}},"72":{"start":{"line":323,"column":4},"end":{"line":323,"column":22}},"73":{"start":{"line":324,"column":4},"end":{"line":326,"column":5}},"74":{"start":{"line":325,"column":6},"end":{"line":325,"column":84}},"75":{"start":{"line":329,"column":2},"end":{"line":332,"column":3}},"76":{"start":{"line":330,"column":4},"end":{"line":330,"column":24}},"77":{"start":{"line":331,"column":4},"end":{"line":331,"column":19}},"78":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"79":{"start":{"line":335,"column":4},"end":{"line":335,"column":32}},"80":{"start":{"line":337,"column":2},"end":{"line":340,"column":3}},"81":{"start":{"line":338,"column":4},"end":{"line":339,"column":26}},"82":{"start":{"line":342,"column":2},"end":{"line":345,"column":3}},"83":{"start":{"line":343,"column":4},"end":{"line":343,"column":26}},"84":{"start":{"line":344,"column":4},"end":{"line":344,"column":22}},"85":{"start":{"line":348,"column":2},"end":{"line":348,"column":14}},"86":{"start":{"line":349,"column":2},"end":{"line":354,"column":3}},"87":{"start":{"line":350,"column":4},"end":{"line":350,"column":23}},"88":{"start":{"line":351,"column":4},"end":{"line":351,"column":20}},"89":{"start":{"line":353,"column":4},"end":{"line":353,"column":17}},"90":{"start":{"line":357,"column":2},"end":{"line":364,"column":3}},"91":{"start":{"line":358,"column":4},"end":{"line":363,"column":5}},"92":{"start":{"line":360,"column":6},"end":{"line":360,"column":39}},"93":{"start":{"line":362,"column":6},"end":{"line":362,"column":56}},"94":{"start":{"line":366,"column":2},"end":{"line":368,"column":3}},"95":{"start":{"line":367,"column":4},"end":{"line":367,"column":31}},"96":{"start":{"line":370,"column":2},"end":{"line":370,"column":10}},"97":{"start":{"line":374,"column":2},"end":{"line":389,"column":3}},"98":{"start":{"line":375,"column":4},"end":{"line":377,"column":5}},"99":{"start":{"line":376,"column":6},"end":{"line":376,"column":57}},"100":{"start":{"line":379,"column":4},"end":{"line":386,"column":5}},"101":{"start":{"line":381,"column":6},"end":{"line":381,"column":32}},"102":{"start":{"line":382,"column":6},"end":{"line":382,"column":38}},"103":{"start":{"line":383,"column":6},"end":{"line":383,"column":66}},"104":{"start":{"line":385,"column":6},"end":{"line":385,"column":17}},"105":{"start":{"line":388,"column":4},"end":{"line":388,"column":29}},"106":{"start":{"line":392,"column":2},"end":{"line":397,"column":3}},"107":{"start":{"line":393,"column":4},"end":{"line":393,"column":37}},"108":{"start":{"line":394,"column":4},"end":{"line":396,"column":5}},"109":{"start":{"line":395,"column":6},"end":{"line":395,"column":56}},"110":{"start":{"line":400,"column":2},"end":{"line":400,"column":102}},"111":{"start":{"line":400,"column":44},"end":{"line":400,"column":102}},"112":{"start":{"line":403,"column":2},"end":{"line":405,"column":3}},"113":{"start":{"line":404,"column":4},"end":{"line":404,"column":74}},"114":{"start":{"line":407,"column":2},"end":{"line":407,"column":57}},"115":{"start":{"line":408,"column":2},"end":{"line":408,"column":82}},"116":{"start":{"line":410,"column":2},"end":{"line":412,"column":3}},"117":{"start":{"line":411,"column":4},"end":{"line":411,"column":17}},"118":{"start":{"line":414,"column":2},"end":{"line":416,"column":3}},"119":{"start":{"line":415,"column":4},"end":{"line":415,"column":17}},"120":{"start":{"line":418,"column":2},"end":{"line":418,"column":28}},"121":{"start":{"line":419,"column":2},"end":{"line":419,"column":27}},"122":{"start":{"line":421,"column":0},"end":{"line":421,"column":48}},"123":{"start":{"line":434,"column":0},"end":{"line":437,"column":2}},"124":{"start":{"line":435,"column":2},"end":{"line":435,"column":39}},"125":{"start":{"line":436,"column":2},"end":{"line":436,"column":15}},"126":{"start":{"line":438,"column":0},"end":{"line":438,"column":53}},"127":{"start":{"line":447,"column":0},"end":{"line":460,"column":2}},"128":{"start":{"line":448,"column":2},"end":{"line":450,"column":3}},"129":{"start":{"line":449,"column":4},"end":{"line":449,"column":11}},"130":{"start":{"line":451,"column":2},"end":{"line":451,"column":8}},"131":{"start":{"line":452,"column":2},"end":{"line":452,"column":10}},"132":{"start":{"line":453,"column":2},"end":{"line":455,"column":3}},"133":{"start":{"line":454,"column":4},"end":{"line":454,"column":58}},"134":{"start":{"line":456,"column":2},"end":{"line":456,"column":38}},"135":{"start":{"line":457,"column":2},"end":{"line":459,"column":3}},"136":{"start":{"line":458,"column":4},"end":{"line":458,"column":47}},"137":{"start":{"line":461,"column":0},"end":{"line":461,"column":56}},"138":{"start":{"line":475,"column":0},"end":{"line":478,"column":2}},"139":{"start":{"line":476,"column":2},"end":{"line":476,"column":32}},"140":{"start":{"line":477,"column":2},"end":{"line":477,"column":14}},"141":{"start":{"line":479,"column":0},"end":{"line":479,"column":49}},"142":{"start":{"line":497,"column":0},"end":{"line":499,"column":3}},"143":{"start":{"line":498,"column":2},"end":{"line":498,"column":29}},"144":{"start":{"line":501,"column":0},"end":{"line":503,"column":3}},"145":{"start":{"line":502,"column":2},"end":{"line":502,"column":26}},"146":{"start":{"line":509,"column":0},"end":{"line":509,"column":76}},"147":{"start":{"line":515,"column":0},"end":{"line":515,"column":49}},"148":{"start":{"line":521,"column":0},"end":{"line":521,"column":49}},"149":{"start":{"line":530,"column":0},"end":{"line":530,"column":41}},"150":{"start":{"line":539,"column":0},"end":{"line":539,"column":43}},"151":{"start":{"line":548,"column":0},"end":{"line":548,"column":43}},"152":{"start":{"line":557,"column":0},"end":{"line":557,"column":41}},"153":{"start":{"line":573,"column":0},"end":{"line":573,"column":39}},"154":{"start":{"line":588,"column":0},"end":{"line":588,"column":35}},"155":{"start":{"line":597,"column":0},"end":{"line":597,"column":43}},"156":{"start":{"line":611,"column":0},"end":{"line":611,"column":46}},"157":{"start":{"line":620,"column":0},"end":{"line":620,"column":45}},"158":{"start":{"line":647,"column":0},"end":{"line":647,"column":33}},"159":{"start":{"line":656,"column":0},"end":{"line":656,"column":33}},"160":{"start":{"line":665,"column":0},"end":{"line":672,"column":3}},"161":{"start":{"line":667,"column":4},"end":{"line":667,"column":33}},"162":{"start":{"line":670,"column":4},"end":{"line":670,"column":29}},"163":{"start":{"line":681,"column":0},"end":{"line":681,"column":53}},"164":{"start":{"line":690,"column":0},"end":{"line":690,"column":33}},"165":{"start":{"line":699,"column":0},"end":{"line":699,"column":39}},"166":{"start":{"line":708,"column":0},"end":{"line":708,"column":69}},"167":{"start":{"line":717,"column":0},"end":{"line":717,"column":46}},"168":{"start":{"line":730,"column":0},"end":{"line":730,"column":55}},"169":{"start":{"line":739,"column":0},"end":{"line":739,"column":46}},"170":{"start":{"line":748,"column":0},"end":{"line":748,"column":46}},"171":{"start":{"line":758,"column":0},"end":{"line":772,"column":1}},"172":{"start":{"line":759,"column":2},"end":{"line":759,"column":19}},"173":{"start":{"line":760,"column":2},"end":{"line":770,"column":3}},"174":{"start":{"line":761,"column":4},"end":{"line":769,"column":5}},"175":{"start":{"line":762,"column":6},"end":{"line":766,"column":14}},"176":{"start":{"line":763,"column":8},"end":{"line":765,"column":10}},"177":{"start":{"line":764,"column":10},"end":{"line":764,"column":58}},"178":{"start":{"line":767,"column":11},"end":{"line":769,"column":5}},"179":{"start":{"line":768,"column":6},"end":{"line":768,"column":33}},"180":{"start":{"line":771,"column":2},"end":{"line":771,"column":28}},"181":{"start":{"line":774,"column":0},"end":{"line":774,"column":42}},"182":{"start":{"line":786,"column":0},"end":{"line":796,"column":2}},"183":{"start":{"line":787,"column":2},"end":{"line":787,"column":38}},"184":{"start":{"line":788,"column":2},"end":{"line":793,"column":3}},"185":{"start":{"line":789,"column":4},"end":{"line":792,"column":37}},"186":{"start":{"line":790,"column":6},"end":{"line":791,"column":28}},"187":{"start":{"line":794,"column":2},"end":{"line":794,"column":37}},"188":{"start":{"line":795,"column":2},"end":{"line":795,"column":55}},"189":{"start":{"line":808,"column":0},"end":{"line":810,"column":2}},"190":{"start":{"line":809,"column":2},"end":{"line":809,"column":37}},"191":{"start":{"line":818,"column":0},"end":{"line":818,"column":55}}},"branchMap":{"1":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"2":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"3":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":2},"end":{"line":117,"column":2}},{"start":{"line":117,"column":2},"end":{"line":117,"column":2}}]},"4":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"5":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":10},"end":{"line":120,"column":13}},{"start":{"line":120,"column":17},"end":{"line":120,"column":31}}]},"6":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":17},"end":{"line":181,"column":24}},{"start":{"line":181,"column":29},"end":{"line":181,"column":44}},{"start":{"line":181,"column":48},"end":{"line":181,"column":63}}]},"7":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"8":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"9":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":8},"end":{"line":183,"column":37}},{"start":{"line":183,"column":41},"end":{"line":183,"column":75}}]},"10":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":11},"end":{"line":185,"column":11}},{"start":{"line":185,"column":11},"end":{"line":185,"column":11}}]},"11":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":23}},{"start":{"line":186,"column":9},"end":{"line":186,"column":28}},{"start":{"line":186,"column":32},"end":{"line":186,"column":48}}]},"12":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"13":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":35}},{"start":{"line":238,"column":39},"end":{"line":238,"column":73}}]},"14":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":6}},{"start":{"line":258,"column":6},"end":{"line":258,"column":6}}]},"15":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":6},"end":{"line":261,"column":6}},{"start":{"line":261,"column":6},"end":{"line":261,"column":6}}]},"16":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":4},"end":{"line":269,"column":6}},{"start":{"line":269,"column":10},"end":{"line":269,"column":19}}]},"17":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":4},"end":{"line":270,"column":4}},{"start":{"line":270,"column":4},"end":{"line":270,"column":4}}]},"18":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":2},"end":{"line":321,"column":2}},{"start":{"line":321,"column":2},"end":{"line":321,"column":2}}]},"19":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"20":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":2},"end":{"line":329,"column":2}},{"start":{"line":329,"column":2},"end":{"line":329,"column":2}}]},"21":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"22":{"line":334,"type":"binary-expr","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":28}},{"start":{"line":334,"column":32},"end":{"line":334,"column":58}}]},"23":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"24":{"line":337,"type":"binary-expr","locations":[{"start":{"line":337,"column":6},"end":{"line":337,"column":12}},{"start":{"line":337,"column":16},"end":{"line":337,"column":40}}]},"25":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"26":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":2},"end":{"line":349,"column":2}},{"start":{"line":349,"column":2},"end":{"line":349,"column":2}}]},"27":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":6},"end":{"line":349,"column":14}},{"start":{"line":349,"column":18},"end":{"line":349,"column":42}}]},"28":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"29":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"30":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"31":{"line":374,"type":"if","locations":[{"start":{"line":374,"column":2},"end":{"line":374,"column":2}},{"start":{"line":374,"column":2},"end":{"line":374,"column":2}}]},"32":{"line":374,"type":"binary-expr","locations":[{"start":{"line":374,"column":6},"end":{"line":374,"column":23}},{"start":{"line":374,"column":27},"end":{"line":374,"column":50}}]},"33":{"line":375,"type":"if","locations":[{"start":{"line":375,"column":4},"end":{"line":375,"column":4}},{"start":{"line":375,"column":4},"end":{"line":375,"column":4}}]},"34":{"line":375,"type":"binary-expr","locations":[{"start":{"line":375,"column":8},"end":{"line":375,"column":14}},{"start":{"line":375,"column":18},"end":{"line":375,"column":41}},{"start":{"line":375,"column":45},"end":{"line":375,"column":80}}]},"35":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"36":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"37":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":4},"end":{"line":394,"column":4}},{"start":{"line":394,"column":4},"end":{"line":394,"column":4}}]},"38":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":2},"end":{"line":400,"column":2}},{"start":{"line":400,"column":2},"end":{"line":400,"column":2}}]},"39":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"40":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":17},"end":{"line":404,"column":41}},{"start":{"line":404,"column":45},"end":{"line":404,"column":73}}]},"41":{"line":407,"type":"binary-expr","locations":[{"start":{"line":407,"column":19},"end":{"line":407,"column":37}},{"start":{"line":407,"column":41},"end":{"line":407,"column":56}}]},"42":{"line":408,"type":"binary-expr","locations":[{"start":{"line":408,"column":29},"end":{"line":408,"column":34}},{"start":{"line":408,"column":38},"end":{"line":408,"column":42}}]},"43":{"line":410,"type":"if","locations":[{"start":{"line":410,"column":2},"end":{"line":410,"column":2}},{"start":{"line":410,"column":2},"end":{"line":410,"column":2}}]},"44":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":2},"end":{"line":414,"column":2}},{"start":{"line":414,"column":2},"end":{"line":414,"column":2}}]},"45":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":2},"end":{"line":448,"column":2}},{"start":{"line":448,"column":2},"end":{"line":448,"column":2}}]},"46":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":13},"end":{"line":509,"column":40}},{"start":{"line":509,"column":44},"end":{"line":509,"column":75}}]},"47":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":4},"end":{"line":761,"column":4}},{"start":{"line":761,"column":4},"end":{"line":761,"column":4}}]},"48":{"line":761,"type":"binary-expr","locations":[{"start":{"line":761,"column":8},"end":{"line":761,"column":43}},{"start":{"line":761,"column":47},"end":{"line":761,"column":76}}]},"49":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":11},"end":{"line":767,"column":11}},{"start":{"line":767,"column":11},"end":{"line":767,"column":11}}]},"50":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":2},"end":{"line":788,"column":2}},{"start":{"line":788,"column":2},"end":{"line":788,"column":2}}]}},"code":["'use strict';","","/*!"," * Module dependencies."," */","","var Schema = require('./schema'),","    SchemaType = require('./schematype'),","    VirtualType = require('./virtualtype'),","    STATES = require('./connectionstate'),","    Types = require('./types'),","    Query = require('./query'),","    Model = require('./model'),","    Document = require('./document'),","    utils = require('./utils'),","    format = utils.toCollectionName,","    pkg = require('../package.json');","","var querystring = require('querystring');","","var Aggregate = require('./aggregate');","var PromiseProvider = require('./promise_provider');","","/**"," * Mongoose constructor."," *"," * The exports object of the `mongoose` module is an instance of this class."," * Most apps will only use this one instance."," *"," * @api public"," */","","function Mongoose() {","  this.connections = [];","  this.plugins = [];","  this.models = {};","  this.modelSchemas = {};","  // default global options","  this.options = {","    pluralization: true","  };","  var conn = this.createConnection(); // default connection","  conn.models = this.models;","}","","/**"," * Expose connection states for user-land"," *"," */","Mongoose.prototype.STATES = STATES;","","/**"," * Sets mongoose options"," *"," * ####Example:"," *"," *     mongoose.set('test', value) // sets the 'test' option to `value`"," *"," *     mongoose.set('debug', true) // enable logging collection methods + arguments to the console"," *"," *     mongoose.set('debug', function(collectionName, methodName, arg1, arg2...) {}); // use custom function to log collection methods + arguments"," *"," * @param {String} key"," * @param {String|Function} value"," * @api public"," */","","Mongoose.prototype.set = function(key, value) {","  if (arguments.length === 1) {","    return this.options[key];","  }","","  this.options[key] = value;","  return this;","};","Mongoose.prototype.set.$hasSideEffects = true;","","/**"," * Gets mongoose options"," *"," * ####Example:"," *"," *     mongoose.get('test') // returns the 'test' value"," *"," * @param {String} key"," * @method get"," * @api public"," */","","Mongoose.prototype.get = Mongoose.prototype.set;","","/*!"," * ReplSet connection string check."," */","","var rgxReplSet = /^.+,.+$/;","","/**"," * Checks if ?replicaSet query parameter is specified in URI"," *"," * ####Example:"," *"," *     checkReplicaSetInUri('localhost:27000?replicaSet=rs0'); // true"," *"," * @param {String} uri"," * @return {boolean}"," * @api private"," */","","var checkReplicaSetInUri = function(uri) {","  if (!uri) {","    return false;","  }","","  var queryStringStart = uri.indexOf('?');","  var isReplicaSet = false;","  if (queryStringStart !== -1) {","    try {","      var obj = querystring.parse(uri.substr(queryStringStart + 1));","      if (obj && obj.replicaSet) {","        isReplicaSet = true;","      }","    } catch (e) {","      return false;","    }","  }","","  return isReplicaSet;","};","","/**"," * Creates a Connection instance."," *"," * Each `connection` instance maps to a single database. This method is helpful when mangaging multiple db connections."," *"," * If arguments are passed, they are proxied to either [Connection#open](#connection_Connection-open) or [Connection#openSet](#connection_Connection-openSet) appropriately. This means we can pass `db`, `server`, and `replset` options to the driver. _Note that the `safe` option specified in your schema will overwrite the `safe` db option specified here unless you set your schemas `safe` option to `undefined`. See [this](/docs/guide.html#safe) for more information._"," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Example:"," *"," *     // with mongodb:// URI"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database');"," *"," *     // and options"," *     var opts = { db: { native_parser: true }}"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database', opts);"," *"," *     // replica sets"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database');"," *"," *     // and options"," *     var opts = { replset: { strategy: 'ping', rs_name: 'testSet' }}"," *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database', opts);"," *"," *     // with [host, database_name[, port] signature"," *     db = mongoose.createConnection('localhost', 'database', port)"," *"," *     // and options"," *     var opts = { server: { auto_reconnect: false }, user: 'username', pass: 'mypassword' }"," *     db = mongoose.createConnection('localhost', 'database', port, opts)"," *"," *     // initialize now, connect later"," *     db = mongoose.createConnection();"," *     db.open('localhost', 'database', port, [opts]);"," *"," * @param {String} [uri] a mongodb:// URI"," * @param {Object} [options] options to pass to the driver"," * @param {Object} [options.config] mongoose-specific options"," * @param {Boolean} [options.config.autoIndex] set to false to disable automatic index creation for all models associated with this connection."," * @see Connection#open #connection_Connection-open"," * @see Connection#openSet #connection_Connection-openSet"," * @return {Connection} the created Connection object"," * @api public"," */","","Mongoose.prototype.createConnection = function(uri, options) {","  var conn = new Connection(this);","  this.connections.push(conn);","","  var rsOption = options && (options.replset || options.replSet);","  if (arguments.length) {","    if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {","      conn.openSet.apply(conn, arguments).catch(function() {});","    } else if (rsOption &&","        (rsOption.replicaSet || rsOption.rs_name)) {","      conn.openSet.apply(conn, arguments).catch(function() {});","    } else {","      conn.open.apply(conn, arguments).catch(function() {});","    }","  }","","  return conn;","};","Mongoose.prototype.createConnection.$hasSideEffects = true;","","/**"," * Opens the default mongoose connection."," *"," * If arguments are passed, they are proxied to either"," * [Connection#open](#connection_Connection-open) or"," * [Connection#openSet](#connection_Connection-openSet) appropriately."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Example:"," *"," *     mongoose.connect('mongodb://user:pass@localhost:port/database');"," *"," *     // replica sets"," *     var uri = 'mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/mydatabase';"," *     mongoose.connect(uri);"," *"," *     // with options"," *     mongoose.connect(uri, options);"," *"," *     // connecting to multiple mongos"," *     var uri = 'mongodb://hostA:27501,hostB:27501';"," *     var opts = { mongos: true };"," *     mongoose.connect(uri, opts);"," *"," *     // optional callback that gets fired when initial connection completed"," *     var uri = 'mongodb://nonexistent.domain:27000';"," *     mongoose.connect(uri, function(error) {"," *       // if error is truthy, the initial connection failed."," *     })"," *"," * @param {String} uri(s)"," * @param {Object} [options]"," * @param {Function} [callback]"," * @see Mongoose#createConnection #index_Mongoose-createConnection"," * @api public"," * @return {MongooseThenable} pseudo-promise wrapper around this"," */","","Mongoose.prototype.connect = function() {","  var conn = this.connection;","  if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {","    return new MongooseThenable(this, conn.openSet.apply(conn, arguments));","  }","","  return new MongooseThenable(this, conn.open.apply(conn, arguments));","};","Mongoose.prototype.connect.$hasSideEffects = true;","","/**"," * Disconnects all connections."," *"," * @param {Function} [fn] called after all connection close."," * @return {MongooseThenable} pseudo-promise wrapper around this"," * @api public"," */","","Mongoose.prototype.disconnect = function(fn) {","  var error;","  this.connections.forEach(function(conn) {","    conn.close(function(err) {","      if (error) {","        return;","      }","      if (err) {","        error = err;","      }","    });","  });","","  var Promise = PromiseProvider.get();","  return new MongooseThenable(this, new Promise.ES6(function(resolve, reject) {","    fn && fn(error);","    if (error) {","      reject(error);","      return;","    }","    resolve();","  }));","};","Mongoose.prototype.disconnect.$hasSideEffects = true;","","/**"," * Defines a model or retrieves it."," *"," * Models defined on the `mongoose` instance are available to all connection created by the same `mongoose` instance."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *"," *     // define an Actor model with this mongoose instance"," *     mongoose.model('Actor', new Schema({ name: String }));"," *"," *     // create a new connection"," *     var conn = mongoose.createConnection(..);"," *"," *     // retrieve the Actor model"," *     var Actor = conn.model('Actor');"," *"," * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._"," *"," * ####Example:"," *"," *     var schema = new Schema({ name: String }, { collection: 'actor' });"," *"," *     // or"," *"," *     schema.set('collection', 'actor');"," *"," *     // or"," *"," *     var collectionName = 'actor'"," *     var M = mongoose.model('Actor', schema, collectionName)"," *"," * @param {String|Function} name model name or class extending Model"," * @param {Schema} [schema]"," * @param {String} [collection] name (optional, inferred from model name)"," * @param {Boolean} [skipInit] whether to skip initialization (defaults to false)"," * @api public"," */","","Mongoose.prototype.model = function(name, schema, collection, skipInit) {","  var model;","  if (typeof name === 'function') {","    model = name;","    name = model.name;","    if (!(model.prototype instanceof Model)) {","      throw new mongoose.Error('The provided class ' + name + ' must extend Model');","    }","  }","","  if (typeof schema === 'string') {","    collection = schema;","    schema = false;","  }","","  if (utils.isObject(schema) && !(schema.instanceOfSchema)) {","    schema = new Schema(schema);","  }","  if (schema && !schema.instanceOfSchema) {","    throw new Error('The 2nd parameter to `mongoose.model()` should be a ' +","      'schema or a POJO');","  }","","  if (typeof collection === 'boolean') {","    skipInit = collection;","    collection = null;","  }","","  // handle internal options from connection.model()","  var options;","  if (skipInit && utils.isObject(skipInit)) {","    options = skipInit;","    skipInit = true;","  } else {","    options = {};","  }","","  // look up schema for the collection.","  if (!this.modelSchemas[name]) {","    if (schema) {","      // cache it so we only apply plugins once","      this.modelSchemas[name] = schema;","    } else {","      throw new mongoose.Error.MissingSchemaError(name);","    }","  }","","  if (schema) {","    this._applyPlugins(schema);","  }","","  var sub;","","  // connection.model() may be passing a different schema for","  // an existing model name. in this case don't read from cache.","  if (this.models[name] && options.cache !== false) {","    if (schema && schema.instanceOfSchema && schema !== this.models[name].schema) {","      throw new mongoose.Error.OverwriteModelError(name);","    }","","    if (collection) {","      // subclass current model with alternate collection","      model = this.models[name];","      schema = model.prototype.schema;","      sub = model.__subclass(this.connection, schema, collection);","      // do not cache the sub model","      return sub;","    }","","    return this.models[name];","  }","","  // ensure a schema exists","  if (!schema) {","    schema = this.modelSchemas[name];","    if (!schema) {","      throw new mongoose.Error.MissingSchemaError(name);","    }","  }","","  // Apply relevant \"global\" options to the schema","  if (!('pluralization' in schema.options)) schema.options.pluralization = this.options.pluralization;","","","  if (!collection) {","    collection = schema.get('collection') || format(name, schema.options);","  }","","  var connection = options.connection || this.connection;","  model = this.Model.compile(model || name, schema, collection, connection, this);","","  if (!skipInit) {","    model.init();","  }","","  if (options.cache === false) {","    return model;","  }","","  this.models[name] = model;","  return this.models[name];","};","Mongoose.prototype.model.$hasSideEffects = true;","","/**"," * Returns an array of model names created on this instance of Mongoose."," *"," * ####Note:"," *"," * _Does not include names of models created using `connection.model()`._"," *"," * @api public"," * @return {Array}"," */","","Mongoose.prototype.modelNames = function() {","  var names = Object.keys(this.models);","  return names;","};","Mongoose.prototype.modelNames.$hasSideEffects = true;","","/**"," * Applies global plugins to `schema`."," *"," * @param {Schema} schema"," * @api private"," */","","Mongoose.prototype._applyPlugins = function(schema) {","  if (schema.$globalPluginsApplied) {","    return;","  }","  var i;","  var len;","  for (i = 0, len = this.plugins.length; i < len; ++i) {","    schema.plugin(this.plugins[i][0], this.plugins[i][1]);","  }","  schema.$globalPluginsApplied = true;","  for (i = 0, len = schema.childSchemas.length; i < len; ++i) {","    this._applyPlugins(schema.childSchemas[i]);","  }","};","Mongoose.prototype._applyPlugins.$hasSideEffects = true;","","/**"," * Declares a global plugin executed on all Schemas."," *"," * Equivalent to calling `.plugin(fn)` on each Schema you create."," *"," * @param {Function} fn plugin callback"," * @param {Object} [opts] optional options"," * @return {Mongoose} this"," * @see plugins ./plugins.html"," * @api public"," */","","Mongoose.prototype.plugin = function(fn, opts) {","  this.plugins.push([fn, opts]);","  return this;","};","Mongoose.prototype.plugin.$hasSideEffects = true;","","/**"," * The default connection of the mongoose module."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     mongoose.connect(...);"," *     mongoose.connection.on('error', cb);"," *"," * This is the connection used by default for every model created using [mongoose.model](#index_Mongoose-model)."," *"," * @property connection"," * @return {Connection}"," * @api public"," */","","Mongoose.prototype.__defineGetter__('connection', function() {","  return this.connections[0];","});","","Mongoose.prototype.__defineSetter__('connection', function(v) {","  this.connections[0] = v;","});","","/*!"," * Driver depentend APIs"," */","","var driver = global.MONGOOSE_DRIVER_PATH || './drivers/node-mongodb-native';","","/*!"," * Connection"," */","","var Connection = require(driver + '/connection');","","/*!"," * Collection"," */","","var Collection = require(driver + '/collection');","","/**"," * The Mongoose Aggregate constructor"," *"," * @method Aggregate"," * @api public"," */","","Mongoose.prototype.Aggregate = Aggregate;","","/**"," * The Mongoose Collection constructor"," *"," * @method Collection"," * @api public"," */","","Mongoose.prototype.Collection = Collection;","","/**"," * The Mongoose [Connection](#connection_Connection) constructor"," *"," * @method Connection"," * @api public"," */","","Mongoose.prototype.Connection = Connection;","","/**"," * The Mongoose version"," *"," * @property version"," * @api public"," */","","Mongoose.prototype.version = pkg.version;","","/**"," * The Mongoose constructor"," *"," * The exports of the mongoose module is an instance of this class."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var mongoose2 = new mongoose.Mongoose();"," *"," * @method Mongoose"," * @api public"," */","","Mongoose.prototype.Mongoose = Mongoose;","","/**"," * The Mongoose [Schema](#schema_Schema) constructor"," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var Schema = mongoose.Schema;"," *     var CatSchema = new Schema(..);"," *"," * @method Schema"," * @api public"," */","","Mongoose.prototype.Schema = Schema;","","/**"," * The Mongoose [SchemaType](#schematype_SchemaType) constructor"," *"," * @method SchemaType"," * @api public"," */","","Mongoose.prototype.SchemaType = SchemaType;","","/**"," * The various Mongoose SchemaTypes."," *"," * ####Note:"," *"," * _Alias of mongoose.Schema.Types for backwards compatibility._"," *"," * @property SchemaTypes"," * @see Schema.SchemaTypes #schema_Schema.Types"," * @api public"," */","","Mongoose.prototype.SchemaTypes = Schema.Types;","","/**"," * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor"," *"," * @method VirtualType"," * @api public"," */","","Mongoose.prototype.VirtualType = VirtualType;","","/**"," * The various Mongoose Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var array = mongoose.Types.Array;"," *"," * ####Types:"," *"," * - [ObjectId](#types-objectid-js)"," * - [Buffer](#types-buffer-js)"," * - [SubDocument](#types-embedded-js)"," * - [Array](#types-array-js)"," * - [DocumentArray](#types-documentarray-js)"," *"," * Using this exposed access to the `ObjectId` type, we can construct ids on demand."," *"," *     var ObjectId = mongoose.Types.ObjectId;"," *     var id1 = new ObjectId;"," *"," * @property Types"," * @api public"," */","","Mongoose.prototype.Types = Types;","","/**"," * The Mongoose [Query](#query_Query) constructor."," *"," * @method Query"," * @api public"," */","","Mongoose.prototype.Query = Query;","","/**"," * The Mongoose [Promise](#promise_Promise) constructor."," *"," * @method Promise"," * @api public"," */","","Object.defineProperty(Mongoose.prototype, 'Promise', {","  get: function() {","    return PromiseProvider.get();","  },","  set: function(lib) {","    PromiseProvider.set(lib);","  }","});","","/**"," * Storage layer for mongoose promises"," *"," * @method PromiseProvider"," * @api public"," */","","Mongoose.prototype.PromiseProvider = PromiseProvider;","","/**"," * The Mongoose [Model](#model_Model) constructor."," *"," * @method Model"," * @api public"," */","","Mongoose.prototype.Model = Model;","","/**"," * The Mongoose [Document](#document-js) constructor."," *"," * @method Document"," * @api public"," */","","Mongoose.prototype.Document = Document;","","/**"," * The Mongoose DocumentProvider constructor."," *"," * @method DocumentProvider"," * @api public"," */","","Mongoose.prototype.DocumentProvider = require('./document_provider');","","/**"," * The [MongooseError](#error_MongooseError) constructor."," *"," * @method Error"," * @api public"," */","","Mongoose.prototype.Error = require('./error');","","/**"," * The Mongoose CastError constructor"," *"," * @method CastError"," * @param {String} type The name of the type"," * @param {Any} value The value that failed to cast"," * @param {String} path The path `a.b.c` in the doc where this cast error occurred"," * @param {Error} [reason] The original error that was thrown"," * @api public"," */","","Mongoose.prototype.CastError = require('./error/cast');","","/**"," * The [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver Mongoose uses."," *"," * @property mongo"," * @api public"," */","","Mongoose.prototype.mongo = require('mongodb');","","/**"," * The [mquery](https://github.com/aheckmann/mquery) query builder Mongoose uses."," *"," * @property mquery"," * @api public"," */","","Mongoose.prototype.mquery = require('mquery');","","/**"," * Wraps the given Mongoose instance into a thenable (pseudo-promise). This"," * is so `connect()` and `disconnect()` can return a thenable while maintaining"," * backwards compatibility."," *"," * @api private"," */","","function MongooseThenable(mongoose, promise) {","  var _this = this;","  for (var key in mongoose) {","    if (typeof mongoose[key] === 'function' && mongoose[key].$hasSideEffects) {","      (function(key) {","        _this[key] = function() {","          return mongoose[key].apply(mongoose, arguments);","        };","      })(key);","    } else if (['connection', 'connections'].indexOf(key) !== -1) {","      _this[key] = mongoose[key];","    }","  }","  this.$opPromise = promise;","}","","MongooseThenable.prototype = new Mongoose;","","/**"," * Ability to use mongoose object as a pseudo-promise so `.connect().then()`"," * and `.disconnect().then()` are viable."," *"," * @param {Function} onFulfilled"," * @param {Function} onRejected"," * @return {Promise}"," * @api private"," */","","MongooseThenable.prototype.then = function(onFulfilled, onRejected) {","  var Promise = PromiseProvider.get();","  if (!this.$opPromise) {","    return new Promise.ES6(function(resolve, reject) {","      reject(new Error('Can only call `.then()` if connect() or disconnect() ' +","        'has been called'));","    }).then(onFulfilled, onRejected);","  }","  this.$opPromise.$hasHandler = true;","  return this.$opPromise.then(onFulfilled, onRejected);","};","","/**"," * Ability to use mongoose object as a pseudo-promise so `.connect().then()`"," * and `.disconnect().then()` are viable."," *"," * @param {Function} onFulfilled"," * @param {Function} onRejected"," * @return {Promise}"," * @api private"," */","","MongooseThenable.prototype.catch = function(onRejected) {","  return this.then(null, onRejected);","};","","/*!"," * The exports object is an instance of Mongoose."," *"," * @api public"," */","","var mongoose = module.exports = exports = new Mongoose;",""],"l":{"7":1,"19":1,"21":1,"22":1,"33":1,"34":2,"35":2,"36":2,"37":2,"39":2,"42":2,"43":2,"50":1,"68":1,"69":0,"70":0,"73":0,"74":0,"76":1,"90":1,"96":1,"110":1,"111":0,"112":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"124":0,"128":0,"177":1,"178":2,"179":2,"181":2,"182":2,"183":0,"184":0,"185":0,"187":0,"189":0,"193":2,"195":1,"236":1,"237":0,"238":0,"239":0,"242":0,"244":1,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"261":0,"262":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"274":0,"277":1,"319":1,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"329":0,"330":0,"331":0,"334":0,"335":0,"337":0,"338":0,"342":0,"343":0,"344":0,"348":0,"349":0,"350":0,"351":0,"353":0,"357":0,"358":0,"360":0,"362":0,"366":0,"367":0,"370":0,"374":0,"375":0,"376":0,"379":0,"381":0,"382":0,"383":0,"385":0,"388":0,"392":0,"393":0,"394":0,"395":0,"400":0,"403":0,"404":0,"407":0,"408":0,"410":0,"411":0,"414":0,"415":0,"418":0,"419":0,"421":1,"434":1,"435":0,"436":0,"438":1,"447":1,"448":0,"449":0,"451":0,"452":0,"453":0,"454":0,"456":0,"457":0,"458":0,"461":1,"475":1,"476":0,"477":0,"479":1,"497":1,"498":0,"501":1,"502":0,"509":1,"515":1,"521":1,"530":1,"539":1,"548":1,"557":1,"573":1,"588":1,"597":1,"611":1,"620":1,"647":1,"656":1,"665":1,"667":0,"670":0,"681":1,"690":1,"699":1,"708":1,"717":1,"730":1,"739":1,"748":1,"758":1,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"767":0,"768":0,"771":0,"774":1,"786":1,"787":0,"788":0,"789":0,"790":0,"794":0,"795":0,"808":1,"809":0,"818":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":1,"109":1,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":1,"230":0,"231":0,"232":0,"233":0,"234":1,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":1,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":1,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":1,"415":0,"416":0,"417":1,"418":0,"419":0,"420":1,"421":0,"422":0,"423":0,"424":0,"425":0,"426":1,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":0,"444":1,"445":0,"446":0,"447":0,"448":0,"449":0,"450":1,"451":0,"452":0,"453":0,"454":0,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":1,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":1,"478":1,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":1,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":1,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":1,"569":0,"570":1,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":1,"589":0,"590":1,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":1,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":1,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":1,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":1,"660":0,"661":0,"662":0,"663":0,"664":1,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":1,"686":1,"687":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0,0],"32":[0,0],"33":[0,0,0,0,0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0,0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0,0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0},"fnMap":{"1":{"name":"Schema","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":30}}},"2":{"name":"idGetter","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":20}}},"3":{"name":"(anonymous_3)","line":172,"loc":{"start":{"line":172,"column":10},"end":{"line":172,"column":34}}},"4":{"name":"(anonymous_4)","line":195,"loc":{"start":{"line":195,"column":59},"end":{"line":195,"column":75}}},"5":{"name":"(anonymous_5)","line":196,"loc":{"start":{"line":196,"column":99},"end":{"line":196,"column":115}}},"6":{"name":"(anonymous_6)","line":201,"loc":{"start":{"line":201,"column":47},"end":{"line":201,"column":63}}},"7":{"name":"(anonymous_7)","line":202,"loc":{"start":{"line":202,"column":100},"end":{"line":202,"column":116}}},"8":{"name":"(anonymous_8)","line":216,"loc":{"start":{"line":216,"column":10},"end":{"line":216,"column":31}}},"9":{"name":"(anonymous_9)","line":226,"loc":{"start":{"line":226,"column":22},"end":{"line":226,"column":43}}},"10":{"name":"(anonymous_10)","line":228,"loc":{"start":{"line":228,"column":22},"end":{"line":228,"column":36}}},"11":{"name":"(anonymous_11)","line":231,"loc":{"start":{"line":231,"column":11},"end":{"line":231,"column":27}}},"12":{"name":"(anonymous_12)","line":236,"loc":{"start":{"line":236,"column":97},"end":{"line":236,"column":113}}},"13":{"name":"(anonymous_13)","line":249,"loc":{"start":{"line":249,"column":10},"end":{"line":249,"column":31}}},"14":{"name":"(anonymous_14)","line":259,"loc":{"start":{"line":259,"column":10},"end":{"line":259,"column":31}}},"15":{"name":"(anonymous_15)","line":274,"loc":{"start":{"line":274,"column":22},"end":{"line":274,"column":43}}},"16":{"name":"(anonymous_16)","line":275,"loc":{"start":{"line":275,"column":40},"end":{"line":275,"column":54}}},"17":{"name":"(anonymous_17)","line":278,"loc":{"start":{"line":278,"column":11},"end":{"line":278,"column":27}}},"18":{"name":"(anonymous_18)","line":345,"loc":{"start":{"line":345,"column":25},"end":{"line":345,"column":36}}},"19":{"name":"(anonymous_19)","line":348,"loc":{"start":{"line":348,"column":35},"end":{"line":348,"column":47}}},"20":{"name":"(anonymous_20)","line":363,"loc":{"start":{"line":363,"column":34},"end":{"line":363,"column":52}}},"21":{"name":"add","line":413,"loc":{"start":{"line":413,"column":23},"end":{"line":413,"column":49}}},"22":{"name":"(anonymous_22)","line":514,"loc":{"start":{"line":514,"column":24},"end":{"line":514,"column":44}}},"23":{"name":"(anonymous_23)","line":546,"loc":{"start":{"line":546,"column":19},"end":{"line":546,"column":36}}},"24":{"name":"(anonymous_24)","line":590,"loc":{"start":{"line":590,"column":25},"end":{"line":590,"column":54}}},"25":{"name":"(anonymous_25)","line":706,"loc":{"start":{"line":706,"column":28},"end":{"line":706,"column":41}}},"26":{"name":"requiredPaths","line":725,"loc":{"start":{"line":725,"column":33},"end":{"line":725,"column":68}}},"27":{"name":"indexedPaths","line":751,"loc":{"start":{"line":751,"column":32},"end":{"line":751,"column":56}}},"28":{"name":"(anonymous_28)","line":769,"loc":{"start":{"line":769,"column":28},"end":{"line":769,"column":43}}},"29":{"name":"(anonymous_29)","line":800,"loc":{"start":{"line":800,"column":34},"end":{"line":800,"column":49}}},"30":{"name":"(anonymous_30)","line":820,"loc":{"start":{"line":820,"column":34},"end":{"line":820,"column":55}}},"31":{"name":"(anonymous_31)","line":845,"loc":{"start":{"line":845,"column":21},"end":{"line":845,"column":36}}},"32":{"name":"(anonymous_32)","line":860,"loc":{"start":{"line":860,"column":21},"end":{"line":860,"column":56}}},"33":{"name":"(anonymous_33)","line":890,"loc":{"start":{"line":890,"column":40},"end":{"line":890,"column":51}}},"34":{"name":"(anonymous_34)","line":900,"loc":{"start":{"line":900,"column":33},"end":{"line":900,"column":48}}},"35":{"name":"(anonymous_35)","line":909,"loc":{"start":{"line":909,"column":23},"end":{"line":909,"column":38}}},"36":{"name":"applyTimestampsToChildren","line":924,"loc":{"start":{"line":924,"column":0},"end":{"line":924,"column":42}}},"37":{"name":"(anonymous_37)","line":950,"loc":{"start":{"line":950,"column":44},"end":{"line":950,"column":61}}},"38":{"name":"getPositionalPathType","line":996,"loc":{"start":{"line":996,"column":0},"end":{"line":996,"column":43}}},"39":{"name":"(anonymous_39)","line":1020,"loc":{"start":{"line":1020,"column":19},"end":{"line":1020,"column":46}}},"40":{"name":"getPositionalPath","line":1064,"loc":{"start":{"line":1064,"column":0},"end":{"line":1064,"column":39}}},"41":{"name":"(anonymous_41)","line":1077,"loc":{"start":{"line":1077,"column":25},"end":{"line":1077,"column":46}}},"42":{"name":"(anonymous_42)","line":1105,"loc":{"start":{"line":1105,"column":23},"end":{"line":1105,"column":34}}},"43":{"name":"(anonymous_43)","line":1145,"loc":{"start":{"line":1145,"column":24},"end":{"line":1145,"column":45}}},"44":{"name":"(anonymous_44)","line":1152,"loc":{"start":{"line":1152,"column":43},"end":{"line":1152,"column":57}}},"45":{"name":"(anonymous_45)","line":1162,"loc":{"start":{"line":1162,"column":43},"end":{"line":1162,"column":58}}},"46":{"name":"(anonymous_46)","line":1167,"loc":{"start":{"line":1167,"column":24},"end":{"line":1167,"column":38}}},"47":{"name":"(anonymous_47)","line":1182,"loc":{"start":{"line":1182,"column":26},"end":{"line":1182,"column":45}}},"48":{"name":"(anonymous_48)","line":1219,"loc":{"start":{"line":1219,"column":26},"end":{"line":1219,"column":45}}},"49":{"name":"(anonymous_49)","line":1252,"loc":{"start":{"line":1252,"column":26},"end":{"line":1252,"column":45}}},"50":{"name":"(anonymous_50)","line":1276,"loc":{"start":{"line":1276,"column":25},"end":{"line":1276,"column":51}}},"51":{"name":"(anonymous_51)","line":1302,"loc":{"start":{"line":1302,"column":23},"end":{"line":1302,"column":51}}},"52":{"name":"(anonymous_52)","line":1334,"loc":{"start":{"line":1334,"column":23},"end":{"line":1334,"column":37}}},"53":{"name":"(anonymous_53)","line":1349,"loc":{"start":{"line":1349,"column":7},"end":{"line":1349,"column":18}}},"54":{"name":"(anonymous_54)","line":1352,"loc":{"start":{"line":1352,"column":7},"end":{"line":1352,"column":18}}},"55":{"name":"(anonymous_55)","line":1363,"loc":{"start":{"line":1363,"column":27},"end":{"line":1363,"column":38}}},"56":{"name":"(anonymous_56)","line":1369,"loc":{"start":{"line":1369,"column":23},"end":{"line":1369,"column":48}}},"57":{"name":"(anonymous_57)","line":1418,"loc":{"start":{"line":1418,"column":30},"end":{"line":1418,"column":46}}},"58":{"name":"fixSubIndexPaths","line":1437,"loc":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":44}}},"59":{"name":"(anonymous_59)","line":1473,"loc":{"start":{"line":1473,"column":27},"end":{"line":1473,"column":51}}},"60":{"name":"(anonymous_60)","line":1483,"loc":{"start":{"line":1483,"column":21},"end":{"line":1483,"column":41}}},"61":{"name":"(anonymous_61)","line":1512,"loc":{"start":{"line":1512,"column":10},"end":{"line":1512,"column":21}}},"62":{"name":"(anonymous_62)","line":1521,"loc":{"start":{"line":1521,"column":10},"end":{"line":1521,"column":22}}},"63":{"name":"(anonymous_63)","line":1537,"loc":{"start":{"line":1537,"column":32},"end":{"line":1537,"column":55}}},"64":{"name":"(anonymous_64)","line":1551,"loc":{"start":{"line":1551,"column":31},"end":{"line":1551,"column":46}}},"65":{"name":"_getVirtual","line":1559,"loc":{"start":{"line":1559,"column":0},"end":{"line":1559,"column":35}}},"66":{"name":"(anonymous_66)","line":1591,"loc":{"start":{"line":1591,"column":31},"end":{"line":1591,"column":46}}},"67":{"name":"(anonymous_67)","line":1602,"loc":{"start":{"line":1602,"column":26},"end":{"line":1602,"column":41}}},"68":{"name":"(anonymous_68)","line":1607,"loc":{"start":{"line":1607,"column":17},"end":{"line":1607,"column":32}}},"69":{"name":"(anonymous_69)","line":1629,"loc":{"start":{"line":1629,"column":29},"end":{"line":1629,"column":59}}},"70":{"name":"(anonymous_70)","line":1638,"loc":{"start":{"line":1638,"column":46},"end":{"line":1638,"column":61}}},"71":{"name":"(anonymous_71)","line":1648,"loc":{"start":{"line":1648,"column":54},"end":{"line":1648,"column":69}}},"72":{"name":"(anonymous_72)","line":1673,"loc":{"start":{"line":1673,"column":30},"end":{"line":1673,"column":45}}},"73":{"name":"search","line":1683,"loc":{"start":{"line":1683,"column":2},"end":{"line":1683,"column":33}}},"74":{"name":"(anonymous_74)","line":1747,"loc":{"start":{"line":1747,"column":32},"end":{"line":1747,"column":47}}},"75":{"name":"search","line":1755,"loc":{"start":{"line":1755,"column":2},"end":{"line":1755,"column":33}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":33}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"9":{"start":{"line":14,"column":0},"end":{"line":24,"column":2}},"10":{"start":{"line":70,"column":0},"end":{"line":130,"column":1}},"11":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"12":{"start":{"line":72,"column":4},"end":{"line":72,"column":36}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":17}},"14":{"start":{"line":76,"column":2},"end":{"line":76,"column":18}},"15":{"start":{"line":77,"column":2},"end":{"line":77,"column":21}},"16":{"start":{"line":78,"column":2},"end":{"line":78,"column":21}},"17":{"start":{"line":79,"column":2},"end":{"line":79,"column":30}},"18":{"start":{"line":80,"column":2},"end":{"line":80,"column":19}},"19":{"start":{"line":81,"column":2},"end":{"line":81,"column":21}},"20":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"21":{"start":{"line":83,"column":2},"end":{"line":83,"column":21}},"22":{"start":{"line":84,"column":2},"end":{"line":84,"column":20}},"23":{"start":{"line":85,"column":2},"end":{"line":85,"column":20}},"24":{"start":{"line":86,"column":2},"end":{"line":86,"column":17}},"25":{"start":{"line":87,"column":2},"end":{"line":87,"column":18}},"26":{"start":{"line":88,"column":2},"end":{"line":88,"column":25}},"27":{"start":{"line":90,"column":2},"end":{"line":93,"column":4}},"28":{"start":{"line":95,"column":2},"end":{"line":95,"column":46}},"29":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"30":{"start":{"line":99,"column":4},"end":{"line":99,"column":18}},"31":{"start":{"line":103,"column":2},"end":{"line":103,"column":60}},"32":{"start":{"line":106,"column":2},"end":{"line":107,"column":61}},"33":{"start":{"line":109,"column":2},"end":{"line":113,"column":3}},"34":{"start":{"line":110,"column":4},"end":{"line":110,"column":30}},"35":{"start":{"line":111,"column":4},"end":{"line":111,"column":52}},"36":{"start":{"line":112,"column":4},"end":{"line":112,"column":18}},"37":{"start":{"line":116,"column":2},"end":{"line":117,"column":53}},"38":{"start":{"line":118,"column":2},"end":{"line":120,"column":3}},"39":{"start":{"line":119,"column":4},"end":{"line":119,"column":37}},"40":{"start":{"line":122,"column":2},"end":{"line":125,"column":3}},"41":{"start":{"line":123,"column":4},"end":{"line":123,"column":39}},"42":{"start":{"line":124,"column":4},"end":{"line":124,"column":44}},"43":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"44":{"start":{"line":128,"column":4},"end":{"line":128,"column":49}},"45":{"start":{"line":136,"column":0},"end":{"line":145,"column":1}},"46":{"start":{"line":137,"column":2},"end":{"line":139,"column":3}},"47":{"start":{"line":138,"column":4},"end":{"line":138,"column":24}},"48":{"start":{"line":141,"column":2},"end":{"line":143,"column":25}},"49":{"start":{"line":144,"column":2},"end":{"line":144,"column":22}},"50":{"start":{"line":150,"column":0},"end":{"line":150,"column":57}},"51":{"start":{"line":151,"column":0},"end":{"line":151,"column":38}},"52":{"start":{"line":152,"column":0},"end":{"line":152,"column":41}},"53":{"start":{"line":164,"column":0},"end":{"line":289,"column":3}},"54":{"start":{"line":173,"column":8},"end":{"line":173,"column":25}},"55":{"start":{"line":175,"column":8},"end":{"line":177,"column":9}},"56":{"start":{"line":176,"column":10},"end":{"line":176,"column":24}},"57":{"start":{"line":179,"column":8},"end":{"line":181,"column":46}},"58":{"start":{"line":183,"column":8},"end":{"line":183,"column":27}},"59":{"start":{"line":184,"column":8},"end":{"line":188,"column":9}},"60":{"start":{"line":185,"column":10},"end":{"line":185,"column":56}},"61":{"start":{"line":187,"column":10},"end":{"line":187,"column":66}},"62":{"start":{"line":191,"column":8},"end":{"line":209,"column":9}},"63":{"start":{"line":194,"column":10},"end":{"line":206,"column":11}},"64":{"start":{"line":195,"column":12},"end":{"line":199,"column":15}},"65":{"start":{"line":196,"column":14},"end":{"line":198,"column":17}},"66":{"start":{"line":197,"column":16},"end":{"line":197,"column":28}},"67":{"start":{"line":201,"column":12},"end":{"line":205,"column":15}},"68":{"start":{"line":202,"column":14},"end":{"line":204,"column":17}},"69":{"start":{"line":203,"column":16},"end":{"line":203,"column":28}},"70":{"start":{"line":208,"column":10},"end":{"line":208,"column":17}},"71":{"start":{"line":217,"column":8},"end":{"line":217,"column":25}},"72":{"start":{"line":218,"column":8},"end":{"line":218,"column":46}},"73":{"start":{"line":220,"column":8},"end":{"line":224,"column":9}},"74":{"start":{"line":221,"column":10},"end":{"line":221,"column":17}},"75":{"start":{"line":222,"column":10},"end":{"line":222,"column":17}},"76":{"start":{"line":223,"column":10},"end":{"line":223,"column":17}},"77":{"start":{"line":226,"column":8},"end":{"line":242,"column":11}},"78":{"start":{"line":227,"column":10},"end":{"line":227,"column":47}},"79":{"start":{"line":228,"column":10},"end":{"line":230,"column":13}},"80":{"start":{"line":229,"column":12},"end":{"line":229,"column":20}},"81":{"start":{"line":232,"column":10},"end":{"line":234,"column":11}},"82":{"start":{"line":233,"column":12},"end":{"line":233,"column":53}},"83":{"start":{"line":235,"column":10},"end":{"line":239,"column":11}},"84":{"start":{"line":236,"column":12},"end":{"line":238,"column":15}},"85":{"start":{"line":237,"column":14},"end":{"line":237,"column":26}},"86":{"start":{"line":240,"column":10},"end":{"line":240,"column":17}},"87":{"start":{"line":241,"column":10},"end":{"line":241,"column":17}},"88":{"start":{"line":251,"column":8},"end":{"line":251,"column":15}},"89":{"start":{"line":252,"column":8},"end":{"line":252,"column":15}},"90":{"start":{"line":260,"column":8},"end":{"line":264,"column":9}},"91":{"start":{"line":261,"column":10},"end":{"line":261,"column":17}},"92":{"start":{"line":262,"column":10},"end":{"line":262,"column":17}},"93":{"start":{"line":263,"column":10},"end":{"line":263,"column":17}},"94":{"start":{"line":266,"column":8},"end":{"line":266,"column":46}},"95":{"start":{"line":268,"column":8},"end":{"line":272,"column":9}},"96":{"start":{"line":269,"column":10},"end":{"line":269,"column":17}},"97":{"start":{"line":270,"column":10},"end":{"line":270,"column":17}},"98":{"start":{"line":271,"column":10},"end":{"line":271,"column":17}},"99":{"start":{"line":274,"column":8},"end":{"line":285,"column":11}},"100":{"start":{"line":275,"column":10},"end":{"line":277,"column":13}},"101":{"start":{"line":276,"column":12},"end":{"line":276,"column":20}},"102":{"start":{"line":279,"column":10},"end":{"line":282,"column":11}},"103":{"start":{"line":280,"column":12},"end":{"line":280,"column":24}},"104":{"start":{"line":281,"column":12},"end":{"line":281,"column":19}},"105":{"start":{"line":283,"column":10},"end":{"line":283,"column":17}},"106":{"start":{"line":284,"column":10},"end":{"line":284,"column":17}},"107":{"start":{"line":304,"column":0},"end":{"line":304,"column":21}},"108":{"start":{"line":319,"column":0},"end":{"line":319,"column":23}},"109":{"start":{"line":336,"column":0},"end":{"line":336,"column":22}},"110":{"start":{"line":345,"column":0},"end":{"line":353,"column":2}},"111":{"start":{"line":346,"column":2},"end":{"line":346,"column":45}},"112":{"start":{"line":348,"column":2},"end":{"line":348,"column":62}},"113":{"start":{"line":348,"column":49},"end":{"line":348,"column":58}},"114":{"start":{"line":349,"column":2},"end":{"line":349,"column":40}},"115":{"start":{"line":350,"column":2},"end":{"line":350,"column":40}},"116":{"start":{"line":351,"column":2},"end":{"line":351,"column":35}},"117":{"start":{"line":352,"column":2},"end":{"line":352,"column":11}},"118":{"start":{"line":363,"column":0},"end":{"line":398,"column":2}},"119":{"start":{"line":364,"column":2},"end":{"line":366,"column":3}},"120":{"start":{"line":365,"column":4},"end":{"line":365,"column":26}},"121":{"start":{"line":368,"column":2},"end":{"line":371,"column":3}},"122":{"start":{"line":370,"column":4},"end":{"line":370,"column":31}},"123":{"start":{"line":373,"column":2},"end":{"line":391,"column":14}},"124":{"start":{"line":393,"column":2},"end":{"line":395,"column":3}},"125":{"start":{"line":394,"column":4},"end":{"line":394,"column":42}},"126":{"start":{"line":397,"column":2},"end":{"line":397,"column":17}},"127":{"start":{"line":413,"column":0},"end":{"line":448,"column":2}},"128":{"start":{"line":414,"column":2},"end":{"line":414,"column":24}},"129":{"start":{"line":415,"column":2},"end":{"line":415,"column":30}},"130":{"start":{"line":417,"column":2},"end":{"line":447,"column":3}},"131":{"start":{"line":418,"column":4},"end":{"line":418,"column":22}},"132":{"start":{"line":420,"column":4},"end":{"line":422,"column":5}},"133":{"start":{"line":421,"column":6},"end":{"line":421,"column":82}},"134":{"start":{"line":424,"column":4},"end":{"line":426,"column":5}},"135":{"start":{"line":425,"column":6},"end":{"line":425,"column":88}},"136":{"start":{"line":428,"column":4},"end":{"line":446,"column":5}},"137":{"start":{"line":431,"column":6},"end":{"line":440,"column":7}},"138":{"start":{"line":433,"column":8},"end":{"line":433,"column":41}},"139":{"start":{"line":434,"column":8},"end":{"line":434,"column":47}},"140":{"start":{"line":436,"column":8},"end":{"line":438,"column":9}},"141":{"start":{"line":437,"column":10},"end":{"line":437,"column":66}},"142":{"start":{"line":439,"column":8},"end":{"line":439,"column":42}},"143":{"start":{"line":442,"column":6},"end":{"line":444,"column":7}},"144":{"start":{"line":443,"column":8},"end":{"line":443,"column":64}},"145":{"start":{"line":445,"column":6},"end":{"line":445,"column":40}},"146":{"start":{"line":463,"column":0},"end":{"line":463,"column":38}},"147":{"start":{"line":464,"column":0},"end":{"line":464,"column":31}},"148":{"start":{"line":466,"column":0},"end":{"line":488,"column":37}},"149":{"start":{"line":494,"column":0},"end":{"line":494,"column":18}},"150":{"start":{"line":495,"column":0},"end":{"line":496,"column":43}},"151":{"start":{"line":514,"column":0},"end":{"line":580,"column":2}},"152":{"start":{"line":515,"column":2},"end":{"line":530,"column":3}},"153":{"start":{"line":516,"column":4},"end":{"line":518,"column":5}},"154":{"start":{"line":517,"column":6},"end":{"line":517,"column":30}},"155":{"start":{"line":519,"column":4},"end":{"line":521,"column":5}},"156":{"start":{"line":520,"column":6},"end":{"line":520,"column":33}},"157":{"start":{"line":522,"column":4},"end":{"line":524,"column":5}},"158":{"start":{"line":523,"column":6},"end":{"line":523,"column":42}},"159":{"start":{"line":527,"column":4},"end":{"line":529,"column":20}},"160":{"start":{"line":533,"column":2},"end":{"line":535,"column":3}},"161":{"start":{"line":534,"column":4},"end":{"line":534,"column":75}},"162":{"start":{"line":537,"column":2},"end":{"line":539,"column":3}},"163":{"start":{"line":538,"column":4},"end":{"line":538,"column":43}},"164":{"start":{"line":542,"column":2},"end":{"line":544,"column":25}},"165":{"start":{"line":546,"column":2},"end":{"line":559,"column":5}},"166":{"start":{"line":547,"column":4},"end":{"line":549,"column":5}},"167":{"start":{"line":548,"column":6},"end":{"line":548,"column":23}},"168":{"start":{"line":550,"column":4},"end":{"line":557,"column":5}},"169":{"start":{"line":551,"column":6},"end":{"line":555,"column":16}},"170":{"start":{"line":556,"column":6},"end":{"line":556,"column":27}},"171":{"start":{"line":558,"column":4},"end":{"line":558,"column":25}},"172":{"start":{"line":561,"column":2},"end":{"line":561,"column":34}},"173":{"start":{"line":563,"column":2},"end":{"line":563,"column":69}},"174":{"start":{"line":565,"column":2},"end":{"line":578,"column":3}},"175":{"start":{"line":566,"column":4},"end":{"line":569,"column":5}},"176":{"start":{"line":567,"column":6},"end":{"line":568,"column":45}},"177":{"start":{"line":570,"column":4},"end":{"line":573,"column":5}},"178":{"start":{"line":571,"column":6},"end":{"line":572,"column":57}},"179":{"start":{"line":575,"column":4},"end":{"line":575,"column":52}},"180":{"start":{"line":576,"column":9},"end":{"line":578,"column":3}},"181":{"start":{"line":577,"column":4},"end":{"line":577,"column":52}},"182":{"start":{"line":579,"column":2},"end":{"line":579,"column":14}},"183":{"start":{"line":590,"column":0},"end":{"line":694,"column":2}},"184":{"start":{"line":591,"column":2},"end":{"line":598,"column":3}},"185":{"start":{"line":592,"column":4},"end":{"line":592,"column":65}},"186":{"start":{"line":593,"column":4},"end":{"line":597,"column":5}},"187":{"start":{"line":594,"column":6},"end":{"line":594,"column":23}},"188":{"start":{"line":595,"column":6},"end":{"line":595,"column":15}},"189":{"start":{"line":596,"column":6},"end":{"line":596,"column":36}},"190":{"start":{"line":603,"column":2},"end":{"line":605,"column":11}},"191":{"start":{"line":607,"column":2},"end":{"line":609,"column":3}},"192":{"start":{"line":608,"column":4},"end":{"line":608,"column":46}},"193":{"start":{"line":611,"column":2},"end":{"line":666,"column":3}},"194":{"start":{"line":613,"column":4},"end":{"line":615,"column":18}},"195":{"start":{"line":617,"column":4},"end":{"line":619,"column":5}},"196":{"start":{"line":618,"column":6},"end":{"line":618,"column":62}},"197":{"start":{"line":621,"column":4},"end":{"line":623,"column":5}},"198":{"start":{"line":622,"column":6},"end":{"line":622,"column":93}},"199":{"start":{"line":625,"column":4},"end":{"line":648,"column":5}},"200":{"start":{"line":626,"column":6},"end":{"line":626,"column":77}},"201":{"start":{"line":627,"column":11},"end":{"line":648,"column":5}},"202":{"start":{"line":629,"column":6},"end":{"line":647,"column":7}},"203":{"start":{"line":633,"column":8},"end":{"line":633,"column":62}},"204":{"start":{"line":634,"column":8},"end":{"line":636,"column":9}},"205":{"start":{"line":635,"column":10},"end":{"line":635,"column":55}},"206":{"start":{"line":638,"column":8},"end":{"line":640,"column":9}},"207":{"start":{"line":639,"column":10},"end":{"line":639,"column":53}},"208":{"start":{"line":641,"column":8},"end":{"line":641,"column":63}},"209":{"start":{"line":642,"column":8},"end":{"line":642,"column":46}},"210":{"start":{"line":643,"column":8},"end":{"line":643,"column":71}},"211":{"start":{"line":646,"column":8},"end":{"line":646,"column":71}},"212":{"start":{"line":650,"column":4},"end":{"line":663,"column":5}},"213":{"start":{"line":651,"column":6},"end":{"line":653,"column":17}},"214":{"start":{"line":655,"column":6},"end":{"line":657,"column":59}},"215":{"start":{"line":659,"column":6},"end":{"line":662,"column":7}},"216":{"start":{"line":660,"column":8},"end":{"line":661,"column":15}},"217":{"start":{"line":665,"column":4},"end":{"line":665,"column":84}},"218":{"start":{"line":668,"column":2},"end":{"line":670,"column":3}},"219":{"start":{"line":669,"column":4},"end":{"line":669,"column":55}},"220":{"start":{"line":672,"column":2},"end":{"line":672,"column":11}},"221":{"start":{"line":673,"column":2},"end":{"line":681,"column":3}},"222":{"start":{"line":674,"column":4},"end":{"line":674,"column":20}},"223":{"start":{"line":676,"column":4},"end":{"line":680,"column":57}},"224":{"start":{"line":683,"column":2},"end":{"line":685,"column":3}},"225":{"start":{"line":684,"column":4},"end":{"line":684,"column":60}},"226":{"start":{"line":687,"column":2},"end":{"line":691,"column":3}},"227":{"start":{"line":688,"column":4},"end":{"line":690,"column":51}},"228":{"start":{"line":693,"column":2},"end":{"line":693,"column":44}},"229":{"start":{"line":706,"column":0},"end":{"line":715,"column":2}},"230":{"start":{"line":707,"column":2},"end":{"line":708,"column":24}},"231":{"start":{"line":710,"column":2},"end":{"line":712,"column":3}},"232":{"start":{"line":711,"column":4},"end":{"line":711,"column":37}},"233":{"start":{"line":714,"column":2},"end":{"line":714,"column":14}},"234":{"start":{"line":725,"column":0},"end":{"line":742,"column":2}},"235":{"start":{"line":726,"column":2},"end":{"line":728,"column":3}},"236":{"start":{"line":727,"column":4},"end":{"line":727,"column":31}},"237":{"start":{"line":730,"column":2},"end":{"line":732,"column":15}},"238":{"start":{"line":734,"column":2},"end":{"line":739,"column":3}},"239":{"start":{"line":735,"column":4},"end":{"line":735,"column":24}},"240":{"start":{"line":736,"column":4},"end":{"line":738,"column":5}},"241":{"start":{"line":737,"column":6},"end":{"line":737,"column":21}},"242":{"start":{"line":740,"column":2},"end":{"line":740,"column":28}},"243":{"start":{"line":741,"column":2},"end":{"line":741,"column":29}},"244":{"start":{"line":751,"column":0},"end":{"line":757,"column":2}},"245":{"start":{"line":752,"column":2},"end":{"line":754,"column":3}},"246":{"start":{"line":753,"column":4},"end":{"line":753,"column":30}},"247":{"start":{"line":755,"column":2},"end":{"line":755,"column":38}},"248":{"start":{"line":756,"column":2},"end":{"line":756,"column":28}},"249":{"start":{"line":769,"column":0},"end":{"line":790,"column":2}},"250":{"start":{"line":770,"column":2},"end":{"line":772,"column":3}},"251":{"start":{"line":771,"column":4},"end":{"line":771,"column":18}},"252":{"start":{"line":773,"column":2},"end":{"line":775,"column":3}},"253":{"start":{"line":774,"column":4},"end":{"line":774,"column":21}},"254":{"start":{"line":776,"column":2},"end":{"line":778,"column":3}},"255":{"start":{"line":777,"column":4},"end":{"line":777,"column":20}},"256":{"start":{"line":779,"column":2},"end":{"line":781,"column":3}},"257":{"start":{"line":780,"column":4},"end":{"line":780,"column":18}},"258":{"start":{"line":782,"column":2},"end":{"line":784,"column":3}},"259":{"start":{"line":783,"column":4},"end":{"line":783,"column":18}},"260":{"start":{"line":786,"column":2},"end":{"line":788,"column":3}},"261":{"start":{"line":787,"column":4},"end":{"line":787,"column":45}},"262":{"start":{"line":789,"column":2},"end":{"line":789,"column":28}},"263":{"start":{"line":800,"column":0},"end":{"line":812,"column":2}},"264":{"start":{"line":801,"column":2},"end":{"line":801,"column":35}},"265":{"start":{"line":802,"column":2},"end":{"line":802,"column":12}},"266":{"start":{"line":803,"column":2},"end":{"line":809,"column":3}},"267":{"start":{"line":804,"column":4},"end":{"line":804,"column":58}},"268":{"start":{"line":805,"column":4},"end":{"line":808,"column":5}},"269":{"start":{"line":807,"column":6},"end":{"line":807,"column":18}},"270":{"start":{"line":811,"column":2},"end":{"line":811,"column":15}},"271":{"start":{"line":820,"column":0},"end":{"line":918,"column":2}},"272":{"start":{"line":821,"column":2},"end":{"line":917,"column":3}},"273":{"start":{"line":822,"column":4},"end":{"line":822,"column":56}},"274":{"start":{"line":823,"column":4},"end":{"line":823,"column":56}},"275":{"start":{"line":824,"column":4},"end":{"line":824,"column":29}},"276":{"start":{"line":826,"column":4},"end":{"line":826,"column":37}},"277":{"start":{"line":827,"column":4},"end":{"line":827,"column":10}},"278":{"start":{"line":828,"column":4},"end":{"line":828,"column":30}},"279":{"start":{"line":829,"column":4},"end":{"line":833,"column":5}},"280":{"start":{"line":830,"column":6},"end":{"line":832,"column":14}},"281":{"start":{"line":835,"column":4},"end":{"line":835,"column":33}},"282":{"start":{"line":836,"column":4},"end":{"line":836,"column":26}},"283":{"start":{"line":837,"column":4},"end":{"line":841,"column":5}},"284":{"start":{"line":838,"column":6},"end":{"line":840,"column":14}},"285":{"start":{"line":843,"column":4},"end":{"line":843,"column":30}},"286":{"start":{"line":845,"column":4},"end":{"line":858,"column":7}},"287":{"start":{"line":846,"column":6},"end":{"line":846,"column":40}},"288":{"start":{"line":847,"column":6},"end":{"line":847,"column":46}},"289":{"start":{"line":849,"column":6},"end":{"line":851,"column":7}},"290":{"start":{"line":850,"column":8},"end":{"line":850,"column":82}},"291":{"start":{"line":853,"column":6},"end":{"line":855,"column":7}},"292":{"start":{"line":854,"column":8},"end":{"line":854,"column":81}},"293":{"start":{"line":857,"column":6},"end":{"line":857,"column":13}},"294":{"start":{"line":860,"column":4},"end":{"line":888,"column":6}},"295":{"start":{"line":861,"column":6},"end":{"line":861,"column":27}},"296":{"start":{"line":862,"column":6},"end":{"line":862,"column":23}},"297":{"start":{"line":863,"column":6},"end":{"line":871,"column":7}},"298":{"start":{"line":864,"column":8},"end":{"line":866,"column":9}},"299":{"start":{"line":865,"column":10},"end":{"line":865,"column":35}},"300":{"start":{"line":867,"column":8},"end":{"line":869,"column":9}},"301":{"start":{"line":868,"column":10},"end":{"line":868,"column":35}},"302":{"start":{"line":870,"column":8},"end":{"line":870,"column":23}},"303":{"start":{"line":872,"column":6},"end":{"line":872,"column":29}},"304":{"start":{"line":873,"column":6},"end":{"line":873,"column":42}},"305":{"start":{"line":875,"column":6},"end":{"line":875,"column":36}},"306":{"start":{"line":877,"column":6},"end":{"line":879,"column":7}},"307":{"start":{"line":878,"column":8},"end":{"line":878,"column":40}},"308":{"start":{"line":880,"column":6},"end":{"line":882,"column":7}},"309":{"start":{"line":881,"column":8},"end":{"line":881,"column":45}},"310":{"start":{"line":884,"column":6},"end":{"line":884,"column":32}},"311":{"start":{"line":885,"column":6},"end":{"line":885,"column":44}},"312":{"start":{"line":887,"column":6},"end":{"line":887,"column":21}},"313":{"start":{"line":890,"column":4},"end":{"line":898,"column":6}},"314":{"start":{"line":891,"column":6},"end":{"line":893,"column":7}},"315":{"start":{"line":892,"column":8},"end":{"line":892,"column":40}},"316":{"start":{"line":894,"column":6},"end":{"line":896,"column":7}},"317":{"start":{"line":895,"column":8},"end":{"line":895,"column":40}},"318":{"start":{"line":897,"column":6},"end":{"line":897,"column":18}},"319":{"start":{"line":900,"column":4},"end":{"line":907,"column":7}},"320":{"start":{"line":901,"column":6},"end":{"line":901,"column":45}},"321":{"start":{"line":902,"column":6},"end":{"line":904,"column":9}},"322":{"start":{"line":905,"column":6},"end":{"line":905,"column":38}},"323":{"start":{"line":906,"column":6},"end":{"line":906,"column":13}},"324":{"start":{"line":909,"column":4},"end":{"line":916,"column":7}},"325":{"start":{"line":910,"column":6},"end":{"line":910,"column":45}},"326":{"start":{"line":911,"column":6},"end":{"line":913,"column":9}},"327":{"start":{"line":914,"column":6},"end":{"line":914,"column":38}},"328":{"start":{"line":915,"column":6},"end":{"line":915,"column":13}},"329":{"start":{"line":924,"column":0},"end":{"line":990,"column":1}},"330":{"start":{"line":925,"column":2},"end":{"line":925,"column":23}},"331":{"start":{"line":926,"column":2},"end":{"line":926,"column":33}},"332":{"start":{"line":927,"column":2},"end":{"line":927,"column":33}},"333":{"start":{"line":928,"column":2},"end":{"line":928,"column":10}},"334":{"start":{"line":929,"column":2},"end":{"line":929,"column":34}},"335":{"start":{"line":930,"column":2},"end":{"line":930,"column":10}},"336":{"start":{"line":931,"column":2},"end":{"line":931,"column":16}},"337":{"start":{"line":932,"column":2},"end":{"line":932,"column":16}},"338":{"start":{"line":933,"column":2},"end":{"line":933,"column":17}},"339":{"start":{"line":934,"column":2},"end":{"line":934,"column":11}},"340":{"start":{"line":936,"column":2},"end":{"line":936,"column":62}},"341":{"start":{"line":938,"column":2},"end":{"line":989,"column":3}},"342":{"start":{"line":939,"column":4},"end":{"line":960,"column":5}},"343":{"start":{"line":940,"column":6},"end":{"line":959,"column":7}},"344":{"start":{"line":941,"column":8},"end":{"line":941,"column":37}},"345":{"start":{"line":942,"column":8},"end":{"line":958,"column":9}},"346":{"start":{"line":946,"column":10},"end":{"line":946,"column":55}},"347":{"start":{"line":947,"column":10},"end":{"line":947,"column":58}},"348":{"start":{"line":948,"column":10},"end":{"line":948,"column":58}},"349":{"start":{"line":949,"column":10},"end":{"line":957,"column":11}},"350":{"start":{"line":950,"column":12},"end":{"line":953,"column":15}},"351":{"start":{"line":951,"column":14},"end":{"line":951,"column":38}},"352":{"start":{"line":952,"column":14},"end":{"line":952,"column":38}},"353":{"start":{"line":955,"column":12},"end":{"line":955,"column":47}},"354":{"start":{"line":956,"column":12},"end":{"line":956,"column":47}},"355":{"start":{"line":961,"column":4},"end":{"line":988,"column":5}},"356":{"start":{"line":962,"column":6},"end":{"line":987,"column":7}},"357":{"start":{"line":963,"column":8},"end":{"line":963,"column":32}},"358":{"start":{"line":964,"column":8},"end":{"line":966,"column":9}},"359":{"start":{"line":965,"column":10},"end":{"line":965,"column":19}},"360":{"start":{"line":967,"column":8},"end":{"line":986,"column":9}},"361":{"start":{"line":968,"column":10},"end":{"line":968,"column":40}},"362":{"start":{"line":969,"column":10},"end":{"line":969,"column":66}},"363":{"start":{"line":970,"column":10},"end":{"line":977,"column":11}},"364":{"start":{"line":971,"column":12},"end":{"line":971,"column":60}},"365":{"start":{"line":972,"column":12},"end":{"line":972,"column":60}},"366":{"start":{"line":973,"column":12},"end":{"line":976,"column":13}},"367":{"start":{"line":974,"column":14},"end":{"line":974,"column":51}},"368":{"start":{"line":975,"column":14},"end":{"line":975,"column":51}},"369":{"start":{"line":978,"column":15},"end":{"line":986,"column":9}},"370":{"start":{"line":979,"column":10},"end":{"line":979,"column":66}},"371":{"start":{"line":980,"column":10},"end":{"line":985,"column":11}},"372":{"start":{"line":981,"column":12},"end":{"line":981,"column":60}},"373":{"start":{"line":982,"column":12},"end":{"line":982,"column":60}},"374":{"start":{"line":983,"column":12},"end":{"line":983,"column":46}},"375":{"start":{"line":984,"column":12},"end":{"line":984,"column":46}},"376":{"start":{"line":996,"column":0},"end":{"line":1057,"column":1}},"377":{"start":{"line":997,"column":2},"end":{"line":997,"column":66}},"378":{"start":{"line":998,"column":2},"end":{"line":1000,"column":3}},"379":{"start":{"line":999,"column":4},"end":{"line":999,"column":35}},"380":{"start":{"line":1002,"column":2},"end":{"line":1002,"column":35}},"381":{"start":{"line":1003,"column":2},"end":{"line":1003,"column":23}},"382":{"start":{"line":1004,"column":2},"end":{"line":1006,"column":3}},"383":{"start":{"line":1005,"column":4},"end":{"line":1005,"column":15}},"384":{"start":{"line":1008,"column":2},"end":{"line":1010,"column":12}},"385":{"start":{"line":1012,"column":2},"end":{"line":1047,"column":3}},"386":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":21}},"387":{"start":{"line":1014,"column":4},"end":{"line":1014,"column":26}},"388":{"start":{"line":1016,"column":4},"end":{"line":1032,"column":5}},"389":{"start":{"line":1017,"column":6},"end":{"line":1030,"column":7}},"390":{"start":{"line":1018,"column":8},"end":{"line":1018,"column":25}},"391":{"start":{"line":1019,"column":8},"end":{"line":1019,"column":38}},"392":{"start":{"line":1020,"column":8},"end":{"line":1022,"column":10}},"393":{"start":{"line":1021,"column":10},"end":{"line":1021,"column":50}},"394":{"start":{"line":1023,"column":8},"end":{"line":1023,"column":35}},"395":{"start":{"line":1024,"column":8},"end":{"line":1024,"column":35}},"396":{"start":{"line":1025,"column":13},"end":{"line":1030,"column":7}},"397":{"start":{"line":1027,"column":8},"end":{"line":1027,"column":25}},"398":{"start":{"line":1029,"column":8},"end":{"line":1029,"column":24}},"399":{"start":{"line":1031,"column":6},"end":{"line":1031,"column":12}},"400":{"start":{"line":1035,"column":4},"end":{"line":1037,"column":5}},"401":{"start":{"line":1036,"column":6},"end":{"line":1036,"column":15}},"402":{"start":{"line":1039,"column":4},"end":{"line":1042,"column":5}},"403":{"start":{"line":1040,"column":6},"end":{"line":1040,"column":22}},"404":{"start":{"line":1041,"column":6},"end":{"line":1041,"column":12}},"405":{"start":{"line":1044,"column":4},"end":{"line":1044,"column":44}},"406":{"start":{"line":1045,"column":4},"end":{"line":1045,"column":35}},"407":{"start":{"line":1046,"column":4},"end":{"line":1046,"column":35}},"408":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":28}},"409":{"start":{"line":1050,"column":2},"end":{"line":1052,"column":3}},"410":{"start":{"line":1051,"column":4},"end":{"line":1051,"column":18}},"411":{"start":{"line":1053,"column":2},"end":{"line":1055,"column":3}},"412":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":20}},"413":{"start":{"line":1056,"column":2},"end":{"line":1056,"column":28}},"414":{"start":{"line":1064,"column":0},"end":{"line":1067,"column":1}},"415":{"start":{"line":1065,"column":2},"end":{"line":1065,"column":36}},"416":{"start":{"line":1066,"column":2},"end":{"line":1066,"column":29}},"417":{"start":{"line":1077,"column":0},"end":{"line":1080,"column":2}},"418":{"start":{"line":1078,"column":2},"end":{"line":1078,"column":36}},"419":{"start":{"line":1079,"column":2},"end":{"line":1079,"column":14}},"420":{"start":{"line":1105,"column":0},"end":{"line":1112,"column":2}},"421":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":26}},"422":{"start":{"line":1107,"column":2},"end":{"line":1110,"column":3}},"423":{"start":{"line":1108,"column":4},"end":{"line":1108,"column":52}},"424":{"start":{"line":1109,"column":4},"end":{"line":1109,"column":16}},"425":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":38}},"426":{"start":{"line":1145,"column":0},"end":{"line":1171,"column":2}},"427":{"start":{"line":1146,"column":2},"end":{"line":1149,"column":3}},"428":{"start":{"line":1147,"column":4},"end":{"line":1147,"column":53}},"429":{"start":{"line":1148,"column":4},"end":{"line":1148,"column":16}},"430":{"start":{"line":1151,"column":2},"end":{"line":1155,"column":3}},"431":{"start":{"line":1152,"column":4},"end":{"line":1154,"column":8}},"432":{"start":{"line":1153,"column":6},"end":{"line":1153,"column":31}},"433":{"start":{"line":1157,"column":2},"end":{"line":1160,"column":3}},"434":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":45}},"435":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":16}},"436":{"start":{"line":1162,"column":2},"end":{"line":1170,"column":6}},"437":{"start":{"line":1165,"column":4},"end":{"line":1165,"column":21}},"438":{"start":{"line":1166,"column":4},"end":{"line":1166,"column":56}},"439":{"start":{"line":1167,"column":4},"end":{"line":1169,"column":7}},"440":{"start":{"line":1168,"column":6},"end":{"line":1168,"column":51}},"441":{"start":{"line":1182,"column":0},"end":{"line":1185,"column":2}},"442":{"start":{"line":1183,"column":2},"end":{"line":1183,"column":17}},"443":{"start":{"line":1184,"column":2},"end":{"line":1184,"column":14}},"444":{"start":{"line":1219,"column":0},"end":{"line":1228,"column":2}},"445":{"start":{"line":1220,"column":2},"end":{"line":1226,"column":3}},"446":{"start":{"line":1221,"column":4},"end":{"line":1223,"column":5}},"447":{"start":{"line":1222,"column":6},"end":{"line":1222,"column":32}},"448":{"start":{"line":1225,"column":4},"end":{"line":1225,"column":28}},"449":{"start":{"line":1227,"column":2},"end":{"line":1227,"column":14}},"450":{"start":{"line":1252,"column":0},"end":{"line":1261,"column":2}},"451":{"start":{"line":1253,"column":2},"end":{"line":1259,"column":3}},"452":{"start":{"line":1254,"column":4},"end":{"line":1256,"column":5}},"453":{"start":{"line":1255,"column":6},"end":{"line":1255,"column":32}},"454":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":28}},"455":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":14}},"456":{"start":{"line":1276,"column":0},"end":{"line":1285,"column":2}},"457":{"start":{"line":1277,"column":2},"end":{"line":1277,"column":28}},"458":{"start":{"line":1279,"column":2},"end":{"line":1281,"column":3}},"459":{"start":{"line":1280,"column":4},"end":{"line":1280,"column":27}},"460":{"start":{"line":1283,"column":2},"end":{"line":1283,"column":40}},"461":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":14}},"462":{"start":{"line":1302,"column":0},"end":{"line":1325,"column":2}},"463":{"start":{"line":1303,"column":2},"end":{"line":1305,"column":3}},"464":{"start":{"line":1304,"column":4},"end":{"line":1304,"column":29}},"465":{"start":{"line":1307,"column":2},"end":{"line":1322,"column":3}},"466":{"start":{"line":1309,"column":6},"end":{"line":1309,"column":49}},"467":{"start":{"line":1310,"column":6},"end":{"line":1310,"column":12}},"468":{"start":{"line":1312,"column":6},"end":{"line":1314,"column":18}},"469":{"start":{"line":1315,"column":6},"end":{"line":1315,"column":12}},"470":{"start":{"line":1317,"column":6},"end":{"line":1317,"column":33}},"471":{"start":{"line":1318,"column":6},"end":{"line":1318,"column":32}},"472":{"start":{"line":1319,"column":6},"end":{"line":1319,"column":12}},"473":{"start":{"line":1321,"column":6},"end":{"line":1321,"column":32}},"474":{"start":{"line":1324,"column":2},"end":{"line":1324,"column":14}},"475":{"start":{"line":1334,"column":0},"end":{"line":1336,"column":2}},"476":{"start":{"line":1335,"column":2},"end":{"line":1335,"column":27}},"477":{"start":{"line":1346,"column":0},"end":{"line":1346,"column":54}},"478":{"start":{"line":1348,"column":0},"end":{"line":1355,"column":3}},"479":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":22}},"480":{"start":{"line":1353,"column":4},"end":{"line":1353,"column":58}},"481":{"start":{"line":1363,"column":0},"end":{"line":1463,"column":2}},"482":{"start":{"line":1366,"column":2},"end":{"line":1366,"column":19}},"483":{"start":{"line":1367,"column":2},"end":{"line":1367,"column":22}},"484":{"start":{"line":1369,"column":2},"end":{"line":1425,"column":4}},"485":{"start":{"line":1370,"column":4},"end":{"line":1372,"column":5}},"486":{"start":{"line":1371,"column":6},"end":{"line":1371,"column":13}},"487":{"start":{"line":1373,"column":4},"end":{"line":1373,"column":30}},"488":{"start":{"line":1375,"column":4},"end":{"line":1375,"column":26}},"489":{"start":{"line":1376,"column":4},"end":{"line":1376,"column":57}},"490":{"start":{"line":1377,"column":4},"end":{"line":1377,"column":41}},"491":{"start":{"line":1379,"column":4},"end":{"line":1413,"column":5}},"492":{"start":{"line":1380,"column":6},"end":{"line":1380,"column":20}},"493":{"start":{"line":1381,"column":6},"end":{"line":1381,"column":31}},"494":{"start":{"line":1383,"column":6},"end":{"line":1412,"column":7}},"495":{"start":{"line":1384,"column":8},"end":{"line":1384,"column":47}},"496":{"start":{"line":1386,"column":8},"end":{"line":1386,"column":28}},"497":{"start":{"line":1388,"column":8},"end":{"line":1411,"column":9}},"498":{"start":{"line":1389,"column":10},"end":{"line":1389,"column":21}},"499":{"start":{"line":1390,"column":10},"end":{"line":1390,"column":43}},"500":{"start":{"line":1391,"column":10},"end":{"line":1391,"column":42}},"501":{"start":{"line":1392,"column":10},"end":{"line":1394,"column":24}},"502":{"start":{"line":1396,"column":10},"end":{"line":1403,"column":11}},"503":{"start":{"line":1397,"column":12},"end":{"line":1397,"column":39}},"504":{"start":{"line":1398,"column":17},"end":{"line":1403,"column":11}},"505":{"start":{"line":1399,"column":12},"end":{"line":1399,"column":41}},"506":{"start":{"line":1400,"column":12},"end":{"line":1400,"column":32}},"507":{"start":{"line":1402,"column":12},"end":{"line":1402,"column":36}},"508":{"start":{"line":1405,"column":10},"end":{"line":1405,"column":30}},"509":{"start":{"line":1406,"column":10},"end":{"line":1408,"column":11}},"510":{"start":{"line":1407,"column":12},"end":{"line":1407,"column":38}},"511":{"start":{"line":1410,"column":10},"end":{"line":1410,"column":41}},"512":{"start":{"line":1415,"column":4},"end":{"line":1424,"column":5}},"513":{"start":{"line":1416,"column":6},"end":{"line":1416,"column":39}},"514":{"start":{"line":1418,"column":6},"end":{"line":1422,"column":9}},"515":{"start":{"line":1419,"column":8},"end":{"line":1421,"column":9}},"516":{"start":{"line":1420,"column":10},"end":{"line":1420,"column":37}},"517":{"start":{"line":1423,"column":6},"end":{"line":1423,"column":48}},"518":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":23}},"519":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":17}},"520":{"start":{"line":1437,"column":2},"end":{"line":1462,"column":3}},"521":{"start":{"line":1438,"column":4},"end":{"line":1446,"column":10}},"522":{"start":{"line":1448,"column":4},"end":{"line":1461,"column":5}},"523":{"start":{"line":1449,"column":6},"end":{"line":1449,"column":34}},"524":{"start":{"line":1450,"column":6},"end":{"line":1450,"column":35}},"525":{"start":{"line":1451,"column":6},"end":{"line":1451,"column":25}},"526":{"start":{"line":1452,"column":6},"end":{"line":1452,"column":20}},"527":{"start":{"line":1455,"column":6},"end":{"line":1458,"column":7}},"528":{"start":{"line":1456,"column":8},"end":{"line":1456,"column":22}},"529":{"start":{"line":1457,"column":8},"end":{"line":1457,"column":47}},"530":{"start":{"line":1460,"column":6},"end":{"line":1460,"column":49}},"531":{"start":{"line":1473,"column":0},"end":{"line":1545,"column":2}},"532":{"start":{"line":1474,"column":2},"end":{"line":1527,"column":3}},"533":{"start":{"line":1475,"column":4},"end":{"line":1477,"column":5}},"534":{"start":{"line":1476,"column":6},"end":{"line":1476,"column":72}},"535":{"start":{"line":1479,"column":4},"end":{"line":1481,"column":5}},"536":{"start":{"line":1480,"column":6},"end":{"line":1480,"column":74}},"537":{"start":{"line":1483,"column":4},"end":{"line":1507,"column":7}},"538":{"start":{"line":1484,"column":6},"end":{"line":1500,"column":7}},"539":{"start":{"line":1485,"column":8},"end":{"line":1487,"column":9}},"540":{"start":{"line":1486,"column":10},"end":{"line":1486,"column":40}},"541":{"start":{"line":1489,"column":8},"end":{"line":1497,"column":9}},"542":{"start":{"line":1490,"column":10},"end":{"line":1492,"column":22}},"543":{"start":{"line":1494,"column":10},"end":{"line":1496,"column":49}},"544":{"start":{"line":1499,"column":8},"end":{"line":1499,"column":25}},"545":{"start":{"line":1501,"column":6},"end":{"line":1506,"column":7}},"546":{"start":{"line":1502,"column":8},"end":{"line":1502,"column":15}},"547":{"start":{"line":1503,"column":8},"end":{"line":1503,"column":20}},"548":{"start":{"line":1505,"column":8},"end":{"line":1505,"column":15}},"549":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":37}},"550":{"start":{"line":1510,"column":4},"end":{"line":1510,"column":30}},"551":{"start":{"line":1511,"column":4},"end":{"line":1526,"column":9}},"552":{"start":{"line":1513,"column":8},"end":{"line":1515,"column":9}},"553":{"start":{"line":1514,"column":10},"end":{"line":1514,"column":40}},"554":{"start":{"line":1516,"column":8},"end":{"line":1518,"column":9}},"555":{"start":{"line":1517,"column":10},"end":{"line":1517,"column":48}},"556":{"start":{"line":1519,"column":8},"end":{"line":1519,"column":20}},"557":{"start":{"line":1522,"column":8},"end":{"line":1524,"column":9}},"558":{"start":{"line":1523,"column":10},"end":{"line":1523,"column":40}},"559":{"start":{"line":1525,"column":8},"end":{"line":1525,"column":43}},"560":{"start":{"line":1529,"column":2},"end":{"line":1529,"column":31}},"561":{"start":{"line":1530,"column":2},"end":{"line":1530,"column":30}},"562":{"start":{"line":1532,"column":2},"end":{"line":1535,"column":3}},"563":{"start":{"line":1533,"column":4},"end":{"line":1534,"column":51}},"564":{"start":{"line":1537,"column":2},"end":{"line":1542,"column":16}},"565":{"start":{"line":1538,"column":4},"end":{"line":1540,"column":14}},"566":{"start":{"line":1541,"column":4},"end":{"line":1541,"column":21}},"567":{"start":{"line":1544,"column":2},"end":{"line":1544,"column":24}},"568":{"start":{"line":1551,"column":0},"end":{"line":1553,"column":2}},"569":{"start":{"line":1552,"column":2},"end":{"line":1552,"column":33}},"570":{"start":{"line":1559,"column":0},"end":{"line":1582,"column":1}},"571":{"start":{"line":1560,"column":2},"end":{"line":1562,"column":3}},"572":{"start":{"line":1561,"column":4},"end":{"line":1561,"column":33}},"573":{"start":{"line":1563,"column":2},"end":{"line":1563,"column":30}},"574":{"start":{"line":1564,"column":2},"end":{"line":1564,"column":15}},"575":{"start":{"line":1565,"column":2},"end":{"line":1565,"column":28}},"576":{"start":{"line":1566,"column":2},"end":{"line":1581,"column":3}},"577":{"start":{"line":1567,"column":4},"end":{"line":1567,"column":50}},"578":{"start":{"line":1568,"column":4},"end":{"line":1580,"column":5}},"579":{"start":{"line":1569,"column":6},"end":{"line":1572,"column":7}},"580":{"start":{"line":1570,"column":8},"end":{"line":1570,"column":66}},"581":{"start":{"line":1571,"column":8},"end":{"line":1571,"column":36}},"582":{"start":{"line":1573,"column":6},"end":{"line":1573,"column":15}},"583":{"start":{"line":1574,"column":11},"end":{"line":1580,"column":5}},"584":{"start":{"line":1575,"column":6},"end":{"line":1575,"column":40}},"585":{"start":{"line":1576,"column":6},"end":{"line":1576,"column":73}},"586":{"start":{"line":1577,"column":6},"end":{"line":1577,"column":15}},"587":{"start":{"line":1579,"column":6},"end":{"line":1579,"column":18}},"588":{"start":{"line":1591,"column":0},"end":{"line":1593,"column":2}},"589":{"start":{"line":1592,"column":2},"end":{"line":1592,"column":29}},"590":{"start":{"line":1602,"column":0},"end":{"line":1621,"column":2}},"591":{"start":{"line":1603,"column":2},"end":{"line":1605,"column":3}},"592":{"start":{"line":1604,"column":4},"end":{"line":1604,"column":18}},"593":{"start":{"line":1606,"column":2},"end":{"line":1620,"column":3}},"594":{"start":{"line":1607,"column":4},"end":{"line":1619,"column":13}},"595":{"start":{"line":1608,"column":6},"end":{"line":1618,"column":7}},"596":{"start":{"line":1609,"column":8},"end":{"line":1609,"column":32}},"597":{"start":{"line":1611,"column":8},"end":{"line":1611,"column":37}},"598":{"start":{"line":1612,"column":8},"end":{"line":1612,"column":32}},"599":{"start":{"line":1613,"column":8},"end":{"line":1613,"column":31}},"600":{"start":{"line":1614,"column":8},"end":{"line":1616,"column":9}},"601":{"start":{"line":1615,"column":10},"end":{"line":1615,"column":37}},"602":{"start":{"line":1617,"column":8},"end":{"line":1617,"column":28}},"603":{"start":{"line":1629,"column":0},"end":{"line":1667,"column":2}},"604":{"start":{"line":1630,"column":2},"end":{"line":1634,"column":3}},"605":{"start":{"line":1633,"column":4},"end":{"line":1633,"column":16}},"606":{"start":{"line":1637,"column":2},"end":{"line":1645,"column":3}},"607":{"start":{"line":1638,"column":4},"end":{"line":1644,"column":13}},"608":{"start":{"line":1639,"column":6},"end":{"line":1641,"column":7}},"609":{"start":{"line":1640,"column":8},"end":{"line":1640,"column":15}},"610":{"start":{"line":1642,"column":6},"end":{"line":1642,"column":64}},"611":{"start":{"line":1643,"column":6},"end":{"line":1643,"column":78}},"612":{"start":{"line":1643,"column":46},"end":{"line":1643,"column":78}},"613":{"start":{"line":1648,"column":2},"end":{"line":1664,"column":11}},"614":{"start":{"line":1649,"column":4},"end":{"line":1651,"column":5}},"615":{"start":{"line":1650,"column":6},"end":{"line":1650,"column":13}},"616":{"start":{"line":1652,"column":4},"end":{"line":1652,"column":72}},"617":{"start":{"line":1653,"column":4},"end":{"line":1657,"column":5}},"618":{"start":{"line":1654,"column":6},"end":{"line":1656,"column":7}},"619":{"start":{"line":1655,"column":8},"end":{"line":1655,"column":40}},"620":{"start":{"line":1658,"column":4},"end":{"line":1660,"column":5}},"621":{"start":{"line":1659,"column":6},"end":{"line":1659,"column":41}},"622":{"start":{"line":1661,"column":4},"end":{"line":1663,"column":5}},"623":{"start":{"line":1662,"column":6},"end":{"line":1662,"column":41}},"624":{"start":{"line":1666,"column":2},"end":{"line":1666,"column":56}},"625":{"start":{"line":1673,"column":0},"end":{"line":1741,"column":2}},"626":{"start":{"line":1674,"column":2},"end":{"line":1674,"column":19}},"627":{"start":{"line":1675,"column":2},"end":{"line":1675,"column":36}},"628":{"start":{"line":1676,"column":2},"end":{"line":1676,"column":22}},"629":{"start":{"line":1678,"column":2},"end":{"line":1681,"column":3}},"630":{"start":{"line":1679,"column":4},"end":{"line":1679,"column":32}},"631":{"start":{"line":1680,"column":4},"end":{"line":1680,"column":22}},"632":{"start":{"line":1683,"column":2},"end":{"line":1737,"column":3}},"633":{"start":{"line":1684,"column":4},"end":{"line":1686,"column":16}},"634":{"start":{"line":1688,"column":4},"end":{"line":1736,"column":5}},"635":{"start":{"line":1689,"column":6},"end":{"line":1689,"column":44}},"636":{"start":{"line":1690,"column":6},"end":{"line":1690,"column":41}},"637":{"start":{"line":1691,"column":6},"end":{"line":1735,"column":7}},"638":{"start":{"line":1692,"column":8},"end":{"line":1692,"column":33}},"639":{"start":{"line":1694,"column":8},"end":{"line":1730,"column":9}},"640":{"start":{"line":1696,"column":10},"end":{"line":1699,"column":11}},"641":{"start":{"line":1697,"column":12},"end":{"line":1697,"column":64}},"642":{"start":{"line":1698,"column":12},"end":{"line":1698,"column":38}},"643":{"start":{"line":1707,"column":10},"end":{"line":1729,"column":11}},"644":{"start":{"line":1708,"column":12},"end":{"line":1708,"column":20}},"645":{"start":{"line":1709,"column":12},"end":{"line":1721,"column":13}},"646":{"start":{"line":1710,"column":14},"end":{"line":1713,"column":15}},"647":{"start":{"line":1712,"column":16},"end":{"line":1712,"column":35}},"648":{"start":{"line":1715,"column":14},"end":{"line":1715,"column":67}},"649":{"start":{"line":1716,"column":14},"end":{"line":1719,"column":15}},"650":{"start":{"line":1717,"column":16},"end":{"line":1718,"column":54}},"651":{"start":{"line":1720,"column":14},"end":{"line":1720,"column":25}},"652":{"start":{"line":1723,"column":12},"end":{"line":1723,"column":61}},"653":{"start":{"line":1724,"column":12},"end":{"line":1727,"column":13}},"654":{"start":{"line":1725,"column":14},"end":{"line":1726,"column":52}},"655":{"start":{"line":1728,"column":12},"end":{"line":1728,"column":23}},"656":{"start":{"line":1732,"column":8},"end":{"line":1732,"column":53}},"657":{"start":{"line":1734,"column":8},"end":{"line":1734,"column":27}},"658":{"start":{"line":1740,"column":2},"end":{"line":1740,"column":40}},"659":{"start":{"line":1747,"column":0},"end":{"line":1802,"column":2}},"660":{"start":{"line":1748,"column":2},"end":{"line":1748,"column":19}},"661":{"start":{"line":1749,"column":2},"end":{"line":1749,"column":36}},"662":{"start":{"line":1751,"column":2},"end":{"line":1753,"column":3}},"663":{"start":{"line":1752,"column":4},"end":{"line":1752,"column":18}},"664":{"start":{"line":1755,"column":2},"end":{"line":1798,"column":3}},"665":{"start":{"line":1756,"column":4},"end":{"line":1758,"column":16}},"666":{"start":{"line":1760,"column":4},"end":{"line":1796,"column":5}},"667":{"start":{"line":1761,"column":6},"end":{"line":1761,"column":44}},"668":{"start":{"line":1762,"column":6},"end":{"line":1762,"column":41}},"669":{"start":{"line":1763,"column":6},"end":{"line":1795,"column":7}},"670":{"start":{"line":1764,"column":8},"end":{"line":1791,"column":9}},"671":{"start":{"line":1766,"column":10},"end":{"line":1768,"column":11}},"672":{"start":{"line":1767,"column":12},"end":{"line":1767,"column":62}},"673":{"start":{"line":1776,"column":10},"end":{"line":1786,"column":11}},"674":{"start":{"line":1777,"column":12},"end":{"line":1783,"column":13}},"675":{"start":{"line":1778,"column":14},"end":{"line":1780,"column":15}},"676":{"start":{"line":1779,"column":16},"end":{"line":1779,"column":67}},"677":{"start":{"line":1782,"column":14},"end":{"line":1782,"column":68}},"678":{"start":{"line":1785,"column":12},"end":{"line":1785,"column":62}},"679":{"start":{"line":1787,"column":10},"end":{"line":1790,"column":12}},"680":{"start":{"line":1792,"column":8},"end":{"line":1792,"column":57}},"681":{"start":{"line":1793,"column":13},"end":{"line":1795,"column":7}},"682":{"start":{"line":1794,"column":8},"end":{"line":1794,"column":54}},"683":{"start":{"line":1797,"column":4},"end":{"line":1797,"column":68}},"684":{"start":{"line":1801,"column":2},"end":{"line":1801,"column":40}},"685":{"start":{"line":1809,"column":0},"end":{"line":1809,"column":34}},"686":{"start":{"line":1840,"column":0},"end":{"line":1840,"column":57}},"687":{"start":{"line":1846,"column":0},"end":{"line":1846,"column":42}}},"branchMap":{"1":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"2":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"3":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":18},"end":{"line":103,"column":21}},{"start":{"line":103,"column":25},"end":{"line":103,"column":32}},{"start":{"line":103,"column":36},"end":{"line":103,"column":59}}]},"4":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":16},"end":{"line":106,"column":34}},{"start":{"line":107,"column":7},"end":{"line":107,"column":25}},{"start":{"line":107,"column":29},"end":{"line":107,"column":45}},{"start":{"line":107,"column":50},"end":{"line":107,"column":60}}]},"5":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"6":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":15},"end":{"line":116,"column":32}},{"start":{"line":117,"column":7},"end":{"line":117,"column":32}},{"start":{"line":117,"column":36},"end":{"line":117,"column":51}}]},"7":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":2},"end":{"line":118,"column":2}},{"start":{"line":118,"column":2},"end":{"line":118,"column":2}}]},"8":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"9":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"10":{"line":141,"type":"cond-expr","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":12}},{"start":{"line":143,"column":8},"end":{"line":143,"column":24}}]},"11":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":8}},{"start":{"line":175,"column":8},"end":{"line":175,"column":8}}]},"12":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":42},"end":{"line":179,"column":49}},{"start":{"line":180,"column":13},"end":{"line":180,"column":40}},{"start":{"line":181,"column":13},"end":{"line":181,"column":44}}]},"13":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":8}},{"start":{"line":184,"column":8},"end":{"line":184,"column":8}}]},"14":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"15":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":10},"end":{"line":194,"column":10}},{"start":{"line":194,"column":10},"end":{"line":194,"column":10}}]},"16":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":8}},{"start":{"line":220,"column":8},"end":{"line":220,"column":8}}]},"17":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":12},"end":{"line":220,"column":27}},{"start":{"line":220,"column":31},"end":{"line":220,"column":58}}]},"18":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":10},"end":{"line":235,"column":10}},{"start":{"line":235,"column":10},"end":{"line":235,"column":10}}]},"19":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":8},"end":{"line":260,"column":8}},{"start":{"line":260,"column":8},"end":{"line":260,"column":8}}]},"20":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":8},"end":{"line":268,"column":8}},{"start":{"line":268,"column":8},"end":{"line":268,"column":8}}]},"21":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":12},"end":{"line":268,"column":27}},{"start":{"line":268,"column":31},"end":{"line":268,"column":58}}]},"22":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":10},"end":{"line":279,"column":10}},{"start":{"line":279,"column":10},"end":{"line":279,"column":10}}]},"23":{"line":364,"type":"if","locations":[{"start":{"line":364,"column":2},"end":{"line":364,"column":2}},{"start":{"line":364,"column":2},"end":{"line":364,"column":2}}]},"24":{"line":364,"type":"binary-expr","locations":[{"start":{"line":364,"column":6},"end":{"line":364,"column":13}},{"start":{"line":364,"column":17},"end":{"line":364,"column":39}}]},"25":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":2},"end":{"line":368,"column":2}},{"start":{"line":368,"column":2},"end":{"line":368,"column":2}}]},"26":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":6},"end":{"line":368,"column":13}},{"start":{"line":368,"column":17},"end":{"line":368,"column":29}},{"start":{"line":368,"column":33},"end":{"line":368,"column":53}}]},"27":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":2},"end":{"line":393,"column":2}},{"start":{"line":393,"column":2},"end":{"line":393,"column":2}}]},"28":{"line":414,"type":"binary-expr","locations":[{"start":{"line":414,"column":11},"end":{"line":414,"column":17}},{"start":{"line":414,"column":21},"end":{"line":414,"column":23}}]},"29":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":4},"end":{"line":420,"column":4}},{"start":{"line":420,"column":4},"end":{"line":420,"column":4}}]},"30":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":4},"end":{"line":424,"column":4}},{"start":{"line":424,"column":4},"end":{"line":424,"column":4}}]},"31":{"line":424,"type":"binary-expr","locations":[{"start":{"line":424,"column":8},"end":{"line":424,"column":31}},{"start":{"line":424,"column":35},"end":{"line":424,"column":56}},{"start":{"line":424,"column":60},"end":{"line":424,"column":79}}]},"32":{"line":428,"type":"if","locations":[{"start":{"line":428,"column":4},"end":{"line":428,"column":4}},{"start":{"line":428,"column":4},"end":{"line":428,"column":4}}]},"33":{"line":428,"type":"binary-expr","locations":[{"start":{"line":428,"column":8},"end":{"line":428,"column":32}},{"start":{"line":429,"column":9},"end":{"line":429,"column":30}},{"start":{"line":429,"column":34},"end":{"line":429,"column":90}},{"start":{"line":430,"column":9},"end":{"line":430,"column":40}},{"start":{"line":430,"column":45},"end":{"line":430,"column":76}},{"start":{"line":430,"column":80},"end":{"line":430,"column":98}}]},"34":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":6},"end":{"line":431,"column":6}},{"start":{"line":431,"column":6},"end":{"line":431,"column":6}}]},"35":{"line":436,"type":"if","locations":[{"start":{"line":436,"column":8},"end":{"line":436,"column":8}},{"start":{"line":436,"column":8},"end":{"line":436,"column":8}}]},"36":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":6},"end":{"line":442,"column":6}},{"start":{"line":442,"column":6},"end":{"line":442,"column":6}}]},"37":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":2},"end":{"line":515,"column":2}},{"start":{"line":515,"column":2},"end":{"line":515,"column":2}}]},"38":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":4},"end":{"line":516,"column":4}},{"start":{"line":516,"column":4},"end":{"line":516,"column":4}}]},"39":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":4},"end":{"line":519,"column":4}},{"start":{"line":519,"column":4},"end":{"line":519,"column":4}}]},"40":{"line":522,"type":"if","locations":[{"start":{"line":522,"column":4},"end":{"line":522,"column":4}},{"start":{"line":522,"column":4},"end":{"line":522,"column":4}}]},"41":{"line":527,"type":"cond-expr","locations":[{"start":{"line":528,"column":10},"end":{"line":528,"column":39}},{"start":{"line":529,"column":10},"end":{"line":529,"column":19}}]},"42":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"43":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"44":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":4},"end":{"line":547,"column":4}},{"start":{"line":547,"column":4},"end":{"line":547,"column":4}}]},"45":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":4},"end":{"line":550,"column":4}},{"start":{"line":550,"column":4},"end":{"line":550,"column":4}}]},"46":{"line":565,"type":"if","locations":[{"start":{"line":565,"column":2},"end":{"line":565,"column":2}},{"start":{"line":565,"column":2},"end":{"line":565,"column":2}}]},"47":{"line":576,"type":"if","locations":[{"start":{"line":576,"column":9},"end":{"line":576,"column":9}},{"start":{"line":576,"column":9},"end":{"line":576,"column":9}}]},"48":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":2},"end":{"line":591,"column":2}},{"start":{"line":591,"column":2},"end":{"line":591,"column":2}}]},"49":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":4},"end":{"line":593,"column":4}},{"start":{"line":593,"column":4},"end":{"line":593,"column":4}}]},"50":{"line":603,"type":"cond-expr","locations":[{"start":{"line":604,"column":8},"end":{"line":604,"column":28}},{"start":{"line":605,"column":8},"end":{"line":605,"column":10}}]},"51":{"line":603,"type":"binary-expr","locations":[{"start":{"line":603,"column":13},"end":{"line":603,"column":33}},{"start":{"line":603,"column":38},"end":{"line":603,"column":64}},{"start":{"line":603,"column":68},"end":{"line":603,"column":82}}]},"52":{"line":607,"type":"if","locations":[{"start":{"line":607,"column":2},"end":{"line":607,"column":2}},{"start":{"line":607,"column":2},"end":{"line":607,"column":2}}]},"53":{"line":607,"type":"binary-expr","locations":[{"start":{"line":607,"column":6},"end":{"line":607,"column":58}},{"start":{"line":607,"column":62},"end":{"line":607,"column":78}}]},"54":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":2},"end":{"line":611,"column":2}},{"start":{"line":611,"column":2},"end":{"line":611,"column":2}}]},"55":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":6},"end":{"line":611,"column":25}},{"start":{"line":611,"column":29},"end":{"line":611,"column":43}},{"start":{"line":611,"column":47},"end":{"line":611,"column":63}}]},"56":{"line":613,"type":"cond-expr","locations":[{"start":{"line":614,"column":10},"end":{"line":614,"column":18}},{"start":{"line":615,"column":10},"end":{"line":615,"column":17}}]},"57":{"line":613,"type":"binary-expr","locations":[{"start":{"line":613,"column":16},"end":{"line":613,"column":30}},{"start":{"line":613,"column":34},"end":{"line":613,"column":50}}]},"58":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":4},"end":{"line":617,"column":4}},{"start":{"line":617,"column":4},"end":{"line":617,"column":4}}]},"59":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":8},"end":{"line":617,"column":12}},{"start":{"line":617,"column":16},"end":{"line":617,"column":37}}]},"60":{"line":621,"type":"if","locations":[{"start":{"line":621,"column":4},"end":{"line":621,"column":4}},{"start":{"line":621,"column":4},"end":{"line":621,"column":4}}]},"61":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":4},"end":{"line":625,"column":4}},{"start":{"line":625,"column":4},"end":{"line":625,"column":4}}]},"62":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":11},"end":{"line":627,"column":11}},{"start":{"line":627,"column":11},"end":{"line":627,"column":11}}]},"63":{"line":627,"type":"binary-expr","locations":[{"start":{"line":627,"column":15},"end":{"line":627,"column":19}},{"start":{"line":627,"column":24},"end":{"line":627,"column":46}},{"start":{"line":627,"column":51},"end":{"line":627,"column":77}},{"start":{"line":627,"column":81},"end":{"line":627,"column":95}},{"start":{"line":628,"column":11},"end":{"line":628,"column":63}}]},"64":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":6},"end":{"line":629,"column":6}},{"start":{"line":629,"column":6},"end":{"line":629,"column":6}}]},"65":{"line":634,"type":"if","locations":[{"start":{"line":634,"column":8},"end":{"line":634,"column":8}},{"start":{"line":634,"column":8},"end":{"line":634,"column":8}}]},"66":{"line":638,"type":"if","locations":[{"start":{"line":638,"column":8},"end":{"line":638,"column":8}},{"start":{"line":638,"column":8},"end":{"line":638,"column":8}}]},"67":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"68":{"line":651,"type":"cond-expr","locations":[{"start":{"line":652,"column":12},"end":{"line":652,"column":33}},{"start":{"line":653,"column":12},"end":{"line":653,"column":16}}]},"69":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":13},"end":{"line":651,"column":34}},{"start":{"line":651,"column":39},"end":{"line":651,"column":65}},{"start":{"line":651,"column":69},"end":{"line":651,"column":84}}]},"70":{"line":655,"type":"cond-expr","locations":[{"start":{"line":656,"column":12},"end":{"line":656,"column":16}},{"start":{"line":657,"column":12},"end":{"line":657,"column":58}}]},"71":{"line":657,"type":"binary-expr","locations":[{"start":{"line":657,"column":12},"end":{"line":657,"column":27}},{"start":{"line":657,"column":31},"end":{"line":657,"column":58}}]},"72":{"line":659,"type":"if","locations":[{"start":{"line":659,"column":6},"end":{"line":659,"column":6}},{"start":{"line":659,"column":6},"end":{"line":659,"column":6}}]},"73":{"line":665,"type":"binary-expr","locations":[{"start":{"line":665,"column":41},"end":{"line":665,"column":45}},{"start":{"line":665,"column":49},"end":{"line":665,"column":68}}]},"74":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":2},"end":{"line":668,"column":2}},{"start":{"line":668,"column":2},"end":{"line":668,"column":2}}]},"75":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":6},"end":{"line":668,"column":10}},{"start":{"line":668,"column":14},"end":{"line":668,"column":35}}]},"76":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":2},"end":{"line":673,"column":2}},{"start":{"line":673,"column":2},"end":{"line":673,"column":2}}]},"77":{"line":676,"type":"cond-expr","locations":[{"start":{"line":677,"column":10},"end":{"line":677,"column":14}},{"start":{"line":680,"column":10},"end":{"line":680,"column":56}}]},"78":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":10},"end":{"line":680,"column":25}},{"start":{"line":680,"column":29},"end":{"line":680,"column":56}}]},"79":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":2},"end":{"line":683,"column":2}},{"start":{"line":683,"column":2},"end":{"line":683,"column":2}}]},"80":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":2},"end":{"line":687,"column":2}},{"start":{"line":687,"column":2},"end":{"line":687,"column":2}}]},"81":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":2},"end":{"line":726,"column":2}},{"start":{"line":726,"column":2},"end":{"line":726,"column":2}}]},"82":{"line":726,"type":"binary-expr","locations":[{"start":{"line":726,"column":6},"end":{"line":726,"column":25}},{"start":{"line":726,"column":29},"end":{"line":726,"column":40}}]},"83":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":4},"end":{"line":736,"column":4}},{"start":{"line":736,"column":4},"end":{"line":736,"column":4}}]},"84":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":2},"end":{"line":752,"column":2}},{"start":{"line":752,"column":2},"end":{"line":752,"column":2}}]},"85":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":2},"end":{"line":770,"column":2}},{"start":{"line":770,"column":2},"end":{"line":770,"column":2}}]},"86":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":2},"end":{"line":773,"column":2}},{"start":{"line":773,"column":2},"end":{"line":773,"column":2}}]},"87":{"line":776,"type":"if","locations":[{"start":{"line":776,"column":2},"end":{"line":776,"column":2}},{"start":{"line":776,"column":2},"end":{"line":776,"column":2}}]},"88":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":2},"end":{"line":779,"column":2}},{"start":{"line":779,"column":2},"end":{"line":779,"column":2}}]},"89":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":2},"end":{"line":782,"column":2}},{"start":{"line":782,"column":2},"end":{"line":782,"column":2}}]},"90":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":2},"end":{"line":786,"column":2}},{"start":{"line":786,"column":2},"end":{"line":786,"column":2}}]},"91":{"line":804,"type":"cond-expr","locations":[{"start":{"line":804,"column":19},"end":{"line":804,"column":43}},{"start":{"line":804,"column":46},"end":{"line":804,"column":57}}]},"92":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":4},"end":{"line":805,"column":4}},{"start":{"line":805,"column":4},"end":{"line":805,"column":4}}]},"93":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":8},"end":{"line":805,"column":26}},{"start":{"line":806,"column":8},"end":{"line":806,"column":55}}]},"94":{"line":821,"type":"if","locations":[{"start":{"line":821,"column":2},"end":{"line":821,"column":2}},{"start":{"line":821,"column":2},"end":{"line":821,"column":2}}]},"95":{"line":822,"type":"binary-expr","locations":[{"start":{"line":822,"column":20},"end":{"line":822,"column":40}},{"start":{"line":822,"column":44},"end":{"line":822,"column":55}}]},"96":{"line":823,"type":"binary-expr","locations":[{"start":{"line":823,"column":20},"end":{"line":823,"column":40}},{"start":{"line":823,"column":44},"end":{"line":823,"column":55}}]},"97":{"line":830,"type":"cond-expr","locations":[{"start":{"line":831,"column":8},"end":{"line":831,"column":27}},{"start":{"line":832,"column":8},"end":{"line":832,"column":12}}]},"98":{"line":831,"type":"binary-expr","locations":[{"start":{"line":831,"column":8},"end":{"line":831,"column":21}},{"start":{"line":831,"column":25},"end":{"line":831,"column":27}}]},"99":{"line":838,"type":"cond-expr","locations":[{"start":{"line":839,"column":8},"end":{"line":839,"column":27}},{"start":{"line":840,"column":8},"end":{"line":840,"column":12}}]},"100":{"line":839,"type":"binary-expr","locations":[{"start":{"line":839,"column":8},"end":{"line":839,"column":21}},{"start":{"line":839,"column":25},"end":{"line":839,"column":27}}]},"101":{"line":847,"type":"binary-expr","locations":[{"start":{"line":847,"column":20},"end":{"line":847,"column":28}},{"start":{"line":847,"column":32},"end":{"line":847,"column":45}}]},"102":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":6},"end":{"line":849,"column":6}},{"start":{"line":849,"column":6},"end":{"line":849,"column":6}}]},"103":{"line":849,"type":"binary-expr","locations":[{"start":{"line":849,"column":10},"end":{"line":849,"column":30}},{"start":{"line":849,"column":34},"end":{"line":849,"column":60}}]},"104":{"line":850,"type":"cond-expr","locations":[{"start":{"line":850,"column":38},"end":{"line":850,"column":61}},{"start":{"line":850,"column":64},"end":{"line":850,"column":80}}]},"105":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":6},"end":{"line":853,"column":6}},{"start":{"line":853,"column":6},"end":{"line":853,"column":6}}]},"106":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":10},"end":{"line":853,"column":20}},{"start":{"line":853,"column":24},"end":{"line":853,"column":41}}]},"107":{"line":854,"type":"cond-expr","locations":[{"start":{"line":854,"column":41},"end":{"line":854,"column":60}},{"start":{"line":854,"column":63},"end":{"line":854,"column":79}}]},"108":{"line":863,"type":"if","locations":[{"start":{"line":863,"column":6},"end":{"line":863,"column":6}},{"start":{"line":863,"column":6},"end":{"line":863,"column":6}}]},"109":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":8},"end":{"line":864,"column":8}},{"start":{"line":864,"column":8},"end":{"line":864,"column":8}}]},"110":{"line":867,"type":"if","locations":[{"start":{"line":867,"column":8},"end":{"line":867,"column":8}},{"start":{"line":867,"column":8},"end":{"line":867,"column":8}}]},"111":{"line":873,"type":"binary-expr","locations":[{"start":{"line":873,"column":22},"end":{"line":873,"column":35}},{"start":{"line":873,"column":39},"end":{"line":873,"column":41}}]},"112":{"line":877,"type":"if","locations":[{"start":{"line":877,"column":6},"end":{"line":877,"column":6}},{"start":{"line":877,"column":6},"end":{"line":877,"column":6}}]},"113":{"line":880,"type":"if","locations":[{"start":{"line":880,"column":6},"end":{"line":880,"column":6}},{"start":{"line":880,"column":6},"end":{"line":880,"column":6}}]},"114":{"line":880,"type":"binary-expr","locations":[{"start":{"line":880,"column":10},"end":{"line":880,"column":28}},{"start":{"line":880,"column":32},"end":{"line":880,"column":61}}]},"115":{"line":891,"type":"if","locations":[{"start":{"line":891,"column":6},"end":{"line":891,"column":6}},{"start":{"line":891,"column":6},"end":{"line":891,"column":6}}]},"116":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":6},"end":{"line":894,"column":6}},{"start":{"line":894,"column":6},"end":{"line":894,"column":6}}]},"117":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":21},"end":{"line":936,"column":32}},{"start":{"line":936,"column":36},"end":{"line":936,"column":61}}]},"118":{"line":938,"type":"if","locations":[{"start":{"line":938,"column":2},"end":{"line":938,"column":2}},{"start":{"line":938,"column":2},"end":{"line":938,"column":2}}]},"119":{"line":939,"type":"if","locations":[{"start":{"line":939,"column":4},"end":{"line":939,"column":4}},{"start":{"line":939,"column":4},"end":{"line":939,"column":4}}]},"120":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":8},"end":{"line":942,"column":8}},{"start":{"line":942,"column":8},"end":{"line":942,"column":8}}]},"121":{"line":942,"type":"binary-expr","locations":[{"start":{"line":942,"column":12},"end":{"line":942,"column":29}},{"start":{"line":943,"column":12},"end":{"line":943,"column":17}},{"start":{"line":944,"column":12},"end":{"line":944,"column":42}},{"start":{"line":945,"column":12},"end":{"line":945,"column":43}}]},"122":{"line":947,"type":"binary-expr","locations":[{"start":{"line":947,"column":22},"end":{"line":947,"column":42}},{"start":{"line":947,"column":46},"end":{"line":947,"column":57}}]},"123":{"line":948,"type":"binary-expr","locations":[{"start":{"line":948,"column":22},"end":{"line":948,"column":42}},{"start":{"line":948,"column":46},"end":{"line":948,"column":57}}]},"124":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":10},"end":{"line":949,"column":10}},{"start":{"line":949,"column":10},"end":{"line":949,"column":10}}]},"125":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":4},"end":{"line":961,"column":4}},{"start":{"line":961,"column":4},"end":{"line":961,"column":4}}]},"126":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":8},"end":{"line":964,"column":8}},{"start":{"line":964,"column":8},"end":{"line":964,"column":8}}]},"127":{"line":967,"type":"if","locations":[{"start":{"line":967,"column":8},"end":{"line":967,"column":8}},{"start":{"line":967,"column":8},"end":{"line":967,"column":8}}]},"128":{"line":967,"type":"binary-expr","locations":[{"start":{"line":967,"column":12},"end":{"line":967,"column":43}},{"start":{"line":967,"column":47},"end":{"line":967,"column":76}}]},"129":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":10},"end":{"line":970,"column":10}},{"start":{"line":970,"column":10},"end":{"line":970,"column":10}}]},"130":{"line":971,"type":"binary-expr","locations":[{"start":{"line":971,"column":24},"end":{"line":971,"column":44}},{"start":{"line":971,"column":48},"end":{"line":971,"column":59}}]},"131":{"line":972,"type":"binary-expr","locations":[{"start":{"line":972,"column":24},"end":{"line":972,"column":44}},{"start":{"line":972,"column":48},"end":{"line":972,"column":59}}]},"132":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":15},"end":{"line":978,"column":15}},{"start":{"line":978,"column":15},"end":{"line":978,"column":15}}]},"133":{"line":978,"type":"binary-expr","locations":[{"start":{"line":978,"column":19},"end":{"line":978,"column":35}},{"start":{"line":978,"column":39},"end":{"line":978,"column":59}}]},"134":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":10},"end":{"line":980,"column":10}},{"start":{"line":980,"column":10},"end":{"line":980,"column":10}}]},"135":{"line":981,"type":"binary-expr","locations":[{"start":{"line":981,"column":24},"end":{"line":981,"column":44}},{"start":{"line":981,"column":48},"end":{"line":981,"column":59}}]},"136":{"line":982,"type":"binary-expr","locations":[{"start":{"line":982,"column":24},"end":{"line":982,"column":44}},{"start":{"line":982,"column":48},"end":{"line":982,"column":59}}]},"137":{"line":998,"type":"if","locations":[{"start":{"line":998,"column":2},"end":{"line":998,"column":2}},{"start":{"line":998,"column":2},"end":{"line":998,"column":2}}]},"138":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}},{"start":{"line":1004,"column":2},"end":{"line":1004,"column":2}}]},"139":{"line":1016,"type":"if","locations":[{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}},{"start":{"line":1016,"column":4},"end":{"line":1016,"column":4}}]},"140":{"line":1016,"type":"binary-expr","locations":[{"start":{"line":1016,"column":8},"end":{"line":1016,"column":18}},{"start":{"line":1016,"column":22},"end":{"line":1016,"column":25}},{"start":{"line":1016,"column":29},"end":{"line":1016,"column":48}}]},"141":{"line":1017,"type":"if","locations":[{"start":{"line":1017,"column":6},"end":{"line":1017,"column":6}},{"start":{"line":1017,"column":6},"end":{"line":1017,"column":6}}]},"142":{"line":1025,"type":"if","locations":[{"start":{"line":1025,"column":13},"end":{"line":1025,"column":13}},{"start":{"line":1025,"column":13},"end":{"line":1025,"column":13}}]},"143":{"line":1035,"type":"if","locations":[{"start":{"line":1035,"column":4},"end":{"line":1035,"column":4}},{"start":{"line":1035,"column":4},"end":{"line":1035,"column":4}}]},"144":{"line":1039,"type":"if","locations":[{"start":{"line":1039,"column":4},"end":{"line":1039,"column":4}},{"start":{"line":1039,"column":4},"end":{"line":1039,"column":4}}]},"145":{"line":1039,"type":"binary-expr","locations":[{"start":{"line":1039,"column":10},"end":{"line":1039,"column":13}},{"start":{"line":1039,"column":17},"end":{"line":1039,"column":27}}]},"146":{"line":1050,"type":"if","locations":[{"start":{"line":1050,"column":2},"end":{"line":1050,"column":2}},{"start":{"line":1050,"column":2},"end":{"line":1050,"column":2}}]},"147":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":2},"end":{"line":1053,"column":2}},{"start":{"line":1053,"column":2},"end":{"line":1053,"column":2}}]},"148":{"line":1107,"type":"if","locations":[{"start":{"line":1107,"column":2},"end":{"line":1107,"column":2}},{"start":{"line":1107,"column":2},"end":{"line":1107,"column":2}}]},"149":{"line":1146,"type":"if","locations":[{"start":{"line":1146,"column":2},"end":{"line":1146,"column":2}},{"start":{"line":1146,"column":2},"end":{"line":1146,"column":2}}]},"150":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":2},"end":{"line":1151,"column":2}},{"start":{"line":1151,"column":2},"end":{"line":1151,"column":2}}]},"151":{"line":1157,"type":"if","locations":[{"start":{"line":1157,"column":2},"end":{"line":1157,"column":2}},{"start":{"line":1157,"column":2},"end":{"line":1157,"column":2}}]},"152":{"line":1220,"type":"if","locations":[{"start":{"line":1220,"column":2},"end":{"line":1220,"column":2}},{"start":{"line":1220,"column":2},"end":{"line":1220,"column":2}}]},"153":{"line":1253,"type":"if","locations":[{"start":{"line":1253,"column":2},"end":{"line":1253,"column":2}},{"start":{"line":1253,"column":2},"end":{"line":1253,"column":2}}]},"154":{"line":1277,"type":"binary-expr","locations":[{"start":{"line":1277,"column":2},"end":{"line":1277,"column":9}},{"start":{"line":1277,"column":14},"end":{"line":1277,"column":26}}]},"155":{"line":1279,"type":"if","locations":[{"start":{"line":1279,"column":2},"end":{"line":1279,"column":2}},{"start":{"line":1279,"column":2},"end":{"line":1279,"column":2}}]},"156":{"line":1303,"type":"if","locations":[{"start":{"line":1303,"column":2},"end":{"line":1303,"column":2}},{"start":{"line":1303,"column":2},"end":{"line":1303,"column":2}}]},"157":{"line":1307,"type":"switch","locations":[{"start":{"line":1308,"column":4},"end":{"line":1310,"column":12}},{"start":{"line":1311,"column":4},"end":{"line":1315,"column":12}},{"start":{"line":1316,"column":4},"end":{"line":1319,"column":12}},{"start":{"line":1320,"column":4},"end":{"line":1321,"column":32}}]},"158":{"line":1312,"type":"cond-expr","locations":[{"start":{"line":1313,"column":12},"end":{"line":1313,"column":18}},{"start":{"line":1314,"column":12},"end":{"line":1314,"column":17}}]},"159":{"line":1370,"type":"if","locations":[{"start":{"line":1370,"column":4},"end":{"line":1370,"column":4}},{"start":{"line":1370,"column":4},"end":{"line":1370,"column":4}}]},"160":{"line":1375,"type":"binary-expr","locations":[{"start":{"line":1375,"column":13},"end":{"line":1375,"column":19}},{"start":{"line":1375,"column":23},"end":{"line":1375,"column":25}}]},"161":{"line":1383,"type":"if","locations":[{"start":{"line":1383,"column":6},"end":{"line":1383,"column":6}},{"start":{"line":1383,"column":6},"end":{"line":1383,"column":6}}]},"162":{"line":1383,"type":"binary-expr","locations":[{"start":{"line":1383,"column":11},"end":{"line":1383,"column":54}},{"start":{"line":1383,"column":59},"end":{"line":1383,"column":79}}]},"163":{"line":1388,"type":"if","locations":[{"start":{"line":1388,"column":8},"end":{"line":1388,"column":8}},{"start":{"line":1388,"column":8},"end":{"line":1388,"column":8}}]},"164":{"line":1388,"type":"binary-expr","locations":[{"start":{"line":1388,"column":12},"end":{"line":1388,"column":27}},{"start":{"line":1388,"column":31},"end":{"line":1388,"column":45}},{"start":{"line":1388,"column":49},"end":{"line":1388,"column":68}}]},"165":{"line":1391,"type":"cond-expr","locations":[{"start":{"line":1391,"column":31},"end":{"line":1391,"column":36}},{"start":{"line":1391,"column":39},"end":{"line":1391,"column":41}}]},"166":{"line":1392,"type":"cond-expr","locations":[{"start":{"line":1392,"column":45},"end":{"line":1392,"column":50}},{"start":{"line":1393,"column":14},"end":{"line":1394,"column":23}}]},"167":{"line":1393,"type":"cond-expr","locations":[{"start":{"line":1393,"column":25},"end":{"line":1393,"column":35}},{"start":{"line":1394,"column":18},"end":{"line":1394,"column":23}}]},"168":{"line":1396,"type":"if","locations":[{"start":{"line":1396,"column":10},"end":{"line":1396,"column":10}},{"start":{"line":1396,"column":10},"end":{"line":1396,"column":10}}]},"169":{"line":1396,"type":"binary-expr","locations":[{"start":{"line":1396,"column":14},"end":{"line":1396,"column":18}},{"start":{"line":1396,"column":22},"end":{"line":1396,"column":54}}]},"170":{"line":1398,"type":"if","locations":[{"start":{"line":1398,"column":17},"end":{"line":1398,"column":17}},{"start":{"line":1398,"column":17},"end":{"line":1398,"column":17}}]},"171":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":10},"end":{"line":1406,"column":10}},{"start":{"line":1406,"column":10},"end":{"line":1406,"column":10}}]},"172":{"line":1415,"type":"if","locations":[{"start":{"line":1415,"column":4},"end":{"line":1415,"column":4}},{"start":{"line":1415,"column":4},"end":{"line":1415,"column":4}}]},"173":{"line":1419,"type":"if","locations":[{"start":{"line":1419,"column":8},"end":{"line":1419,"column":8}},{"start":{"line":1419,"column":8},"end":{"line":1419,"column":8}}]},"174":{"line":1474,"type":"if","locations":[{"start":{"line":1474,"column":2},"end":{"line":1474,"column":2}},{"start":{"line":1474,"column":2},"end":{"line":1474,"column":2}}]},"175":{"line":1474,"type":"binary-expr","locations":[{"start":{"line":1474,"column":6},"end":{"line":1474,"column":13}},{"start":{"line":1474,"column":17},"end":{"line":1474,"column":28}}]},"176":{"line":1475,"type":"if","locations":[{"start":{"line":1475,"column":4},"end":{"line":1475,"column":4}},{"start":{"line":1475,"column":4},"end":{"line":1475,"column":4}}]},"177":{"line":1479,"type":"if","locations":[{"start":{"line":1479,"column":4},"end":{"line":1479,"column":4}},{"start":{"line":1479,"column":4},"end":{"line":1479,"column":4}}]},"178":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":6},"end":{"line":1484,"column":6}},{"start":{"line":1484,"column":6},"end":{"line":1484,"column":6}}]},"179":{"line":1485,"type":"if","locations":[{"start":{"line":1485,"column":8},"end":{"line":1485,"column":8}},{"start":{"line":1485,"column":8},"end":{"line":1485,"column":8}}]},"180":{"line":1489,"type":"if","locations":[{"start":{"line":1489,"column":8},"end":{"line":1489,"column":8}},{"start":{"line":1489,"column":8},"end":{"line":1489,"column":8}}]},"181":{"line":1490,"type":"cond-expr","locations":[{"start":{"line":1491,"column":12},"end":{"line":1491,"column":24}},{"start":{"line":1492,"column":12},"end":{"line":1492,"column":21}}]},"182":{"line":1494,"type":"cond-expr","locations":[{"start":{"line":1495,"column":12},"end":{"line":1495,"column":21}},{"start":{"line":1496,"column":12},"end":{"line":1496,"column":48}}]},"183":{"line":1496,"type":"cond-expr","locations":[{"start":{"line":1496,"column":32},"end":{"line":1496,"column":34}},{"start":{"line":1496,"column":37},"end":{"line":1496,"column":48}}]},"184":{"line":1501,"type":"if","locations":[{"start":{"line":1501,"column":6},"end":{"line":1501,"column":6}},{"start":{"line":1501,"column":6},"end":{"line":1501,"column":6}}]},"185":{"line":1513,"type":"if","locations":[{"start":{"line":1513,"column":8},"end":{"line":1513,"column":8}},{"start":{"line":1513,"column":8},"end":{"line":1513,"column":8}}]},"186":{"line":1516,"type":"if","locations":[{"start":{"line":1516,"column":8},"end":{"line":1516,"column":8}},{"start":{"line":1516,"column":8},"end":{"line":1516,"column":8}}]},"187":{"line":1522,"type":"if","locations":[{"start":{"line":1522,"column":8},"end":{"line":1522,"column":8}},{"start":{"line":1522,"column":8},"end":{"line":1522,"column":8}}]},"188":{"line":1532,"type":"if","locations":[{"start":{"line":1532,"column":2},"end":{"line":1532,"column":2}},{"start":{"line":1532,"column":2},"end":{"line":1532,"column":2}}]},"189":{"line":1538,"type":"binary-expr","locations":[{"start":{"line":1538,"column":4},"end":{"line":1538,"column":13}},{"start":{"line":1538,"column":18},"end":{"line":1540,"column":12}}]},"190":{"line":1538,"type":"cond-expr","locations":[{"start":{"line":1539,"column":10},"end":{"line":1539,"column":40}},{"start":{"line":1540,"column":10},"end":{"line":1540,"column":12}}]},"191":{"line":1560,"type":"if","locations":[{"start":{"line":1560,"column":2},"end":{"line":1560,"column":2}},{"start":{"line":1560,"column":2},"end":{"line":1560,"column":2}}]},"192":{"line":1567,"type":"cond-expr","locations":[{"start":{"line":1567,"column":29},"end":{"line":1567,"column":32}},{"start":{"line":1567,"column":35},"end":{"line":1567,"column":37}}]},"193":{"line":1568,"type":"if","locations":[{"start":{"line":1568,"column":4},"end":{"line":1568,"column":4}},{"start":{"line":1568,"column":4},"end":{"line":1568,"column":4}}]},"194":{"line":1569,"type":"if","locations":[{"start":{"line":1569,"column":6},"end":{"line":1569,"column":6}},{"start":{"line":1569,"column":6},"end":{"line":1569,"column":6}}]},"195":{"line":1574,"type":"if","locations":[{"start":{"line":1574,"column":11},"end":{"line":1574,"column":11}},{"start":{"line":1574,"column":11},"end":{"line":1574,"column":11}}]},"196":{"line":1574,"type":"binary-expr","locations":[{"start":{"line":1574,"column":15},"end":{"line":1574,"column":32}},{"start":{"line":1574,"column":36},"end":{"line":1574,"column":60}}]},"197":{"line":1576,"type":"cond-expr","locations":[{"start":{"line":1576,"column":57},"end":{"line":1576,"column":60}},{"start":{"line":1576,"column":63},"end":{"line":1576,"column":65}}]},"198":{"line":1603,"type":"if","locations":[{"start":{"line":1603,"column":2},"end":{"line":1603,"column":2}},{"start":{"line":1603,"column":2},"end":{"line":1603,"column":2}}]},"199":{"line":1606,"type":"if","locations":[{"start":{"line":1606,"column":2},"end":{"line":1606,"column":2}},{"start":{"line":1606,"column":2},"end":{"line":1606,"column":2}}]},"200":{"line":1608,"type":"if","locations":[{"start":{"line":1608,"column":6},"end":{"line":1608,"column":6}},{"start":{"line":1608,"column":6},"end":{"line":1608,"column":6}}]},"201":{"line":1630,"type":"if","locations":[{"start":{"line":1630,"column":2},"end":{"line":1630,"column":2}},{"start":{"line":1630,"column":2},"end":{"line":1630,"column":2}}]},"202":{"line":1630,"type":"binary-expr","locations":[{"start":{"line":1630,"column":6},"end":{"line":1630,"column":32}},{"start":{"line":1631,"column":6},"end":{"line":1631,"column":34}},{"start":{"line":1632,"column":6},"end":{"line":1632,"column":65}}]},"203":{"line":1637,"type":"if","locations":[{"start":{"line":1637,"column":2},"end":{"line":1637,"column":2}},{"start":{"line":1637,"column":2},"end":{"line":1637,"column":2}}]},"204":{"line":1639,"type":"if","locations":[{"start":{"line":1639,"column":6},"end":{"line":1639,"column":6}},{"start":{"line":1639,"column":6},"end":{"line":1639,"column":6}}]},"205":{"line":1643,"type":"if","locations":[{"start":{"line":1643,"column":6},"end":{"line":1643,"column":6}},{"start":{"line":1643,"column":6},"end":{"line":1643,"column":6}}]},"206":{"line":1649,"type":"if","locations":[{"start":{"line":1649,"column":4},"end":{"line":1649,"column":4}},{"start":{"line":1649,"column":4},"end":{"line":1649,"column":4}}]},"207":{"line":1653,"type":"if","locations":[{"start":{"line":1653,"column":4},"end":{"line":1653,"column":4}},{"start":{"line":1653,"column":4},"end":{"line":1653,"column":4}}]},"208":{"line":1654,"type":"if","locations":[{"start":{"line":1654,"column":6},"end":{"line":1654,"column":6}},{"start":{"line":1654,"column":6},"end":{"line":1654,"column":6}}]},"209":{"line":1658,"type":"if","locations":[{"start":{"line":1658,"column":4},"end":{"line":1658,"column":4}},{"start":{"line":1658,"column":4},"end":{"line":1658,"column":4}}]},"210":{"line":1661,"type":"if","locations":[{"start":{"line":1661,"column":4},"end":{"line":1661,"column":4}},{"start":{"line":1661,"column":4},"end":{"line":1661,"column":4}}]},"211":{"line":1678,"type":"if","locations":[{"start":{"line":1678,"column":2},"end":{"line":1678,"column":2}},{"start":{"line":1678,"column":2},"end":{"line":1678,"column":2}}]},"212":{"line":1691,"type":"if","locations":[{"start":{"line":1691,"column":6},"end":{"line":1691,"column":6}},{"start":{"line":1691,"column":6},"end":{"line":1691,"column":6}}]},"213":{"line":1694,"type":"if","locations":[{"start":{"line":1694,"column":8},"end":{"line":1694,"column":8}},{"start":{"line":1694,"column":8},"end":{"line":1694,"column":8}}]},"214":{"line":1696,"type":"if","locations":[{"start":{"line":1696,"column":10},"end":{"line":1696,"column":10}},{"start":{"line":1696,"column":10},"end":{"line":1696,"column":10}}]},"215":{"line":1707,"type":"if","locations":[{"start":{"line":1707,"column":10},"end":{"line":1707,"column":10}},{"start":{"line":1707,"column":10},"end":{"line":1707,"column":10}}]},"216":{"line":1707,"type":"binary-expr","locations":[{"start":{"line":1707,"column":14},"end":{"line":1707,"column":32}},{"start":{"line":1707,"column":36},"end":{"line":1707,"column":54}}]},"217":{"line":1709,"type":"if","locations":[{"start":{"line":1709,"column":12},"end":{"line":1709,"column":12}},{"start":{"line":1709,"column":12},"end":{"line":1709,"column":12}}]},"218":{"line":1710,"type":"if","locations":[{"start":{"line":1710,"column":14},"end":{"line":1710,"column":14}},{"start":{"line":1710,"column":14},"end":{"line":1710,"column":14}}]},"219":{"line":1716,"type":"if","locations":[{"start":{"line":1716,"column":14},"end":{"line":1716,"column":14}},{"start":{"line":1716,"column":14},"end":{"line":1716,"column":14}}]},"220":{"line":1717,"type":"binary-expr","locations":[{"start":{"line":1717,"column":44},"end":{"line":1717,"column":69}},{"start":{"line":1718,"column":18},"end":{"line":1718,"column":53}}]},"221":{"line":1724,"type":"if","locations":[{"start":{"line":1724,"column":12},"end":{"line":1724,"column":12}},{"start":{"line":1724,"column":12},"end":{"line":1724,"column":12}}]},"222":{"line":1725,"type":"binary-expr","locations":[{"start":{"line":1725,"column":42},"end":{"line":1725,"column":67}},{"start":{"line":1726,"column":16},"end":{"line":1726,"column":51}}]},"223":{"line":1751,"type":"if","locations":[{"start":{"line":1751,"column":2},"end":{"line":1751,"column":2}},{"start":{"line":1751,"column":2},"end":{"line":1751,"column":2}}]},"224":{"line":1763,"type":"if","locations":[{"start":{"line":1763,"column":6},"end":{"line":1763,"column":6}},{"start":{"line":1763,"column":6},"end":{"line":1763,"column":6}}]},"225":{"line":1764,"type":"if","locations":[{"start":{"line":1764,"column":8},"end":{"line":1764,"column":8}},{"start":{"line":1764,"column":8},"end":{"line":1764,"column":8}}]},"226":{"line":1766,"type":"if","locations":[{"start":{"line":1766,"column":10},"end":{"line":1766,"column":10}},{"start":{"line":1766,"column":10},"end":{"line":1766,"column":10}}]},"227":{"line":1776,"type":"if","locations":[{"start":{"line":1776,"column":10},"end":{"line":1776,"column":10}},{"start":{"line":1776,"column":10},"end":{"line":1776,"column":10}}]},"228":{"line":1776,"type":"binary-expr","locations":[{"start":{"line":1776,"column":14},"end":{"line":1776,"column":32}},{"start":{"line":1776,"column":36},"end":{"line":1776,"column":54}}]},"229":{"line":1777,"type":"if","locations":[{"start":{"line":1777,"column":12},"end":{"line":1777,"column":12}},{"start":{"line":1777,"column":12},"end":{"line":1777,"column":12}}]},"230":{"line":1778,"type":"if","locations":[{"start":{"line":1778,"column":14},"end":{"line":1778,"column":14}},{"start":{"line":1778,"column":14},"end":{"line":1778,"column":14}}]},"231":{"line":1789,"type":"cond-expr","locations":[{"start":{"line":1789,"column":52},"end":{"line":1789,"column":60}},{"start":{"line":1789,"column":63},"end":{"line":1789,"column":70}}]},"232":{"line":1793,"type":"if","locations":[{"start":{"line":1793,"column":13},"end":{"line":1793,"column":13}},{"start":{"line":1793,"column":13},"end":{"line":1793,"column":13}}]},"233":{"line":1793,"type":"binary-expr","locations":[{"start":{"line":1793,"column":17},"end":{"line":1793,"column":35}},{"start":{"line":1793,"column":39},"end":{"line":1793,"column":61}}]},"234":{"line":1797,"type":"binary-expr","locations":[{"start":{"line":1797,"column":21},"end":{"line":1797,"column":32}},{"start":{"line":1797,"column":36},"end":{"line":1797,"column":42}}]}},"code":["/*!"," * Module dependencies."," */","","var readPref = require('./drivers').ReadPreference;","var EventEmitter = require('events').EventEmitter;","var VirtualType = require('./virtualtype');","var utils = require('./utils');","var MongooseTypes;","var Kareem = require('kareem');","var each = require('async/each');","var SchemaType = require('./schematype');","","var IS_KAREEM_HOOK = {","  count: true,","  find: true,","  findOne: true,","  findOneAndUpdate: true,","  findOneAndRemove: true,","  insertMany: true,","  update: true,","  updateMany: true,","  updateOne: true","};","","/**"," * Schema constructor."," *"," * ####Example:"," *"," *     var child = new Schema({ name: String });"," *     var schema = new Schema({ name: String, age: Number, children: [child] });"," *     var Tree = mongoose.model('Tree', schema);"," *"," *     // setting schema options"," *     new Schema({ name: String }, { _id: false, autoIndex: false })"," *"," * ####Options:"," *"," * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)"," * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true"," * - [capped](/docs/guide.html#capped): bool - defaults to false"," * - [collection](/docs/guide.html#collection): string - no default"," * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false."," * - [id](/docs/guide.html#id): bool - defaults to true"," * - [_id](/docs/guide.html#_id): bool - defaults to true"," * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true"," * - [read](/docs/guide.html#read): string"," * - [safe](/docs/guide.html#safe): bool - defaults to true."," * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`"," * - [strict](/docs/guide.html#strict): bool - defaults to true"," * - [toJSON](/docs/guide.html#toJSON) - object - no default"," * - [toObject](/docs/guide.html#toObject) - object - no default"," * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'"," * - [useNestedStrict](/docs/guide.html#useNestedStrict) - boolean - defaults to false"," * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`"," * - [versionKey](/docs/guide.html#versionKey): string - defaults to \"__v\""," *"," * ####Note:"," *"," * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._"," *"," * @param {Object} definition"," * @param {Object} [options]"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted after the schema is compiled into a `Model`."," * @api public"," */","","function Schema(obj, options) {","  if (!(this instanceof Schema)) {","    return new Schema(obj, options);","  }","","  this.obj = obj;","  this.paths = {};","  this.subpaths = {};","  this.virtuals = {};","  this.singleNestedPaths = {};","  this.nested = {};","  this.inherits = {};","  this.callQueue = [];","  this._indexes = [];","  this.methods = {};","  this.statics = {};","  this.tree = {};","  this.query = {};","  this.childSchemas = [];","","  this.s = {","    hooks: new Kareem(),","    kareemHooks: IS_KAREEM_HOOK","  };","","  this.options = this.defaultOptions(options);","","  // build paths","  if (obj) {","    this.add(obj);","  }","","  // check if _id's value is a subdocument (gh-2276)","  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);","","  // ensure the documents get an auto _id unless disabled","  var auto_id = !this.paths['_id'] &&","      (!this.options.noId && this.options._id) && !_idSubDoc;","","  if (auto_id) {","    obj = {_id: {auto: true}};","    obj._id[this.options.typeKey] = Schema.ObjectId;","    this.add(obj);","  }","","  // ensure the documents receive an id getter unless disabled","  var autoid = !this.paths['id'] &&","      (!this.options.noVirtualId && this.options.id);","  if (autoid) {","    this.virtual('id').get(idGetter);","  }","","  for (var i = 0; i < this._defaultMiddleware.length; ++i) {","    var m = this._defaultMiddleware[i];","    this[m.kind](m.hook, !!m.isAsync, m.fn);","  }","","  if (this.options.timestamps) {","    this.setupTimestamp(this.options.timestamps);","  }","}","","/*!"," * Returns this documents _id cast to a string."," */","","function idGetter() {","  if (this.$__._id) {","    return this.$__._id;","  }","","  this.$__._id = this._id == null","      ? null","      : String(this._id);","  return this.$__._id;","}","","/*!"," * Inherit from EventEmitter."," */","Schema.prototype = Object.create(EventEmitter.prototype);","Schema.prototype.constructor = Schema;","Schema.prototype.instanceOfSchema = true;","","/**"," * Default middleware attached to a schema. Cannot be changed."," *"," * This field is used to make sure discriminators don't get multiple copies of"," * built-in middleware. Declared as a constant because changing this at runtime"," * may lead to instability with Model.prototype.discriminator()."," *"," * @api private"," * @property _defaultMiddleware"," */","Object.defineProperty(Schema.prototype, '_defaultMiddleware', {","  configurable: false,","  enumerable: false,","  writable: false,","  value: [","    {","      kind: 'pre',","      hook: 'save',","      fn: function(next, options) {","        var _this = this;","        // Nested docs have their own presave","        if (this.ownerDocument) {","          return next();","        }","","        var hasValidateBeforeSaveOption = options &&","            (typeof options === 'object') &&","            ('validateBeforeSave' in options);","","        var shouldValidate;","        if (hasValidateBeforeSaveOption) {","          shouldValidate = !!options.validateBeforeSave;","        } else {","          shouldValidate = this.schema.options.validateBeforeSave;","        }","","        // Validate","        if (shouldValidate) {","          // HACK: use $__original_validate to avoid promises so bluebird doesn't","          // complain","          if (this.$__original_validate) {","            this.$__original_validate({__noPromise: true}, function(error) {","              return _this.schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {","                next(error);","              });","            });","          } else {","            this.validate({__noPromise: true}, function(error) {","              return _this.schema.s.hooks.execPost('save:error', _this, [ _this], { error: error }, function(error) {","                next(error);","              });","            });","          }","        } else {","          next();","        }","      }","    },","    {","      kind: 'pre',","      hook: 'save',","      isAsync: true,","      fn: function(next, done) {","        var _this = this;","        var subdocs = this.$__getAllSubdocs();","","        if (!subdocs.length || this.$__preSavingFromParent) {","          done();","          next();","          return;","        }","","        each(subdocs, function(subdoc, cb) {","          subdoc.$__preSavingFromParent = true;","          subdoc.save(function(err) {","            cb(err);","          });","        }, function(error) {","          for (var i = 0; i < subdocs.length; ++i) {","            delete subdocs[i].$__preSavingFromParent;","          }","          if (error) {","            return _this.schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {","              done(error);","            });","          }","          next();","          done();","        });","      }","    },","    {","      kind: 'pre',","      hook: 'validate',","      isAsync: true,","      fn: function(next, done) {","        // Hack to ensure that we always wrap validate() in a promise","        next();","        done();","      }","    },","    {","      kind: 'pre',","      hook: 'remove',","      isAsync: true,","      fn: function(next, done) {","        if (this.ownerDocument) {","          done();","          next();","          return;","        }","","        var subdocs = this.$__getAllSubdocs();","","        if (!subdocs.length || this.$__preSavingFromParent) {","          done();","          next();","          return;","        }","","        each(subdocs, function(subdoc, cb) {","          subdoc.remove({ noop: true }, function(err) {","            cb(err);","          });","        }, function(error) {","          if (error) {","            done(error);","            return;","          }","          next();","          done();","        });","      }","    }","  ]","});","","","/**"," * The original object passed to the schema constructor"," *"," * ####Example:"," *"," *     var schema = new Schema({ a: String }).add({ b: String });"," *     schema.obj; // { a: String }"," *"," * @api public"," * @property obj"," */","","Schema.prototype.obj;","","/**"," * Schema as flat paths"," *"," * ####Example:"," *     {"," *         '_id'        : SchemaType,"," *       , 'nested.key' : SchemaType,"," *     }"," *"," * @api private"," * @property paths"," */","","Schema.prototype.paths;","","/**"," * Schema as a tree"," *"," * ####Example:"," *     {"," *         '_id'     : ObjectId"," *       , 'nested'  : {"," *             'key' : String"," *         }"," *     }"," *"," * @api private"," * @property tree"," */","","Schema.prototype.tree;","","/**"," * Returns a deep copy of the schema"," *"," * @return {Schema} the cloned schema"," * @api public"," */","","Schema.prototype.clone = function() {","  var s = new Schema(this.obj, this.options);","  // Clone the call queue","  s.callQueue = this.callQueue.map(function(f) { return f; });","  s.methods = utils.clone(this.methods);","  s.statics = utils.clone(this.statics);","  s.s.hooks = this.s.hooks.clone();","  return s;","};","","/**"," * Returns default options for this schema, merged with `options`."," *"," * @param {Object} options"," * @return {Object}"," * @api private"," */","","Schema.prototype.defaultOptions = function(options) {","  if (options && options.safe === false) {","    options.safe = {w: 0};","  }","","  if (options && options.safe && options.safe.w === 0) {","    // if you turn off safe writes, then versioning goes off as well","    options.versionKey = false;","  }","","  options = utils.options({","    strict: true,","    bufferCommands: true,","    capped: false, // { size, max, autoIndexId }","    versionKey: '__v',","    discriminatorKey: '__t',","    minimize: true,","    autoIndex: null,","    shardKey: null,","    read: null,","    validateBeforeSave: true,","    // the following are only applied at construction time","    noId: false, // deprecated, use { _id: false }","    _id: true,","    noVirtualId: false, // deprecated, use { id: false }","    id: true,","    typeKey: 'type',","    retainKeyOrder: false","  }, options);","","  if (options.read) {","    options.read = readPref(options.read);","  }","","  return options;","};","","/**"," * Adds key path / schema type pairs to this schema."," *"," * ####Example:"," *"," *     var ToySchema = new Schema;"," *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });"," *"," * @param {Object} obj"," * @param {String} prefix"," * @api public"," */","","Schema.prototype.add = function add(obj, prefix) {","  prefix = prefix || '';","  var keys = Object.keys(obj);","","  for (var i = 0; i < keys.length; ++i) {","    var key = keys[i];","","    if (obj[key] == null) {","      throw new TypeError('Invalid value for schema path `' + prefix + key + '`');","    }","","    if (Array.isArray(obj[key]) && obj[key].length === 1 && obj[key][0] == null) {","      throw new TypeError('Invalid value for schema Array path `' + prefix + key + '`');","    }","","    if (utils.isObject(obj[key]) &&","        (!obj[key].constructor || utils.getFunctionName(obj[key].constructor) === 'Object') &&","        (!obj[key][this.options.typeKey] || (this.options.typeKey === 'type' && obj[key].type.type))) {","      if (Object.keys(obj[key]).length) {","        // nested object { last: { name: String }}","        this.nested[prefix + key] = true;","        this.add(obj[key], prefix + key + '.');","      } else {","        if (prefix) {","          this.nested[prefix.substr(0, prefix.length - 1)] = true;","        }","        this.path(prefix + key, obj[key]); // mixed type","      }","    } else {","      if (prefix) {","        this.nested[prefix.substr(0, prefix.length - 1)] = true;","      }","      this.path(prefix + key, obj[key]);","    }","  }","};","","/**"," * Reserved document keys."," *"," * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error."," *"," *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject"," *"," * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on."," *"," *      var schema = new Schema(..);"," *      schema.methods.init = function () {} // potentially breaking"," */","","Schema.reserved = Object.create(null);","var reserved = Schema.reserved;","// Core object","reserved['prototype'] =","// EventEmitter","reserved.emit =","reserved.on =","reserved.once =","reserved.listeners =","reserved.removeListener =","// document properties and functions","reserved.collection =","reserved.db =","reserved.errors =","reserved.init =","reserved.isModified =","reserved.isNew =","reserved.get =","reserved.modelName =","reserved.save =","reserved.schema =","reserved.set =","reserved.toObject =","reserved.validate =","// hooks.js","reserved._pres = reserved._posts = 1;","","/*!"," * Document keys to print warnings for"," */","","var warnings = {};","warnings.increment = '`increment` should not be used as a schema path name ' +","    'unless you have disabled versioning.';","","/**"," * Gets/sets schema paths."," *"," * Sets a path (if arity 2)"," * Gets a path (if arity 1)"," *"," * ####Example"," *"," *     schema.path('name') // returns a SchemaType"," *     schema.path('name', Number) // changes the schemaType of `name` to Number"," *"," * @param {String} path"," * @param {Object} constructor"," * @api public"," */","","Schema.prototype.path = function(path, obj) {","  if (obj === undefined) {","    if (this.paths[path]) {","      return this.paths[path];","    }","    if (this.subpaths[path]) {","      return this.subpaths[path];","    }","    if (this.singleNestedPaths[path]) {","      return this.singleNestedPaths[path];","    }","","    // subpaths?","    return /\\.\\d+\\.?.*$/.test(path)","        ? getPositionalPath(this, path)","        : undefined;","  }","","  // some path names conflict with document methods","  if (reserved[path]) {","    throw new Error('`' + path + '` may not be used as a schema pathname');","  }","","  if (warnings[path]) {","    console.log('WARN: ' + warnings[path]);","  }","","  // update the tree","  var subpaths = path.split(/\\./),","      last = subpaths.pop(),","      branch = this.tree;","","  subpaths.forEach(function(sub, i) {","    if (!branch[sub]) {","      branch[sub] = {};","    }","    if (typeof branch[sub] !== 'object') {","      var msg = 'Cannot set nested path `' + path + '`. '","          + 'Parent path `'","          + subpaths.slice(0, i).concat([sub]).join('.')","          + '` already set to type ' + branch[sub].name","          + '.';","      throw new Error(msg);","    }","    branch = branch[sub];","  });","","  branch[last] = utils.clone(obj);","","  this.paths[path] = Schema.interpretAsType(path, obj, this.options);","","  if (this.paths[path].$isSingleNested) {","    for (var key in this.paths[path].schema.paths) {","      this.singleNestedPaths[path + '.' + key] =","          this.paths[path].schema.paths[key];","    }","    for (key in this.paths[path].schema.singleNestedPaths) {","      this.singleNestedPaths[path + '.' + key] =","          this.paths[path].schema.singleNestedPaths[key];","    }","","    this.childSchemas.push(this.paths[path].schema);","  } else if (this.paths[path].$isMongooseDocumentArray) {","    this.childSchemas.push(this.paths[path].schema);","  }","  return this;","};","","/**"," * Converts type arguments into Mongoose Types."," *"," * @param {String} path"," * @param {Object} obj constructor"," * @api private"," */","","Schema.interpretAsType = function(path, obj, options) {","  if (obj.constructor) {","    var constructorName = utils.getFunctionName(obj.constructor);","    if (constructorName !== 'Object') {","      var oldObj = obj;","      obj = {};","      obj[options.typeKey] = oldObj;","    }","  }","","  // Get the type making sure to allow keys named \"type\"","  // and default to mixed if not specified.","  // { type: { type: String, default: 'freshcut' } }","  var type = obj[options.typeKey] && (options.typeKey !== 'type' || !obj.type.type)","      ? obj[options.typeKey]","      : {};","","  if (utils.getFunctionName(type.constructor) === 'Object' || type === 'mixed') {","    return new MongooseTypes.Mixed(path, obj);","  }","","  if (Array.isArray(type) || Array === type || type === 'array') {","    // if it was specified through { type } look for `cast`","    var cast = (Array === type || type === 'array')","        ? obj.cast","        : type[0];","","    if (cast && cast.instanceOfSchema) {","      return new MongooseTypes.DocumentArray(path, cast, obj);","    }","","    if (Array.isArray(cast)) {","      return new MongooseTypes.Array(path, Schema.interpretAsType(path, cast, options), obj);","    }","","    if (typeof cast === 'string') {","      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];","    } else if (cast && (!cast[options.typeKey] || (options.typeKey === 'type' && cast.type.type))","        && utils.getFunctionName(cast.constructor) === 'Object') {","      if (Object.keys(cast).length) {","        // The `minimize` and `typeKey` options propagate to child schemas","        // declared inline, like `{ arr: [{ val: { $type: String } }] }`.","        // See gh-3560","        var childSchemaOptions = {minimize: options.minimize};","        if (options.typeKey) {","          childSchemaOptions.typeKey = options.typeKey;","        }","        //propagate 'strict' option to child schema","        if (options.hasOwnProperty('strict')) {","          childSchemaOptions.strict = options.strict;","        }","        var childSchema = new Schema(cast, childSchemaOptions);","        childSchema.$implicitlyCreated = true;","        return new MongooseTypes.DocumentArray(path, childSchema, obj);","      } else {","        // Special case: empty object becomes mixed","        return new MongooseTypes.Array(path, MongooseTypes.Mixed, obj);","      }","    }","","    if (cast) {","      type = cast[options.typeKey] && (options.typeKey !== 'type' || !cast.type.type)","          ? cast[options.typeKey]","          : cast;","","      name = typeof type === 'string'","          ? type","          : type.schemaName || utils.getFunctionName(type);","","      if (!(name in MongooseTypes)) {","        throw new TypeError('Undefined type `' + name + '` at array `' + path +","          '`');","      }","    }","","    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj, options);","  }","","  if (type && type.instanceOfSchema) {","    return new MongooseTypes.Embedded(type, path, obj);","  }","","  var name;","  if (Buffer.isBuffer(type)) {","    name = 'Buffer';","  } else {","    name = typeof type === 'string'","        ? type","      // If not string, `type` is a function. Outside of IE, function.name","      // gives you the function name. In IE, you need to compute it","        : type.schemaName || utils.getFunctionName(type);","  }","","  if (name) {","    name = name.charAt(0).toUpperCase() + name.substring(1);","  }","","  if (undefined == MongooseTypes[name]) {","    throw new TypeError('Undefined type `' + name + '` at `' + path +","        '`\\n  Did you try nesting Schemas? ' +","        'You can only nest using refs or arrays.');","  }","","  return new MongooseTypes[name](path, obj);","};","","/**"," * Iterates the schemas paths similar to Array#forEach."," *"," * The callback is passed the pathname and schemaType as arguments on each iteration."," *"," * @param {Function} fn callback function"," * @return {Schema} this"," * @api public"," */","","Schema.prototype.eachPath = function(fn) {","  var keys = Object.keys(this.paths),","      len = keys.length;","","  for (var i = 0; i < len; ++i) {","    fn(keys[i], this.paths[keys[i]]);","  }","","  return this;","};","","/**"," * Returns an Array of path strings that are required by this schema."," *"," * @api public"," * @param {Boolean} invalidate refresh the cache"," * @return {Array}"," */","","Schema.prototype.requiredPaths = function requiredPaths(invalidate) {","  if (this._requiredpaths && !invalidate) {","    return this._requiredpaths;","  }","","  var paths = Object.keys(this.paths),","      i = paths.length,","      ret = [];","","  while (i--) {","    var path = paths[i];","    if (this.paths[path].isRequired) {","      ret.push(path);","    }","  }","  this._requiredpaths = ret;","  return this._requiredpaths;","};","","/**"," * Returns indexes from fields and schema-level indexes (cached)."," *"," * @api private"," * @return {Array}"," */","","Schema.prototype.indexedPaths = function indexedPaths() {","  if (this._indexedpaths) {","    return this._indexedpaths;","  }","  this._indexedpaths = this.indexes();","  return this._indexedpaths;","};","","/**"," * Returns the pathType of `path` for this schema."," *"," * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path."," *"," * @param {String} path"," * @return {String}"," * @api public"," */","","Schema.prototype.pathType = function(path) {","  if (path in this.paths) {","    return 'real';","  }","  if (path in this.virtuals) {","    return 'virtual';","  }","  if (path in this.nested) {","    return 'nested';","  }","  if (path in this.subpaths) {","    return 'real';","  }","  if (path in this.singleNestedPaths) {","    return 'real';","  }","","  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {","    return getPositionalPathType(this, path);","  }","  return 'adhocOrUndefined';","};","","/**"," * Returns true iff this path is a child of a mixed schema."," *"," * @param {String} path"," * @return {Boolean}"," * @api private"," */","","Schema.prototype.hasMixedParent = function(path) {","  var subpaths = path.split(/\\./g);","  path = '';","  for (var i = 0; i < subpaths.length; ++i) {","    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];","    if (path in this.paths &&","        this.paths[path] instanceof MongooseTypes.Mixed) {","      return true;","    }","  }","","  return false;","};","","/**"," * Setup updatedAt and createdAt timestamps to documents if enabled"," *"," * @param {Boolean|Object} timestamps timestamps options"," * @api private"," */","Schema.prototype.setupTimestamp = function(timestamps) {","  if (timestamps) {","    var createdAt = timestamps.createdAt || 'createdAt';","    var updatedAt = timestamps.updatedAt || 'updatedAt';","    var schemaAdditions = {};","","    var parts = createdAt.split('.');","    var i;","    var cur = schemaAdditions;","    for (i = 0; i < parts.length; ++i) {","      cur[parts[i]] = (i < parts.length - 1 ?","        cur[parts[i]] || {} :","        Date);","    }","","    parts = updatedAt.split('.');","    cur = schemaAdditions;","    for (i = 0; i < parts.length; ++i) {","      cur[parts[i]] = (i < parts.length - 1 ?","        cur[parts[i]] || {} :","        Date);","    }","","    this.add(schemaAdditions);","","    this.pre('save', function(next) {","      var defaultTimestamp = new Date();","      var auto_id = this._id && this._id.auto;","","      if (!this.get(createdAt) && this.isSelected(createdAt)) {","        this.set(createdAt, auto_id ? this._id.getTimestamp() : defaultTimestamp);","      }","","      if (this.isNew || this.isModified()) {","        this.set(updatedAt, this.isNew ? this.get(createdAt) : defaultTimestamp);","      }","","      next();","    });","","    var genUpdates = function(currentUpdate, overwrite) {","      var now = new Date();","      var updates = {};","      if (overwrite) {","        if (!currentUpdate[updatedAt]) {","          updates[updatedAt] = now;","        }","        if (!currentUpdate[createdAt]) {","          updates[createdAt] = now;","        }","        return updates;","      }","      updates = { $set: {} };","      currentUpdate = currentUpdate || {};","","      updates.$set[updatedAt] = now;","","      if (currentUpdate[createdAt]) {","        delete currentUpdate[createdAt];","      }","      if (currentUpdate.$set && currentUpdate.$set[createdAt]) {","        delete currentUpdate.$set[createdAt];","      }","","      updates.$setOnInsert = {};","      updates.$setOnInsert[createdAt] = now;","","      return updates;","    };","","    this.methods.initializeTimestamps = function() {","      if (!this.get(createdAt)) {","        this.set(createdAt, new Date());","      }","      if (!this.get(updatedAt)) {","        this.set(updatedAt, new Date());","      }","      return this;","    };","","    this.pre('findOneAndUpdate', function(next) {","      var overwrite = this.options.overwrite;","      this.findOneAndUpdate({}, genUpdates(this.getUpdate(), overwrite), {","        overwrite: overwrite","      });","      applyTimestampsToChildren(this);","      next();","    });","","    this.pre('update', function(next) {","      var overwrite = this.options.overwrite;","      this.update({}, genUpdates(this.getUpdate(), overwrite), {","        overwrite: overwrite","      });","      applyTimestampsToChildren(this);","      next();","    });","  }","};","","/*!"," * ignore"," */","","function applyTimestampsToChildren(query) {","  var now = new Date();","  var update = query.getUpdate();","  var keys = Object.keys(update);","  var key;","  var schema = query.model.schema;","  var len;","  var createdAt;","  var updatedAt;","  var timestamps;","  var path;","","  var hasDollarKey = keys.length && keys[0].charAt(0) === '$';","","  if (hasDollarKey) {","    if (update.$push) {","      for (key in update.$push) {","        var $path = schema.path(key);","        if (update.$push[key] &&","            $path &&","            $path.$isMongooseDocumentArray &&","            $path.schema.options.timestamps) {","          timestamps = $path.schema.options.timestamps;","          createdAt = timestamps.createdAt || 'createdAt';","          updatedAt = timestamps.updatedAt || 'updatedAt';","          if (update.$push[key].$each) {","            update.$push[key].$each.forEach(function(subdoc) {","              subdoc[updatedAt] = now;","              subdoc[createdAt] = now;","            });","          } else {","            update.$push[key][updatedAt] = now;","            update.$push[key][createdAt] = now;","          }","        }","      }","    }","    if (update.$set) {","      for (key in update.$set) {","        path = schema.path(key);","        if (!path) {","          continue;","        }","        if (Array.isArray(update.$set[key]) && path.$isMongooseDocumentArray) {","          len = update.$set[key].length;","          timestamps = schema.path(key).schema.options.timestamps;","          if (timestamps) {","            createdAt = timestamps.createdAt || 'createdAt';","            updatedAt = timestamps.updatedAt || 'updatedAt';","            for (var i = 0; i < len; ++i) {","              update.$set[key][i][updatedAt] = now;","              update.$set[key][i][createdAt] = now;","            }","          }","        } else if (update.$set[key] && path.$isSingleNested) {","          timestamps = schema.path(key).schema.options.timestamps;","          if (timestamps) {","            createdAt = timestamps.createdAt || 'createdAt';","            updatedAt = timestamps.updatedAt || 'updatedAt';","            update.$set[key][updatedAt] = now;","            update.$set[key][createdAt] = now;","          }","        }","      }","    }","  }","}","","/*!"," * ignore"," */","","function getPositionalPathType(self, path) {","  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);","  if (subpaths.length < 2) {","    return self.paths[subpaths[0]];","  }","","  var val = self.path(subpaths[0]);","  var isNested = false;","  if (!val) {","    return val;","  }","","  var last = subpaths.length - 1,","      subpath,","      i = 1;","","  for (; i < subpaths.length; ++i) {","    isNested = false;","    subpath = subpaths[i];","","    if (i === last && val && !/\\D/.test(subpath)) {","      if (val.$isMongooseDocumentArray) {","        var oldVal = val;","        val = new SchemaType(subpath);","        val.cast = function(value, doc, init) {","          return oldVal.cast(value, doc, init)[0];","        };","        val.caster = oldVal.caster;","        val.schema = oldVal.schema;","      } else if (val instanceof MongooseTypes.Array) {","        // StringSchema, NumberSchema, etc","        val = val.caster;","      } else {","        val = undefined;","      }","      break;","    }","","    // ignore if its just a position segment: path.0.subpath","    if (!/\\D/.test(subpath)) {","      continue;","    }","","    if (!(val && val.schema)) {","      val = undefined;","      break;","    }","","    var type = val.schema.pathType(subpath);","    isNested = (type === 'nested');","    val = val.schema.path(subpath);","  }","","  self.subpaths[path] = val;","  if (val) {","    return 'real';","  }","  if (isNested) {","    return 'nested';","  }","  return 'adhocOrUndefined';","}","","","/*!"," * ignore"," */","","function getPositionalPath(self, path) {","  getPositionalPathType(self, path);","  return self.subpaths[path];","}","","/**"," * Adds a method call to the queue."," *"," * @param {String} name name of the document method to call later"," * @param {Array} args arguments to pass to the method"," * @api public"," */","","Schema.prototype.queue = function(name, args) {","  this.callQueue.push([name, args]);","  return this;","};","","/**"," * Defines a pre hook for the document."," *"," * ####Example"," *"," *     var toySchema = new Schema(..);"," *"," *     toySchema.pre('save', function (next) {"," *       if (!this.created) this.created = new Date;"," *       next();"," *     })"," *"," *     toySchema.pre('validate', function (next) {"," *       if (this.name !== 'Woody') this.name = 'Woody';"," *       next();"," *     })"," *"," * @param {String} method"," * @param {Function} callback"," * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3"," * @api public"," */","","Schema.prototype.pre = function() {","  var name = arguments[0];","  if (IS_KAREEM_HOOK[name]) {","    this.s.hooks.pre.apply(this.s.hooks, arguments);","    return this;","  }","  return this.queue('pre', arguments);","};","","/**"," * Defines a post hook for the document"," *"," *     var schema = new Schema(..);"," *     schema.post('save', function (doc) {"," *       console.log('this fired after a document was saved');"," *     });"," *"," *     shema.post('find', function(docs) {"," *       console.log('this fired after you run a find query');"," *     });"," *"," *     var Model = mongoose.model('Model', schema);"," *"," *     var m = new Model(..);"," *     m.save(function(err) {"," *       console.log('this fires after the `post` hook');"," *     });"," *"," *     m.find(function(err, docs) {"," *       console.log('this fires after the post find hook');"," *     });"," *"," * @param {String} method name of the method to hook"," * @param {Function} fn callback"," * @see middleware http://mongoosejs.com/docs/middleware.html"," * @see hooks.js https://www.npmjs.com/package/hooks-fixed"," * @see kareem http://npmjs.org/package/kareem"," * @api public"," */","","Schema.prototype.post = function(method, fn) {","  if (IS_KAREEM_HOOK[method]) {","    this.s.hooks.post.apply(this.s.hooks, arguments);","    return this;","  }","  // assuming that all callbacks with arity < 2 are synchronous post hooks","  if (fn.length < 2) {","    return this.queue('on', [arguments[0], function(doc) {","      return fn.call(doc, doc);","    }]);","  }","","  if (fn.length === 3) {","    this.s.hooks.post(method + ':error', fn);","    return this;","  }","","  return this.queue('post', [arguments[0], function(next) {","    // wrap original function so that the callback goes last,","    // for compatibility with old code that is using synchronous post hooks","    var _this = this;","    var args = Array.prototype.slice.call(arguments, 1);","    fn.call(this, this, function(err) {","      return next.apply(_this, [err].concat(args));","    });","  }]);","};","","/**"," * Registers a plugin for this schema."," *"," * @param {Function} plugin callback"," * @param {Object} [opts]"," * @see plugins"," * @api public"," */","","Schema.prototype.plugin = function(fn, opts) {","  fn(this, opts);","  return this;","};","","/**"," * Adds an instance method to documents constructed from Models compiled from this schema."," *"," * ####Example"," *"," *     var schema = kittySchema = new Schema(..);"," *"," *     schema.method('meow', function () {"," *       console.log('meeeeeoooooooooooow');"," *     })"," *"," *     var Kitty = mongoose.model('Kitty', schema);"," *"," *     var fizz = new Kitty;"," *     fizz.meow(); // meeeeeooooooooooooow"," *"," * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods."," *"," *     schema.method({"," *         purr: function () {}"," *       , scratch: function () {}"," *     });"," *"," *     // later"," *     fizz.purr();"," *     fizz.scratch();"," *"," * @param {String|Object} method name"," * @param {Function} [fn]"," * @api public"," */","","Schema.prototype.method = function(name, fn) {","  if (typeof name !== 'string') {","    for (var i in name) {","      this.methods[i] = name[i];","    }","  } else {","    this.methods[name] = fn;","  }","  return this;","};","","/**"," * Adds static \"class\" methods to Models compiled from this schema."," *"," * ####Example"," *"," *     var schema = new Schema(..);"," *     schema.static('findByName', function (name, callback) {"," *       return this.find({ name: name }, callback);"," *     });"," *"," *     var Drink = mongoose.model('Drink', schema);"," *     Drink.findByName('sanpellegrino', function (err, drinks) {"," *       //"," *     });"," *"," * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics."," *"," * @param {String|Object} name"," * @param {Function} [fn]"," * @api public"," */","","Schema.prototype.static = function(name, fn) {","  if (typeof name !== 'string') {","    for (var i in name) {","      this.statics[i] = name[i];","    }","  } else {","    this.statics[name] = fn;","  }","  return this;","};","","/**"," * Defines an index (most likely compound) for this schema."," *"," * ####Example"," *"," *     schema.index({ first: 1, last: -1 })"," *"," * @param {Object} fields"," * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)"," * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link."," * @api public"," */","","Schema.prototype.index = function(fields, options) {","  options || (options = {});","","  if (options.expires) {","    utils.expires(options);","  }","","  this._indexes.push([fields, options]);","  return this;","};","","/**"," * Sets/gets a schema option."," *"," * ####Example"," *"," *     schema.set('strict'); // 'true' by default"," *     schema.set('strict', false); // Sets 'strict' to false"," *     schema.set('strict'); // 'false'"," *"," * @param {String} key option name"," * @param {Object} [value] if not passed, the current option value is returned"," * @see Schema ./"," * @api public"," */","","Schema.prototype.set = function(key, value, _tags) {","  if (arguments.length === 1) {","    return this.options[key];","  }","","  switch (key) {","    case 'read':","      this.options[key] = readPref(value, _tags);","      break;","    case 'safe':","      this.options[key] = value === false","          ? {w: 0}","          : value;","      break;","    case 'timestamps':","      this.setupTimestamp(value);","      this.options[key] = value;","      break;","    default:","      this.options[key] = value;","  }","","  return this;","};","","/**"," * Gets a schema option."," *"," * @param {String} key option name"," * @api public"," */","","Schema.prototype.get = function(key) {","  return this.options[key];","};","","/**"," * The allowed index types"," *"," * @static indexTypes"," * @receiver Schema"," * @api public"," */","","var indexTypes = '2d 2dsphere hashed text'.split(' ');","","Object.defineProperty(Schema, 'indexTypes', {","  get: function() {","    return indexTypes;","  },","  set: function() {","    throw new Error('Cannot overwrite Schema.indexTypes');","  }","});","","/**"," * Compiles indexes from fields and schema-level indexes"," *"," * @api public"," */","","Schema.prototype.indexes = function() {","  'use strict';","","  var indexes = [];","  var seenPrefix = {};","","  var collectIndexes = function(schema, prefix) {","    if (seenPrefix[prefix]) {","      return;","    }","    seenPrefix[prefix] = true;","","    prefix = prefix || '';","    var key, path, index, field, isObject, options, type;","    var keys = Object.keys(schema.paths);","","    for (var i = 0; i < keys.length; ++i) {","      key = keys[i];","      path = schema.paths[key];","","      if ((path instanceof MongooseTypes.DocumentArray) || path.$isSingleNested) {","        collectIndexes(path.schema, key + '.');","      } else {","        index = path._index;","","        if (index !== false && index !== null && index !== undefined) {","          field = {};","          isObject = utils.isObject(index);","          options = isObject ? index : {};","          type = typeof index === 'string' ? index :","              isObject ? index.type :","                  false;","","          if (type && ~Schema.indexTypes.indexOf(type)) {","            field[prefix + key] = type;","          } else if (options.text) {","            field[prefix + key] = 'text';","            delete options.text;","          } else {","            field[prefix + key] = 1;","          }","","          delete options.type;","          if (!('background' in options)) {","            options.background = true;","          }","","          indexes.push([field, options]);","        }","      }","    }","","    if (prefix) {","      fixSubIndexPaths(schema, prefix);","    } else {","      schema._indexes.forEach(function(index) {","        if (!('background' in index[1])) {","          index[1].background = true;","        }","      });","      indexes = indexes.concat(schema._indexes);","    }","  };","","  collectIndexes(this);","  return indexes;","","  /*!","   * Checks for indexes added to subdocs using Schema.index().","   * These indexes need their paths prefixed properly.","   *","   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]","   */","","  function fixSubIndexPaths(schema, prefix) {","    var subindexes = schema._indexes,","        len = subindexes.length,","        indexObj,","        newindex,","        klen,","        keys,","        key,","        i = 0,","        j;","","    for (i = 0; i < len; ++i) {","      indexObj = subindexes[i][0];","      keys = Object.keys(indexObj);","      klen = keys.length;","      newindex = {};","","      // use forward iteration, order matters","      for (j = 0; j < klen; ++j) {","        key = keys[j];","        newindex[prefix + key] = indexObj[key];","      }","","      indexes.push([newindex, subindexes[i][1]]);","    }","  }","};","","/**"," * Creates a virtual type with the given name."," *"," * @param {String} name"," * @param {Object} [options]"," * @return {VirtualType}"," */","","Schema.prototype.virtual = function(name, options) {","  if (options && options.ref) {","    if (!options.localField) {","      throw new Error('Reference virtuals require `localField` option');","    }","","    if (!options.foreignField) {","      throw new Error('Reference virtuals require `foreignField` option');","    }","","    this.pre('init', function(next, obj) {","      if (name in obj) {","        if (!this.$$populatedVirtuals) {","          this.$$populatedVirtuals = {};","        }","","        if (options.justOne) {","          this.$$populatedVirtuals[name] = Array.isArray(obj[name]) ?","            obj[name][0] :","            obj[name];","        } else {","          this.$$populatedVirtuals[name] = Array.isArray(obj[name]) ?","            obj[name] :","            obj[name] == null ? [] : [obj[name]];","        }","","        delete obj[name];","      }","      if (this.ownerDocument) {","        next();","        return this;","      } else {","        next();","      }","    });","","    var virtual = this.virtual(name);","    virtual.options = options;","    return virtual.","      get(function() {","        if (!this.$$populatedVirtuals) {","          this.$$populatedVirtuals = {};","        }","        if (name in this.$$populatedVirtuals) {","          return this.$$populatedVirtuals[name];","        }","        return null;","      }).","      set(function(v) {","        if (!this.$$populatedVirtuals) {","          this.$$populatedVirtuals = {};","        }","        this.$$populatedVirtuals[name] = v;","      });","  }","","  var virtuals = this.virtuals;","  var parts = name.split('.');","","  if (this.pathType(name) === 'real') {","    throw new Error('Virtual path \"' + name + '\"' +","      ' conflicts with a real path in the schema');","  }","","  virtuals[name] = parts.reduce(function(mem, part, i) {","    mem[part] || (mem[part] = (i === parts.length - 1)","        ? new VirtualType(options, name)","        : {});","    return mem[part];","  }, this.tree);","","  return virtuals[name];","};","","/*!"," * ignore"," */","","Schema.prototype._getVirtual = function(name) {","  return _getVirtual(this, name);","};","","/*!"," * ignore"," */","","function _getVirtual(schema, name) {","  if (schema.virtuals[name]) {","    return schema.virtuals[name];","  }","  var parts = name.split('.');","  var cur = '';","  var nestedSchemaPath = '';","  for (var i = 0; i < parts.length; ++i) {","    cur += (cur.length > 0 ? '.' : '') + parts[i];","    if (schema.virtuals[cur]) {","      if (i === parts.length - 1) {","        schema.virtuals[cur].$nestedSchemaPath = nestedSchemaPath;","        return schema.virtuals[cur];","      }","      continue;","    } else if (schema.paths[cur] && schema.paths[cur].schema) {","      schema = schema.paths[cur].schema;","      nestedSchemaPath += (nestedSchemaPath.length > 0 ? '.' : '') + cur;","      cur = '';","    } else {","      return null;","    }","  }","}","","/**"," * Returns the virtual type with the given `name`."," *"," * @param {String} name"," * @return {VirtualType}"," */","","Schema.prototype.virtualpath = function(name) {","  return this.virtuals[name];","};","","/**"," * Removes the given `path` (or [`paths`])."," *"," * @param {String|Array} path"," *"," * @api public"," */","Schema.prototype.remove = function(path) {","  if (typeof path === 'string') {","    path = [path];","  }","  if (Array.isArray(path)) {","    path.forEach(function(name) {","      if (this.path(name)) {","        delete this.paths[name];","","        var pieces = name.split('.');","        var last = pieces.pop();","        var branch = this.tree;","        for (var i = 0; i < pieces.length; ++i) {","          branch = branch[pieces[i]];","        }","        delete branch[last];","      }","    }, this);","  }","};","","/**"," * Loads an ES6 class into a schema. Maps setters + getters, static methods, and"," * instance methods to schema virtuals, statics, and methods."," *"," * @param {Function} model"," */","Schema.prototype.loadClass = function(model, virtualsOnly) {","  if (model === Object.prototype ||","      model === Function.prototype ||","      model.prototype.hasOwnProperty('$isMongooseModelPrototype')) {","    return this;","  }","","  // Add static methods","  if (!virtualsOnly) {","    Object.getOwnPropertyNames(model).forEach(function(name) {","      if (name.match(/^(length|name|prototype)$/)) {","        return;","      }","      var method = Object.getOwnPropertyDescriptor(model, name);","      if (typeof method.value === 'function') this.static(name, method.value);","    }, this);","  }","","  // Add methods and virtuals","  Object.getOwnPropertyNames(model.prototype).forEach(function(name) {","    if (name.match(/^(constructor)$/)) {","      return;","    }","    var method = Object.getOwnPropertyDescriptor(model.prototype, name);","    if (!virtualsOnly) {","      if (typeof method.value === 'function') {","        this.method(name, method.value);","      }","    }","    if (typeof method.get === 'function') {","      this.virtual(name).get(method.get);","    }","    if (typeof method.set === 'function') {","      this.virtual(name).set(method.set);","    }","  }, this);","","  return (this.loadClass(Object.getPrototypeOf(model)));","};","","/*!"," * ignore"," */","","Schema.prototype._getSchema = function(path) {","  var _this = this;","  var pathschema = _this.path(path);","  var resultPath = [];","","  if (pathschema) {","    pathschema.$fullPath = path;","    return pathschema;","  }","","  function search(parts, schema) {","    var p = parts.length + 1,","        foundschema,","        trypath;","","    while (p--) {","      trypath = parts.slice(0, p).join('.');","      foundschema = schema.path(trypath);","      if (foundschema) {","        resultPath.push(trypath);","","        if (foundschema.caster) {","          // array of Mixed?","          if (foundschema.caster instanceof MongooseTypes.Mixed) {","            foundschema.caster.$fullPath = resultPath.join('.');","            return foundschema.caster;","          }","","          // Now that we found the array, we need to check if there","          // are remaining document paths to look up for casting.","          // Also we need to handle array.$.path since schema.path","          // doesn't work for that.","          // If there is no foundschema.schema we are dealing with","          // a path like array.$","          if (p !== parts.length && foundschema.schema) {","            var ret;","            if (parts[p] === '$') {","              if (p + 1 === parts.length) {","                // comments.$","                return foundschema;","              }","              // comments.$.comments.$.title","              ret = search(parts.slice(p + 1), foundschema.schema);","              if (ret) {","                ret.$isUnderneathDocArray = ret.$isUnderneathDocArray ||","                  !foundschema.schema.$isSingleNested;","              }","              return ret;","            }","            // this is the last path of the selector","            ret = search(parts.slice(p), foundschema.schema);","            if (ret) {","              ret.$isUnderneathDocArray = ret.$isUnderneathDocArray ||","                !foundschema.schema.$isSingleNested;","            }","            return ret;","          }","        }","","        foundschema.$fullPath = resultPath.join('.');","","        return foundschema;","      }","    }","  }","","  // look for arrays","  return search(path.split('.'), _this);","};","","/*!"," * ignore"," */","","Schema.prototype._getPathType = function(path) {","  var _this = this;","  var pathschema = _this.path(path);","","  if (pathschema) {","    return 'real';","  }","","  function search(parts, schema) {","    var p = parts.length + 1,","        foundschema,","        trypath;","","    while (p--) {","      trypath = parts.slice(0, p).join('.');","      foundschema = schema.path(trypath);","      if (foundschema) {","        if (foundschema.caster) {","          // array of Mixed?","          if (foundschema.caster instanceof MongooseTypes.Mixed) {","            return { schema: foundschema, pathType: 'mixed' };","          }","","          // Now that we found the array, we need to check if there","          // are remaining document paths to look up for casting.","          // Also we need to handle array.$.path since schema.path","          // doesn't work for that.","          // If there is no foundschema.schema we are dealing with","          // a path like array.$","          if (p !== parts.length && foundschema.schema) {","            if (parts[p] === '$') {","              if (p === parts.length - 1) {","                return { schema: foundschema, pathType: 'nested' };","              }","              // comments.$.comments.$.title","              return search(parts.slice(p + 1), foundschema.schema);","            }","            // this is the last path of the selector","            return search(parts.slice(p), foundschema.schema);","          }","          return {","            schema: foundschema,","            pathType: foundschema.$isSingleNested ? 'nested' : 'array'","          };","        }","        return { schema: foundschema, pathType: 'real' };","      } else if (p === parts.length && schema.nested[trypath]) {","        return { schema: schema, pathType: 'nested' };","      }","    }","    return { schema: foundschema || schema, pathType: 'undefined' };","  }","","  // look for arrays","  return search(path.split('.'), _this);","};","","","/*!"," * Module exports."," */","","module.exports = exports = Schema;","","// require down here because of reference issues","","/**"," * The various built-in Mongoose Schema Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var ObjectId = mongoose.Schema.Types.ObjectId;"," *"," * ####Types:"," *"," * - [String](#schema-string-js)"," * - [Number](#schema-number-js)"," * - [Boolean](#schema-boolean-js) | Bool"," * - [Array](#schema-array-js)"," * - [Buffer](#schema-buffer-js)"," * - [Date](#schema-date-js)"," * - [ObjectId](#schema-objectid-js) | Oid"," * - [Mixed](#schema-mixed-js)"," *"," * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema."," *"," *     var Mixed = mongoose.Schema.Types.Mixed;"," *     new mongoose.Schema({ _user: Mixed })"," *"," * @api public"," */","","Schema.Types = MongooseTypes = require('./schema/index');","","/*!"," * ignore"," */","","exports.ObjectId = MongooseTypes.ObjectId;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"70":1,"71":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"90":0,"95":0,"98":0,"99":0,"103":0,"106":0,"109":0,"110":0,"111":0,"112":0,"116":0,"118":0,"119":0,"122":0,"123":0,"124":0,"127":0,"128":0,"136":1,"137":0,"138":0,"141":0,"144":0,"150":1,"151":1,"152":1,"164":1,"173":0,"175":0,"176":0,"179":0,"183":0,"184":0,"185":0,"187":0,"191":0,"194":0,"195":0,"196":0,"197":0,"201":0,"202":0,"203":0,"208":0,"217":0,"218":0,"220":0,"221":0,"222":0,"223":0,"226":0,"227":0,"228":0,"229":0,"232":0,"233":0,"235":0,"236":0,"237":0,"240":0,"241":0,"251":0,"252":0,"260":0,"261":0,"262":0,"263":0,"266":0,"268":0,"269":0,"270":0,"271":0,"274":0,"275":0,"276":0,"279":0,"280":0,"281":0,"283":0,"284":0,"304":1,"319":1,"336":1,"345":1,"346":0,"348":0,"349":0,"350":0,"351":0,"352":0,"363":1,"364":0,"365":0,"368":0,"370":0,"373":0,"393":0,"394":0,"397":0,"413":1,"414":0,"415":0,"417":0,"418":0,"420":0,"421":0,"424":0,"425":0,"428":0,"431":0,"433":0,"434":0,"436":0,"437":0,"439":0,"442":0,"443":0,"445":0,"463":1,"464":1,"466":1,"494":1,"495":1,"514":1,"515":0,"516":0,"517":0,"519":0,"520":0,"522":0,"523":0,"527":0,"533":0,"534":0,"537":0,"538":0,"542":0,"546":0,"547":0,"548":0,"550":0,"551":0,"556":0,"558":0,"561":0,"563":0,"565":0,"566":0,"567":0,"570":0,"571":0,"575":0,"576":0,"577":0,"579":0,"590":1,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"603":0,"607":0,"608":0,"611":0,"613":0,"617":0,"618":0,"621":0,"622":0,"625":0,"626":0,"627":0,"629":0,"633":0,"634":0,"635":0,"638":0,"639":0,"641":0,"642":0,"643":0,"646":0,"650":0,"651":0,"655":0,"659":0,"660":0,"665":0,"668":0,"669":0,"672":0,"673":0,"674":0,"676":0,"683":0,"684":0,"687":0,"688":0,"693":0,"706":1,"707":0,"710":0,"711":0,"714":0,"725":1,"726":0,"727":0,"730":0,"734":0,"735":0,"736":0,"737":0,"740":0,"741":0,"751":1,"752":0,"753":0,"755":0,"756":0,"769":1,"770":0,"771":0,"773":0,"774":0,"776":0,"777":0,"779":0,"780":0,"782":0,"783":0,"786":0,"787":0,"789":0,"800":1,"801":0,"802":0,"803":0,"804":0,"805":0,"807":0,"811":0,"820":1,"821":0,"822":0,"823":0,"824":0,"826":0,"827":0,"828":0,"829":0,"830":0,"835":0,"836":0,"837":0,"838":0,"843":0,"845":0,"846":0,"847":0,"849":0,"850":0,"853":0,"854":0,"857":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"867":0,"868":0,"870":0,"872":0,"873":0,"875":0,"877":0,"878":0,"880":0,"881":0,"884":0,"885":0,"887":0,"890":0,"891":0,"892":0,"894":0,"895":0,"897":0,"900":0,"901":0,"902":0,"905":0,"906":0,"909":0,"910":0,"911":0,"914":0,"915":0,"924":1,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"936":0,"938":0,"939":0,"940":0,"941":0,"942":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"955":0,"956":0,"961":0,"962":0,"963":0,"964":0,"965":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"996":1,"997":0,"998":0,"999":0,"1002":0,"1003":0,"1004":0,"1005":0,"1008":0,"1012":0,"1013":0,"1014":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1023":0,"1024":0,"1025":0,"1027":0,"1029":0,"1031":0,"1035":0,"1036":0,"1039":0,"1040":0,"1041":0,"1044":0,"1045":0,"1046":0,"1049":0,"1050":0,"1051":0,"1053":0,"1054":0,"1056":0,"1064":1,"1065":0,"1066":0,"1077":1,"1078":0,"1079":0,"1105":1,"1106":0,"1107":0,"1108":0,"1109":0,"1111":0,"1145":1,"1146":0,"1147":0,"1148":0,"1151":0,"1152":0,"1153":0,"1157":0,"1158":0,"1159":0,"1162":0,"1165":0,"1166":0,"1167":0,"1168":0,"1182":1,"1183":0,"1184":0,"1219":1,"1220":0,"1221":0,"1222":0,"1225":0,"1227":0,"1252":1,"1253":0,"1254":0,"1255":0,"1258":0,"1260":0,"1276":1,"1277":0,"1279":0,"1280":0,"1283":0,"1284":0,"1302":1,"1303":0,"1304":0,"1307":0,"1309":0,"1310":0,"1312":0,"1315":0,"1317":0,"1318":0,"1319":0,"1321":0,"1324":0,"1334":1,"1335":0,"1346":1,"1348":1,"1350":0,"1353":0,"1363":1,"1366":0,"1367":0,"1369":0,"1370":0,"1371":0,"1373":0,"1375":0,"1376":0,"1377":0,"1379":0,"1380":0,"1381":0,"1383":0,"1384":0,"1386":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1402":0,"1405":0,"1406":0,"1407":0,"1410":0,"1415":0,"1416":0,"1418":0,"1419":0,"1420":0,"1423":0,"1427":0,"1428":0,"1437":1,"1438":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1455":0,"1456":0,"1457":0,"1460":0,"1473":1,"1474":0,"1475":0,"1476":0,"1479":0,"1480":0,"1483":0,"1484":0,"1485":0,"1486":0,"1489":0,"1490":0,"1494":0,"1499":0,"1501":0,"1502":0,"1503":0,"1505":0,"1509":0,"1510":0,"1511":0,"1513":0,"1514":0,"1516":0,"1517":0,"1519":0,"1522":0,"1523":0,"1525":0,"1529":0,"1530":0,"1532":0,"1533":0,"1537":0,"1538":0,"1541":0,"1544":0,"1551":1,"1552":0,"1559":1,"1560":0,"1561":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1579":0,"1591":1,"1592":0,"1602":1,"1603":0,"1604":0,"1606":0,"1607":0,"1608":0,"1609":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1617":0,"1629":1,"1630":0,"1633":0,"1637":0,"1638":0,"1639":0,"1640":0,"1642":0,"1643":0,"1648":0,"1649":0,"1650":0,"1652":0,"1653":0,"1654":0,"1655":0,"1658":0,"1659":0,"1661":0,"1662":0,"1666":0,"1673":1,"1674":0,"1675":0,"1676":0,"1678":0,"1679":0,"1680":0,"1683":1,"1684":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1694":0,"1696":0,"1697":0,"1698":0,"1707":0,"1708":0,"1709":0,"1710":0,"1712":0,"1715":0,"1716":0,"1717":0,"1720":0,"1723":0,"1724":0,"1725":0,"1728":0,"1732":0,"1734":0,"1740":0,"1747":1,"1748":0,"1749":0,"1751":0,"1752":0,"1755":1,"1756":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1766":0,"1767":0,"1776":0,"1777":0,"1778":0,"1779":0,"1782":0,"1785":0,"1787":0,"1792":0,"1793":0,"1794":0,"1797":0,"1801":0,"1809":1,"1840":1,"1846":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1},"b":{"1":[1,0],"2":[1,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":11}},"2":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"3":{"start":{"line":8,"column":2},"end":{"line":8,"column":75}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":32}},"5":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":19},"end":{"line":8,"column":46}},{"start":{"line":8,"column":50},"end":{"line":8,"column":73}}]}},"code":["/*!"," * ignore"," */","","var driver;","","if (typeof window === 'undefined') {","  driver = require(global.MONGOOSE_DRIVER_PATH || './node-mongodb-native');","} else {","  driver = require('./browser');","}","","/*!"," * ignore"," */","","module.exports = driver;",""],"l":{"5":1,"7":1,"8":1,"10":0,"17":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/index.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":41}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":53}}},"branchMap":{},"code":["/*!"," * Module exports."," */","","exports.Binary = require('./binary');","exports.ObjectId = require('./objectid');","exports.ReadPreference = require('./ReadPreference');",""],"l":{"5":1,"6":1,"7":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/binary.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/binary.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}}},"branchMap":{},"code":["","/*!"," * Module dependencies."," */","","var Binary = require('mongodb').Binary;","","module.exports = exports = Binary;",""],"l":{"6":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/objectid.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/objectid.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}}},"branchMap":{},"code":["","/*!"," * [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) ObjectId"," * @constructor NodeMongoDbObjectId"," * @see ObjectId"," */","","var ObjectId = require('mongodb').ObjectId;","","/*!"," * ignore"," */","","module.exports = exports = ObjectId;",""],"l":{"8":1,"14":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/ReadPreference.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/ReadPreference.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0,0,0,0]},"f":{"1":0},"fnMap":{"1":{"name":"readPref","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":47}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":33}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":16,"column":0},"end":{"line":45,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":19}},"6":{"start":{"line":19,"column":4},"end":{"line":19,"column":19}},"7":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"9":{"start":{"line":26,"column":2},"end":{"line":42,"column":3}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":23}},"11":{"start":{"line":29,"column":6},"end":{"line":29,"column":12}},"12":{"start":{"line":31,"column":6},"end":{"line":31,"column":32}},"13":{"start":{"line":32,"column":6},"end":{"line":32,"column":12}},"14":{"start":{"line":34,"column":6},"end":{"line":34,"column":25}},"15":{"start":{"line":35,"column":6},"end":{"line":35,"column":12}},"16":{"start":{"line":37,"column":6},"end":{"line":37,"column":34}},"17":{"start":{"line":38,"column":6},"end":{"line":38,"column":12}},"18":{"start":{"line":40,"column":6},"end":{"line":40,"column":23}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":12}},"20":{"start":{"line":44,"column":2},"end":{"line":44,"column":34}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"3":{"line":26,"type":"switch","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":12}},{"start":{"line":30,"column":4},"end":{"line":32,"column":12}},{"start":{"line":33,"column":4},"end":{"line":35,"column":12}},{"start":{"line":36,"column":4},"end":{"line":38,"column":12}},{"start":{"line":39,"column":4},"end":{"line":41,"column":12}}]}},"code":["/*!"," * Module dependencies."," */","","var mongodb = require('mongodb');","var ReadPref = mongodb.ReadPreference;","","/*!"," * Converts arguments to ReadPrefs the driver"," * can understand."," *"," * @param {String|Array} pref"," * @param {Array} [tags]"," */","","module.exports = function readPref(pref, tags) {","  if (Array.isArray(pref)) {","    tags = pref[1];","    pref = pref[0];","  }","","  if (pref instanceof ReadPref) {","    return pref;","  }","","  switch (pref) {","    case 'p':","      pref = 'primary';","      break;","    case 'pp':","      pref = 'primaryPreferred';","      break;","    case 's':","      pref = 'secondary';","      break;","    case 'sp':","      pref = 'secondaryPreferred';","      break;","    case 'n':","      pref = 'nearest';","      break;","  }","","  return new ReadPref(pref, tags);","};",""],"l":{"5":1,"6":1,"16":1,"17":0,"18":0,"19":0,"22":0,"23":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"44":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/virtualtype.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/virtualtype.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"VirtualType","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":28},"end":{"line":38,"column":41}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":28},"end":{"line":60,"column":41}}},"4":{"name":"(anonymous_4)","line":74,"loc":{"start":{"line":74,"column":37},"end":{"line":74,"column":60}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":37},"end":{"line":91,"column":60}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":21,"column":1}},"2":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"3":{"start":{"line":18,"column":2},"end":{"line":18,"column":20}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":20}},"5":{"start":{"line":20,"column":2},"end":{"line":20,"column":31}},"6":{"start":{"line":38,"column":0},"end":{"line":41,"column":2}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":24}},"8":{"start":{"line":40,"column":2},"end":{"line":40,"column":14}},"9":{"start":{"line":60,"column":0},"end":{"line":63,"column":2}},"10":{"start":{"line":61,"column":2},"end":{"line":61,"column":24}},"11":{"start":{"line":62,"column":2},"end":{"line":62,"column":14}},"12":{"start":{"line":74,"column":0},"end":{"line":80,"column":2}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":16}},"14":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"15":{"start":{"line":77,"column":4},"end":{"line":77,"column":45}},"16":{"start":{"line":79,"column":2},"end":{"line":79,"column":11}},"17":{"start":{"line":91,"column":0},"end":{"line":97,"column":2}},"18":{"start":{"line":92,"column":2},"end":{"line":92,"column":16}},"19":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"20":{"start":{"line":94,"column":4},"end":{"line":94,"column":45}},"21":{"start":{"line":96,"column":2},"end":{"line":96,"column":11}},"22":{"start":{"line":103,"column":0},"end":{"line":103,"column":29}}},"branchMap":{"1":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":17},"end":{"line":20,"column":24}},{"start":{"line":20,"column":28},"end":{"line":20,"column":30}}]}},"code":["","/**"," * VirtualType constructor"," *"," * This is what mongoose uses to define virtual attributes via `Schema.prototype.virtual`."," *"," * ####Example:"," *"," *     var fullname = schema.virtual('fullname');"," *     fullname instanceof mongoose.VirtualType // true"," *"," * @parma {Object} options"," * @api public"," */","","function VirtualType(options, name) {","  this.path = name;","  this.getters = [];","  this.setters = [];","  this.options = options || {};","}","","/**"," * Defines a getter."," *"," * ####Example:"," *"," *     var virtual = schema.virtual('fullname');"," *     virtual.get(function () {"," *       return this.name.first + ' ' + this.name.last;"," *     });"," *"," * @param {Function} fn"," * @return {VirtualType} this"," * @api public"," */","","VirtualType.prototype.get = function(fn) {","  this.getters.push(fn);","  return this;","};","","/**"," * Defines a setter."," *"," * ####Example:"," *"," *     var virtual = schema.virtual('fullname');"," *     virtual.set(function (v) {"," *       var parts = v.split(' ');"," *       this.name.first = parts[0];"," *       this.name.last = parts[1];"," *     });"," *"," * @param {Function} fn"," * @return {VirtualType} this"," * @api public"," */","","VirtualType.prototype.set = function(fn) {","  this.setters.push(fn);","  return this;","};","","/**"," * Applies getters to `value` using optional `scope`."," *"," * @param {Object} value"," * @param {Object} scope"," * @return {any} the value after applying all getters"," * @api public"," */","","VirtualType.prototype.applyGetters = function(value, scope) {","  var v = value;","  for (var l = this.getters.length - 1; l >= 0; l--) {","    v = this.getters[l].call(scope, v, this);","  }","  return v;","};","","/**"," * Applies setters to `value` using optional `scope`."," *"," * @param {Object} value"," * @param {Object} scope"," * @return {any} the value after applying all setters"," * @api public"," */","","VirtualType.prototype.applySetters = function(value, scope) {","  var v = value;","  for (var l = this.setters.length - 1; l >= 0; l--) {","    v = this.setters[l].call(scope, v, this);","  }","  return v;","};","","/*!"," * exports"," */","","module.exports = VirtualType;",""],"l":{"16":1,"17":0,"18":0,"19":0,"20":0,"38":1,"39":0,"40":0,"60":1,"61":0,"62":0,"74":1,"75":0,"76":0,"77":0,"79":0,"91":1,"92":0,"93":0,"94":0,"96":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/utils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":1,"119":7,"120":7,"121":7,"122":56,"123":56,"124":55,"125":7,"126":1,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":1,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":1,"171":0,"172":0,"173":0,"174":1,"175":1,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":1,"189":1,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":1,"210":1,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":1,"242":0,"243":1,"244":1,"245":0,"246":0,"247":0,"248":0,"249":1,"250":1,"251":1,"252":0,"253":1,"254":0,"255":1,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":1,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":1,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":1,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":2,"320":16},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0,0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0],"34":[0,0],"35":[0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[7,0],"55":[55,1],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0,0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0,0,0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":7,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":2},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":27},"end":{"line":23,"column":51}}},"2":{"name":"pluralize","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":117,"column":24}}},"3":{"name":"(anonymous_3)","line":120,"loc":{"start":{"line":120,"column":25},"end":{"line":120,"column":40}}},"4":{"name":"deepEqual","line":141,"loc":{"start":{"line":141,"column":20},"end":{"line":141,"column":45}}},"5":{"name":"clone","line":241,"loc":{"start":{"line":241,"column":16},"end":{"line":241,"column":45}}},"6":{"name":"cloneObject","line":296,"loc":{"start":{"line":296,"column":0},"end":{"line":296,"column":35}}},"7":{"name":"cloneArray","line":339,"loc":{"start":{"line":339,"column":0},"end":{"line":339,"column":34}}},"8":{"name":"(anonymous_8)","line":356,"loc":{"start":{"line":356,"column":18},"end":{"line":356,"column":46}}},"9":{"name":"(anonymous_9)","line":379,"loc":{"start":{"line":379,"column":17},"end":{"line":379,"column":28}}},"10":{"name":"merge","line":391,"loc":{"start":{"line":391,"column":16},"end":{"line":391,"column":50}}},"11":{"name":"toObject","line":437,"loc":{"start":{"line":437,"column":19},"end":{"line":437,"column":42}}},"12":{"name":"(anonymous_12)","line":481,"loc":{"start":{"line":481,"column":19},"end":{"line":481,"column":33}}},"13":{"name":"tick","line":506,"loc":{"start":{"line":506,"column":15},"end":{"line":506,"column":39}}},"14":{"name":"(anonymous_14)","line":510,"loc":{"start":{"line":510,"column":9},"end":{"line":510,"column":20}}},"15":{"name":"(anonymous_15)","line":516,"loc":{"start":{"line":516,"column":23},"end":{"line":516,"column":34}}},"16":{"name":"(anonymous_16)","line":532,"loc":{"start":{"line":532,"column":27},"end":{"line":532,"column":39}}},"17":{"name":"expires","line":550,"loc":{"start":{"line":550,"column":18},"end":{"line":550,"column":43}}},"18":{"name":"PopulateOptions","line":572,"loc":{"start":{"line":572,"column":0},"end":{"line":572,"column":75}}},"19":{"name":"populate","line":594,"loc":{"start":{"line":594,"column":19},"end":{"line":594,"column":87}}},"20":{"name":"(anonymous_20)","line":606,"loc":{"start":{"line":606,"column":22},"end":{"line":606,"column":34}}},"21":{"name":"(anonymous_21)","line":650,"loc":{"start":{"line":650,"column":19},"end":{"line":650,"column":44}}},"22":{"name":"(anonymous_22)","line":662,"loc":{"start":{"line":662,"column":19},"end":{"line":662,"column":49}}},"23":{"name":"vals","line":675,"loc":{"start":{"line":675,"column":22},"end":{"line":675,"column":39}}},"24":{"name":"(anonymous_24)","line":701,"loc":{"start":{"line":701,"column":32},"end":{"line":701,"column":52}}},"25":{"name":"(anonymous_25)","line":711,"loc":{"start":{"line":711,"column":28},"end":{"line":711,"column":42}}},"26":{"name":"flatten","line":732,"loc":{"start":{"line":732,"column":24},"end":{"line":732,"column":59}}},"27":{"name":"(anonymous_27)","line":735,"loc":{"start":{"line":735,"column":14},"end":{"line":735,"column":29}}},"28":{"name":"(anonymous_28)","line":760,"loc":{"start":{"line":760,"column":23},"end":{"line":760,"column":37}}},"29":{"name":"(anonymous_29)","line":794,"loc":{"start":{"line":794,"column":26},"end":{"line":794,"column":41}}},"30":{"name":"(anonymous_30)","line":812,"loc":{"start":{"line":812,"column":26},"end":{"line":812,"column":39}}},"31":{"name":"(anonymous_31)","line":819,"loc":{"start":{"line":819,"column":19},"end":{"line":819,"column":49}}},"32":{"name":"(anonymous_32)","line":833,"loc":{"start":{"line":833,"column":21},"end":{"line":833,"column":43}}},"33":{"name":"(anonymous_33)","line":872,"loc":{"start":{"line":872,"column":15},"end":{"line":872,"column":33}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":29}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":19}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":13}},"10":{"start":{"line":23,"column":0},"end":{"line":35,"column":2}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":26}},"12":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":16}},"14":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":16}},"16":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"17":{"start":{"line":32,"column":4},"end":{"line":32,"column":16}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"19":{"start":{"line":45,"column":0},"end":{"line":68,"column":2}},"20":{"start":{"line":69,"column":0},"end":{"line":69,"column":34}},"21":{"start":{"line":78,"column":0},"end":{"line":106,"column":2}},"22":{"start":{"line":107,"column":0},"end":{"line":107,"column":40}},"23":{"start":{"line":117,"column":0},"end":{"line":128,"column":1}},"24":{"start":{"line":118,"column":2},"end":{"line":118,"column":12}},"25":{"start":{"line":119,"column":2},"end":{"line":126,"column":3}},"26":{"start":{"line":120,"column":4},"end":{"line":122,"column":7}},"27":{"start":{"line":121,"column":6},"end":{"line":121,"column":32}},"28":{"start":{"line":123,"column":4},"end":{"line":125,"column":5}},"29":{"start":{"line":124,"column":6},"end":{"line":124,"column":51}},"30":{"start":{"line":127,"column":2},"end":{"line":127,"column":13}},"31":{"start":{"line":141,"column":0},"end":{"line":226,"column":2}},"32":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"33":{"start":{"line":143,"column":4},"end":{"line":143,"column":16}},"34":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"35":{"start":{"line":147,"column":4},"end":{"line":147,"column":39}},"36":{"start":{"line":150,"column":2},"end":{"line":153,"column":3}},"37":{"start":{"line":152,"column":4},"end":{"line":152,"column":41}},"38":{"start":{"line":155,"column":2},"end":{"line":160,"column":3}},"39":{"start":{"line":156,"column":4},"end":{"line":159,"column":30}},"40":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"41":{"start":{"line":163,"column":4},"end":{"line":163,"column":18}},"42":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"43":{"start":{"line":167,"column":4},"end":{"line":167,"column":17}},"44":{"start":{"line":170,"column":2},"end":{"line":172,"column":3}},"45":{"start":{"line":171,"column":4},"end":{"line":171,"column":17}},"46":{"start":{"line":175,"column":2},"end":{"line":177,"column":3}},"47":{"start":{"line":176,"column":4},"end":{"line":176,"column":39}},"48":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"49":{"start":{"line":180,"column":4},"end":{"line":180,"column":41}},"50":{"start":{"line":183,"column":2},"end":{"line":185,"column":3}},"51":{"start":{"line":184,"column":4},"end":{"line":184,"column":21}},"52":{"start":{"line":186,"column":2},"end":{"line":188,"column":3}},"53":{"start":{"line":187,"column":4},"end":{"line":187,"column":21}},"54":{"start":{"line":190,"column":2},"end":{"line":197,"column":3}},"55":{"start":{"line":191,"column":4},"end":{"line":193,"column":15}},"56":{"start":{"line":196,"column":4},"end":{"line":196,"column":17}},"57":{"start":{"line":201,"column":2},"end":{"line":203,"column":3}},"58":{"start":{"line":202,"column":4},"end":{"line":202,"column":17}},"59":{"start":{"line":206,"column":2},"end":{"line":206,"column":12}},"60":{"start":{"line":207,"column":2},"end":{"line":207,"column":12}},"61":{"start":{"line":210,"column":2},"end":{"line":214,"column":3}},"62":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"63":{"start":{"line":212,"column":6},"end":{"line":212,"column":19}},"64":{"start":{"line":218,"column":2},"end":{"line":223,"column":3}},"65":{"start":{"line":219,"column":4},"end":{"line":219,"column":16}},"66":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"67":{"start":{"line":221,"column":6},"end":{"line":221,"column":19}},"68":{"start":{"line":225,"column":2},"end":{"line":225,"column":14}},"69":{"start":{"line":241,"column":0},"end":{"line":289,"column":2}},"70":{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},"71":{"start":{"line":243,"column":4},"end":{"line":243,"column":15}},"72":{"start":{"line":246,"column":2},"end":{"line":248,"column":3}},"73":{"start":{"line":247,"column":4},"end":{"line":247,"column":36}},"74":{"start":{"line":250,"column":2},"end":{"line":255,"column":3}},"75":{"start":{"line":251,"column":4},"end":{"line":253,"column":5}},"76":{"start":{"line":252,"column":6},"end":{"line":252,"column":33}},"77":{"start":{"line":254,"column":4},"end":{"line":254,"column":33}},"78":{"start":{"line":257,"column":2},"end":{"line":269,"column":3}},"79":{"start":{"line":258,"column":4},"end":{"line":268,"column":5}},"80":{"start":{"line":260,"column":8},"end":{"line":260,"column":41}},"81":{"start":{"line":262,"column":8},"end":{"line":262,"column":41}},"82":{"start":{"line":264,"column":8},"end":{"line":264,"column":32}},"83":{"start":{"line":267,"column":8},"end":{"line":267,"column":14}},"84":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"85":{"start":{"line":272,"column":4},"end":{"line":272,"column":32}},"86":{"start":{"line":274,"column":2},"end":{"line":279,"column":3}},"87":{"start":{"line":275,"column":4},"end":{"line":277,"column":5}},"88":{"start":{"line":276,"column":6},"end":{"line":276,"column":26}},"89":{"start":{"line":278,"column":4},"end":{"line":278,"column":46}},"90":{"start":{"line":281,"column":2},"end":{"line":284,"column":3}},"91":{"start":{"line":283,"column":4},"end":{"line":283,"column":37}},"92":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"93":{"start":{"line":287,"column":4},"end":{"line":287,"column":25}},"94":{"start":{"line":290,"column":0},"end":{"line":290,"column":26}},"95":{"start":{"line":296,"column":0},"end":{"line":337,"column":1}},"96":{"start":{"line":297,"column":2},"end":{"line":304,"column":8}},"97":{"start":{"line":306,"column":2},"end":{"line":332,"column":3}},"98":{"start":{"line":307,"column":4},"end":{"line":314,"column":5}},"99":{"start":{"line":308,"column":6},"end":{"line":308,"column":35}},"100":{"start":{"line":310,"column":6},"end":{"line":313,"column":7}},"101":{"start":{"line":311,"column":8},"end":{"line":311,"column":36}},"102":{"start":{"line":312,"column":8},"end":{"line":312,"column":21}},"103":{"start":{"line":318,"column":4},"end":{"line":318,"column":28}},"104":{"start":{"line":319,"column":4},"end":{"line":319,"column":20}},"105":{"start":{"line":321,"column":4},"end":{"line":331,"column":5}},"106":{"start":{"line":322,"column":6},"end":{"line":322,"column":18}},"107":{"start":{"line":323,"column":6},"end":{"line":323,"column":35}},"108":{"start":{"line":325,"column":6},"end":{"line":330,"column":7}},"109":{"start":{"line":326,"column":8},"end":{"line":328,"column":9}},"110":{"start":{"line":327,"column":10},"end":{"line":327,"column":25}},"111":{"start":{"line":329,"column":8},"end":{"line":329,"column":21}},"112":{"start":{"line":334,"column":2},"end":{"line":336,"column":12}},"113":{"start":{"line":339,"column":0},"end":{"line":345,"column":1}},"114":{"start":{"line":340,"column":2},"end":{"line":340,"column":15}},"115":{"start":{"line":341,"column":2},"end":{"line":343,"column":3}},"116":{"start":{"line":342,"column":4},"end":{"line":342,"column":37}},"117":{"start":{"line":344,"column":2},"end":{"line":344,"column":13}},"118":{"start":{"line":356,"column":0},"end":{"line":371,"column":2}},"119":{"start":{"line":357,"column":2},"end":{"line":359,"column":8}},"120":{"start":{"line":361,"column":2},"end":{"line":361,"column":26}},"121":{"start":{"line":363,"column":2},"end":{"line":368,"column":3}},"122":{"start":{"line":364,"column":4},"end":{"line":364,"column":16}},"123":{"start":{"line":365,"column":4},"end":{"line":367,"column":5}},"124":{"start":{"line":366,"column":6},"end":{"line":366,"column":31}},"125":{"start":{"line":370,"column":2},"end":{"line":370,"column":17}},"126":{"start":{"line":379,"column":0},"end":{"line":381,"column":2}},"127":{"start":{"line":380,"column":2},"end":{"line":380,"column":44}},"128":{"start":{"line":391,"column":0},"end":{"line":421,"column":2}},"129":{"start":{"line":392,"column":2},"end":{"line":392,"column":26}},"130":{"start":{"line":393,"column":2},"end":{"line":393,"column":31}},"131":{"start":{"line":394,"column":2},"end":{"line":394,"column":12}},"132":{"start":{"line":395,"column":2},"end":{"line":395,"column":24}},"133":{"start":{"line":396,"column":2},"end":{"line":396,"column":10}},"134":{"start":{"line":398,"column":2},"end":{"line":420,"column":3}},"135":{"start":{"line":399,"column":4},"end":{"line":408,"column":5}},"136":{"start":{"line":400,"column":6},"end":{"line":400,"column":22}},"137":{"start":{"line":401,"column":6},"end":{"line":407,"column":7}},"138":{"start":{"line":402,"column":8},"end":{"line":402,"column":28}},"139":{"start":{"line":403,"column":13},"end":{"line":407,"column":7}},"140":{"start":{"line":404,"column":8},"end":{"line":404,"column":43}},"141":{"start":{"line":405,"column":13},"end":{"line":407,"column":7}},"142":{"start":{"line":406,"column":8},"end":{"line":406,"column":28}},"143":{"start":{"line":410,"column":4},"end":{"line":419,"column":5}},"144":{"start":{"line":411,"column":6},"end":{"line":411,"column":22}},"145":{"start":{"line":412,"column":6},"end":{"line":418,"column":7}},"146":{"start":{"line":413,"column":8},"end":{"line":413,"column":28}},"147":{"start":{"line":414,"column":13},"end":{"line":418,"column":7}},"148":{"start":{"line":415,"column":8},"end":{"line":415,"column":43}},"149":{"start":{"line":416,"column":13},"end":{"line":418,"column":7}},"150":{"start":{"line":417,"column":8},"end":{"line":417,"column":28}},"151":{"start":{"line":427,"column":0},"end":{"line":427,"column":41}},"152":{"start":{"line":437,"column":0},"end":{"line":471,"column":2}},"153":{"start":{"line":438,"column":2},"end":{"line":438,"column":49}},"154":{"start":{"line":439,"column":2},"end":{"line":439,"column":10}},"155":{"start":{"line":441,"column":2},"end":{"line":443,"column":3}},"156":{"start":{"line":442,"column":4},"end":{"line":442,"column":15}},"157":{"start":{"line":445,"column":2},"end":{"line":447,"column":3}},"158":{"start":{"line":446,"column":4},"end":{"line":446,"column":26}},"159":{"start":{"line":449,"column":2},"end":{"line":457,"column":3}},"160":{"start":{"line":450,"column":4},"end":{"line":450,"column":13}},"161":{"start":{"line":452,"column":4},"end":{"line":454,"column":5}},"162":{"start":{"line":453,"column":6},"end":{"line":453,"column":33}},"163":{"start":{"line":456,"column":4},"end":{"line":456,"column":15}},"164":{"start":{"line":459,"column":2},"end":{"line":468,"column":3}},"165":{"start":{"line":461,"column":4},"end":{"line":461,"column":13}},"166":{"start":{"line":463,"column":4},"end":{"line":465,"column":5}},"167":{"start":{"line":464,"column":6},"end":{"line":464,"column":32}},"168":{"start":{"line":467,"column":4},"end":{"line":467,"column":15}},"169":{"start":{"line":470,"column":2},"end":{"line":470,"column":13}},"170":{"start":{"line":481,"column":0},"end":{"line":486,"column":2}},"171":{"start":{"line":482,"column":2},"end":{"line":484,"column":3}},"172":{"start":{"line":483,"column":4},"end":{"line":483,"column":16}},"173":{"start":{"line":485,"column":2},"end":{"line":485,"column":50}},"174":{"start":{"line":493,"column":0},"end":{"line":493,"column":22}},"175":{"start":{"line":506,"column":0},"end":{"line":521,"column":2}},"176":{"start":{"line":507,"column":2},"end":{"line":509,"column":3}},"177":{"start":{"line":508,"column":4},"end":{"line":508,"column":11}},"178":{"start":{"line":510,"column":2},"end":{"line":520,"column":4}},"179":{"start":{"line":511,"column":4},"end":{"line":519,"column":5}},"180":{"start":{"line":512,"column":6},"end":{"line":512,"column":38}},"181":{"start":{"line":516,"column":6},"end":{"line":518,"column":9}},"182":{"start":{"line":517,"column":8},"end":{"line":517,"column":18}},"183":{"start":{"line":532,"column":0},"end":{"line":540,"column":2}},"184":{"start":{"line":533,"column":2},"end":{"line":533,"column":49}},"185":{"start":{"line":534,"column":2},"end":{"line":534,"column":62}},"186":{"start":{"line":535,"column":2},"end":{"line":535,"column":65}},"187":{"start":{"line":537,"column":2},"end":{"line":539,"column":32}},"188":{"start":{"line":541,"column":0},"end":{"line":541,"column":48}},"189":{"start":{"line":550,"column":0},"end":{"line":566,"column":2}},"190":{"start":{"line":551,"column":2},"end":{"line":553,"column":3}},"191":{"start":{"line":552,"column":4},"end":{"line":552,"column":11}},"192":{"start":{"line":554,"column":2},"end":{"line":556,"column":3}},"193":{"start":{"line":555,"column":4},"end":{"line":555,"column":11}},"194":{"start":{"line":558,"column":2},"end":{"line":558,"column":11}},"195":{"start":{"line":559,"column":2},"end":{"line":563,"column":3}},"196":{"start":{"line":560,"column":4},"end":{"line":560,"column":26}},"197":{"start":{"line":562,"column":4},"end":{"line":562,"column":49}},"198":{"start":{"line":564,"column":2},"end":{"line":564,"column":35}},"199":{"start":{"line":565,"column":2},"end":{"line":565,"column":24}},"200":{"start":{"line":572,"column":0},"end":{"line":582,"column":1}},"201":{"start":{"line":573,"column":2},"end":{"line":573,"column":19}},"202":{"start":{"line":574,"column":2},"end":{"line":574,"column":21}},"203":{"start":{"line":575,"column":2},"end":{"line":575,"column":23}},"204":{"start":{"line":576,"column":2},"end":{"line":576,"column":25}},"205":{"start":{"line":577,"column":2},"end":{"line":577,"column":21}},"206":{"start":{"line":578,"column":2},"end":{"line":580,"column":3}},"207":{"start":{"line":579,"column":4},"end":{"line":579,"column":32}},"208":{"start":{"line":581,"column":2},"end":{"line":581,"column":18}},"209":{"start":{"line":585,"column":0},"end":{"line":585,"column":47}},"210":{"start":{"line":588,"column":0},"end":{"line":588,"column":42}},"211":{"start":{"line":594,"column":0},"end":{"line":641,"column":2}},"212":{"start":{"line":600,"column":2},"end":{"line":623,"column":3}},"213":{"start":{"line":601,"column":4},"end":{"line":603,"column":5}},"214":{"start":{"line":602,"column":6},"end":{"line":602,"column":20}},"215":{"start":{"line":605,"column":4},"end":{"line":609,"column":5}},"216":{"start":{"line":606,"column":6},"end":{"line":608,"column":9}},"217":{"start":{"line":607,"column":8},"end":{"line":607,"column":38}},"218":{"start":{"line":611,"column":4},"end":{"line":618,"column":5}},"219":{"start":{"line":612,"column":6},"end":{"line":612,"column":25}},"220":{"start":{"line":613,"column":6},"end":{"line":613,"column":29}},"221":{"start":{"line":614,"column":6},"end":{"line":614,"column":27}},"222":{"start":{"line":615,"column":6},"end":{"line":615,"column":25}},"223":{"start":{"line":616,"column":6},"end":{"line":616,"column":34}},"224":{"start":{"line":617,"column":6},"end":{"line":617,"column":23}},"225":{"start":{"line":619,"column":9},"end":{"line":623,"column":3}},"226":{"start":{"line":620,"column":4},"end":{"line":620,"column":20}},"227":{"start":{"line":621,"column":4},"end":{"line":621,"column":18}},"228":{"start":{"line":622,"column":4},"end":{"line":622,"column":22}},"229":{"start":{"line":625,"column":2},"end":{"line":627,"column":3}},"230":{"start":{"line":626,"column":4},"end":{"line":626,"column":107}},"231":{"start":{"line":629,"column":2},"end":{"line":631,"column":3}},"232":{"start":{"line":630,"column":4},"end":{"line":630,"column":48}},"233":{"start":{"line":633,"column":2},"end":{"line":633,"column":15}},"234":{"start":{"line":634,"column":2},"end":{"line":634,"column":30}},"235":{"start":{"line":635,"column":2},"end":{"line":635,"column":61}},"236":{"start":{"line":636,"column":2},"end":{"line":638,"column":3}},"237":{"start":{"line":637,"column":4},"end":{"line":637,"column":88}},"238":{"start":{"line":640,"column":2},"end":{"line":640,"column":13}},"239":{"start":{"line":650,"column":0},"end":{"line":652,"column":2}},"240":{"start":{"line":651,"column":2},"end":{"line":651,"column":43}},"241":{"start":{"line":662,"column":0},"end":{"line":664,"column":2}},"242":{"start":{"line":663,"column":2},"end":{"line":663,"column":41}},"243":{"start":{"line":674,"column":0},"end":{"line":674,"column":20}},"244":{"start":{"line":675,"column":0},"end":{"line":685,"column":2}},"245":{"start":{"line":676,"column":2},"end":{"line":678,"column":15}},"246":{"start":{"line":680,"column":2},"end":{"line":682,"column":3}},"247":{"start":{"line":681,"column":4},"end":{"line":681,"column":25}},"248":{"start":{"line":684,"column":2},"end":{"line":684,"column":13}},"249":{"start":{"line":691,"column":0},"end":{"line":691,"column":45}},"250":{"start":{"line":700,"column":0},"end":{"line":700,"column":42}},"251":{"start":{"line":701,"column":0},"end":{"line":703,"column":2}},"252":{"start":{"line":702,"column":2},"end":{"line":702,"column":29}},"253":{"start":{"line":711,"column":0},"end":{"line":713,"column":2}},"254":{"start":{"line":712,"column":2},"end":{"line":712,"column":43}},"255":{"start":{"line":719,"column":0},"end":{"line":719,"column":19}},"256":{"start":{"line":732,"column":0},"end":{"line":746,"column":2}},"257":{"start":{"line":733,"column":2},"end":{"line":733,"column":20}},"258":{"start":{"line":735,"column":2},"end":{"line":743,"column":5}},"259":{"start":{"line":736,"column":4},"end":{"line":742,"column":5}},"260":{"start":{"line":737,"column":6},"end":{"line":737,"column":33}},"261":{"start":{"line":739,"column":6},"end":{"line":741,"column":7}},"262":{"start":{"line":740,"column":8},"end":{"line":740,"column":23}},"263":{"start":{"line":745,"column":2},"end":{"line":745,"column":13}},"264":{"start":{"line":760,"column":0},"end":{"line":784,"column":2}},"265":{"start":{"line":761,"column":2},"end":{"line":761,"column":22}},"266":{"start":{"line":762,"column":2},"end":{"line":762,"column":15}},"267":{"start":{"line":763,"column":2},"end":{"line":763,"column":15}},"268":{"start":{"line":764,"column":2},"end":{"line":764,"column":26}},"269":{"start":{"line":765,"column":2},"end":{"line":781,"column":3}},"270":{"start":{"line":766,"column":4},"end":{"line":780,"column":5}},"271":{"start":{"line":767,"column":6},"end":{"line":769,"column":7}},"272":{"start":{"line":768,"column":8},"end":{"line":768,"column":17}},"273":{"start":{"line":770,"column":6},"end":{"line":770,"column":23}},"274":{"start":{"line":771,"column":6},"end":{"line":771,"column":32}},"275":{"start":{"line":772,"column":11},"end":{"line":780,"column":5}},"276":{"start":{"line":773,"column":6},"end":{"line":775,"column":7}},"277":{"start":{"line":774,"column":8},"end":{"line":774,"column":17}},"278":{"start":{"line":776,"column":6},"end":{"line":776,"column":23}},"279":{"start":{"line":777,"column":6},"end":{"line":777,"column":36}},"280":{"start":{"line":779,"column":6},"end":{"line":779,"column":23}},"281":{"start":{"line":783,"column":2},"end":{"line":783,"column":13}},"282":{"start":{"line":793,"column":0},"end":{"line":793,"column":20}},"283":{"start":{"line":794,"column":0},"end":{"line":810,"column":2}},"284":{"start":{"line":795,"column":2},"end":{"line":797,"column":3}},"285":{"start":{"line":796,"column":4},"end":{"line":796,"column":17}},"286":{"start":{"line":798,"column":2},"end":{"line":800,"column":3}},"287":{"start":{"line":799,"column":4},"end":{"line":799,"column":17}},"288":{"start":{"line":801,"column":2},"end":{"line":803,"column":3}},"289":{"start":{"line":802,"column":4},"end":{"line":802,"column":17}},"290":{"start":{"line":804,"column":2},"end":{"line":808,"column":3}},"291":{"start":{"line":805,"column":4},"end":{"line":807,"column":5}},"292":{"start":{"line":806,"column":6},"end":{"line":806,"column":19}},"293":{"start":{"line":809,"column":2},"end":{"line":809,"column":14}},"294":{"start":{"line":812,"column":0},"end":{"line":817,"column":2}},"295":{"start":{"line":813,"column":2},"end":{"line":815,"column":3}},"296":{"start":{"line":814,"column":4},"end":{"line":814,"column":19}},"297":{"start":{"line":816,"column":2},"end":{"line":816,"column":72}},"298":{"start":{"line":819,"column":0},"end":{"line":823,"column":2}},"299":{"start":{"line":820,"column":2},"end":{"line":822,"column":3}},"300":{"start":{"line":821,"column":4},"end":{"line":821,"column":35}},"301":{"start":{"line":833,"column":0},"end":{"line":862,"column":2}},"302":{"start":{"line":834,"column":2},"end":{"line":834,"column":34}},"303":{"start":{"line":835,"column":2},"end":{"line":835,"column":24}},"304":{"start":{"line":836,"column":2},"end":{"line":836,"column":12}},"305":{"start":{"line":837,"column":2},"end":{"line":837,"column":10}},"306":{"start":{"line":839,"column":2},"end":{"line":861,"column":3}},"307":{"start":{"line":840,"column":4},"end":{"line":840,"column":20}},"308":{"start":{"line":841,"column":4},"end":{"line":860,"column":5}},"309":{"start":{"line":844,"column":6},"end":{"line":844,"column":65}},"310":{"start":{"line":846,"column":6},"end":{"line":859,"column":7}},"311":{"start":{"line":847,"column":8},"end":{"line":847,"column":31}},"312":{"start":{"line":848,"column":8},"end":{"line":850,"column":9}},"313":{"start":{"line":849,"column":10},"end":{"line":849,"column":68}},"314":{"start":{"line":851,"column":8},"end":{"line":853,"column":9}},"315":{"start":{"line":852,"column":10},"end":{"line":852,"column":32}},"316":{"start":{"line":854,"column":8},"end":{"line":854,"column":41}},"317":{"start":{"line":858,"column":8},"end":{"line":858,"column":67}},"318":{"start":{"line":872,"column":0},"end":{"line":876,"column":2}},"319":{"start":{"line":873,"column":2},"end":{"line":875,"column":3}},"320":{"start":{"line":874,"column":4},"end":{"line":874,"column":15}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":12},"end":{"line":24,"column":19}},{"start":{"line":24,"column":23},"end":{"line":24,"column":25}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"6":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":4},"end":{"line":123,"column":4}},{"start":{"line":123,"column":4},"end":{"line":123,"column":4}}]},"7":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"8":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"9":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":23}},{"start":{"line":146,"column":27},"end":{"line":146,"column":44}}]},"10":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"11":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":7},"end":{"line":150,"column":28}},{"start":{"line":150,"column":32},"end":{"line":150,"column":53}},{"start":{"line":151,"column":7},"end":{"line":151,"column":27}},{"start":{"line":151,"column":31},"end":{"line":151,"column":51}}]},"12":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"13":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":25}},{"start":{"line":155,"column":29},"end":{"line":155,"column":48}}]},"14":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":11},"end":{"line":156,"column":32}},{"start":{"line":157,"column":8},"end":{"line":157,"column":37}},{"start":{"line":158,"column":8},"end":{"line":158,"column":35}},{"start":{"line":159,"column":8},"end":{"line":159,"column":29}}]},"15":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"16":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":27}},{"start":{"line":162,"column":31},"end":{"line":162,"column":52}}]},"17":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"18":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":6},"end":{"line":166,"column":16}},{"start":{"line":166,"column":20},"end":{"line":166,"column":30}},{"start":{"line":166,"column":34},"end":{"line":166,"column":49}},{"start":{"line":166,"column":53},"end":{"line":166,"column":68}}]},"19":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"20":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":2},"end":{"line":175,"column":2}},{"start":{"line":175,"column":2},"end":{"line":175,"column":2}}]},"21":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":25}},{"start":{"line":175,"column":29},"end":{"line":175,"column":48}}]},"22":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"23":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"24":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":2},"end":{"line":186,"column":2}},{"start":{"line":186,"column":2},"end":{"line":186,"column":2}}]},"25":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":2},"end":{"line":201,"column":2}},{"start":{"line":201,"column":2},"end":{"line":201,"column":2}}]},"26":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"27":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"28":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"29":{"line":242,"type":"binary-expr","locations":[{"start":{"line":242,"column":6},"end":{"line":242,"column":23}},{"start":{"line":242,"column":27},"end":{"line":242,"column":39}}]},"30":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"31":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"32":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":4},"end":{"line":251,"column":4}},{"start":{"line":251,"column":4},"end":{"line":251,"column":4}}]},"33":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":15}},{"start":{"line":251,"column":19},"end":{"line":251,"column":31}},{"start":{"line":251,"column":35},"end":{"line":251,"column":67}}]},"34":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":2},"end":{"line":257,"column":2}},{"start":{"line":257,"column":2},"end":{"line":257,"column":2}}]},"35":{"line":258,"type":"switch","locations":[{"start":{"line":259,"column":6},"end":{"line":260,"column":41}},{"start":{"line":261,"column":6},"end":{"line":262,"column":41}},{"start":{"line":263,"column":6},"end":{"line":264,"column":32}},{"start":{"line":265,"column":6},"end":{"line":267,"column":14}}]},"36":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"37":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"38":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"39":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":8},"end":{"line":275,"column":15}},{"start":{"line":275,"column":19},"end":{"line":275,"column":42}}]},"40":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"41":{"line":281,"type":"binary-expr","locations":[{"start":{"line":281,"column":6},"end":{"line":281,"column":22}},{"start":{"line":281,"column":26},"end":{"line":281,"column":47}}]},"42":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]},"43":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":23},"end":{"line":297,"column":30}},{"start":{"line":297,"column":34},"end":{"line":297,"column":56}}]},"44":{"line":298,"type":"binary-expr","locations":[{"start":{"line":298,"column":17},"end":{"line":298,"column":24}},{"start":{"line":298,"column":28},"end":{"line":298,"column":44}}]},"45":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":2},"end":{"line":306,"column":2}},{"start":{"line":306,"column":2},"end":{"line":306,"column":2}}]},"46":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":6},"end":{"line":310,"column":6}},{"start":{"line":310,"column":6},"end":{"line":310,"column":6}}]},"47":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":10},"end":{"line":310,"column":19}},{"start":{"line":310,"column":24},"end":{"line":310,"column":50}}]},"48":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":8},"end":{"line":311,"column":15}},{"start":{"line":311,"column":20},"end":{"line":311,"column":34}}]},"49":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"50":{"line":325,"type":"binary-expr","locations":[{"start":{"line":325,"column":10},"end":{"line":325,"column":19}},{"start":{"line":325,"column":24},"end":{"line":325,"column":50}}]},"51":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":8}},{"start":{"line":326,"column":8},"end":{"line":326,"column":8}}]},"52":{"line":334,"type":"cond-expr","locations":[{"start":{"line":335,"column":8},"end":{"line":335,"column":22}},{"start":{"line":336,"column":8},"end":{"line":336,"column":11}}]},"53":{"line":335,"type":"binary-expr","locations":[{"start":{"line":335,"column":8},"end":{"line":335,"column":15}},{"start":{"line":335,"column":19},"end":{"line":335,"column":22}}]},"54":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":12},"end":{"line":361,"column":19}},{"start":{"line":361,"column":23},"end":{"line":361,"column":25}}]},"55":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"56":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":12},"end":{"line":392,"column":19}},{"start":{"line":392,"column":23},"end":{"line":392,"column":25}}]},"57":{"line":398,"type":"if","locations":[{"start":{"line":398,"column":2},"end":{"line":398,"column":2}},{"start":{"line":398,"column":2},"end":{"line":398,"column":2}}]},"58":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"59":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":13},"end":{"line":403,"column":13}},{"start":{"line":403,"column":13},"end":{"line":403,"column":13}}]},"60":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":13},"end":{"line":405,"column":13}},{"start":{"line":405,"column":13},"end":{"line":405,"column":13}}]},"61":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"62":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":13},"end":{"line":414,"column":13}},{"start":{"line":414,"column":13},"end":{"line":414,"column":13}}]},"63":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":13},"end":{"line":416,"column":13}},{"start":{"line":416,"column":13},"end":{"line":416,"column":13}}]},"64":{"line":438,"type":"binary-expr","locations":[{"start":{"line":438,"column":2},"end":{"line":438,"column":10}},{"start":{"line":438,"column":15},"end":{"line":438,"column":47}}]},"65":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"66":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":2},"end":{"line":445,"column":2}},{"start":{"line":445,"column":2},"end":{"line":445,"column":2}}]},"67":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":2},"end":{"line":449,"column":2}},{"start":{"line":449,"column":2},"end":{"line":449,"column":2}}]},"68":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":2},"end":{"line":459,"column":2}},{"start":{"line":459,"column":2},"end":{"line":459,"column":2}}]},"69":{"line":459,"type":"binary-expr","locations":[{"start":{"line":459,"column":7},"end":{"line":459,"column":22}},{"start":{"line":459,"column":26},"end":{"line":459,"column":79}},{"start":{"line":460,"column":7},"end":{"line":460,"column":23}},{"start":{"line":460,"column":27},"end":{"line":460,"column":48}}]},"70":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":2},"end":{"line":482,"column":2}},{"start":{"line":482,"column":2},"end":{"line":482,"column":2}}]},"71":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":2},"end":{"line":507,"column":2}},{"start":{"line":507,"column":2},"end":{"line":507,"column":2}}]},"72":{"line":533,"type":"binary-expr","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":10}},{"start":{"line":533,"column":15},"end":{"line":533,"column":47}}]},"73":{"line":534,"type":"binary-expr","locations":[{"start":{"line":534,"column":2},"end":{"line":534,"column":15}},{"start":{"line":534,"column":20},"end":{"line":534,"column":60}}]},"74":{"line":535,"type":"binary-expr","locations":[{"start":{"line":535,"column":2},"end":{"line":535,"column":16}},{"start":{"line":535,"column":21},"end":{"line":535,"column":63}}]},"75":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":9},"end":{"line":537,"column":30}},{"start":{"line":538,"column":7},"end":{"line":538,"column":8}},{"start":{"line":538,"column":12},"end":{"line":538,"column":29}},{"start":{"line":539,"column":7},"end":{"line":539,"column":8}},{"start":{"line":539,"column":12},"end":{"line":539,"column":30}}]},"76":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":2},"end":{"line":551,"column":2}},{"start":{"line":551,"column":2},"end":{"line":551,"column":2}}]},"77":{"line":551,"type":"binary-expr","locations":[{"start":{"line":551,"column":8},"end":{"line":551,"column":14}},{"start":{"line":551,"column":18},"end":{"line":551,"column":54}}]},"78":{"line":554,"type":"if","locations":[{"start":{"line":554,"column":2},"end":{"line":554,"column":2}},{"start":{"line":554,"column":2},"end":{"line":554,"column":2}}]},"79":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":2},"end":{"line":559,"column":2}},{"start":{"line":559,"column":2},"end":{"line":559,"column":2}}]},"80":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":2},"end":{"line":578,"column":2}},{"start":{"line":578,"column":2},"end":{"line":578,"column":2}}]},"81":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":2},"end":{"line":600,"column":2}},{"start":{"line":600,"column":2},"end":{"line":600,"column":2}}]},"82":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":4},"end":{"line":601,"column":4}},{"start":{"line":601,"column":4},"end":{"line":601,"column":4}}]},"83":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":4},"end":{"line":605,"column":4}},{"start":{"line":605,"column":4},"end":{"line":605,"column":4}}]},"84":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":4},"end":{"line":611,"column":4}},{"start":{"line":611,"column":4},"end":{"line":611,"column":4}}]},"85":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":9},"end":{"line":619,"column":9}},{"start":{"line":619,"column":9},"end":{"line":619,"column":9}}]},"86":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":13},"end":{"line":619,"column":38}},{"start":{"line":619,"column":42},"end":{"line":619,"column":69}}]},"87":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":2},"end":{"line":625,"column":2}},{"start":{"line":625,"column":2},"end":{"line":625,"column":2}}]},"88":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":2},"end":{"line":629,"column":2}},{"start":{"line":629,"column":2},"end":{"line":629,"column":2}}]},"89":{"line":712,"type":"binary-expr","locations":[{"start":{"line":712,"column":9},"end":{"line":712,"column":21}},{"start":{"line":712,"column":25},"end":{"line":712,"column":42}}]},"90":{"line":733,"type":"binary-expr","locations":[{"start":{"line":733,"column":2},"end":{"line":733,"column":5}},{"start":{"line":733,"column":10},"end":{"line":733,"column":18}}]},"91":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":4},"end":{"line":736,"column":4}},{"start":{"line":736,"column":4},"end":{"line":736,"column":4}}]},"92":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":6},"end":{"line":739,"column":6}},{"start":{"line":739,"column":6},"end":{"line":739,"column":6}}]},"93":{"line":739,"type":"binary-expr","locations":[{"start":{"line":739,"column":10},"end":{"line":739,"column":17}},{"start":{"line":739,"column":21},"end":{"line":739,"column":33}}]},"94":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"95":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":8},"end":{"line":766,"column":34}},{"start":{"line":766,"column":38},"end":{"line":766,"column":64}}]},"96":{"line":767,"type":"if","locations":[{"start":{"line":767,"column":6},"end":{"line":767,"column":6}},{"start":{"line":767,"column":6},"end":{"line":767,"column":6}}]},"97":{"line":772,"type":"if","locations":[{"start":{"line":772,"column":11},"end":{"line":772,"column":11}},{"start":{"line":772,"column":11},"end":{"line":772,"column":11}}]},"98":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":6},"end":{"line":773,"column":6}},{"start":{"line":773,"column":6},"end":{"line":773,"column":6}}]},"99":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":2},"end":{"line":795,"column":2}},{"start":{"line":795,"column":2},"end":{"line":795,"column":2}}]},"100":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":2},"end":{"line":798,"column":2}},{"start":{"line":798,"column":2},"end":{"line":798,"column":2}}]},"101":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":2},"end":{"line":801,"column":2}},{"start":{"line":801,"column":2},"end":{"line":801,"column":2}}]},"102":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":4},"end":{"line":805,"column":4}},{"start":{"line":805,"column":4},"end":{"line":805,"column":4}}]},"103":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":2},"end":{"line":813,"column":2}},{"start":{"line":813,"column":2},"end":{"line":813,"column":2}}]},"104":{"line":816,"type":"binary-expr","locations":[{"start":{"line":816,"column":10},"end":{"line":816,"column":61}},{"start":{"line":816,"column":65},"end":{"line":816,"column":67}}]},"105":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":4},"end":{"line":841,"column":4}},{"start":{"line":841,"column":4},"end":{"line":841,"column":4}}]},"106":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":6},"end":{"line":846,"column":6}},{"start":{"line":846,"column":6},"end":{"line":846,"column":6}}]},"107":{"line":848,"type":"if","locations":[{"start":{"line":848,"column":8},"end":{"line":848,"column":8}},{"start":{"line":848,"column":8},"end":{"line":848,"column":8}}]},"108":{"line":848,"type":"binary-expr","locations":[{"start":{"line":848,"column":12},"end":{"line":848,"column":42}},{"start":{"line":848,"column":46},"end":{"line":848,"column":76}}]},"109":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":8},"end":{"line":851,"column":8}},{"start":{"line":851,"column":8},"end":{"line":851,"column":8}}]}},"code":["/*!"," * Module dependencies."," */","","var Decimal = require('./types/decimal128');","var ObjectId = require('./types/objectid');","var cloneRegExp = require('regexp-clone');","var sliced = require('sliced');","var mpath = require('mpath');","var ms = require('ms');","var MongooseBuffer;","var MongooseArray;","var Document;","","/*!"," * Produces a collection name from model `name`."," *"," * @param {String} name a model name"," * @return {String} a collection name"," * @api private"," */","","exports.toCollectionName = function(name, options) {","  options = options || {};","  if (name === 'system.profile') {","    return name;","  }","  if (name === 'system.indexes') {","    return name;","  }","  if (options.pluralization === false) {","    return name;","  }","  return pluralize(name.toLowerCase());","};","","/**"," * Pluralization rules."," *"," * These rules are applied while processing the argument to `toCollectionName`."," *"," * @deprecated remove in 4.x gh-1350"," */","","exports.pluralization = [","  [/(m)an$/gi, '$1en'],","  [/(pe)rson$/gi, '$1ople'],","  [/(child)$/gi, '$1ren'],","  [/^(ox)$/gi, '$1en'],","  [/(ax|test)is$/gi, '$1es'],","  [/(octop|vir)us$/gi, '$1i'],","  [/(alias|status)$/gi, '$1es'],","  [/(bu)s$/gi, '$1ses'],","  [/(buffal|tomat|potat)o$/gi, '$1oes'],","  [/([ti])um$/gi, '$1a'],","  [/sis$/gi, 'ses'],","  [/(?:([^f])fe|([lr])f)$/gi, '$1$2ves'],","  [/(hive)$/gi, '$1s'],","  [/([^aeiouy]|qu)y$/gi, '$1ies'],","  [/(x|ch|ss|sh)$/gi, '$1es'],","  [/(matr|vert|ind)ix|ex$/gi, '$1ices'],","  [/([m|l])ouse$/gi, '$1ice'],","  [/(kn|w|l)ife$/gi, '$1ives'],","  [/(quiz)$/gi, '$1zes'],","  [/s$/gi, 's'],","  [/([^a-z])$/, '$1'],","  [/$/gi, 's']","];","var rules = exports.pluralization;","","/**"," * Uncountable words."," *"," * These words are applied while processing the argument to `toCollectionName`."," * @api public"," */","","exports.uncountables = [","  'advice',","  'energy',","  'excretion',","  'digestion',","  'cooperation',","  'health',","  'justice',","  'labour',","  'machinery',","  'equipment',","  'information',","  'pollution',","  'sewage',","  'paper',","  'money',","  'species',","  'series',","  'rain',","  'rice',","  'fish',","  'sheep',","  'moose',","  'deer',","  'news',","  'expertise',","  'status',","  'media'","];","var uncountables = exports.uncountables;","","/*!"," * Pluralize function."," *"," * @author TJ Holowaychuk (extracted from _ext.js_)"," * @param {String} string to pluralize"," * @api private"," */","","function pluralize(str) {","  var found;","  if (!~uncountables.indexOf(str.toLowerCase())) {","    found = rules.filter(function(rule) {","      return str.match(rule[0]);","    });","    if (found[0]) {","      return str.replace(found[0][0], found[0][1]);","    }","  }","  return str;","}","","/*!"," * Determines if `a` and `b` are deep equal."," *"," * Modified from node/lib/assert.js"," *"," * @param {any} a a value to compare to `b`"," * @param {any} b a value to compare to `a`"," * @return {Boolean}"," * @api private"," */","","exports.deepEqual = function deepEqual(a, b) {","  if (a === b) {","    return true;","  }","","  if (a instanceof Date && b instanceof Date) {","    return a.getTime() === b.getTime();","  }","","  if ((a instanceof ObjectId && b instanceof ObjectId) ||","      (a instanceof Decimal && b instanceof Decimal)) {","    return a.toString() === b.toString();","  }","","  if (a instanceof RegExp && b instanceof RegExp) {","    return a.source === b.source &&","        a.ignoreCase === b.ignoreCase &&","        a.multiline === b.multiline &&","        a.global === b.global;","  }","","  if (typeof a !== 'object' && typeof b !== 'object') {","    return a == b;","  }","","  if (a === null || b === null || a === undefined || b === undefined) {","    return false;","  }","","  if (a.prototype !== b.prototype) {","    return false;","  }","","  // Handle MongooseNumbers","  if (a instanceof Number && b instanceof Number) {","    return a.valueOf() === b.valueOf();","  }","","  if (Buffer.isBuffer(a)) {","    return exports.buffer.areEqual(a, b);","  }","","  if (isMongooseObject(a)) {","    a = a.toObject();","  }","  if (isMongooseObject(b)) {","    b = b.toObject();","  }","","  try {","    var ka = Object.keys(a),","        kb = Object.keys(b),","        key, i;","  } catch (e) {","    // happens when one is a string literal and the other isn't","    return false;","  }","","  // having the same number of owned properties (keys incorporates","  // hasOwnProperty)","  if (ka.length !== kb.length) {","    return false;","  }","","  // the same set of keys (although not necessarily the same order),","  ka.sort();","  kb.sort();","","  // ~~~cheap key test","  for (i = ka.length - 1; i >= 0; i--) {","    if (ka[i] !== kb[i]) {","      return false;","    }","  }","","  // equivalent values for every corresponding key, and","  // ~~~possibly expensive deep test","  for (i = ka.length - 1; i >= 0; i--) {","    key = ka[i];","    if (!deepEqual(a[key], b[key])) {","      return false;","    }","  }","","  return true;","};","","/*!"," * Object clone with Mongoose natives support."," *"," * If options.minimize is true, creates a minimal data object. Empty objects and undefined values will not be cloned. This makes the data payload sent to MongoDB as small as possible."," *"," * Functions are never cloned."," *"," * @param {Object} obj the object to clone"," * @param {Object} options"," * @return {Object} the cloned object"," * @api private"," */","","exports.clone = function clone(obj, options) {","  if (obj === undefined || obj === null) {","    return obj;","  }","","  if (Array.isArray(obj)) {","    return cloneArray(obj, options);","  }","","  if (isMongooseObject(obj)) {","    if (options && options.json && typeof obj.toJSON === 'function') {","      return obj.toJSON(options);","    }","    return obj.toObject(options);","  }","","  if (obj.constructor) {","    switch (exports.getFunctionName(obj.constructor)) {","      case 'Object':","        return cloneObject(obj, options);","      case 'Date':","        return new obj.constructor(+obj);","      case 'RegExp':","        return cloneRegExp(obj);","      default:","        // ignore","        break;","    }","  }","","  if (obj instanceof ObjectId) {","    return new ObjectId(obj.id);","  }","  if (obj instanceof Decimal) {","    if (options && options.flattenDecimals) {","      return obj.toJSON();","    }","    return Decimal.fromString(obj.toString());","  }","","  if (!obj.constructor && exports.isObject(obj)) {","    // object created with Object.create(null)","    return cloneObject(obj, options);","  }","","  if (obj.valueOf) {","    return obj.valueOf();","  }","};","var clone = exports.clone;","","/*!"," * ignore"," */","","function cloneObject(obj, options) {","  var retainKeyOrder = options && options.retainKeyOrder,","      minimize = options && options.minimize,","      ret = {},","      hasKeys,","      keys,","      val,","      k,","      i;","","  if (retainKeyOrder) {","    for (k in obj) {","      val = clone(obj[k], options);","","      if (!minimize || (typeof val !== 'undefined')) {","        hasKeys || (hasKeys = true);","        ret[k] = val;","      }","    }","  } else {","    // faster","","    keys = Object.keys(obj);","    i = keys.length;","","    while (i--) {","      k = keys[i];","      val = clone(obj[k], options);","","      if (!minimize || (typeof val !== 'undefined')) {","        if (!hasKeys) {","          hasKeys = true;","        }","        ret[k] = val;","      }","    }","  }","","  return minimize","      ? hasKeys && ret","      : ret;","}","","function cloneArray(arr, options) {","  var ret = [];","  for (var i = 0, l = arr.length; i < l; i++) {","    ret.push(clone(arr[i], options));","  }","  return ret;","}","","/*!"," * Shallow copies defaults into options."," *"," * @param {Object} defaults"," * @param {Object} options"," * @return {Object} the merged object"," * @api private"," */","","exports.options = function(defaults, options) {","  var keys = Object.keys(defaults),","      i = keys.length,","      k;","","  options = options || {};","","  while (i--) {","    k = keys[i];","    if (!(k in options)) {","      options[k] = defaults[k];","    }","  }","","  return options;","};","","/*!"," * Generates a random string"," *"," * @api private"," */","","exports.random = function() {","  return Math.random().toString().substr(3);","};","","/*!"," * Merges `from` into `to` without overwriting existing properties."," *"," * @param {Object} to"," * @param {Object} from"," * @api private"," */","","exports.merge = function merge(to, from, options) {","  options = options || {};","  var keys = Object.keys(from);","  var i = 0;","  var len = keys.length;","  var key;","","  if (options.retainKeyOrder) {","    while (i < len) {","      key = keys[i++];","      if (to[key] == null) {","        to[key] = from[key];","      } else if (exports.isObject(from[key])) {","        merge(to[key], from[key], options);","      } else if (options.overwrite) {","        to[key] = from[key];","      }","    }","  } else {","    while (len--) {","      key = keys[len];","      if (to[key] == null) {","        to[key] = from[key];","      } else if (exports.isObject(from[key])) {","        merge(to[key], from[key], options);","      } else if (options.overwrite) {","        to[key] = from[key];","      }","    }","  }","};","","/*!"," * toString helper"," */","","var toString = Object.prototype.toString;","","/*!"," * Applies toObject recursively."," *"," * @param {Document|Array|Object} obj"," * @return {Object}"," * @api private"," */","","exports.toObject = function toObject(obj) {","  Document || (Document = require('./document'));","  var ret;","","  if (exports.isNullOrUndefined(obj)) {","    return obj;","  }","","  if (obj instanceof Document) {","    return obj.toObject();","  }","","  if (Array.isArray(obj)) {","    ret = [];","","    for (var i = 0, len = obj.length; i < len; ++i) {","      ret.push(toObject(obj[i]));","    }","","    return ret;","  }","","  if ((obj.constructor && exports.getFunctionName(obj.constructor) === 'Object') ||","      (!obj.constructor && exports.isObject(obj))) {","    ret = {};","","    for (var k in obj) {","      ret[k] = toObject(obj[k]);","    }","","    return ret;","  }","","  return obj;","};","","/*!"," * Determines if `arg` is an object."," *"," * @param {Object|Array|String|Function|RegExp|any} arg"," * @api private"," * @return {Boolean}"," */","","exports.isObject = function(arg) {","  if (Buffer.isBuffer(arg)) {","    return true;","  }","  return toString.call(arg) === '[object Object]';","};","","/*!"," * A faster Array.prototype.slice.call(arguments) alternative"," * @api private"," */","","exports.args = sliced;","","/*!"," * process.nextTick helper."," *"," * Wraps `callback` in a try/catch + nextTick."," *"," * node-mongodb-native has a habit of state corruption when an error is immediately thrown from within a collection callback."," *"," * @param {Function} callback"," * @api private"," */","","exports.tick = function tick(callback) {","  if (typeof callback !== 'function') {","    return;","  }","  return function() {","    try {","      callback.apply(this, arguments);","    } catch (err) {","      // only nextTick on err to get out of","      // the event loop and avoid state corruption.","      process.nextTick(function() {","        throw err;","      });","    }","  };","};","","/*!"," * Returns if `v` is a mongoose object that has a `toObject()` method we can use."," *"," * This is for compatibility with libs like Date.js which do foolish things to Natives."," *"," * @param {any} v"," * @api private"," */","","exports.isMongooseObject = function(v) {","  Document || (Document = require('./document'));","  MongooseArray || (MongooseArray = require('./types').Array);","  MongooseBuffer || (MongooseBuffer = require('./types').Buffer);","","  return v instanceof Document ||","      (v && v.isMongooseArray) ||","      (v && v.isMongooseBuffer);","};","var isMongooseObject = exports.isMongooseObject;","","/*!"," * Converts `expires` options of index objects to `expiresAfterSeconds` options for MongoDB."," *"," * @param {Object} object"," * @api private"," */","","exports.expires = function expires(object) {","  if (!(object && object.constructor.name === 'Object')) {","    return;","  }","  if (!('expires' in object)) {","    return;","  }","","  var when;","  if (typeof object.expires !== 'string') {","    when = object.expires;","  } else {","    when = Math.round(ms(object.expires) / 1000);","  }","  object.expireAfterSeconds = when;","  delete object.expires;","};","","/*!"," * Populate options constructor"," */","","function PopulateOptions(path, select, match, options, model, subPopulate) {","  this.path = path;","  this.match = match;","  this.select = select;","  this.options = options;","  this.model = model;","  if (typeof subPopulate === 'object') {","    this.populate = subPopulate;","  }","  this._docs = {};","}","","// make it compatible with utils.clone","PopulateOptions.prototype.constructor = Object;","","// expose","exports.PopulateOptions = PopulateOptions;","","/*!"," * populate helper"," */","","exports.populate = function populate(path, select, model, match, options, subPopulate) {","  // The order of select/conditions args is opposite Model.find but","  // necessary to keep backward compatibility (select could be","  // an array, string, or object literal).","","  // might have passed an object specifying all arguments","  if (arguments.length === 1) {","    if (path instanceof PopulateOptions) {","      return [path];","    }","","    if (Array.isArray(path)) {","      return path.map(function(o) {","        return exports.populate(o)[0];","      });","    }","","    if (exports.isObject(path)) {","      match = path.match;","      options = path.options;","      select = path.select;","      model = path.model;","      subPopulate = path.populate;","      path = path.path;","    }","  } else if (typeof model !== 'string' && typeof model !== 'function') {","    options = match;","    match = model;","    model = undefined;","  }","","  if (typeof path !== 'string') {","    throw new TypeError('utils.populate: invalid path. Expected string. Got typeof `' + typeof path + '`');","  }","","  if (typeof subPopulate === 'object') {","    subPopulate = exports.populate(subPopulate);","  }","","  var ret = [];","  var paths = path.split(' ');","  options = exports.clone(options, { retainKeyOrder: true });","  for (var i = 0; i < paths.length; ++i) {","    ret.push(new PopulateOptions(paths[i], select, match, options, model, subPopulate));","  }","","  return ret;","};","","/*!"," * Return the value of `obj` at the given `path`."," *"," * @param {String} path"," * @param {Object} obj"," */","","exports.getValue = function(path, obj, map) {","  return mpath.get(path, obj, '_doc', map);","};","","/*!"," * Sets the value of `obj` at the given `path`."," *"," * @param {String} path"," * @param {Anything} val"," * @param {Object} obj"," */","","exports.setValue = function(path, val, obj, map) {","  mpath.set(path, val, obj, '_doc', map);","};","","/*!"," * Returns an array of values from object `o`."," *"," * @param {Object} o"," * @return {Array}"," * @private"," */","","exports.object = {};","exports.object.vals = function vals(o) {","  var keys = Object.keys(o),","      i = keys.length,","      ret = [];","","  while (i--) {","    ret.push(o[keys[i]]);","  }","","  return ret;","};","","/*!"," * @see exports.options"," */","","exports.object.shallowCopy = exports.options;","","/*!"," * Safer helper for hasOwnProperty checks"," *"," * @param {Object} obj"," * @param {String} prop"," */","","var hop = Object.prototype.hasOwnProperty;","exports.object.hasOwnProperty = function(obj, prop) {","  return hop.call(obj, prop);","};","","/*!"," * Determine if `val` is null or undefined"," *"," * @return {Boolean}"," */","","exports.isNullOrUndefined = function(val) {","  return val === null || val === undefined;","};","","/*!"," * ignore"," */","","exports.array = {};","","/*!"," * Flattens an array."," *"," * [ 1, [ 2, 3, [4] ]] -> [1,2,3,4]"," *"," * @param {Array} arr"," * @param {Function} [filter] If passed, will be invoked with each item in the array. If `filter` returns a falsey value, the item will not be included in the results."," * @return {Array}"," * @private"," */","","exports.array.flatten = function flatten(arr, filter, ret) {","  ret || (ret = []);","","  arr.forEach(function(item) {","    if (Array.isArray(item)) {","      flatten(item, filter, ret);","    } else {","      if (!filter || filter(item)) {","        ret.push(item);","      }","    }","  });","","  return ret;","};","","/*!"," * Removes duplicate values from an array"," *"," * [1, 2, 3, 3, 5] => [1, 2, 3, 5]"," * [ ObjectId(\"550988ba0c19d57f697dc45e\"), ObjectId(\"550988ba0c19d57f697dc45e\") ]"," *    => [ObjectId(\"550988ba0c19d57f697dc45e\")]"," *"," * @param {Array} arr"," * @return {Array}"," * @private"," */","","exports.array.unique = function(arr) {","  var primitives = {};","  var ids = {};","  var ret = [];","  var length = arr.length;","  for (var i = 0; i < length; ++i) {","    if (typeof arr[i] === 'number' || typeof arr[i] === 'string') {","      if (primitives[arr[i]]) {","        continue;","      }","      ret.push(arr[i]);","      primitives[arr[i]] = true;","    } else if (arr[i] instanceof ObjectId) {","      if (ids[arr[i].toString()]) {","        continue;","      }","      ret.push(arr[i]);","      ids[arr[i].toString()] = true;","    } else {","      ret.push(arr[i]);","    }","  }","","  return ret;","};","","/*!"," * Determines if two buffers are equal."," *"," * @param {Buffer} a"," * @param {Object} b"," */","","exports.buffer = {};","exports.buffer.areEqual = function(a, b) {","  if (!Buffer.isBuffer(a)) {","    return false;","  }","  if (!Buffer.isBuffer(b)) {","    return false;","  }","  if (a.length !== b.length) {","    return false;","  }","  for (var i = 0, len = a.length; i < len; ++i) {","    if (a[i] !== b[i]) {","      return false;","    }","  }","  return true;","};","","exports.getFunctionName = function(fn) {","  if (fn.name) {","    return fn.name;","  }","  return (fn.toString().trim().match(/^function\\s*([^\\s(]+)/) || [])[1];","};","","exports.decorate = function(destination, source) {","  for (var key in source) {","    destination[key] = source[key];","  }","};","","/**"," * merges to with a copy of from"," *"," * @param {Object} to"," * @param {Object} fromObj"," * @api private"," */","","exports.mergeClone = function(to, fromObj) {","  var keys = Object.keys(fromObj);","  var len = keys.length;","  var i = 0;","  var key;","","  while (i < len) {","    key = keys[i++];","    if (typeof to[key] === 'undefined') {","      // make sure to retain key order here because of a bug handling the $each","      // operator in mongodb 2.4.4","      to[key] = exports.clone(fromObj[key], {retainKeyOrder: 1});","    } else {","      if (exports.isObject(fromObj[key])) {","        var obj = fromObj[key];","        if (isMongooseObject(fromObj[key]) && !fromObj[key].isMongooseBuffer) {","          obj = obj.toObject({ transform: false, virtuals: false });","        }","        if (fromObj[key].isMongooseBuffer) {","          obj = new Buffer(obj);","        }","        exports.mergeClone(to[key], obj);","      } else {","        // make sure to retain key order here because of a bug handling the","        // $each operator in mongodb 2.4.4","        to[key] = exports.clone(fromObj[key], {retainKeyOrder: 1});","      }","    }","  }","};","","/**"," * Executes a function on each element of an array (like _.each)"," *"," * @param {Array} arr"," * @param {Function} fn"," * @api private"," */","","exports.each = function(arr, fn) {","  for (var i = 0; i < arr.length; ++i) {","    fn(arr[i]);","  }","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"23":1,"24":0,"25":0,"26":0,"28":0,"29":0,"31":0,"32":0,"34":0,"45":1,"69":1,"78":1,"107":1,"117":1,"118":0,"119":0,"120":0,"121":0,"123":0,"124":0,"127":0,"141":1,"142":0,"143":0,"146":0,"147":0,"150":0,"152":0,"155":0,"156":0,"162":0,"163":0,"166":0,"167":0,"170":0,"171":0,"175":0,"176":0,"179":0,"180":0,"183":0,"184":0,"186":0,"187":0,"190":0,"191":0,"196":0,"201":0,"202":0,"206":0,"207":0,"210":0,"211":0,"212":0,"218":0,"219":0,"220":0,"221":0,"225":0,"241":1,"242":0,"243":0,"246":0,"247":0,"250":0,"251":0,"252":0,"254":0,"257":0,"258":0,"260":0,"262":0,"264":0,"267":0,"271":0,"272":0,"274":0,"275":0,"276":0,"278":0,"281":0,"283":0,"286":0,"287":0,"290":1,"296":1,"297":0,"306":0,"307":0,"308":0,"310":0,"311":0,"312":0,"318":0,"319":0,"321":0,"322":0,"323":0,"325":0,"326":0,"327":0,"329":0,"334":0,"339":1,"340":0,"341":0,"342":0,"344":0,"356":1,"357":7,"361":7,"363":7,"364":56,"365":56,"366":55,"370":7,"379":1,"380":0,"391":1,"392":0,"393":0,"394":0,"395":0,"396":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"427":1,"437":1,"438":0,"439":0,"441":0,"442":0,"445":0,"446":0,"449":0,"450":0,"452":0,"453":0,"456":0,"459":0,"461":0,"463":0,"464":0,"467":0,"470":0,"481":1,"482":0,"483":0,"485":0,"493":1,"506":1,"507":0,"508":0,"510":0,"511":0,"512":0,"516":0,"517":0,"532":1,"533":0,"534":0,"535":0,"537":0,"541":1,"550":1,"551":0,"552":0,"554":0,"555":0,"558":0,"559":0,"560":0,"562":0,"564":0,"565":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"581":0,"585":1,"588":1,"594":1,"600":0,"601":0,"602":0,"605":0,"606":0,"607":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"619":0,"620":0,"621":0,"622":0,"625":0,"626":0,"629":0,"630":0,"633":0,"634":0,"635":0,"636":0,"637":0,"640":0,"650":1,"651":0,"662":1,"663":0,"674":1,"675":1,"676":0,"680":0,"681":0,"684":0,"691":1,"700":1,"701":1,"702":0,"711":1,"712":0,"719":1,"732":1,"733":0,"735":0,"736":0,"737":0,"739":0,"740":0,"745":0,"760":1,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"770":0,"771":0,"772":0,"773":0,"774":0,"776":0,"777":0,"779":0,"783":0,"793":1,"794":1,"795":0,"796":0,"798":0,"799":0,"801":0,"802":0,"804":0,"805":0,"806":0,"809":0,"812":1,"813":0,"814":0,"816":0,"819":1,"820":0,"821":0,"833":1,"834":0,"835":0,"836":0,"837":0,"839":0,"840":0,"841":0,"844":0,"846":0,"847":0,"848":0,"849":0,"851":0,"852":0,"854":0,"858":0,"872":1,"873":2,"874":16}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/decimal128.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/decimal128.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}}},"branchMap":{},"code":["/**"," * ObjectId type constructor"," *"," * ####Example"," *"," *     var id = new mongoose.Types.ObjectId;"," *"," * @constructor ObjectId"," */","","module.exports = require('bson').Decimal128;",""],"l":{"11":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/objectid.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/objectid.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":46}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":26}}},"branchMap":{},"code":["/**"," * ObjectId type constructor"," *"," * ####Example"," *"," *     var id = new mongoose.Types.ObjectId;"," *"," * @constructor ObjectId"," */","","var ObjectId = require('../drivers').ObjectId;","","module.exports = ObjectId;",""],"l":{"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schematype.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schematype.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":1,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":1,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":1,"261":0,"262":1,"263":1,"264":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0],"79":[0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0,0],"86":[0,0],"87":[0,0],"88":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"SchemaType","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":45}}},"2":{"name":"(anonymous_2)","line":90,"loc":{"start":{"line":90,"column":31},"end":{"line":90,"column":45}}},"3":{"name":"(anonymous_3)","line":129,"loc":{"start":{"line":129,"column":29},"end":{"line":129,"column":47}}},"4":{"name":"(anonymous_4)","line":150,"loc":{"start":{"line":150,"column":30},"end":{"line":150,"column":45}}},"5":{"name":"(anonymous_5)","line":180,"loc":{"start":{"line":180,"column":28},"end":{"line":180,"column":43}}},"6":{"name":"(anonymous_6)","line":205,"loc":{"start":{"line":205,"column":30},"end":{"line":205,"column":45}}},"7":{"name":"(anonymous_7)","line":290,"loc":{"start":{"line":290,"column":27},"end":{"line":290,"column":40}}},"8":{"name":"(anonymous_8)","line":360,"loc":{"start":{"line":360,"column":27},"end":{"line":360,"column":40}}},"9":{"name":"(anonymous_9)","line":455,"loc":{"start":{"line":455,"column":32},"end":{"line":455,"column":61}}},"10":{"name":"(anonymous_10)","line":562,"loc":{"start":{"line":562,"column":32},"end":{"line":562,"column":60}}},"11":{"name":"(anonymous_11)","line":564,"loc":{"start":{"line":564,"column":45},"end":{"line":564,"column":57}}},"12":{"name":"(anonymous_12)","line":575,"loc":{"start":{"line":575,"column":27},"end":{"line":575,"column":39}}},"13":{"name":"(anonymous_13)","line":610,"loc":{"start":{"line":610,"column":34},"end":{"line":610,"column":56}}},"14":{"name":"(anonymous_14)","line":634,"loc":{"start":{"line":634,"column":36},"end":{"line":634,"column":84}}},"15":{"name":"(anonymous_15)","line":670,"loc":{"start":{"line":670,"column":36},"end":{"line":670,"column":59}}},"16":{"name":"select","line":703,"loc":{"start":{"line":703,"column":30},"end":{"line":703,"column":51}}},"17":{"name":"(anonymous_17)","line":717,"loc":{"start":{"line":717,"column":34},"end":{"line":717,"column":61}}},"18":{"name":"(anonymous_18)","line":726,"loc":{"start":{"line":726,"column":17},"end":{"line":726,"column":51}}},"19":{"name":"(anonymous_19)","line":739,"loc":{"start":{"line":739,"column":26},"end":{"line":739,"column":38}}},"20":{"name":"(anonymous_20)","line":772,"loc":{"start":{"line":772,"column":12},"end":{"line":772,"column":25}}},"21":{"name":"(anonymous_21)","line":773,"loc":{"start":{"line":773,"column":12},"end":{"line":773,"column":28}}},"22":{"name":"asyncValidate","line":790,"loc":{"start":{"line":790,"column":0},"end":{"line":790,"column":59}}},"23":{"name":"(anonymous_23)","line":791,"loc":{"start":{"line":791,"column":47},"end":{"line":791,"column":71}}},"24":{"name":"(anonymous_24)","line":824,"loc":{"start":{"line":824,"column":38},"end":{"line":824,"column":61}}},"25":{"name":"(anonymous_25)","line":833,"loc":{"start":{"line":833,"column":17},"end":{"line":833,"column":51}}},"26":{"name":"(anonymous_26)","line":851,"loc":{"start":{"line":851,"column":21},"end":{"line":851,"column":33}}},"27":{"name":"(anonymous_27)","line":892,"loc":{"start":{"line":892,"column":20},"end":{"line":892,"column":53}}},"28":{"name":"handleSingle","line":924,"loc":{"start":{"line":924,"column":0},"end":{"line":924,"column":27}}},"29":{"name":"handleArray","line":932,"loc":{"start":{"line":932,"column":0},"end":{"line":932,"column":26}}},"30":{"name":"(anonymous_30)","line":937,"loc":{"start":{"line":937,"column":17},"end":{"line":937,"column":29}}},"31":{"name":"(anonymous_31)","line":964,"loc":{"start":{"line":964,"column":36},"end":{"line":964,"column":64}}},"32":{"name":"(anonymous_32)","line":984,"loc":{"start":{"line":984,"column":37},"end":{"line":984,"column":51}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":51}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":47}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":39}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":50}},"7":{"start":{"line":21,"column":0},"end":{"line":45,"column":1}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":19}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":27}},"10":{"start":{"line":24,"column":2},"end":{"line":24,"column":23}},"11":{"start":{"line":25,"column":2},"end":{"line":25,"column":20}},"12":{"start":{"line":26,"column":2},"end":{"line":26,"column":20}},"13":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"14":{"start":{"line":28,"column":2},"end":{"line":28,"column":21}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":16}},"16":{"start":{"line":31,"column":2},"end":{"line":44,"column":3}},"17":{"start":{"line":32,"column":4},"end":{"line":43,"column":5}},"18":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"20":{"start":{"line":38,"column":6},"end":{"line":40,"column":25}},"21":{"start":{"line":42,"column":6},"end":{"line":42,"column":32}},"22":{"start":{"line":90,"column":0},"end":{"line":102,"column":2}},"23":{"start":{"line":91,"column":2},"end":{"line":100,"column":3}},"24":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"25":{"start":{"line":93,"column":6},"end":{"line":93,"column":33}},"26":{"start":{"line":94,"column":6},"end":{"line":94,"column":20}},"27":{"start":{"line":96,"column":4},"end":{"line":96,"column":28}},"28":{"start":{"line":97,"column":4},"end":{"line":97,"column":29}},"29":{"start":{"line":98,"column":9},"end":{"line":100,"column":3}},"30":{"start":{"line":99,"column":4},"end":{"line":99,"column":46}},"31":{"start":{"line":101,"column":2},"end":{"line":101,"column":27}},"32":{"start":{"line":129,"column":0},"end":{"line":133,"column":2}},"33":{"start":{"line":130,"column":2},"end":{"line":130,"column":24}},"34":{"start":{"line":131,"column":2},"end":{"line":131,"column":29}},"35":{"start":{"line":132,"column":2},"end":{"line":132,"column":14}},"36":{"start":{"line":150,"column":0},"end":{"line":166,"column":2}},"37":{"start":{"line":151,"column":2},"end":{"line":157,"column":3}},"38":{"start":{"line":152,"column":4},"end":{"line":154,"column":5}},"39":{"start":{"line":153,"column":6},"end":{"line":153,"column":13}},"40":{"start":{"line":155,"column":4},"end":{"line":156,"column":40}},"41":{"start":{"line":158,"column":2},"end":{"line":162,"column":3}},"42":{"start":{"line":159,"column":4},"end":{"line":159,"column":21}},"43":{"start":{"line":160,"column":9},"end":{"line":162,"column":3}},"44":{"start":{"line":161,"column":4},"end":{"line":161,"column":38}},"45":{"start":{"line":164,"column":2},"end":{"line":164,"column":28}},"46":{"start":{"line":165,"column":2},"end":{"line":165,"column":14}},"47":{"start":{"line":180,"column":0},"end":{"line":190,"column":2}},"48":{"start":{"line":181,"column":2},"end":{"line":186,"column":3}},"49":{"start":{"line":183,"column":4},"end":{"line":183,"column":21}},"50":{"start":{"line":184,"column":9},"end":{"line":186,"column":3}},"51":{"start":{"line":185,"column":4},"end":{"line":185,"column":38}},"52":{"start":{"line":188,"column":2},"end":{"line":188,"column":26}},"53":{"start":{"line":189,"column":2},"end":{"line":189,"column":14}},"54":{"start":{"line":205,"column":0},"end":{"line":215,"column":2}},"55":{"start":{"line":206,"column":2},"end":{"line":211,"column":3}},"56":{"start":{"line":208,"column":4},"end":{"line":208,"column":21}},"57":{"start":{"line":209,"column":9},"end":{"line":211,"column":3}},"58":{"start":{"line":210,"column":4},"end":{"line":210,"column":38}},"59":{"start":{"line":213,"column":2},"end":{"line":213,"column":28}},"60":{"start":{"line":214,"column":2},"end":{"line":214,"column":14}},"61":{"start":{"line":290,"column":0},"end":{"line":296,"column":2}},"62":{"start":{"line":291,"column":2},"end":{"line":293,"column":3}},"63":{"start":{"line":292,"column":4},"end":{"line":292,"column":56}},"64":{"start":{"line":294,"column":2},"end":{"line":294,"column":24}},"65":{"start":{"line":295,"column":2},"end":{"line":295,"column":14}},"66":{"start":{"line":360,"column":0},"end":{"line":366,"column":2}},"67":{"start":{"line":361,"column":2},"end":{"line":363,"column":3}},"68":{"start":{"line":362,"column":4},"end":{"line":362,"column":56}},"69":{"start":{"line":364,"column":2},"end":{"line":364,"column":24}},"70":{"start":{"line":365,"column":2},"end":{"line":365,"column":14}},"71":{"start":{"line":455,"column":0},"end":{"line":495,"column":2}},"72":{"start":{"line":456,"column":2},"end":{"line":476,"column":3}},"73":{"start":{"line":457,"column":4},"end":{"line":457,"column":19}},"74":{"start":{"line":458,"column":4},"end":{"line":473,"column":5}},"75":{"start":{"line":459,"column":6},"end":{"line":459,"column":40}},"76":{"start":{"line":460,"column":6},"end":{"line":462,"column":7}},"77":{"start":{"line":461,"column":8},"end":{"line":461,"column":44}},"78":{"start":{"line":463,"column":6},"end":{"line":463,"column":33}},"79":{"start":{"line":464,"column":6},"end":{"line":464,"column":58}},"80":{"start":{"line":466,"column":6},"end":{"line":468,"column":7}},"81":{"start":{"line":467,"column":8},"end":{"line":467,"column":57}},"82":{"start":{"line":469,"column":6},"end":{"line":471,"column":7}},"83":{"start":{"line":470,"column":8},"end":{"line":470,"column":30}},"84":{"start":{"line":472,"column":6},"end":{"line":472,"column":66}},"85":{"start":{"line":474,"column":4},"end":{"line":474,"column":37}},"86":{"start":{"line":475,"column":4},"end":{"line":475,"column":16}},"87":{"start":{"line":478,"column":2},"end":{"line":480,"column":10}},"88":{"start":{"line":482,"column":2},"end":{"line":492,"column":3}},"89":{"start":{"line":483,"column":4},"end":{"line":483,"column":23}},"90":{"start":{"line":484,"column":4},"end":{"line":490,"column":5}},"91":{"start":{"line":485,"column":6},"end":{"line":487,"column":87}},"92":{"start":{"line":489,"column":6},"end":{"line":489,"column":27}},"93":{"start":{"line":491,"column":4},"end":{"line":491,"column":38}},"94":{"start":{"line":494,"column":2},"end":{"line":494,"column":14}},"95":{"start":{"line":562,"column":0},"end":{"line":600,"column":2}},"96":{"start":{"line":563,"column":2},"end":{"line":570,"column":3}},"97":{"start":{"line":564,"column":4},"end":{"line":566,"column":13}},"98":{"start":{"line":565,"column":6},"end":{"line":565,"column":52}},"99":{"start":{"line":568,"column":4},"end":{"line":568,"column":28}},"100":{"start":{"line":569,"column":4},"end":{"line":569,"column":16}},"101":{"start":{"line":572,"column":2},"end":{"line":572,"column":19}},"102":{"start":{"line":573,"column":2},"end":{"line":573,"column":25}},"103":{"start":{"line":575,"column":2},"end":{"line":584,"column":4}},"104":{"start":{"line":578,"column":4},"end":{"line":580,"column":5}},"105":{"start":{"line":579,"column":6},"end":{"line":579,"column":18}},"106":{"start":{"line":582,"column":4},"end":{"line":583,"column":37}},"107":{"start":{"line":585,"column":2},"end":{"line":585,"column":40}},"108":{"start":{"line":587,"column":2},"end":{"line":590,"column":3}},"109":{"start":{"line":588,"column":4},"end":{"line":588,"column":23}},"110":{"start":{"line":589,"column":4},"end":{"line":589,"column":25}},"111":{"start":{"line":592,"column":2},"end":{"line":592,"column":63}},"112":{"start":{"line":593,"column":2},"end":{"line":597,"column":5}},"113":{"start":{"line":599,"column":2},"end":{"line":599,"column":14}},"114":{"start":{"line":610,"column":0},"end":{"line":623,"column":2}},"115":{"start":{"line":611,"column":2},"end":{"line":613,"column":26}},"116":{"start":{"line":615,"column":2},"end":{"line":621,"column":3}},"117":{"start":{"line":616,"column":4},"end":{"line":616,"column":45}},"118":{"start":{"line":617,"column":4},"end":{"line":619,"column":5}},"119":{"start":{"line":618,"column":6},"end":{"line":618,"column":29}},"120":{"start":{"line":620,"column":4},"end":{"line":620,"column":18}},"121":{"start":{"line":622,"column":2},"end":{"line":622,"column":13}},"122":{"start":{"line":634,"column":0},"end":{"line":660,"column":2}},"123":{"start":{"line":635,"column":2},"end":{"line":638,"column":27}},"124":{"start":{"line":640,"column":2},"end":{"line":642,"column":3}},"125":{"start":{"line":641,"column":4},"end":{"line":641,"column":42}},"126":{"start":{"line":644,"column":2},"end":{"line":650,"column":3}},"127":{"start":{"line":645,"column":4},"end":{"line":645,"column":20}},"128":{"start":{"line":646,"column":4},"end":{"line":648,"column":5}},"129":{"start":{"line":647,"column":6},"end":{"line":647,"column":68}},"130":{"start":{"line":649,"column":4},"end":{"line":649,"column":15}},"131":{"start":{"line":652,"column":2},"end":{"line":654,"column":3}},"132":{"start":{"line":653,"column":4},"end":{"line":653,"column":13}},"133":{"start":{"line":657,"column":2},"end":{"line":657,"column":51}},"134":{"start":{"line":659,"column":2},"end":{"line":659,"column":11}},"135":{"start":{"line":670,"column":0},"end":{"line":684,"column":2}},"136":{"start":{"line":671,"column":2},"end":{"line":673,"column":27}},"137":{"start":{"line":675,"column":2},"end":{"line":677,"column":3}},"138":{"start":{"line":676,"column":4},"end":{"line":676,"column":13}},"139":{"start":{"line":679,"column":2},"end":{"line":681,"column":3}},"140":{"start":{"line":680,"column":4},"end":{"line":680,"column":42}},"141":{"start":{"line":683,"column":2},"end":{"line":683,"column":11}},"142":{"start":{"line":703,"column":0},"end":{"line":706,"column":2}},"143":{"start":{"line":704,"column":2},"end":{"line":704,"column":24}},"144":{"start":{"line":705,"column":2},"end":{"line":705,"column":14}},"145":{"start":{"line":717,"column":0},"end":{"line":784,"column":2}},"146":{"start":{"line":718,"column":2},"end":{"line":718,"column":18}},"147":{"start":{"line":719,"column":2},"end":{"line":719,"column":23}},"148":{"start":{"line":720,"column":2},"end":{"line":720,"column":37}},"149":{"start":{"line":722,"column":2},"end":{"line":724,"column":3}},"150":{"start":{"line":723,"column":4},"end":{"line":723,"column":20}},"151":{"start":{"line":726,"column":2},"end":{"line":736,"column":4}},"152":{"start":{"line":727,"column":4},"end":{"line":729,"column":5}},"153":{"start":{"line":728,"column":6},"end":{"line":728,"column":13}},"154":{"start":{"line":730,"column":4},"end":{"line":735,"column":5}},"155":{"start":{"line":731,"column":6},"end":{"line":731,"column":26}},"156":{"start":{"line":733,"column":6},"end":{"line":733,"column":52}},"157":{"start":{"line":734,"column":6},"end":{"line":734,"column":14}},"158":{"start":{"line":738,"column":2},"end":{"line":738,"column":19}},"159":{"start":{"line":739,"column":2},"end":{"line":783,"column":5}},"160":{"start":{"line":740,"column":4},"end":{"line":742,"column":5}},"161":{"start":{"line":741,"column":6},"end":{"line":741,"column":13}},"162":{"start":{"line":744,"column":4},"end":{"line":744,"column":32}},"163":{"start":{"line":745,"column":4},"end":{"line":745,"column":11}},"164":{"start":{"line":747,"column":4},"end":{"line":747,"column":45}},"165":{"start":{"line":748,"column":4},"end":{"line":748,"column":36}},"166":{"start":{"line":749,"column":4},"end":{"line":749,"column":38}},"167":{"start":{"line":751,"column":4},"end":{"line":782,"column":5}},"168":{"start":{"line":752,"column":6},"end":{"line":752,"column":59}},"169":{"start":{"line":753,"column":11},"end":{"line":782,"column":5}},"170":{"start":{"line":754,"column":6},"end":{"line":757,"column":7}},"171":{"start":{"line":755,"column":8},"end":{"line":755,"column":44}},"172":{"start":{"line":756,"column":8},"end":{"line":756,"column":15}},"173":{"start":{"line":758,"column":6},"end":{"line":781,"column":7}},"174":{"start":{"line":759,"column":8},"end":{"line":759,"column":78}},"175":{"start":{"line":760,"column":13},"end":{"line":781,"column":7}},"176":{"start":{"line":761,"column":8},"end":{"line":762,"column":20}},"177":{"start":{"line":764,"column":8},"end":{"line":769,"column":9}},"178":{"start":{"line":765,"column":10},"end":{"line":765,"column":44}},"179":{"start":{"line":767,"column":10},"end":{"line":767,"column":21}},"180":{"start":{"line":768,"column":10},"end":{"line":768,"column":45}},"181":{"start":{"line":770,"column":8},"end":{"line":780,"column":9}},"182":{"start":{"line":771,"column":10},"end":{"line":777,"column":15}},"183":{"start":{"line":772,"column":27},"end":{"line":772,"column":61}},"184":{"start":{"line":774,"column":14},"end":{"line":774,"column":49}},"185":{"start":{"line":775,"column":14},"end":{"line":775,"column":25}},"186":{"start":{"line":776,"column":14},"end":{"line":776,"column":48}},"187":{"start":{"line":779,"column":10},"end":{"line":779,"column":44}},"188":{"start":{"line":790,"column":0},"end":{"line":803,"column":1}},"189":{"start":{"line":791,"column":2},"end":{"line":799,"column":5}},"190":{"start":{"line":792,"column":4},"end":{"line":794,"column":5}},"191":{"start":{"line":793,"column":6},"end":{"line":793,"column":13}},"192":{"start":{"line":795,"column":4},"end":{"line":797,"column":5}},"193":{"start":{"line":796,"column":6},"end":{"line":796,"column":32}},"194":{"start":{"line":798,"column":4},"end":{"line":798,"column":18}},"195":{"start":{"line":800,"column":2},"end":{"line":802,"column":3}},"196":{"start":{"line":801,"column":4},"end":{"line":801,"column":25}},"197":{"start":{"line":805,"column":0},"end":{"line":809,"column":16}},"198":{"start":{"line":824,"column":0},"end":{"line":879,"column":2}},"199":{"start":{"line":825,"column":2},"end":{"line":827,"column":37}},"200":{"start":{"line":829,"column":2},"end":{"line":831,"column":3}},"201":{"start":{"line":830,"column":4},"end":{"line":830,"column":16}},"202":{"start":{"line":833,"column":2},"end":{"line":840,"column":4}},"203":{"start":{"line":834,"column":4},"end":{"line":836,"column":5}},"204":{"start":{"line":835,"column":6},"end":{"line":835,"column":13}},"205":{"start":{"line":837,"column":4},"end":{"line":839,"column":5}},"206":{"start":{"line":838,"column":6},"end":{"line":838,"column":52}},"207":{"start":{"line":842,"column":2},"end":{"line":842,"column":35}},"208":{"start":{"line":843,"column":2},"end":{"line":849,"column":3}},"209":{"start":{"line":844,"column":4},"end":{"line":848,"column":5}},"210":{"start":{"line":845,"column":6},"end":{"line":845,"column":40}},"211":{"start":{"line":847,"column":6},"end":{"line":847,"column":18}},"212":{"start":{"line":851,"column":2},"end":{"line":876,"column":5}},"213":{"start":{"line":852,"column":4},"end":{"line":854,"column":5}},"214":{"start":{"line":853,"column":6},"end":{"line":853,"column":13}},"215":{"start":{"line":856,"column":4},"end":{"line":856,"column":32}},"216":{"start":{"line":857,"column":4},"end":{"line":857,"column":45}},"217":{"start":{"line":858,"column":4},"end":{"line":858,"column":36}},"218":{"start":{"line":859,"column":4},"end":{"line":859,"column":38}},"219":{"start":{"line":860,"column":4},"end":{"line":860,"column":11}},"220":{"start":{"line":862,"column":4},"end":{"line":875,"column":5}},"221":{"start":{"line":863,"column":6},"end":{"line":863,"column":59}},"222":{"start":{"line":864,"column":11},"end":{"line":875,"column":5}},"223":{"start":{"line":866,"column":6},"end":{"line":874,"column":7}},"224":{"start":{"line":867,"column":8},"end":{"line":872,"column":9}},"225":{"start":{"line":868,"column":10},"end":{"line":868,"column":44}},"226":{"start":{"line":870,"column":10},"end":{"line":870,"column":21}},"227":{"start":{"line":871,"column":10},"end":{"line":871,"column":45}},"228":{"start":{"line":873,"column":8},"end":{"line":873,"column":42}},"229":{"start":{"line":878,"column":2},"end":{"line":878,"column":13}},"230":{"start":{"line":892,"column":0},"end":{"line":918,"column":2}},"231":{"start":{"line":894,"column":2},"end":{"line":894,"column":53}},"232":{"start":{"line":896,"column":2},"end":{"line":903,"column":3}},"233":{"start":{"line":900,"column":4},"end":{"line":900,"column":42}},"234":{"start":{"line":901,"column":4},"end":{"line":901,"column":62}},"235":{"start":{"line":902,"column":4},"end":{"line":902,"column":32}},"236":{"start":{"line":905,"column":2},"end":{"line":915,"column":3}},"237":{"start":{"line":906,"column":4},"end":{"line":908,"column":5}},"238":{"start":{"line":907,"column":6},"end":{"line":907,"column":18}},"239":{"start":{"line":909,"column":4},"end":{"line":914,"column":5}},"240":{"start":{"line":913,"column":6},"end":{"line":913,"column":18}},"241":{"start":{"line":917,"column":2},"end":{"line":917,"column":15}},"242":{"start":{"line":924,"column":0},"end":{"line":926,"column":1}},"243":{"start":{"line":925,"column":2},"end":{"line":925,"column":32}},"244":{"start":{"line":932,"column":0},"end":{"line":940,"column":1}},"245":{"start":{"line":933,"column":2},"end":{"line":933,"column":19}},"246":{"start":{"line":934,"column":2},"end":{"line":936,"column":3}},"247":{"start":{"line":935,"column":4},"end":{"line":935,"column":36}},"248":{"start":{"line":937,"column":2},"end":{"line":939,"column":5}},"249":{"start":{"line":938,"column":4},"end":{"line":938,"column":33}},"250":{"start":{"line":946,"column":0},"end":{"line":954,"column":2}},"251":{"start":{"line":964,"column":0},"end":{"line":975,"column":2}},"252":{"start":{"line":965,"column":2},"end":{"line":965,"column":14}},"253":{"start":{"line":966,"column":2},"end":{"line":972,"column":3}},"254":{"start":{"line":967,"column":4},"end":{"line":967,"column":54}},"255":{"start":{"line":968,"column":4},"end":{"line":970,"column":5}},"256":{"start":{"line":969,"column":6},"end":{"line":969,"column":52}},"257":{"start":{"line":971,"column":4},"end":{"line":971,"column":35}},"258":{"start":{"line":973,"column":2},"end":{"line":973,"column":21}},"259":{"start":{"line":974,"column":2},"end":{"line":974,"column":24}},"260":{"start":{"line":984,"column":0},"end":{"line":986,"column":2}},"261":{"start":{"line":985,"column":2},"end":{"line":985,"column":21}},"262":{"start":{"line":992,"column":0},"end":{"line":992,"column":38}},"263":{"start":{"line":994,"column":0},"end":{"line":994,"column":30}},"264":{"start":{"line":996,"column":0},"end":{"line":996,"column":40}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":8},"end":{"line":32,"column":15}},{"start":{"line":32,"column":19},"end":{"line":32,"column":48}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":23}},{"start":{"line":34,"column":27},"end":{"line":34,"column":38}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":39,"column":12},"end":{"line":39,"column":22}},{"start":{"line":40,"column":12},"end":{"line":40,"column":24}}]},"6":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":2},"end":{"line":91,"column":2}},{"start":{"line":91,"column":2},"end":{"line":91,"column":2}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":9}},{"start":{"line":98,"column":9},"end":{"line":98,"column":9}}]},"9":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"11":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"12":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":6},"end":{"line":158,"column":25}},{"start":{"line":158,"column":29},"end":{"line":158,"column":49}}]},"13":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":9},"end":{"line":160,"column":9}},{"start":{"line":160,"column":9},"end":{"line":160,"column":9}}]},"14":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]},"15":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":6},"end":{"line":181,"column":26}},{"start":{"line":181,"column":30},"end":{"line":181,"column":55}},{"start":{"line":182,"column":4},"end":{"line":182,"column":36}}]},"16":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":9},"end":{"line":184,"column":9}},{"start":{"line":184,"column":9},"end":{"line":184,"column":9}}]},"17":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"18":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":6},"end":{"line":206,"column":26}},{"start":{"line":206,"column":30},"end":{"line":206,"column":55}},{"start":{"line":207,"column":4},"end":{"line":207,"column":36}}]},"19":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":9},"end":{"line":209,"column":9}},{"start":{"line":209,"column":9},"end":{"line":209,"column":9}}]},"20":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":2},"end":{"line":291,"column":2}},{"start":{"line":291,"column":2},"end":{"line":291,"column":2}}]},"21":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"22":{"line":456,"type":"if","locations":[{"start":{"line":456,"column":2},"end":{"line":456,"column":2}},{"start":{"line":456,"column":2},"end":{"line":456,"column":2}}]},"23":{"line":456,"type":"binary-expr","locations":[{"start":{"line":456,"column":6},"end":{"line":456,"column":31}},{"start":{"line":456,"column":35},"end":{"line":456,"column":38}},{"start":{"line":456,"column":42},"end":{"line":456,"column":93}}]},"24":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":4},"end":{"line":458,"column":4}},{"start":{"line":458,"column":4},"end":{"line":458,"column":4}}]},"25":{"line":458,"type":"binary-expr","locations":[{"start":{"line":458,"column":8},"end":{"line":458,"column":33}},{"start":{"line":458,"column":37},"end":{"line":458,"column":42}}]},"26":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":6},"end":{"line":460,"column":6}},{"start":{"line":460,"column":6},"end":{"line":460,"column":6}}]},"27":{"line":464,"type":"binary-expr","locations":[{"start":{"line":464,"column":24},"end":{"line":464,"column":39}},{"start":{"line":464,"column":43},"end":{"line":464,"column":57}}]},"28":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":6},"end":{"line":466,"column":6}},{"start":{"line":466,"column":6},"end":{"line":466,"column":6}}]},"29":{"line":469,"type":"if","locations":[{"start":{"line":469,"column":6},"end":{"line":469,"column":6}},{"start":{"line":469,"column":6},"end":{"line":469,"column":6}}]},"30":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":4},"end":{"line":484,"column":4}},{"start":{"line":484,"column":4},"end":{"line":484,"column":4}}]},"31":{"line":484,"type":"binary-expr","locations":[{"start":{"line":484,"column":10},"end":{"line":484,"column":13}},{"start":{"line":484,"column":17},"end":{"line":484,"column":68}}]},"32":{"line":563,"type":"if","locations":[{"start":{"line":563,"column":2},"end":{"line":563,"column":2}},{"start":{"line":563,"column":2},"end":{"line":563,"column":2}}]},"33":{"line":578,"type":"if","locations":[{"start":{"line":578,"column":4},"end":{"line":578,"column":4}},{"start":{"line":578,"column":4},"end":{"line":578,"column":4}}]},"34":{"line":578,"type":"binary-expr","locations":[{"start":{"line":578,"column":8},"end":{"line":578,"column":28}},{"start":{"line":578,"column":32},"end":{"line":578,"column":60}},{"start":{"line":578,"column":64},"end":{"line":578,"column":92}}]},"35":{"line":582,"type":"binary-expr","locations":[{"start":{"line":582,"column":13},"end":{"line":582,"column":43}},{"start":{"line":582,"column":48},"end":{"line":582,"column":69}},{"start":{"line":583,"column":8},"end":{"line":583,"column":36}}]},"36":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":2},"end":{"line":587,"column":2}},{"start":{"line":587,"column":2},"end":{"line":587,"column":2}}]},"37":{"line":592,"type":"binary-expr","locations":[{"start":{"line":592,"column":12},"end":{"line":592,"column":19}},{"start":{"line":592,"column":23},"end":{"line":592,"column":62}}]},"38":{"line":611,"type":"cond-expr","locations":[{"start":{"line":612,"column":8},"end":{"line":612,"column":37}},{"start":{"line":613,"column":8},"end":{"line":613,"column":25}}]},"39":{"line":615,"type":"if","locations":[{"start":{"line":615,"column":2},"end":{"line":615,"column":2}},{"start":{"line":615,"column":2},"end":{"line":615,"column":2}}]},"40":{"line":615,"type":"binary-expr","locations":[{"start":{"line":615,"column":6},"end":{"line":615,"column":18}},{"start":{"line":615,"column":22},"end":{"line":615,"column":39}}]},"41":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":4},"end":{"line":617,"column":4}},{"start":{"line":617,"column":4},"end":{"line":617,"column":4}}]},"42":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":8},"end":{"line":617,"column":14}},{"start":{"line":617,"column":18},"end":{"line":617,"column":40}}]},"43":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":2},"end":{"line":644,"column":2}},{"start":{"line":644,"column":2},"end":{"line":644,"column":2}}]},"44":{"line":644,"type":"binary-expr","locations":[{"start":{"line":644,"column":6},"end":{"line":644,"column":22}},{"start":{"line":644,"column":26},"end":{"line":644,"column":32}},{"start":{"line":644,"column":36},"end":{"line":644,"column":50}}]},"45":{"line":652,"type":"if","locations":[{"start":{"line":652,"column":2},"end":{"line":652,"column":2}},{"start":{"line":652,"column":2},"end":{"line":652,"column":2}}]},"46":{"line":652,"type":"binary-expr","locations":[{"start":{"line":652,"column":6},"end":{"line":652,"column":16}},{"start":{"line":652,"column":20},"end":{"line":652,"column":35}}]},"47":{"line":675,"type":"if","locations":[{"start":{"line":675,"column":2},"end":{"line":675,"column":2}},{"start":{"line":675,"column":2},"end":{"line":675,"column":2}}]},"48":{"line":722,"type":"if","locations":[{"start":{"line":722,"column":2},"end":{"line":722,"column":2}},{"start":{"line":722,"column":2},"end":{"line":722,"column":2}}]},"49":{"line":727,"type":"if","locations":[{"start":{"line":727,"column":4},"end":{"line":727,"column":4}},{"start":{"line":727,"column":4},"end":{"line":727,"column":4}}]},"50":{"line":730,"type":"if","locations":[{"start":{"line":730,"column":4},"end":{"line":730,"column":4}},{"start":{"line":730,"column":4},"end":{"line":730,"column":4}}]},"51":{"line":730,"type":"binary-expr","locations":[{"start":{"line":730,"column":8},"end":{"line":730,"column":24}},{"start":{"line":730,"column":28},"end":{"line":730,"column":30}}]},"52":{"line":731,"type":"binary-expr","locations":[{"start":{"line":731,"column":6},"end":{"line":731,"column":13}},{"start":{"line":731,"column":17},"end":{"line":731,"column":25}}]},"53":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":4},"end":{"line":740,"column":4}},{"start":{"line":740,"column":4},"end":{"line":740,"column":4}}]},"54":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":4},"end":{"line":751,"column":4}},{"start":{"line":751,"column":4},"end":{"line":751,"column":4}}]},"55":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":11},"end":{"line":753,"column":11}},{"start":{"line":753,"column":11},"end":{"line":753,"column":11}}]},"56":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":6},"end":{"line":754,"column":6}},{"start":{"line":754,"column":6},"end":{"line":754,"column":6}}]},"57":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":10},"end":{"line":754,"column":29}},{"start":{"line":754,"column":33},"end":{"line":754,"column":50}}]},"58":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":6},"end":{"line":758,"column":6}},{"start":{"line":758,"column":6},"end":{"line":758,"column":6}}]},"59":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":13},"end":{"line":760,"column":13}},{"start":{"line":760,"column":13},"end":{"line":760,"column":13}}]},"60":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":17},"end":{"line":760,"column":39}},{"start":{"line":760,"column":43},"end":{"line":760,"column":78}}]},"61":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":8},"end":{"line":770,"column":8}},{"start":{"line":770,"column":8},"end":{"line":770,"column":8}}]},"62":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":12},"end":{"line":770,"column":14}},{"start":{"line":770,"column":18},"end":{"line":770,"column":47}}]},"63":{"line":792,"type":"if","locations":[{"start":{"line":792,"column":4},"end":{"line":792,"column":4}},{"start":{"line":792,"column":4},"end":{"line":792,"column":4}}]},"64":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":4},"end":{"line":795,"column":4}},{"start":{"line":795,"column":4},"end":{"line":795,"column":4}}]},"65":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":2},"end":{"line":800,"column":2}},{"start":{"line":800,"column":2},"end":{"line":800,"column":2}}]},"66":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":2},"end":{"line":829,"column":2}},{"start":{"line":829,"column":2},"end":{"line":829,"column":2}}]},"67":{"line":834,"type":"if","locations":[{"start":{"line":834,"column":4},"end":{"line":834,"column":4}},{"start":{"line":834,"column":4},"end":{"line":834,"column":4}}]},"68":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":4},"end":{"line":837,"column":4}},{"start":{"line":837,"column":4},"end":{"line":837,"column":4}}]},"69":{"line":837,"type":"binary-expr","locations":[{"start":{"line":837,"column":8},"end":{"line":837,"column":24}},{"start":{"line":837,"column":28},"end":{"line":837,"column":31}}]},"70":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":2},"end":{"line":843,"column":2}},{"start":{"line":843,"column":2},"end":{"line":843,"column":2}}]},"71":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":4},"end":{"line":844,"column":4}},{"start":{"line":844,"column":4},"end":{"line":844,"column":4}}]},"72":{"line":844,"type":"binary-expr","locations":[{"start":{"line":844,"column":8},"end":{"line":844,"column":34}},{"start":{"line":844,"column":38},"end":{"line":844,"column":76}}]},"73":{"line":852,"type":"if","locations":[{"start":{"line":852,"column":4},"end":{"line":852,"column":4}},{"start":{"line":852,"column":4},"end":{"line":852,"column":4}}]},"74":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":4},"end":{"line":862,"column":4}},{"start":{"line":862,"column":4},"end":{"line":862,"column":4}}]},"75":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":11},"end":{"line":864,"column":11}},{"start":{"line":864,"column":11},"end":{"line":864,"column":11}}]},"76":{"line":866,"type":"if","locations":[{"start":{"line":866,"column":6},"end":{"line":866,"column":6}},{"start":{"line":866,"column":6},"end":{"line":866,"column":6}}]},"77":{"line":866,"type":"binary-expr","locations":[{"start":{"line":866,"column":10},"end":{"line":866,"column":32}},{"start":{"line":866,"column":36},"end":{"line":866,"column":64}}]},"78":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":12},"end":{"line":894,"column":16}},{"start":{"line":894,"column":20},"end":{"line":894,"column":32}},{"start":{"line":894,"column":36},"end":{"line":894,"column":52}}]},"79":{"line":896,"type":"if","locations":[{"start":{"line":896,"column":2},"end":{"line":896,"column":2}},{"start":{"line":896,"column":2},"end":{"line":896,"column":2}}]},"80":{"line":896,"type":"binary-expr","locations":[{"start":{"line":896,"column":6},"end":{"line":896,"column":10}},{"start":{"line":896,"column":14},"end":{"line":896,"column":17}},{"start":{"line":896,"column":21},"end":{"line":896,"column":36}}]},"81":{"line":901,"type":"cond-expr","locations":[{"start":{"line":901,"column":36},"end":{"line":901,"column":55}},{"start":{"line":901,"column":58},"end":{"line":901,"column":61}}]},"82":{"line":905,"type":"if","locations":[{"start":{"line":905,"column":2},"end":{"line":905,"column":2}},{"start":{"line":905,"column":2},"end":{"line":905,"column":2}}]},"83":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":4},"end":{"line":906,"column":4}},{"start":{"line":906,"column":4},"end":{"line":906,"column":4}}]},"84":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":4},"end":{"line":909,"column":4}},{"start":{"line":909,"column":4},"end":{"line":909,"column":4}}]},"85":{"line":909,"type":"binary-expr","locations":[{"start":{"line":909,"column":8},"end":{"line":909,"column":31}},{"start":{"line":910,"column":8},"end":{"line":910,"column":36}},{"start":{"line":911,"column":11},"end":{"line":911,"column":32}}]},"86":{"line":934,"type":"if","locations":[{"start":{"line":934,"column":2},"end":{"line":934,"column":2}},{"start":{"line":934,"column":2},"end":{"line":934,"column":2}}]},"87":{"line":966,"type":"if","locations":[{"start":{"line":966,"column":2},"end":{"line":966,"column":2}},{"start":{"line":966,"column":2},"end":{"line":966,"column":2}}]},"88":{"line":968,"type":"if","locations":[{"start":{"line":968,"column":4},"end":{"line":968,"column":4}},{"start":{"line":968,"column":4},"end":{"line":968,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var $exists = require('./schema/operators/exists');","var $type = require('./schema/operators/type');","var utils = require('./utils');","var MongooseError = require('./error');","var CastError = MongooseError.CastError;","var ValidatorError = MongooseError.ValidatorError;","","/**"," * SchemaType constructor"," *"," * @param {String} path"," * @param {Object} [options]"," * @param {String} [instance]"," * @api public"," */","","function SchemaType(path, options, instance) {","  this.path = path;","  this.instance = instance;","  this.validators = [];","  this.setters = [];","  this.getters = [];","  this.options = options;","  this._index = null;","  this.selected;","","  for (var i in options) {","    if (this[i] && typeof this[i] === 'function') {","      // { unique: true, index: true }","      if (i === 'index' && this._index) {","        continue;","      }","","      var opts = Array.isArray(options[i])","          ? options[i]","          : [options[i]];","","      this[i].apply(this, opts);","    }","  }","}","","/**"," * Sets a default value for this SchemaType."," *"," * ####Example:"," *"," *     var schema = new Schema({ n: { type: Number, default: 10 })"," *     var M = db.model('M', schema)"," *     var m = new M;"," *     console.log(m.n) // 10"," *"," * Defaults can be either `functions` which return the value to use as the default or the literal value itself. Either way, the value will be cast based on its schema type before being set during document creation."," *"," * ####Example:"," *"," *     // values are cast:"," *     var schema = new Schema({ aNumber: { type: Number, default: 4.815162342 }})"," *     var M = db.model('M', schema)"," *     var m = new M;"," *     console.log(m.aNumber) // 4.815162342"," *"," *     // default unique objects for Mixed types:"," *     var schema = new Schema({ mixed: Schema.Types.Mixed });"," *     schema.path('mixed').default(function () {"," *       return {};"," *     });"," *"," *     // if we don't use a function to return object literals for Mixed defaults,"," *     // each document will receive a reference to the same object literal creating"," *     // a \"shared\" object instance:"," *     var schema = new Schema({ mixed: Schema.Types.Mixed });"," *     schema.path('mixed').default({});"," *     var M = db.model('M', schema);"," *     var m1 = new M;"," *     m1.mixed.added = 1;"," *     console.log(m1.mixed); // { added: 1 }"," *     var m2 = new M;"," *     console.log(m2.mixed); // { added: 1 }"," *"," * @param {Function|any} val the default value"," * @return {defaultValue}"," * @api public"," */","","SchemaType.prototype.default = function(val) {","  if (arguments.length === 1) {","    if (val === void 0) {","      this.defaultValue = void 0;","      return void 0;","    }","    this.defaultValue = val;","    return this.defaultValue;","  } else if (arguments.length > 1) {","    this.defaultValue = utils.args(arguments);","  }","  return this.defaultValue;","};","","/**"," * Declares the index options for this schematype."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, index: true })"," *     var s = new Schema({ loc: { type: [Number], index: 'hashed' })"," *     var s = new Schema({ loc: { type: [Number], index: '2d', sparse: true })"," *     var s = new Schema({ loc: { type: [Number], index: { type: '2dsphere', sparse: true }})"," *     var s = new Schema({ date: { type: Date, index: { unique: true, expires: '1d' }})"," *     Schema.path('my.path').index(true);"," *     Schema.path('my.date').index({ expires: 60 });"," *     Schema.path('my.path').index({ unique: true, sparse: true });"," *"," * ####NOTE:"," *"," * _Indexes are created in the background by default. Specify `background: false` to override._"," *"," * [Direction doesn't matter for single key indexes](http://www.mongodb.org/display/DOCS/Indexes#Indexes-CompoundKeysIndexes)"," *"," * @param {Object|Boolean|String} options"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.index = function(options) {","  this._index = options;","  utils.expires(this._index);","  return this;","};","","/**"," * Declares an unique index."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, unique: true }});"," *     Schema.path('name').index({ unique: true });"," *"," * _NOTE: violating the constraint returns an `E11000` error from MongoDB when saving, not a Mongoose validation error._"," *"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.unique = function(bool) {","  if (this._index === false) {","    if (!bool) {","      return;","    }","    throw new Error('Path \"' + this.path + '\" may not have `index` set to ' +","      'false and `unique` set to true');","  }","  if (this._index == null || this._index === true) {","    this._index = {};","  } else if (typeof this._index === 'string') {","    this._index = {type: this._index};","  }","","  this._index.unique = bool;","  return this;","};","","/**"," * Declares a full text index."," *"," * ###Example:"," *"," *      var s = new Schema({name : {type: String, text : true })"," *      Schema.path('name').index({text : true});"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.text = function(bool) {","  if (this._index === null || this._index === undefined ||","    typeof this._index === 'boolean') {","    this._index = {};","  } else if (typeof this._index === 'string') {","    this._index = {type: this._index};","  }","","  this._index.text = bool;","  return this;","};","","/**"," * Declares a sparse index."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, sparse: true })"," *     Schema.path('name').index({ sparse: true });"," *"," * @param {Boolean} bool"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.sparse = function(bool) {","  if (this._index === null || this._index === undefined ||","    typeof this._index === 'boolean') {","    this._index = {};","  } else if (typeof this._index === 'string') {","    this._index = {type: this._index};","  }","","  this._index.sparse = bool;","  return this;","};","","/**"," * Adds a setter to this schematype."," *"," * ####Example:"," *"," *     function capitalize (val) {"," *       if (typeof val !== 'string') val = '';"," *       return val.charAt(0).toUpperCase() + val.substring(1);"," *     }"," *"," *     // defining within the schema"," *     var s = new Schema({ name: { type: String, set: capitalize }})"," *"," *     // or by retreiving its SchemaType"," *     var s = new Schema({ name: String })"," *     s.path('name').set(capitalize)"," *"," * Setters allow you to transform the data before it gets to the raw mongodb document and is set as a value on an actual key."," *"," * Suppose you are implementing user registration for a website. Users provide an email and password, which gets saved to mongodb. The email is a string that you will want to normalize to lower case, in order to avoid one email having more than one account -- e.g., otherwise, avenue@q.com can be registered for 2 accounts via avenue@q.com and AvEnUe@Q.CoM."," *"," * You can set up email lower case normalization easily via a Mongoose setter."," *"," *     function toLower (v) {"," *       return v.toLowerCase();"," *     }"," *"," *     var UserSchema = new Schema({"," *       email: { type: String, set: toLower }"," *     })"," *"," *     var User = db.model('User', UserSchema)"," *"," *     var user = new User({email: 'AVENUE@Q.COM'})"," *     console.log(user.email); // 'avenue@q.com'"," *"," *     // or"," *     var user = new User"," *     user.email = 'Avenue@Q.com'"," *     console.log(user.email) // 'avenue@q.com'"," *"," * As you can see above, setters allow you to transform the data before it gets to the raw mongodb document and is set as a value on an actual key."," *"," * _NOTE: we could have also just used the built-in `lowercase: true` SchemaType option instead of defining our own function._"," *"," *     new Schema({ email: { type: String, lowercase: true }})"," *"," * Setters are also passed a second argument, the schematype on which the setter was defined. This allows for tailored behavior based on options passed in the schema."," *"," *     function inspector (val, schematype) {"," *       if (schematype.options.required) {"," *         return schematype.path + ' is required';"," *       } else {"," *         return val;"," *       }"," *     }"," *"," *     var VirusSchema = new Schema({"," *       name: { type: String, required: true, set: inspector },"," *       taxonomy: { type: String, set: inspector }"," *     })"," *"," *     var Virus = db.model('Virus', VirusSchema);"," *     var v = new Virus({ name: 'Parvoviridae', taxonomy: 'Parvovirinae' });"," *"," *     console.log(v.name);     // name is required"," *     console.log(v.taxonomy); // Parvovirinae"," *"," * @param {Function} fn"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.set = function(fn) {","  if (typeof fn !== 'function') {","    throw new TypeError('A setter must be a function.');","  }","  this.setters.push(fn);","  return this;","};","","/**"," * Adds a getter to this schematype."," *"," * ####Example:"," *"," *     function dob (val) {"," *       if (!val) return val;"," *       return (val.getMonth() + 1) + \"/\" + val.getDate() + \"/\" + val.getFullYear();"," *     }"," *"," *     // defining within the schema"," *     var s = new Schema({ born: { type: Date, get: dob })"," *"," *     // or by retreiving its SchemaType"," *     var s = new Schema({ born: Date })"," *     s.path('born').get(dob)"," *"," * Getters allow you to transform the representation of the data as it travels from the raw mongodb document to the value that you see."," *"," * Suppose you are storing credit card numbers and you want to hide everything except the last 4 digits to the mongoose user. You can do so by defining a getter in the following way:"," *"," *     function obfuscate (cc) {"," *       return '****-****-****-' + cc.slice(cc.length-4, cc.length);"," *     }"," *"," *     var AccountSchema = new Schema({"," *       creditCardNumber: { type: String, get: obfuscate }"," *     });"," *"," *     var Account = db.model('Account', AccountSchema);"," *"," *     Account.findById(id, function (err, found) {"," *       console.log(found.creditCardNumber); // '****-****-****-1234'"," *     });"," *"," * Getters are also passed a second argument, the schematype on which the getter was defined. This allows for tailored behavior based on options passed in the schema."," *"," *     function inspector (val, schematype) {"," *       if (schematype.options.required) {"," *         return schematype.path + ' is required';"," *       } else {"," *         return schematype.path + ' is not';"," *       }"," *     }"," *"," *     var VirusSchema = new Schema({"," *       name: { type: String, required: true, get: inspector },"," *       taxonomy: { type: String, get: inspector }"," *     })"," *"," *     var Virus = db.model('Virus', VirusSchema);"," *"," *     Virus.findById(id, function (err, virus) {"," *       console.log(virus.name);     // name is required"," *       console.log(virus.taxonomy); // taxonomy is not"," *     })"," *"," * @param {Function} fn"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.get = function(fn) {","  if (typeof fn !== 'function') {","    throw new TypeError('A getter must be a function.');","  }","  this.getters.push(fn);","  return this;","};","","/**"," * Adds validator(s) for this document path."," *"," * Validators always receive the value to validate as their first argument and must return `Boolean`. Returning `false` means validation failed."," *"," * The error message argument is optional. If not passed, the [default generic error message template](#error_messages_MongooseError-messages) will be used."," *"," * ####Examples:"," *"," *     // make sure every value is equal to \"something\""," *     function validator (val) {"," *       return val == 'something';"," *     }"," *     new Schema({ name: { type: String, validate: validator }});"," *"," *     // with a custom error message"," *"," *     var custom = [validator, 'Uh oh, {PATH} does not equal \"something\".']"," *     new Schema({ name: { type: String, validate: custom }});"," *"," *     // adding many validators at a time"," *"," *     var many = ["," *         { validator: validator, msg: 'uh oh' }"," *       , { validator: anotherValidator, msg: 'failed' }"," *     ]"," *     new Schema({ name: { type: String, validate: many }});"," *"," *     // or utilizing SchemaType methods directly:"," *"," *     var schema = new Schema({ name: 'string' });"," *     schema.path('name').validate(validator, 'validation of `{PATH}` failed with value `{VALUE}`');"," *"," * ####Error message templates:"," *"," * From the examples above, you may have noticed that error messages support basic templating. There are a few other template keywords besides `{PATH}` and `{VALUE}` too. To find out more, details are available [here](#error_messages_MongooseError.messages)"," *"," * ####Asynchronous validation:"," *"," * Passing a validator function that receives two arguments tells mongoose that the validator is an asynchronous validator. The first argument passed to the validator function is the value being validated. The second argument is a callback function that must called when you finish validating the value and passed either `true` or `false` to communicate either success or failure respectively."," *"," *     schema.path('name').validate({"," *       isAsync: true,"," *       validator: function (value, respond) {"," *         doStuff(value, function () {"," *           ..."," *           respond(false); // validation failed"," *         });"," *       },"," *       message: 'Custom error message!' // Optional"," *     });"," *"," *     // Can also return a promise"," *     schema.path('name').validate({"," *       isAsync: true,"," *       validator: function (value, respond) {"," *         return new Promise(resolve => {"," *           resolve(false); // validation failed"," *         });"," *       }"," *     });"," *"," * You might use asynchronous validators to retreive other documents from the database to validate against or to meet other I/O bound validation needs."," *"," * Validation occurs `pre('save')` or whenever you manually execute [document#validate](#document_Document-validate)."," *"," * If validation fails during `pre('save')` and no callback was passed to receive the error, an `error` event will be emitted on your Models associated db [connection](#connection_Connection), passing the validation error object along."," *"," *     var conn = mongoose.createConnection(..);"," *     conn.on('error', handleError);"," *"," *     var Product = conn.model('Product', yourSchema);"," *     var dvd = new Product(..);"," *     dvd.save(); // emits error on the `conn` above"," *"," * If you desire handling these errors at the Model level, attach an `error` listener to your Model and the event will instead be emitted there."," *"," *     // registering an error listener on the Model lets us handle errors more locally"," *     Product.on('error', handleError);"," *"," * @param {RegExp|Function|Object} obj validator"," * @param {String} [errorMsg] optional error message"," * @param {String} [type] optional validator type"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.validate = function(obj, message, type) {","  if (typeof obj === 'function' || obj && utils.getFunctionName(obj.constructor) === 'RegExp') {","    var properties;","    if (message instanceof Object && !type) {","      properties = utils.clone(message);","      if (!properties.message) {","        properties.message = properties.msg;","      }","      properties.validator = obj;","      properties.type = properties.type || 'user defined';","    } else {","      if (!message) {","        message = MongooseError.messages.general.default;","      }","      if (!type) {","        type = 'user defined';","      }","      properties = {message: message, type: type, validator: obj};","    }","    this.validators.push(properties);","    return this;","  }","","  var i,","      length,","      arg;","","  for (i = 0, length = arguments.length; i < length; i++) {","    arg = arguments[i];","    if (!(arg && utils.getFunctionName(arg.constructor) === 'Object')) {","      var msg = 'Invalid validator. Received (' + typeof arg + ') '","          + arg","          + '. See http://mongoosejs.com/docs/api.html#schematype_SchemaType-validate';","","      throw new Error(msg);","    }","    this.validate(arg.validator, arg);","  }","","  return this;","};","","/**"," * Adds a required validator to this SchemaType. The validator gets added"," * to the front of this SchemaType's validators array using `unshift()`."," *"," * ####Example:"," *"," *     var s = new Schema({ born: { type: Date, required: true })"," *"," *     // or with custom error message"," *"," *     var s = new Schema({ born: { type: Date, required: '{PATH} is required!' })"," *"," *     // or with a function"," *"," *     var s = new Schema({"," *       userId: ObjectId,"," *       username: {"," *         type: String,"," *         required: function() { return this.userId != null; }"," *       }"," *     })"," *"," *     // or with a function and a custom message"," *     var s = new Schema({"," *       userId: ObjectId,"," *       username: {"," *         type: String,"," *         required: ["," *           function() { return this.userId != null; },"," *           'username is required if id is specified'"," *         ]"," *       }"," *     })"," *"," *     // or through the path API"," *"," *     Schema.path('name').required(true);"," *"," *     // with custom error messaging"," *"," *     Schema.path('name').required(true, 'grrr :( ');"," *"," *     // or make a path conditionally required based on a function"," *     var isOver18 = function() { return this.age >= 18; };"," *     Schema.path('voterRegistrationId').required(isOver18);"," *"," * The required validator uses the SchemaType's `checkRequired` function to"," * determine whether a given value satisfies the required validator. By default,"," * a value satisfies the required validator if `val != null` (that is, if"," * the value is not null nor undefined). However, most built-in mongoose schema"," * types override the default `checkRequired` function:"," *"," * @param {Boolean} required enable/disable the validator"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @see SchemaArray#checkRequired #schema_array_SchemaArray.checkRequired"," * @see SchemaBoolean#checkRequired #schema_boolean_SchemaBoolean-checkRequired"," * @see SchemaBuffer#checkRequired #schema_buffer_SchemaBuffer.schemaName"," * @see SchemaNumber#checkRequired #schema_number_SchemaNumber-min"," * @see SchemaObjectId#checkRequired #schema_objectid_ObjectId-auto"," * @see SchemaString#checkRequired #schema_string_SchemaString-checkRequired"," * @api public"," */","","SchemaType.prototype.required = function(required, message) {","  if (required === false) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.requiredValidator;","    }, this);","","    this.isRequired = false;","    return this;","  }","","  var _this = this;","  this.isRequired = true;","","  this.requiredValidator = function(v) {","    // in here, `this` refers to the validating document.","    // no validation when this path wasn't selected in the query.","    if ('isSelected' in this && !this.isSelected(_this.path) && !this.isModified(_this.path)) {","      return true;","    }","","    return ((typeof required === 'function') && !required.apply(this)) ||","        _this.checkRequired(v, this);","  };","  this.originalRequiredValue = required;","","  if (typeof required === 'string') {","    message = required;","    required = undefined;","  }","","  var msg = message || MongooseError.messages.general.required;","  this.validators.unshift({","    validator: this.requiredValidator,","    message: msg,","    type: 'required'","  });","","  return this;","};","","/**"," * Gets the default value"," *"," * @param {Object} scope the scope which callback are executed"," * @param {Boolean} init"," * @api private"," */","","SchemaType.prototype.getDefault = function(scope, init) {","  var ret = typeof this.defaultValue === 'function'","      ? this.defaultValue.call(scope)","      : this.defaultValue;","","  if (ret !== null && ret !== undefined) {","    var casted = this.cast(ret, scope, init);","    if (casted && casted.$isSingleNested) {","      casted.$parent = scope;","    }","    return casted;","  }","  return ret;","};","","/**"," * Applies setters"," *"," * @param {Object} value"," * @param {Object} scope"," * @param {Boolean} init"," * @api private"," */","","SchemaType.prototype.applySetters = function(value, scope, init, priorVal, options) {","  var v = value,","      setters = this.setters,","      len = setters.length,","      caster = this.caster;","","  while (len--) {","    v = setters[len].call(scope, v, this);","  }","","  if (Array.isArray(v) && caster && caster.setters) {","    var newVal = [];","    for (var i = 0; i < v.length; i++) {","      newVal.push(caster.applySetters(v[i], scope, init, priorVal));","    }","    v = newVal;","  }","","  if (v === null || v === undefined) {","    return v;","  }","","  // do not cast until all setters are applied #665","  v = this.cast(v, scope, init, priorVal, options);","","  return v;","};","","/**"," * Applies getters to a value"," *"," * @param {Object} value"," * @param {Object} scope"," * @api private"," */","","SchemaType.prototype.applyGetters = function(value, scope) {","  var v = value,","      getters = this.getters,","      len = getters.length;","","  if (!len) {","    return v;","  }","","  while (len--) {","    v = getters[len].call(scope, v, this);","  }","","  return v;","};","","/**"," * Sets default `select()` behavior for this path."," *"," * Set to `true` if this path should always be included in the results, `false` if it should be excluded by default. This setting can be overridden at the query level."," *"," * ####Example:"," *"," *     T = db.model('T', new Schema({ x: { type: String, select: true }}));"," *     T.find(..); // field x will always be selected .."," *     // .. unless overridden;"," *     T.find().select('-x').exec(callback);"," *"," * @param {Boolean} val"," * @return {SchemaType} this"," * @api public"," */","","SchemaType.prototype.select = function select(val) {","  this.selected = !!val;","  return this;","};","","/**"," * Performs a validation of `value` using the validators declared for this SchemaType."," *"," * @param {any} value"," * @param {Function} callback"," * @param {Object} scope"," * @api private"," */","","SchemaType.prototype.doValidate = function(value, fn, scope) {","  var err = false;","  var path = this.path;","  var count = this.validators.length;","","  if (!count) {","    return fn(null);","  }","","  var validate = function(ok, validatorProperties) {","    if (err) {","      return;","    }","    if (ok === undefined || ok) {","      --count || fn(null);","    } else {","      err = new ValidatorError(validatorProperties);","      fn(err);","    }","  };","","  var _this = this;","  this.validators.forEach(function(v) {","    if (err) {","      return;","    }","","    var validator = v.validator;","    var ok;","","    var validatorProperties = utils.clone(v);","    validatorProperties.path = path;","    validatorProperties.value = value;","","    if (validator instanceof RegExp) {","      validate(validator.test(value), validatorProperties);","    } else if (typeof validator === 'function') {","      if (value === undefined && !_this.isRequired) {","        validate(true, validatorProperties);","        return;","      }","      if (validatorProperties.isAsync) {","        asyncValidate(validator, scope, value, validatorProperties, validate);","      } else if (validator.length === 2 && !('isAsync' in validatorProperties)) {","        legacyAsyncValidate(validator, scope, value, validatorProperties,","          validate);","      } else {","        try {","          ok = validator.call(scope, value);","        } catch (error) {","          ok = false;","          validatorProperties.reason = error;","        }","        if (ok && typeof ok.then === 'function') {","          ok.then(","            function(ok) { validate(ok, validatorProperties); },","            function(error) {","              validatorProperties.reason = error;","              ok = false;","              validate(ok, validatorProperties);","            });","        } else {","          validate(ok, validatorProperties);","        }","      }","    }","  });","};","","/*!"," * Handle async validators"," */","","function asyncValidate(validator, scope, value, props, cb) {","  var returnVal = validator.call(scope, value, function(ok, customMsg) {","    if (typeof returnVal === 'boolean') {","      return;","    }","    if (customMsg) {","      props.message = customMsg;","    }","    cb(ok, props);","  });","  if (typeof returnVal === 'boolean') {","    cb(returnVal, props);","  }","}","","var legacyAsyncValidate = require('util').deprecate(asyncValidate,","  'Implicit async custom validators (custom validators that take 2 ' +","  'arguments) are deprecated in mongoose >= 4.9.0. See ' +","  'http://mongoosejs.com/docs/validation.html#async-custom-validators for ' +","  'more info.');","","/**"," * Performs a validation of `value` using the validators declared for this SchemaType."," *"," * ####Note:"," *"," * This method ignores the asynchronous validators."," *"," * @param {any} value"," * @param {Object} scope"," * @return {MongooseError|undefined}"," * @api private"," */","","SchemaType.prototype.doValidateSync = function(value, scope) {","  var err = null,","      path = this.path,","      count = this.validators.length;","","  if (!count) {","    return null;","  }","","  var validate = function(ok, validatorProperties) {","    if (err) {","      return;","    }","    if (ok !== undefined && !ok) {","      err = new ValidatorError(validatorProperties);","    }","  };","","  var validators = this.validators;","  if (value === void 0) {","    if (this.validators.length > 0 && this.validators[0].type === 'required') {","      validators = [this.validators[0]];","    } else {","      return null;","    }","  }","","  validators.forEach(function(v) {","    if (err) {","      return;","    }","","    var validator = v.validator;","    var validatorProperties = utils.clone(v);","    validatorProperties.path = path;","    validatorProperties.value = value;","    var ok;","","    if (validator instanceof RegExp) {","      validate(validator.test(value), validatorProperties);","    } else if (typeof validator === 'function') {","      // if not async validators","      if (validator.length !== 2 && !validatorProperties.isAsync) {","        try {","          ok = validator.call(scope, value);","        } catch (error) {","          ok = false;","          validatorProperties.reason = error;","        }","        validate(ok, validatorProperties);","      }","    }","  });","","  return err;","};","","/**"," * Determines if value is a valid Reference."," *"," * @param {SchemaType} self"," * @param {Object} value"," * @param {Document} doc"," * @param {Boolean} init"," * @return {Boolean}"," * @api private"," */","","SchemaType._isRef = function(self, value, doc, init) {","  // fast path","  var ref = init && self.options && self.options.ref;","","  if (!ref && doc && doc.$__fullPath) {","    // checks for","    // - this populated with adhoc model and no ref was set in schema OR","    // - setting / pushing values after population","    var path = doc.$__fullPath(self.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    ref = owner.populated(path);","  }","","  if (ref) {","    if (value == null) {","      return true;","    }","    if (!Buffer.isBuffer(value) &&  // buffers are objects too","        value._bsontype !== 'Binary' // raw binary value from the db","        && utils.isObject(value)    // might have deselected _id in population query","    ) {","      return true;","    }","  }","","  return false;","};","","/*!"," * ignore"," */","","function handleSingle(val) {","  return this.castForQuery(val);","}","","/*!"," * ignore"," */","","function handleArray(val) {","  var _this = this;","  if (!Array.isArray(val)) {","    return [this.castForQuery(val)];","  }","  return val.map(function(m) {","    return _this.castForQuery(m);","  });","}","","/*!"," * ignore"," */","","SchemaType.prototype.$conditionalHandlers = {","  $all: handleArray,","  $eq: handleSingle,","  $in: handleArray,","  $ne: handleSingle,","  $nin: handleArray,","  $exists: $exists,","  $type: $type","};","","/**"," * Cast the given value with the given optional query operator."," *"," * @param {String} [$conditional] query operator, like `$eq` or `$in`"," * @param {any} val"," * @api private"," */","","SchemaType.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional);","    }","    return handler.call(this, val);","  }","  val = $conditional;","  return this.cast(val);","};","","/**"," * Default check for if this path satisfies the `required` validator."," *"," * @param {any} val"," * @api private"," */","","SchemaType.prototype.checkRequired = function(val) {","  return val != null;","};","","/*!"," * Module exports."," */","","module.exports = exports = SchemaType;","","exports.CastError = CastError;","","exports.ValidatorError = ValidatorError;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"32":0,"34":0,"35":0,"38":0,"42":0,"90":1,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"99":0,"101":0,"129":1,"130":0,"131":0,"132":0,"150":1,"151":0,"152":0,"153":0,"155":0,"158":0,"159":0,"160":0,"161":0,"164":0,"165":0,"180":1,"181":0,"183":0,"184":0,"185":0,"188":0,"189":0,"205":1,"206":0,"208":0,"209":0,"210":0,"213":0,"214":0,"290":1,"291":0,"292":0,"294":0,"295":0,"360":1,"361":0,"362":0,"364":0,"365":0,"455":1,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"463":0,"464":0,"466":0,"467":0,"469":0,"470":0,"472":0,"474":0,"475":0,"478":0,"482":0,"483":0,"484":0,"485":0,"489":0,"491":0,"494":0,"562":1,"563":0,"564":0,"565":0,"568":0,"569":0,"572":0,"573":0,"575":0,"578":0,"579":0,"582":0,"585":0,"587":0,"588":0,"589":0,"592":0,"593":0,"599":0,"610":1,"611":0,"615":0,"616":0,"617":0,"618":0,"620":0,"622":0,"634":1,"635":0,"640":0,"641":0,"644":0,"645":0,"646":0,"647":0,"649":0,"652":0,"653":0,"657":0,"659":0,"670":1,"671":0,"675":0,"676":0,"679":0,"680":0,"683":0,"703":1,"704":0,"705":0,"717":1,"718":0,"719":0,"720":0,"722":0,"723":0,"726":0,"727":0,"728":0,"730":0,"731":0,"733":0,"734":0,"738":0,"739":0,"740":0,"741":0,"744":0,"745":0,"747":0,"748":0,"749":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"758":0,"759":0,"760":0,"761":0,"764":0,"765":0,"767":0,"768":0,"770":0,"771":0,"772":0,"774":0,"775":0,"776":0,"779":0,"790":1,"791":0,"792":0,"793":0,"795":0,"796":0,"798":0,"800":0,"801":0,"805":1,"824":1,"825":0,"829":0,"830":0,"833":0,"834":0,"835":0,"837":0,"838":0,"842":0,"843":0,"844":0,"845":0,"847":0,"851":0,"852":0,"853":0,"856":0,"857":0,"858":0,"859":0,"860":0,"862":0,"863":0,"864":0,"866":0,"867":0,"868":0,"870":0,"871":0,"873":0,"878":0,"892":1,"894":0,"896":0,"900":0,"901":0,"902":0,"905":0,"906":0,"907":0,"909":0,"913":0,"917":0,"924":1,"925":0,"932":1,"933":0,"934":0,"935":0,"937":0,"938":0,"946":1,"964":1,"965":0,"966":0,"967":0,"968":0,"969":0,"971":0,"973":0,"974":0,"984":1,"985":0,"992":1,"994":1,"996":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/exists.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/exists.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":31}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":60}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":13}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]}},"code":["'use strict';","","/*!"," * ignore"," */","","module.exports = function(val) {","  if (typeof val !== 'boolean') {","    throw new Error('$exists parameter must be a boolean!');","  }","","  return val;","};",""],"l":{"7":1,"8":0,"9":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/type.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/type.js","s":{"1":1,"2":0,"3":0,"4":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":31}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":13,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":10,"column":3}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":64}},"4":{"start":{"line":12,"column":2},"end":{"line":12,"column":13}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":2},"end":{"line":8,"column":2}},{"start":{"line":8,"column":2},"end":{"line":8,"column":2}}]},"2":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":6},"end":{"line":8,"column":29}},{"start":{"line":8,"column":33},"end":{"line":8,"column":56}}]}},"code":["'use strict';","","/*!"," * ignore"," */","","module.exports = function(val) {","  if (typeof val !== 'number' && typeof val !== 'string') {","    throw new Error('$type parameter must be number or string');","  }","","  return val;","};",""],"l":{"7":1,"8":0,"9":0,"12":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MongooseError","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":10,"column":2},"end":{"line":10,"column":19}},"3":{"start":{"line":11,"column":2},"end":{"line":15,"column":3}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"5":{"start":{"line":14,"column":4},"end":{"line":14,"column":35}},"6":{"start":{"line":16,"column":2},"end":{"line":16,"column":21}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":30}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":57}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":44}},"10":{"start":{"line":31,"column":0},"end":{"line":31,"column":41}},"11":{"start":{"line":40,"column":0},"end":{"line":40,"column":53}},"12":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"13":{"start":{"line":49,"column":0},"end":{"line":49,"column":50}},"14":{"start":{"line":50,"column":0},"end":{"line":50,"column":66}},"15":{"start":{"line":51,"column":0},"end":{"line":51,"column":62}},"16":{"start":{"line":52,"column":0},"end":{"line":52,"column":60}},"17":{"start":{"line":53,"column":0},"end":{"line":53,"column":56}},"18":{"start":{"line":54,"column":0},"end":{"line":54,"column":70}},"19":{"start":{"line":55,"column":0},"end":{"line":55,"column":68}},"20":{"start":{"line":56,"column":0},"end":{"line":56,"column":70}}},"branchMap":{"1":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]}},"code":["","/**"," * MongooseError constructor"," *"," * @param {String} msg Error message"," * @inherits Error https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error"," */","","function MongooseError(msg) {","  Error.call(this);","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.message = msg;","  this.name = 'MongooseError';","}","","/*!"," * Inherits from Error."," */","","MongooseError.prototype = Object.create(Error.prototype);","MongooseError.prototype.constructor = Error;","","/*!"," * Module exports."," */","","module.exports = exports = MongooseError;","","/**"," * The default built-in validator error messages."," *"," * @see Error.messages #error_messages_MongooseError-messages"," * @api public"," */","","MongooseError.messages = require('./error/messages');","","// backward compat","MongooseError.Messages = MongooseError.messages;","","/*!"," * Expose subclasses"," */","","MongooseError.CastError = require('./error/cast');","MongooseError.DocumentNotFoundError = require('./error/notFound');","MongooseError.ValidationError = require('./error/validation');","MongooseError.ValidatorError = require('./error/validator');","MongooseError.VersionError = require('./error/version');","MongooseError.OverwriteModelError = require('./error/overwriteModel');","MongooseError.MissingSchemaError = require('./error/missingSchema');","MongooseError.DivergentArrayError = require('./error/divergentArray');",""],"l":{"9":1,"10":0,"11":0,"12":0,"14":0,"16":0,"17":0,"24":1,"25":1,"31":1,"40":1,"43":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/messages.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/messages.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":40}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":17}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":80}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":52}},"5":{"start":{"line":30,"column":0},"end":{"line":30,"column":16}},"6":{"start":{"line":31,"column":0},"end":{"line":31,"column":87}},"7":{"start":{"line":32,"column":0},"end":{"line":32,"column":87}},"8":{"start":{"line":34,"column":0},"end":{"line":34,"column":14}},"9":{"start":{"line":35,"column":0},"end":{"line":35,"column":82}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":81}},"11":{"start":{"line":38,"column":0},"end":{"line":38,"column":16}},"12":{"start":{"line":39,"column":0},"end":{"line":39,"column":75}},"13":{"start":{"line":40,"column":0},"end":{"line":40,"column":57}},"14":{"start":{"line":41,"column":0},"end":{"line":41,"column":109}},"15":{"start":{"line":42,"column":0},"end":{"line":42,"column":108}}},"branchMap":{},"code":["","/**"," * The default built-in validator error messages. These may be customized."," *"," *     // customize within each schema or globally like so"," *     var mongoose = require('mongoose');"," *     mongoose.Error.messages.String.enum  = \"Your custom message for {PATH}.\";"," *"," * As you might have noticed, error messages support basic templating"," *"," * - `{PATH}` is replaced with the invalid document path"," * - `{VALUE}` is replaced with the invalid value"," * - `{TYPE}` is replaced with the validator type such as \"regexp\", \"min\", or \"user defined\""," * - `{MIN}` is replaced with the declared min value for the Number.min validator"," * - `{MAX}` is replaced with the declared max value for the Number.max validator"," *"," * Click the \"show code\" link below to see all defaults."," *"," * @static messages"," * @receiver MongooseError"," * @api public"," */","","var msg = module.exports = exports = {};","","msg.general = {};","msg.general.default = 'Validator failed for path `{PATH}` with value `{VALUE}`';","msg.general.required = 'Path `{PATH}` is required.';","","msg.Number = {};","msg.Number.min = 'Path `{PATH}` ({VALUE}) is less than minimum allowed value ({MIN}).';","msg.Number.max = 'Path `{PATH}` ({VALUE}) is more than maximum allowed value ({MAX}).';","","msg.Date = {};","msg.Date.min = 'Path `{PATH}` ({VALUE}) is before minimum allowed value ({MIN}).';","msg.Date.max = 'Path `{PATH}` ({VALUE}) is after maximum allowed value ({MAX}).';","","msg.String = {};","msg.String.enum = '`{VALUE}` is not a valid enum value for path `{PATH}`.';","msg.String.match = 'Path `{PATH}` is invalid ({VALUE}).';","msg.String.minlength = 'Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).';","msg.String.maxlength = 'Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length ({MAXLENGTH}).';",""],"l":{"24":1,"26":1,"27":1,"28":1,"30":1,"31":1,"32":1,"34":1,"35":1,"36":1,"38":1,"39":1,"40":1,"41":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/cast.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/cast.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"CastError","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":31},"end":{"line":49,"column":47}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":17,"column":0},"end":{"line":36,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":40}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":66}},"6":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"7":{"start":{"line":21,"column":4},"end":{"line":21,"column":42}},"8":{"start":{"line":23,"column":2},"end":{"line":24,"column":45}},"9":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":34}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":35}},"12":{"start":{"line":30,"column":2},"end":{"line":30,"column":33}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"14":{"start":{"line":32,"column":2},"end":{"line":32,"column":19}},"15":{"start":{"line":33,"column":2},"end":{"line":33,"column":21}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":19}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"18":{"start":{"line":42,"column":0},"end":{"line":42,"column":61}},"19":{"start":{"line":43,"column":0},"end":{"line":43,"column":48}},"20":{"start":{"line":49,"column":0},"end":{"line":54,"column":2}},"21":{"start":{"line":50,"column":2},"end":{"line":50,"column":21}},"22":{"start":{"line":51,"column":2},"end":{"line":53,"column":26}},"23":{"start":{"line":60,"column":0},"end":{"line":60,"column":27}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","var util = require('util');","","/**"," * Casting Error constructor."," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function CastError(type, value, path, reason) {","  var stringValue = util.inspect(value);","  stringValue = stringValue.replace(/^'/, '\"').replace(/'$/, '\"');","  if (stringValue.charAt(0) !== '\"') {","    stringValue = '\"' + stringValue + '\"';","  }","  MongooseError.call(this, 'Cast to ' + type + ' failed for value ' +","    stringValue + ' at path \"' + path + '\"');","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.stringValue = stringValue;","  this.name = 'CastError';","  this.kind = type;","  this.value = value;","  this.path = path;","  this.reason = reason;","}","","/*!"," * Inherits from MongooseError."," */","","CastError.prototype = Object.create(MongooseError.prototype);","CastError.prototype.constructor = MongooseError;","","/*!"," * ignore"," */","","CastError.prototype.setModel = function(model) {","  this.model = model;","  this.message = 'Cast to ' + this.kind + ' failed for value ' +","    this.stringValue + ' at path \"' + this.path + '\"' + ' for model \"' +","    model.modelName + '\"';","};","","/*!"," * exports"," */","","module.exports = CastError;",""],"l":{"5":1,"6":1,"17":1,"18":0,"19":0,"20":0,"21":0,"23":0,"25":0,"26":0,"28":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"42":1,"43":1,"49":1,"50":0,"51":0,"60":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/notFound.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/notFound.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"DocumentNotFoundError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":38}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"3":{"start":{"line":16,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":17,"column":2},"end":{"line":18,"column":31}},"5":{"start":{"line":20,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"8":{"start":{"line":26,"column":2},"end":{"line":26,"column":38}},"9":{"start":{"line":27,"column":2},"end":{"line":27,"column":21}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":73}},"11":{"start":{"line":35,"column":0},"end":{"line":35,"column":60}},"12":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["'use strict';","","/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","var util = require('util');","","/*!"," * OverwriteModel Error constructor."," *"," * @inherits MongooseError"," */","","function DocumentNotFoundError(query) {","  MongooseError.call(this, 'No document found for query \"' +","    util.inspect(query) + '\"');","","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","","  this.name = 'DocumentNotFoundError';","  this.query = query;","}","","/*!"," * Inherits from MongooseError."," */","","DocumentNotFoundError.prototype = Object.create(MongooseError.prototype);","DocumentNotFoundError.prototype.constructor = MongooseError;","","/*!"," * exports"," */","","module.exports = DocumentNotFoundError;",""],"l":{"7":1,"8":1,"16":1,"17":0,"20":0,"21":0,"23":0,"26":0,"27":0,"34":1,"35":1,"41":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/validation.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/validation.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ValidationError","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":37},"end":{"line":45,"column":48}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":41},"end":{"line":49,"column":55}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":15,"column":0},"end":{"line":31,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":19}},"4":{"start":{"line":17,"column":2},"end":{"line":21,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":84}},"6":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"7":{"start":{"line":22,"column":2},"end":{"line":26,"column":3}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":34}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":35}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":32}},"11":{"start":{"line":28,"column":2},"end":{"line":30,"column":3}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"13":{"start":{"line":37,"column":0},"end":{"line":37,"column":67}},"14":{"start":{"line":38,"column":0},"end":{"line":38,"column":54}},"15":{"start":{"line":45,"column":0},"end":{"line":57,"column":2}},"16":{"start":{"line":46,"column":2},"end":{"line":46,"column":29}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":16}},"18":{"start":{"line":49,"column":2},"end":{"line":54,"column":11}},"19":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":13}},"21":{"start":{"line":53,"column":4},"end":{"line":53,"column":40}},"22":{"start":{"line":56,"column":2},"end":{"line":56,"column":31}},"23":{"start":{"line":63,"column":0},"end":{"line":63,"column":43}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":14}},{"start":{"line":17,"column":18},"end":{"line":17,"column":55}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"5":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":14},"end":{"line":49,"column":25}},{"start":{"line":49,"column":29},"end":{"line":49,"column":31}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]}},"code":["/*!"," * Module requirements"," */","","var MongooseError = require('../error.js');","","/**"," * Document Validation Error"," *"," * @api private"," * @param {Document} instance"," * @inherits MongooseError"," */","","function ValidationError(instance) {","  this.errors = {};","  if (instance && instance.constructor.name === 'model') {","    MongooseError.call(this, instance.constructor.modelName + ' validation failed');","  } else {","    MongooseError.call(this, 'Validation failed');","  }","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.name = 'ValidationError';","  if (instance) {","    instance.errors = this.errors;","  }","}","","/*!"," * Inherits from MongooseError."," */","","ValidationError.prototype = Object.create(MongooseError.prototype);","ValidationError.prototype.constructor = MongooseError;","","","/**"," * Console.log helper"," */","","ValidationError.prototype.toString = function() {","  var ret = this.name + ': ';","  var msgs = [];","","  Object.keys(this.errors || {}).forEach(function(key) {","    if (this === this.errors[key]) {","      return;","    }","    msgs.push(String(this.errors[key]));","  }, this);","","  return ret + msgs.join(', ');","};","","/*!"," * Module exports"," */","","module.exports = exports = ValidationError;",""],"l":{"5":1,"15":1,"16":0,"17":0,"18":0,"20":0,"22":0,"23":0,"25":0,"27":0,"28":0,"29":0,"37":1,"38":1,"45":1,"46":0,"47":0,"49":0,"50":0,"51":0,"53":0,"56":0,"63":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/validator.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/validator.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"ValidatorError","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}}},"2":{"name":"(anonymous_2)","line":58,"loc":{"start":{"line":58,"column":41},"end":{"line":58,"column":67}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":36},"end":{"line":74,"column":47}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":15,"column":0},"end":{"line":34,"column":1}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":31}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":49}},"6":{"start":{"line":21,"column":2},"end":{"line":21,"column":52}},"7":{"start":{"line":22,"column":2},"end":{"line":22,"column":36}},"8":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":34}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":35}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":31}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":30}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":32}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":34}},"17":{"start":{"line":40,"column":0},"end":{"line":40,"column":66}},"18":{"start":{"line":41,"column":0},"end":{"line":41,"column":53}},"19":{"start":{"line":48,"column":0},"end":{"line":52,"column":3}},"20":{"start":{"line":58,"column":0},"end":{"line":68,"column":2}},"21":{"start":{"line":59,"column":2},"end":{"line":59,"column":46}},"22":{"start":{"line":60,"column":2},"end":{"line":66,"column":3}},"23":{"start":{"line":61,"column":4},"end":{"line":61,"column":40}},"24":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"25":{"start":{"line":63,"column":6},"end":{"line":63,"column":15}},"26":{"start":{"line":65,"column":4},"end":{"line":65,"column":88}},"27":{"start":{"line":67,"column":2},"end":{"line":67,"column":13}},"28":{"start":{"line":74,"column":0},"end":{"line":76,"column":2}},"29":{"start":{"line":75,"column":2},"end":{"line":75,"column":22}},"30":{"start":{"line":82,"column":0},"end":{"line":82,"column":32}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/**"," * Schema validator error"," *"," * @param {Object} properties"," * @inherits MongooseError"," * @api private"," */","","function ValidatorError(properties) {","  var msg = properties.message;","  if (!msg) {","    msg = MongooseError.messages.general.default;","  }","","  var message = this.formatMessage(msg, properties);","  MongooseError.call(this, message);","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.properties = properties;","  this.name = 'ValidatorError';","  this.kind = properties.type;","  this.path = properties.path;","  this.value = properties.value;","  this.reason = properties.reason;","}","","/*!"," * Inherits from MongooseError"," */","","ValidatorError.prototype = Object.create(MongooseError.prototype);","ValidatorError.prototype.constructor = MongooseError;","","/*!"," * The object used to define this validator. Not enumerable to hide"," * it from `require('util').inspect()` output re: gh-3925"," */","","Object.defineProperty(ValidatorError.prototype, 'properties', {","  enumerable: false,","  writable: true,","  value: null","});","","/*!"," * Formats error messages"," */","","ValidatorError.prototype.formatMessage = function(msg, properties) {","  var propertyNames = Object.keys(properties);","  for (var i = 0; i < propertyNames.length; ++i) {","    var propertyName = propertyNames[i];","    if (propertyName === 'message') {","      continue;","    }","    msg = msg.replace('{' + propertyName.toUpperCase() + '}', properties[propertyName]);","  }","  return msg;","};","","/*!"," * toString helper"," */","","ValidatorError.prototype.toString = function() {","  return this.message;","};","","/*!"," * exports"," */","","module.exports = ValidatorError;",""],"l":{"5":1,"15":1,"16":0,"17":0,"18":0,"21":0,"22":0,"23":0,"24":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"40":1,"41":1,"48":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"65":0,"67":0,"74":1,"75":0,"82":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/version.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"VersionError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":27}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":18,"column":9}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":29}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":64}},"6":{"start":{"line":27,"column":0},"end":{"line":27,"column":51}},"7":{"start":{"line":33,"column":0},"end":{"line":33,"column":30}}},"branchMap":{},"code":["'use strict';","","/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/**"," * Version Error constructor."," *"," * @inherits MongooseError"," * @api private"," */","","function VersionError(doc) {","  MongooseError.call(this, 'No matching document found for id \"' + doc._id +","    '\"');","  this.name = 'VersionError';","}","","/*!"," * Inherits from MongooseError."," */","","VersionError.prototype = Object.create(MongooseError.prototype);","VersionError.prototype.constructor = MongooseError;","","/*!"," * exports"," */","","module.exports = VersionError;",""],"l":{"7":1,"16":1,"17":0,"19":0,"26":1,"27":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/overwriteModel.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/overwriteModel.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"OverwriteModelError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":18,"column":1}},"3":{"start":{"line":15,"column":2},"end":{"line":15,"column":83}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":77}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":36}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":71}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":58}},"8":{"start":{"line":31,"column":0},"end":{"line":31,"column":37}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},{"start":{"line":16,"column":29},"end":{"line":16,"column":76}}]}},"code":["","/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/*!"," * OverwriteModel Error constructor."," *"," * @inherits MongooseError"," */","","function OverwriteModelError(name) {","  MongooseError.call(this, 'Cannot overwrite `' + name + '` model once compiled.');","  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);","  this.name = 'OverwriteModelError';","}","","/*!"," * Inherits from MongooseError."," */","","OverwriteModelError.prototype = Object.create(MongooseError.prototype);","OverwriteModelError.prototype.constructor = MongooseError;","","/*!"," * exports"," */","","module.exports = OverwriteModelError;",""],"l":{"6":1,"14":1,"15":0,"16":0,"17":0,"24":1,"25":1,"31":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/missingSchema.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/missingSchema.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"MissingSchemaError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":20,"column":1}},"3":{"start":{"line":15,"column":2},"end":{"line":16,"column":47}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":32}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":77}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":35}},"7":{"start":{"line":26,"column":0},"end":{"line":26,"column":70}},"8":{"start":{"line":27,"column":0},"end":{"line":27,"column":57}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"branchMap":{"1":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":25}},{"start":{"line":18,"column":29},"end":{"line":18,"column":76}}]}},"code":["","/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/*!"," * MissingSchema Error constructor."," *"," * @inherits MongooseError"," */","","function MissingSchemaError(name) {","  var msg = 'Schema hasn\\'t been registered for model \"' + name + '\".\\n'","          + 'Use mongoose.model(name, schema)';","  MongooseError.call(this, msg);","  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);","  this.name = 'MissingSchemaError';","}","","/*!"," * Inherits from MongooseError."," */","","MissingSchemaError.prototype = Object.create(MongooseError.prototype);","MissingSchemaError.prototype.constructor = MongooseError;","","/*!"," * exports"," */","","module.exports = MissingSchemaError;",""],"l":{"6":1,"14":1,"15":0,"17":0,"18":0,"19":0,"26":1,"27":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/divergentArray.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/divergentArray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"DivergentArrayError","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"2":{"start":{"line":14,"column":0},"end":{"line":28,"column":1}},"3":{"start":{"line":15,"column":2},"end":{"line":22,"column":65}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":32}},"5":{"start":{"line":26,"column":2},"end":{"line":26,"column":77}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":36}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":71}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":58}},"9":{"start":{"line":42,"column":0},"end":{"line":42,"column":37}}},"branchMap":{"1":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":25}},{"start":{"line":26,"column":29},"end":{"line":26,"column":76}}]}},"code":["","/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/*!"," * DivergentArrayError constructor."," *"," * @inherits MongooseError"," */","","function DivergentArrayError(paths) {","  var msg = 'For your own good, using `document.save()` to update an array '","          + 'which was selected using an $elemMatch projection OR '","          + 'populated using skip, limit, query conditions, or exclusion of '","          + 'the _id field when the operation results in a $pop or $set of '","          + 'the entire array is not supported. The following '","          + 'path(s) would have been modified unsafely:\\n'","          + '  ' + paths.join('\\n  ') + '\\n'","          + 'Use Model.update() to update these arrays instead.';","          // TODO write up a docs page (FAQ) and link to it","","  MongooseError.call(this, msg);","  Error.captureStackTrace && Error.captureStackTrace(this, arguments.callee);","  this.name = 'DivergentArrayError';","}","","/*!"," * Inherits from MongooseError."," */","","DivergentArrayError.prototype = Object.create(MongooseError.prototype);","DivergentArrayError.prototype.constructor = MongooseError;","","","/*!"," * exports"," */","","module.exports = DivergentArrayError;",""],"l":{"6":1,"14":1,"15":0,"25":0,"26":0,"27":0,"34":1,"35":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":39}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"6":{"start":{"line":16,"column":0},"end":{"line":16,"column":35}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":33}},"9":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"10":{"start":{"line":24,"column":0},"end":{"line":24,"column":35}},"11":{"start":{"line":26,"column":0},"end":{"line":26,"column":63}},"12":{"start":{"line":30,"column":0},"end":{"line":30,"column":31}},"13":{"start":{"line":31,"column":0},"end":{"line":31,"column":31}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":31}}},"branchMap":{},"code":["","/*!"," * Module exports."," */","","exports.String = require('./string');","","exports.Number = require('./number');","","exports.Boolean = require('./boolean');","","exports.DocumentArray = require('./documentarray');","","exports.Embedded = require('./embedded');","","exports.Array = require('./array');","","exports.Buffer = require('./buffer');","","exports.Date = require('./date');","","exports.ObjectId = require('./objectid');","","exports.Mixed = require('./mixed');","","exports.Decimal128 = exports.Decimal = require('./decimal128');","","// alias","","exports.Oid = exports.ObjectId;","exports.Object = exports.Mixed;","exports.Bool = exports.Boolean;",""],"l":{"6":1,"8":1,"10":1,"12":1,"14":1,"16":1,"18":1,"20":1,"22":1,"24":1,"26":1,"30":1,"31":1,"32":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/string.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/string.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"SchemaString","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":36}}},"2":{"name":"(anonymous_2)","line":75,"loc":{"start":{"line":75,"column":30},"end":{"line":75,"column":41}}},"3":{"name":"(anonymous_3)","line":77,"loc":{"start":{"line":77,"column":45},"end":{"line":77,"column":57}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":23},"end":{"line":105,"column":35}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":35},"end":{"line":132,"column":57}}},"6":{"name":"(anonymous_6)","line":136,"loc":{"start":{"line":136,"column":18},"end":{"line":136,"column":36}}},"7":{"name":"(anonymous_7)","line":161,"loc":{"start":{"line":161,"column":35},"end":{"line":161,"column":57}}},"8":{"name":"(anonymous_8)","line":165,"loc":{"start":{"line":165,"column":18},"end":{"line":165,"column":36}}},"9":{"name":"(anonymous_9)","line":194,"loc":{"start":{"line":194,"column":30},"end":{"line":194,"column":51}}},"10":{"name":"(anonymous_10)","line":198,"loc":{"start":{"line":198,"column":18},"end":{"line":198,"column":36}}},"11":{"name":"(anonymous_11)","line":240,"loc":{"start":{"line":240,"column":35},"end":{"line":240,"column":60}}},"12":{"name":"(anonymous_12)","line":242,"loc":{"start":{"line":242,"column":45},"end":{"line":242,"column":57}}},"13":{"name":"(anonymous_13)","line":251,"loc":{"start":{"line":251,"column":43},"end":{"line":251,"column":55}}},"14":{"name":"(anonymous_14)","line":294,"loc":{"start":{"line":294,"column":35},"end":{"line":294,"column":60}}},"15":{"name":"(anonymous_15)","line":296,"loc":{"start":{"line":296,"column":45},"end":{"line":296,"column":57}}},"16":{"name":"(anonymous_16)","line":305,"loc":{"start":{"line":305,"column":43},"end":{"line":305,"column":55}}},"17":{"name":"match","line":355,"loc":{"start":{"line":355,"column":31},"end":{"line":355,"column":63}}},"18":{"name":"(anonymous_18)","line":360,"loc":{"start":{"line":360,"column":23},"end":{"line":360,"column":35}}},"19":{"name":"checkRequired","line":389,"loc":{"start":{"line":389,"column":39},"end":{"line":389,"column":74}}},"20":{"name":"(anonymous_20)","line":402,"loc":{"start":{"line":402,"column":30},"end":{"line":402,"column":57}}},"21":{"name":"handleSingle","line":462,"loc":{"start":{"line":462,"column":0},"end":{"line":462,"column":27}}},"22":{"name":"handleArray","line":466,"loc":{"start":{"line":466,"column":0},"end":{"line":466,"column":26}}},"23":{"name":"(anonymous_23)","line":471,"loc":{"start":{"line":471,"column":17},"end":{"line":471,"column":29}}},"24":{"name":"(anonymous_24)","line":496,"loc":{"start":{"line":496,"column":38},"end":{"line":496,"column":66}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":13}},"6":{"start":{"line":20,"column":0},"end":{"line":24,"column":1}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":21}},"9":{"start":{"line":23,"column":2},"end":{"line":23,"column":48}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":35}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":61}},"12":{"start":{"line":38,"column":0},"end":{"line":38,"column":50}},"13":{"start":{"line":75,"column":0},"end":{"line":116,"column":2}},"14":{"start":{"line":76,"column":2},"end":{"line":81,"column":3}},"15":{"start":{"line":77,"column":4},"end":{"line":79,"column":13}},"16":{"start":{"line":78,"column":6},"end":{"line":78,"column":48}},"17":{"start":{"line":80,"column":4},"end":{"line":80,"column":31}},"18":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"19":{"start":{"line":84,"column":4},"end":{"line":84,"column":16}},"20":{"start":{"line":87,"column":2},"end":{"line":87,"column":13}},"21":{"start":{"line":88,"column":2},"end":{"line":88,"column":19}},"22":{"start":{"line":90,"column":2},"end":{"line":96,"column":3}},"23":{"start":{"line":91,"column":4},"end":{"line":91,"column":33}},"24":{"start":{"line":92,"column":4},"end":{"line":92,"column":40}},"25":{"start":{"line":94,"column":4},"end":{"line":94,"column":23}},"26":{"start":{"line":95,"column":4},"end":{"line":95,"column":54}},"27":{"start":{"line":98,"column":2},"end":{"line":102,"column":3}},"28":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"29":{"start":{"line":100,"column":6},"end":{"line":100,"column":49}},"30":{"start":{"line":104,"column":2},"end":{"line":104,"column":29}},"31":{"start":{"line":105,"column":2},"end":{"line":107,"column":4}},"32":{"start":{"line":106,"column":4},"end":{"line":106,"column":47}},"33":{"start":{"line":108,"column":2},"end":{"line":113,"column":5}},"34":{"start":{"line":115,"column":2},"end":{"line":115,"column":14}},"35":{"start":{"line":132,"column":0},"end":{"line":145,"column":2}},"36":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"37":{"start":{"line":134,"column":4},"end":{"line":134,"column":16}},"38":{"start":{"line":136,"column":2},"end":{"line":144,"column":5}},"39":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"40":{"start":{"line":138,"column":6},"end":{"line":138,"column":23}},"41":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"42":{"start":{"line":141,"column":6},"end":{"line":141,"column":29}},"43":{"start":{"line":143,"column":4},"end":{"line":143,"column":13}},"44":{"start":{"line":161,"column":0},"end":{"line":174,"column":2}},"45":{"start":{"line":162,"column":2},"end":{"line":164,"column":3}},"46":{"start":{"line":163,"column":4},"end":{"line":163,"column":16}},"47":{"start":{"line":165,"column":2},"end":{"line":173,"column":5}},"48":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"49":{"start":{"line":167,"column":6},"end":{"line":167,"column":23}},"50":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"51":{"start":{"line":170,"column":6},"end":{"line":170,"column":29}},"52":{"start":{"line":172,"column":4},"end":{"line":172,"column":13}},"53":{"start":{"line":194,"column":0},"end":{"line":207,"column":2}},"54":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"55":{"start":{"line":196,"column":4},"end":{"line":196,"column":16}},"56":{"start":{"line":198,"column":2},"end":{"line":206,"column":5}},"57":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"58":{"start":{"line":200,"column":6},"end":{"line":200,"column":23}},"59":{"start":{"line":202,"column":4},"end":{"line":204,"column":5}},"60":{"start":{"line":203,"column":6},"end":{"line":203,"column":22}},"61":{"start":{"line":205,"column":4},"end":{"line":205,"column":13}},"62":{"start":{"line":240,"column":0},"end":{"line":261,"column":2}},"63":{"start":{"line":241,"column":2},"end":{"line":245,"column":3}},"64":{"start":{"line":242,"column":4},"end":{"line":244,"column":13}},"65":{"start":{"line":243,"column":6},"end":{"line":243,"column":53}},"66":{"start":{"line":247,"column":2},"end":{"line":258,"column":3}},"67":{"start":{"line":248,"column":4},"end":{"line":248,"column":65}},"68":{"start":{"line":249,"column":4},"end":{"line":249,"column":44}},"69":{"start":{"line":250,"column":4},"end":{"line":257,"column":7}},"70":{"start":{"line":252,"column":8},"end":{"line":252,"column":47}},"71":{"start":{"line":260,"column":2},"end":{"line":260,"column":14}},"72":{"start":{"line":294,"column":0},"end":{"line":315,"column":2}},"73":{"start":{"line":295,"column":2},"end":{"line":299,"column":3}},"74":{"start":{"line":296,"column":4},"end":{"line":298,"column":13}},"75":{"start":{"line":297,"column":6},"end":{"line":297,"column":53}},"76":{"start":{"line":301,"column":2},"end":{"line":312,"column":3}},"77":{"start":{"line":302,"column":4},"end":{"line":302,"column":65}},"78":{"start":{"line":303,"column":4},"end":{"line":303,"column":44}},"79":{"start":{"line":304,"column":4},"end":{"line":311,"column":7}},"80":{"start":{"line":306,"column":8},"end":{"line":306,"column":47}},"81":{"start":{"line":314,"column":2},"end":{"line":314,"column":14}},"82":{"start":{"line":355,"column":0},"end":{"line":378,"column":2}},"83":{"start":{"line":358,"column":2},"end":{"line":358,"column":59}},"84":{"start":{"line":360,"column":2},"end":{"line":369,"column":4}},"85":{"start":{"line":361,"column":4},"end":{"line":363,"column":5}},"86":{"start":{"line":362,"column":6},"end":{"line":362,"column":19}},"87":{"start":{"line":365,"column":4},"end":{"line":367,"column":16}},"88":{"start":{"line":368,"column":4},"end":{"line":368,"column":15}},"89":{"start":{"line":371,"column":2},"end":{"line":376,"column":5}},"90":{"start":{"line":377,"column":2},"end":{"line":377,"column":14}},"91":{"start":{"line":389,"column":0},"end":{"line":394,"column":2}},"92":{"start":{"line":390,"column":2},"end":{"line":392,"column":3}},"93":{"start":{"line":391,"column":4},"end":{"line":391,"column":19}},"94":{"start":{"line":393,"column":2},"end":{"line":393,"column":80}},"95":{"start":{"line":402,"column":0},"end":{"line":456,"column":2}},"96":{"start":{"line":403,"column":2},"end":{"line":434,"column":3}},"97":{"start":{"line":406,"column":4},"end":{"line":408,"column":5}},"98":{"start":{"line":407,"column":6},"end":{"line":407,"column":19}},"99":{"start":{"line":411,"column":4},"end":{"line":411,"column":54}},"100":{"start":{"line":413,"column":4},"end":{"line":416,"column":5}},"101":{"start":{"line":414,"column":6},"end":{"line":414,"column":36}},"102":{"start":{"line":415,"column":6},"end":{"line":415,"column":19}},"103":{"start":{"line":419,"column":4},"end":{"line":423,"column":5}},"104":{"start":{"line":420,"column":6},"end":{"line":420,"column":19}},"105":{"start":{"line":421,"column":11},"end":{"line":423,"column":5}},"106":{"start":{"line":422,"column":6},"end":{"line":422,"column":54}},"107":{"start":{"line":428,"column":4},"end":{"line":428,"column":42}},"108":{"start":{"line":429,"column":4},"end":{"line":429,"column":62}},"109":{"start":{"line":430,"column":4},"end":{"line":430,"column":42}},"110":{"start":{"line":431,"column":4},"end":{"line":431,"column":43}},"111":{"start":{"line":432,"column":4},"end":{"line":432,"column":32}},"112":{"start":{"line":433,"column":4},"end":{"line":433,"column":15}},"113":{"start":{"line":437,"column":2},"end":{"line":439,"column":3}},"114":{"start":{"line":438,"column":4},"end":{"line":438,"column":17}},"115":{"start":{"line":441,"column":2},"end":{"line":453,"column":3}},"116":{"start":{"line":443,"column":4},"end":{"line":445,"column":5}},"117":{"start":{"line":444,"column":6},"end":{"line":444,"column":23}},"118":{"start":{"line":450,"column":4},"end":{"line":452,"column":5}},"119":{"start":{"line":451,"column":6},"end":{"line":451,"column":30}},"120":{"start":{"line":455,"column":2},"end":{"line":455,"column":50}},"121":{"start":{"line":462,"column":0},"end":{"line":464,"column":1}},"122":{"start":{"line":463,"column":2},"end":{"line":463,"column":32}},"123":{"start":{"line":466,"column":0},"end":{"line":474,"column":1}},"124":{"start":{"line":467,"column":2},"end":{"line":467,"column":19}},"125":{"start":{"line":468,"column":2},"end":{"line":470,"column":3}},"126":{"start":{"line":469,"column":4},"end":{"line":469,"column":36}},"127":{"start":{"line":471,"column":2},"end":{"line":473,"column":5}},"128":{"start":{"line":472,"column":4},"end":{"line":472,"column":33}},"129":{"start":{"line":476,"column":0},"end":{"line":486,"column":7}},"130":{"start":{"line":496,"column":0},"end":{"line":510,"column":2}},"131":{"start":{"line":497,"column":2},"end":{"line":497,"column":14}},"132":{"start":{"line":498,"column":2},"end":{"line":504,"column":3}},"133":{"start":{"line":499,"column":4},"end":{"line":499,"column":54}},"134":{"start":{"line":500,"column":4},"end":{"line":502,"column":5}},"135":{"start":{"line":501,"column":6},"end":{"line":501,"column":70}},"136":{"start":{"line":503,"column":4},"end":{"line":503,"column":35}},"137":{"start":{"line":505,"column":2},"end":{"line":505,"column":21}},"138":{"start":{"line":506,"column":2},"end":{"line":508,"column":3}},"139":{"start":{"line":507,"column":4},"end":{"line":507,"column":15}},"140":{"start":{"line":509,"column":2},"end":{"line":509,"column":24}},"141":{"start":{"line":516,"column":0},"end":{"line":516,"column":30}}},"branchMap":{"1":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"3":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":29}},{"start":{"line":83,"column":33},"end":{"line":83,"column":55}}]},"4":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":2},"end":{"line":90,"column":2}},{"start":{"line":90,"column":2},"end":{"line":90,"column":2}}]},"5":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"6":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":11},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":46}}]},"7":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"8":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":26}},{"start":{"line":133,"column":30},"end":{"line":133,"column":42}}]},"9":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]},"10":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"11":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":2},"end":{"line":162,"column":2}},{"start":{"line":162,"column":2},"end":{"line":162,"column":2}}]},"12":{"line":162,"type":"binary-expr","locations":[{"start":{"line":162,"column":6},"end":{"line":162,"column":26}},{"start":{"line":162,"column":30},"end":{"line":162,"column":42}}]},"13":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"14":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"15":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"16":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":26}},{"start":{"line":195,"column":30},"end":{"line":195,"column":41}}]},"17":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"18":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"19":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":2},"end":{"line":241,"column":2}},{"start":{"line":241,"column":2},"end":{"line":241,"column":2}}]},"20":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]},"21":{"line":247,"type":"binary-expr","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":20}},{"start":{"line":247,"column":24},"end":{"line":247,"column":43}}]},"22":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":14},"end":{"line":248,"column":21}},{"start":{"line":248,"column":25},"end":{"line":248,"column":64}}]},"23":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":15},"end":{"line":252,"column":25}},{"start":{"line":252,"column":29},"end":{"line":252,"column":46}}]},"24":{"line":295,"type":"if","locations":[{"start":{"line":295,"column":2},"end":{"line":295,"column":2}},{"start":{"line":295,"column":2},"end":{"line":295,"column":2}}]},"25":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":2},"end":{"line":301,"column":2}},{"start":{"line":301,"column":2},"end":{"line":301,"column":2}}]},"26":{"line":301,"type":"binary-expr","locations":[{"start":{"line":301,"column":6},"end":{"line":301,"column":20}},{"start":{"line":301,"column":24},"end":{"line":301,"column":43}}]},"27":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":14},"end":{"line":302,"column":21}},{"start":{"line":302,"column":25},"end":{"line":302,"column":64}}]},"28":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":15},"end":{"line":306,"column":25}},{"start":{"line":306,"column":29},"end":{"line":306,"column":46}}]},"29":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":12},"end":{"line":358,"column":19}},{"start":{"line":358,"column":23},"end":{"line":358,"column":58}}]},"30":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"31":{"line":365,"type":"cond-expr","locations":[{"start":{"line":366,"column":10},"end":{"line":366,"column":24}},{"start":{"line":367,"column":10},"end":{"line":367,"column":14}}]},"32":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":16},"end":{"line":365,"column":25}},{"start":{"line":365,"column":29},"end":{"line":365,"column":37}}]},"33":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"34":{"line":393,"type":"binary-expr","locations":[{"start":{"line":393,"column":10},"end":{"line":393,"column":33}},{"start":{"line":393,"column":37},"end":{"line":393,"column":62}},{"start":{"line":393,"column":67},"end":{"line":393,"column":79}}]},"35":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":2},"end":{"line":403,"column":2}},{"start":{"line":403,"column":2},"end":{"line":403,"column":2}}]},"36":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":4},"end":{"line":406,"column":4}},{"start":{"line":406,"column":4},"end":{"line":406,"column":4}}]},"37":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":8},"end":{"line":406,"column":22}},{"start":{"line":406,"column":26},"end":{"line":406,"column":45}}]},"38":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":12}},{"start":{"line":411,"column":17},"end":{"line":411,"column":52}}]},"39":{"line":413,"type":"if","locations":[{"start":{"line":413,"column":4},"end":{"line":413,"column":4}},{"start":{"line":413,"column":4},"end":{"line":413,"column":4}}]},"40":{"line":419,"type":"if","locations":[{"start":{"line":419,"column":4},"end":{"line":419,"column":4}},{"start":{"line":419,"column":4},"end":{"line":419,"column":4}}]},"41":{"line":421,"type":"if","locations":[{"start":{"line":421,"column":11},"end":{"line":421,"column":11}},{"start":{"line":421,"column":11},"end":{"line":421,"column":11}}]},"42":{"line":421,"type":"binary-expr","locations":[{"start":{"line":421,"column":15},"end":{"line":421,"column":37}},{"start":{"line":421,"column":41},"end":{"line":421,"column":63}}]},"43":{"line":429,"type":"cond-expr","locations":[{"start":{"line":429,"column":36},"end":{"line":429,"column":55}},{"start":{"line":429,"column":58},"end":{"line":429,"column":61}}]},"44":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":2},"end":{"line":437,"column":2}},{"start":{"line":437,"column":2},"end":{"line":437,"column":2}}]},"45":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":20}},{"start":{"line":437,"column":24},"end":{"line":437,"column":43}}]},"46":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":2},"end":{"line":441,"column":2}},{"start":{"line":441,"column":2},"end":{"line":441,"column":2}}]},"47":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":4},"end":{"line":443,"column":4}},{"start":{"line":443,"column":4},"end":{"line":443,"column":4}}]},"48":{"line":443,"type":"binary-expr","locations":[{"start":{"line":443,"column":8},"end":{"line":443,"column":17}},{"start":{"line":443,"column":21},"end":{"line":443,"column":50}}]},"49":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":4},"end":{"line":450,"column":4}},{"start":{"line":450,"column":4},"end":{"line":450,"column":4}}]},"50":{"line":450,"type":"binary-expr","locations":[{"start":{"line":450,"column":8},"end":{"line":450,"column":22}},{"start":{"line":450,"column":26},"end":{"line":450,"column":70}}]},"51":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":2},"end":{"line":468,"column":2}},{"start":{"line":468,"column":2},"end":{"line":468,"column":2}}]},"52":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":2},"end":{"line":498,"column":2}},{"start":{"line":498,"column":2},"end":{"line":498,"column":2}}]},"53":{"line":500,"type":"if","locations":[{"start":{"line":500,"column":4},"end":{"line":500,"column":4}},{"start":{"line":500,"column":4},"end":{"line":500,"column":4}}]},"54":{"line":506,"type":"if","locations":[{"start":{"line":506,"column":2},"end":{"line":506,"column":2}},{"start":{"line":506,"column":2},"end":{"line":506,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","var CastError = SchemaType.CastError;","var MongooseError = require('../error');","var utils = require('../utils');","var Document;","","/**"," * String SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaString(key, options) {","  this.enumValues = [];","  this.regExp = null;","  SchemaType.call(this, key, options, 'String');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaString.schemaName = 'String';","","/*!"," * Inherits from SchemaType."," */","SchemaString.prototype = Object.create(SchemaType.prototype);","SchemaString.prototype.constructor = SchemaString;","","/**"," * Adds an enum validator"," *"," * ####Example:"," *"," *     var states = ['opening', 'open', 'closing', 'closed']"," *     var s = new Schema({ state: { type: String, enum: states }})"," *     var M = db.model('M', s)"," *     var m = new M({ state: 'invalid' })"," *     m.save(function (err) {"," *       console.error(String(err)) // ValidationError: `invalid` is not a valid enum value for path `state`."," *       m.state = 'open'"," *       m.save(callback) // success"," *     })"," *"," *     // or with custom error messages"," *     var enum = {"," *       values: ['opening', 'open', 'closing', 'closed'],"," *       message: 'enum validator failed for path `{PATH}` with value `{VALUE}`'"," *     }"," *     var s = new Schema({ state: { type: String, enum: enum })"," *     var M = db.model('M', s)"," *     var m = new M({ state: 'invalid' })"," *     m.save(function (err) {"," *       console.error(String(err)) // ValidationError: enum validator failed for path `state` with value `invalid`"," *       m.state = 'open'"," *       m.save(callback) // success"," *     })"," *"," * @param {String|Object} [args...] enumeration values"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.enum = function() {","  if (this.enumValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.enumValidator;","    }, this);","    this.enumValidator = false;","  }","","  if (arguments[0] === void 0 || arguments[0] === false) {","    return this;","  }","","  var values;","  var errorMessage;","","  if (utils.isObject(arguments[0])) {","    values = arguments[0].values;","    errorMessage = arguments[0].message;","  } else {","    values = arguments;","    errorMessage = MongooseError.messages.String.enum;","  }","","  for (var i = 0; i < values.length; i++) {","    if (undefined !== values[i]) {","      this.enumValues.push(this.cast(values[i]));","    }","  }","","  var vals = this.enumValues;","  this.enumValidator = function(v) {","    return undefined === v || ~vals.indexOf(v);","  };","  this.validators.push({","    validator: this.enumValidator,","    message: errorMessage,","    type: 'enum',","    enumValues: vals","  });","","  return this;","};","","/**"," * Adds a lowercase setter."," *"," * ####Example:"," *"," *     var s = new Schema({ email: { type: String, lowercase: true }})"," *     var M = db.model('M', s);"," *     var m = new M({ email: 'SomeEmail@example.COM' });"," *     console.log(m.email) // someemail@example.com"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.lowercase = function(shouldApply) {","  if (arguments.length > 0 && !shouldApply) {","    return this;","  }","  return this.set(function(v, self) {","    if (typeof v !== 'string') {","      v = self.cast(v);","    }","    if (v) {","      return v.toLowerCase();","    }","    return v;","  });","};","","/**"," * Adds an uppercase setter."," *"," * ####Example:"," *"," *     var s = new Schema({ caps: { type: String, uppercase: true }})"," *     var M = db.model('M', s);"," *     var m = new M({ caps: 'an example' });"," *     console.log(m.caps) // AN EXAMPLE"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.uppercase = function(shouldApply) {","  if (arguments.length > 0 && !shouldApply) {","    return this;","  }","  return this.set(function(v, self) {","    if (typeof v !== 'string') {","      v = self.cast(v);","    }","    if (v) {","      return v.toUpperCase();","    }","    return v;","  });","};","","/**"," * Adds a trim setter."," *"," * The string value will be trimmed when set."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, trim: true }})"," *     var M = db.model('M', s)"," *     var string = ' some name '"," *     console.log(string.length) // 11"," *     var m = new M({ name: string })"," *     console.log(m.name.length) // 9"," *"," * @api public"," * @return {SchemaType} this"," */","","SchemaString.prototype.trim = function(shouldTrim) {","  if (arguments.length > 0 && !shouldTrim) {","    return this;","  }","  return this.set(function(v, self) {","    if (typeof v !== 'string') {","      v = self.cast(v);","    }","    if (v) {","      return v.trim();","    }","    return v;","  });","};","","/**"," * Sets a minimum length validator."," *"," * ####Example:"," *"," *     var schema = new Schema({ postalCode: { type: String, minlength: 5 })"," *     var Address = db.model('Address', schema)"," *     var address = new Address({ postalCode: '9512' })"," *     address.save(function (err) {"," *       console.error(err) // validator error"," *       address.postalCode = '95125';"," *       address.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MINLENGTH} token which will be replaced with the minimum allowed length"," *     var minlength = [5, 'The value of path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length ({MINLENGTH}).'];"," *     var schema = new Schema({ postalCode: { type: String, minlength: minlength })"," *     var Address = mongoose.model('Address', schema);"," *     var address = new Address({ postalCode: '9512' });"," *     address.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512`) is shorter than the minimum length (5)."," *     })"," *"," * @param {Number} value minimum string length"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.minlength = function(value, message) {","  if (this.minlengthValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.minlengthValidator;","    }, this);","  }","","  if (value !== null && value !== undefined) {","    var msg = message || MongooseError.messages.String.minlength;","    msg = msg.replace(/{MINLENGTH}/, value);","    this.validators.push({","      validator: this.minlengthValidator = function(v) {","        return v === null || v.length >= value;","      },","      message: msg,","      type: 'minlength',","      minlength: value","    });","  }","","  return this;","};","","/**"," * Sets a maximum length validator."," *"," * ####Example:"," *"," *     var schema = new Schema({ postalCode: { type: String, maxlength: 9 })"," *     var Address = db.model('Address', schema)"," *     var address = new Address({ postalCode: '9512512345' })"," *     address.save(function (err) {"," *       console.error(err) // validator error"," *       address.postalCode = '95125';"," *       address.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAXLENGTH} token which will be replaced with the maximum allowed length"," *     var maxlength = [9, 'The value of path `{PATH}` (`{VALUE}`) exceeds the maximum allowed length ({MAXLENGTH}).'];"," *     var schema = new Schema({ postalCode: { type: String, maxlength: maxlength })"," *     var Address = mongoose.model('Address', schema);"," *     var address = new Address({ postalCode: '9512512345' });"," *     address.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `postalCode` (`9512512345`) exceeds the maximum allowed length (9)."," *     })"," *"," * @param {Number} value maximum string length"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.maxlength = function(value, message) {","  if (this.maxlengthValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.maxlengthValidator;","    }, this);","  }","","  if (value !== null && value !== undefined) {","    var msg = message || MongooseError.messages.String.maxlength;","    msg = msg.replace(/{MAXLENGTH}/, value);","    this.validators.push({","      validator: this.maxlengthValidator = function(v) {","        return v === null || v.length <= value;","      },","      message: msg,","      type: 'maxlength',","      maxlength: value","    });","  }","","  return this;","};","","/**"," * Sets a regexp validator."," *"," * Any value that does not pass `regExp`.test(val) will fail validation."," *"," * ####Example:"," *"," *     var s = new Schema({ name: { type: String, match: /^a/ }})"," *     var M = db.model('M', s)"," *     var m = new M({ name: 'I am invalid' })"," *     m.validate(function (err) {"," *       console.error(String(err)) // \"ValidationError: Path `name` is invalid (I am invalid).\""," *       m.name = 'apples'"," *       m.validate(function (err) {"," *         assert.ok(err) // success"," *       })"," *     })"," *"," *     // using a custom error message"," *     var match = [ /\\.html$/, \"That file doesn't end in .html ({VALUE})\" ];"," *     var s = new Schema({ file: { type: String, match: match }})"," *     var M = db.model('M', s);"," *     var m = new M({ file: 'invalid' });"," *     m.validate(function (err) {"," *       console.log(String(err)) // \"ValidationError: That file doesn't end in .html (invalid)\""," *     })"," *"," * Empty strings, `undefined`, and `null` values always pass the match validator. If you require these values, enable the `required` validator also."," *"," *     var s = new Schema({ name: { type: String, match: /^a/, required: true }})"," *"," * @param {RegExp} regExp regular expression to test against"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaString.prototype.match = function match(regExp, message) {","  // yes, we allow multiple match validators","","  var msg = message || MongooseError.messages.String.match;","","  var matchValidator = function(v) {","    if (!regExp) {","      return false;","    }","","    var ret = ((v != null && v !== '')","        ? regExp.test(v)","        : true);","    return ret;","  };","","  this.validators.push({","    validator: matchValidator,","    message: msg,","    type: 'regexp',","    regexp: regExp","  });","  return this;","};","","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaString.prototype.checkRequired = function checkRequired(value, doc) {","  if (SchemaType._isRef(this, value, doc, true)) {","    return !!value;","  }","  return (value instanceof String || typeof value === 'string') && value.length;","};","","/**"," * Casts to String"," *"," * @api private"," */","","SchemaString.prototype.cast = function(value, doc, init) {","  if (SchemaType._isRef(this, value, doc, init)) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","      return value;","    }","","    // lazy load","    Document || (Document = require('./../document'));","","    if (value instanceof Document) {","      value.$__.wasPopulated = true;","      return value;","    }","","    // setting a populated path","    if (typeof value === 'string') {","      return value;","    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {","      throw new CastError('string', value, this.path);","    }","","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    var pop = owner.populated(path, true);","    var ret = new pop.options.model(value);","    ret.$__.wasPopulated = true;","    return ret;","  }","","  // If null or undefined","  if (value === null || value === undefined) {","    return value;","  }","","  if (typeof value !== 'undefined') {","    // handle documents being passed","    if (value._id && typeof value._id === 'string') {","      return value._id;","    }","","    // Re: gh-647 and gh-3030, we're ok with casting using `toString()`","    // **unless** its the default Object.toString, because \"[object Object]\"","    // doesn't really qualify as useful data","    if (value.toString && value.toString !== Object.prototype.toString) {","      return value.toString();","    }","  }","","  throw new CastError('string', value, this.path);","};","","/*!"," * ignore"," */","","function handleSingle(val) {","  return this.castForQuery(val);","}","","function handleArray(val) {","  var _this = this;","  if (!Array.isArray(val)) {","    return [this.castForQuery(val)];","  }","  return val.map(function(m) {","    return _this.castForQuery(m);","  });","}","","SchemaString.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $all: handleArray,","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle,","      $options: handleSingle,","      $regex: handleSingle,","      $not: handleSingle","    });","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [val]"," * @api private"," */","","SchemaString.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with String.');","    }","    return handler.call(this, val);","  }","  val = $conditional;","  if (Object.prototype.toString.call(val) === '[object RegExp]') {","    return val;","  }","  return this.cast(val);","};","","/*!"," * Module exports."," */","","module.exports = SchemaString;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"20":1,"21":0,"22":0,"23":0,"32":1,"37":1,"38":1,"75":1,"76":0,"77":0,"78":0,"80":0,"83":0,"84":0,"87":0,"88":0,"90":0,"91":0,"92":0,"94":0,"95":0,"98":0,"99":0,"100":0,"104":0,"105":0,"106":0,"108":0,"115":0,"132":1,"133":0,"134":0,"136":0,"137":0,"138":0,"140":0,"141":0,"143":0,"161":1,"162":0,"163":0,"165":0,"166":0,"167":0,"169":0,"170":0,"172":0,"194":1,"195":0,"196":0,"198":0,"199":0,"200":0,"202":0,"203":0,"205":0,"240":1,"241":0,"242":0,"243":0,"247":0,"248":0,"249":0,"250":0,"252":0,"260":0,"294":1,"295":0,"296":0,"297":0,"301":0,"302":0,"303":0,"304":0,"306":0,"314":0,"355":1,"358":0,"360":0,"361":0,"362":0,"365":0,"368":0,"371":0,"377":0,"389":1,"390":0,"391":0,"393":0,"402":1,"403":0,"406":0,"407":0,"411":0,"413":0,"414":0,"415":0,"419":0,"420":0,"421":0,"422":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"437":0,"438":0,"441":0,"443":0,"444":0,"450":0,"451":0,"455":0,"462":1,"463":0,"466":1,"467":0,"468":0,"469":0,"471":0,"472":0,"476":1,"496":1,"497":0,"498":0,"499":0,"500":0,"501":0,"503":0,"505":0,"506":0,"507":0,"509":0,"516":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/number.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/number.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"SchemaNumber","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":36}}},"2":{"name":"checkRequired","line":48,"loc":{"start":{"line":48,"column":39},"end":{"line":48,"column":74}}},"3":{"name":"(anonymous_3)","line":86,"loc":{"start":{"line":86,"column":29},"end":{"line":86,"column":54}}},"4":{"name":"(anonymous_4)","line":88,"loc":{"start":{"line":88,"column":45},"end":{"line":88,"column":57}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":37},"end":{"line":97,"column":49}}},"6":{"name":"(anonymous_6)","line":140,"loc":{"start":{"line":140,"column":29},"end":{"line":140,"column":54}}},"7":{"name":"(anonymous_7)","line":142,"loc":{"start":{"line":142,"column":45},"end":{"line":142,"column":57}}},"8":{"name":"(anonymous_8)","line":151,"loc":{"start":{"line":151,"column":37},"end":{"line":151,"column":49}}},"9":{"name":"(anonymous_9)","line":172,"loc":{"start":{"line":172,"column":30},"end":{"line":172,"column":57}}},"10":{"name":"handleSingle","line":238,"loc":{"start":{"line":238,"column":0},"end":{"line":238,"column":27}}},"11":{"name":"handleArray","line":242,"loc":{"start":{"line":242,"column":0},"end":{"line":242,"column":26}}},"12":{"name":"(anonymous_12)","line":247,"loc":{"start":{"line":247,"column":17},"end":{"line":247,"column":29}}},"13":{"name":"(anonymous_13)","line":273,"loc":{"start":{"line":273,"column":38},"end":{"line":273,"column":66}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":59}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":13}},"7":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":48}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":35}},"10":{"start":{"line":36,"column":0},"end":{"line":36,"column":61}},"11":{"start":{"line":37,"column":0},"end":{"line":37,"column":50}},"12":{"start":{"line":48,"column":0},"end":{"line":53,"column":2}},"13":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"14":{"start":{"line":50,"column":4},"end":{"line":50,"column":19}},"15":{"start":{"line":52,"column":2},"end":{"line":52,"column":62}},"16":{"start":{"line":86,"column":0},"end":{"line":107,"column":2}},"17":{"start":{"line":87,"column":2},"end":{"line":91,"column":3}},"18":{"start":{"line":88,"column":4},"end":{"line":90,"column":13}},"19":{"start":{"line":89,"column":6},"end":{"line":89,"column":47}},"20":{"start":{"line":93,"column":2},"end":{"line":104,"column":3}},"21":{"start":{"line":94,"column":4},"end":{"line":94,"column":59}},"22":{"start":{"line":95,"column":4},"end":{"line":95,"column":38}},"23":{"start":{"line":96,"column":4},"end":{"line":103,"column":7}},"24":{"start":{"line":98,"column":8},"end":{"line":98,"column":39}},"25":{"start":{"line":106,"column":2},"end":{"line":106,"column":14}},"26":{"start":{"line":140,"column":0},"end":{"line":161,"column":2}},"27":{"start":{"line":141,"column":2},"end":{"line":145,"column":3}},"28":{"start":{"line":142,"column":4},"end":{"line":144,"column":13}},"29":{"start":{"line":143,"column":6},"end":{"line":143,"column":47}},"30":{"start":{"line":147,"column":2},"end":{"line":158,"column":3}},"31":{"start":{"line":148,"column":4},"end":{"line":148,"column":59}},"32":{"start":{"line":149,"column":4},"end":{"line":149,"column":38}},"33":{"start":{"line":150,"column":4},"end":{"line":157,"column":7}},"34":{"start":{"line":152,"column":8},"end":{"line":152,"column":39}},"35":{"start":{"line":160,"column":2},"end":{"line":160,"column":14}},"36":{"start":{"line":172,"column":0},"end":{"line":232,"column":2}},"37":{"start":{"line":173,"column":2},"end":{"line":204,"column":3}},"38":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"39":{"start":{"line":177,"column":6},"end":{"line":177,"column":19}},"40":{"start":{"line":181,"column":4},"end":{"line":181,"column":54}},"41":{"start":{"line":183,"column":4},"end":{"line":186,"column":5}},"42":{"start":{"line":184,"column":6},"end":{"line":184,"column":36}},"43":{"start":{"line":185,"column":6},"end":{"line":185,"column":19}},"44":{"start":{"line":189,"column":4},"end":{"line":193,"column":5}},"45":{"start":{"line":190,"column":6},"end":{"line":190,"column":19}},"46":{"start":{"line":191,"column":11},"end":{"line":193,"column":5}},"47":{"start":{"line":192,"column":6},"end":{"line":192,"column":54}},"48":{"start":{"line":198,"column":4},"end":{"line":198,"column":42}},"49":{"start":{"line":199,"column":4},"end":{"line":199,"column":62}},"50":{"start":{"line":200,"column":4},"end":{"line":200,"column":42}},"51":{"start":{"line":201,"column":4},"end":{"line":201,"column":43}},"52":{"start":{"line":202,"column":4},"end":{"line":202,"column":32}},"53":{"start":{"line":203,"column":4},"end":{"line":203,"column":15}},"54":{"start":{"line":206,"column":2},"end":{"line":208,"column":10}},"55":{"start":{"line":210,"column":2},"end":{"line":229,"column":3}},"56":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"57":{"start":{"line":212,"column":6},"end":{"line":212,"column":17}},"58":{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},"59":{"start":{"line":215,"column":6},"end":{"line":215,"column":18}},"60":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"61":{"start":{"line":218,"column":6},"end":{"line":218,"column":24}},"62":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"63":{"start":{"line":221,"column":6},"end":{"line":221,"column":17}},"64":{"start":{"line":223,"column":4},"end":{"line":225,"column":5}},"65":{"start":{"line":224,"column":6},"end":{"line":224,"column":17}},"66":{"start":{"line":226,"column":4},"end":{"line":228,"column":5}},"67":{"start":{"line":227,"column":6},"end":{"line":227,"column":29}},"68":{"start":{"line":231,"column":2},"end":{"line":231,"column":50}},"69":{"start":{"line":238,"column":0},"end":{"line":240,"column":1}},"70":{"start":{"line":239,"column":2},"end":{"line":239,"column":24}},"71":{"start":{"line":242,"column":0},"end":{"line":250,"column":1}},"72":{"start":{"line":243,"column":2},"end":{"line":243,"column":19}},"73":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"74":{"start":{"line":245,"column":4},"end":{"line":245,"column":28}},"75":{"start":{"line":247,"column":2},"end":{"line":249,"column":5}},"76":{"start":{"line":248,"column":4},"end":{"line":248,"column":25}},"77":{"start":{"line":252,"column":0},"end":{"line":263,"column":7}},"78":{"start":{"line":273,"column":0},"end":{"line":284,"column":2}},"79":{"start":{"line":274,"column":2},"end":{"line":274,"column":14}},"80":{"start":{"line":275,"column":2},"end":{"line":281,"column":3}},"81":{"start":{"line":276,"column":4},"end":{"line":276,"column":54}},"82":{"start":{"line":277,"column":4},"end":{"line":279,"column":5}},"83":{"start":{"line":278,"column":6},"end":{"line":278,"column":70}},"84":{"start":{"line":280,"column":4},"end":{"line":280,"column":35}},"85":{"start":{"line":282,"column":2},"end":{"line":282,"column":32}},"86":{"start":{"line":283,"column":2},"end":{"line":283,"column":13}},"87":{"start":{"line":290,"column":0},"end":{"line":290,"column":30}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"2":{"line":52,"type":"binary-expr","locations":[{"start":{"line":52,"column":9},"end":{"line":52,"column":34}},{"start":{"line":52,"column":38},"end":{"line":52,"column":61}}]},"3":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"4":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"5":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":6},"end":{"line":93,"column":20}},{"start":{"line":93,"column":24},"end":{"line":93,"column":43}}]},"6":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":14},"end":{"line":94,"column":21}},{"start":{"line":94,"column":25},"end":{"line":94,"column":58}}]},"7":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":15},"end":{"line":98,"column":24}},{"start":{"line":98,"column":28},"end":{"line":98,"column":38}}]},"8":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":2},"end":{"line":141,"column":2}},{"start":{"line":141,"column":2},"end":{"line":141,"column":2}}]},"9":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"10":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":20}},{"start":{"line":147,"column":24},"end":{"line":147,"column":43}}]},"11":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":14},"end":{"line":148,"column":21}},{"start":{"line":148,"column":25},"end":{"line":148,"column":58}}]},"12":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":15},"end":{"line":152,"column":24}},{"start":{"line":152,"column":28},"end":{"line":152,"column":38}}]},"13":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"14":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"15":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":22}},{"start":{"line":176,"column":26},"end":{"line":176,"column":45}}]},"16":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":12}},{"start":{"line":181,"column":17},"end":{"line":181,"column":52}}]},"17":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":4},"end":{"line":183,"column":4}},{"start":{"line":183,"column":4},"end":{"line":183,"column":4}}]},"18":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"19":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":11},"end":{"line":191,"column":11}},{"start":{"line":191,"column":11},"end":{"line":191,"column":11}}]},"20":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":15},"end":{"line":191,"column":37}},{"start":{"line":191,"column":41},"end":{"line":191,"column":63}}]},"21":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":36},"end":{"line":199,"column":55}},{"start":{"line":199,"column":58},"end":{"line":199,"column":61}}]},"22":{"line":206,"type":"cond-expr","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":13}},{"start":{"line":208,"column":4},"end":{"line":208,"column":9}}]},"23":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":12},"end":{"line":206,"column":17}},{"start":{"line":206,"column":21},"end":{"line":206,"column":53}}]},"24":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"25":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"26":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"27":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"28":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":8},"end":{"line":217,"column":31}},{"start":{"line":217,"column":35},"end":{"line":217,"column":59}}]},"29":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"30":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":223,"column":4}},{"start":{"line":223,"column":4},"end":{"line":223,"column":4}}]},"31":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":4},"end":{"line":226,"column":4}},{"start":{"line":226,"column":4},"end":{"line":226,"column":4}}]},"32":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":20}},{"start":{"line":226,"column":24},"end":{"line":226,"column":43}},{"start":{"line":226,"column":47},"end":{"line":226,"column":76}}]},"33":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"34":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":2},"end":{"line":275,"column":2}},{"start":{"line":275,"column":2},"end":{"line":275,"column":2}}]},"35":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":4},"end":{"line":277,"column":4}},{"start":{"line":277,"column":4},"end":{"line":277,"column":4}}]}},"code":["/*!"," * Module requirements."," */","","var SchemaType = require('../schematype');","var CastError = SchemaType.CastError;","var handleBitwiseOperator = require('./operators/bitwise');","var MongooseError = require('../error');","var utils = require('../utils');","var Document;","","/**"," * Number SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaNumber(key, options) {","  SchemaType.call(this, key, options, 'Number');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaNumber.schemaName = 'Number';","","/*!"," * Inherits from SchemaType."," */","SchemaNumber.prototype = Object.create(SchemaType.prototype);","SchemaNumber.prototype.constructor = SchemaNumber;","","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaNumber.prototype.checkRequired = function checkRequired(value, doc) {","  if (SchemaType._isRef(this, value, doc, true)) {","    return !!value;","  }","  return typeof value === 'number' || value instanceof Number;","};","","/**"," * Sets a minimum number validator."," *"," * ####Example:"," *"," *     var s = new Schema({ n: { type: Number, min: 10 })"," *     var M = db.model('M', s)"," *     var m = new M({ n: 9 })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.n = 10;"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MIN} token which will be replaced with the invalid value"," *     var min = [10, 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];"," *     var schema = new Schema({ n: { type: Number, min: min })"," *     var M = mongoose.model('Measurement', schema);"," *     var s= new M({ n: 4 });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `n` (4) is beneath the limit (10)."," *     })"," *"," * @param {Number} value minimum number"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaNumber.prototype.min = function(value, message) {","  if (this.minValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.minValidator;","    }, this);","  }","","  if (value !== null && value !== undefined) {","    var msg = message || MongooseError.messages.Number.min;","    msg = msg.replace(/{MIN}/, value);","    this.validators.push({","      validator: this.minValidator = function(v) {","        return v == null || v >= value;","      },","      message: msg,","      type: 'min',","      min: value","    });","  }","","  return this;","};","","/**"," * Sets a maximum number validator."," *"," * ####Example:"," *"," *     var s = new Schema({ n: { type: Number, max: 10 })"," *     var M = db.model('M', s)"," *     var m = new M({ n: 11 })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.n = 10;"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAX} token which will be replaced with the invalid value"," *     var max = [10, 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];"," *     var schema = new Schema({ n: { type: Number, max: max })"," *     var M = mongoose.model('Measurement', schema);"," *     var s= new M({ n: 4 });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `n` (4) exceeds the limit (10)."," *     })"," *"," * @param {Number} maximum number"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaNumber.prototype.max = function(value, message) {","  if (this.maxValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.maxValidator;","    }, this);","  }","","  if (value !== null && value !== undefined) {","    var msg = message || MongooseError.messages.Number.max;","    msg = msg.replace(/{MAX}/, value);","    this.validators.push({","      validator: this.maxValidator = function(v) {","        return v == null || v <= value;","      },","      message: msg,","      type: 'max',","      max: value","    });","  }","","  return this;","};","","/**"," * Casts to number"," *"," * @param {Object} value value to cast"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init"," * @api private"," */","","SchemaNumber.prototype.cast = function(value, doc, init) {","  if (SchemaType._isRef(this, value, doc, init)) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","      return value;","    }","","    // lazy load","    Document || (Document = require('./../document'));","","    if (value instanceof Document) {","      value.$__.wasPopulated = true;","      return value;","    }","","    // setting a populated path","    if (typeof value === 'number') {","      return value;","    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {","      throw new CastError('number', value, this.path);","    }","","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    var pop = owner.populated(path, true);","    var ret = new pop.options.model(value);","    ret.$__.wasPopulated = true;","    return ret;","  }","","  var val = value && typeof value._id !== 'undefined' ?","    value._id : // documents","    value;","","  if (!isNaN(val)) {","    if (val === null) {","      return val;","    }","    if (val === '') {","      return null;","    }","    if (typeof val === 'string' || typeof val === 'boolean') {","      val = Number(val);","    }","    if (val instanceof Number) {","      return val;","    }","    if (typeof val === 'number') {","      return val;","    }","    if (val.toString && !Array.isArray(val) && val.toString() == Number(val)) {","      return new Number(val);","    }","  }","","  throw new CastError('number', value, this.path);","};","","/*!"," * ignore"," */","","function handleSingle(val) {","  return this.cast(val);","}","","function handleArray(val) {","  var _this = this;","  if (!Array.isArray(val)) {","    return [this.cast(val)];","  }","  return val.map(function(m) {","    return _this.cast(m);","  });","}","","SchemaNumber.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $bitsAllClear: handleBitwiseOperator,","      $bitsAnyClear: handleBitwiseOperator,","      $bitsAllSet: handleBitwiseOperator,","      $bitsAnySet: handleBitwiseOperator,","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle,","      $mod: handleArray","    });","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaNumber.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with Number.');","    }","    return handler.call(this, val);","  }","  val = this.cast($conditional);","  return val;","};","","/*!"," * Module exports."," */","","module.exports = SchemaNumber;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"21":1,"22":0,"31":1,"36":1,"37":1,"48":1,"49":0,"50":0,"52":0,"86":1,"87":0,"88":0,"89":0,"93":0,"94":0,"95":0,"96":0,"98":0,"106":0,"140":1,"141":0,"142":0,"143":0,"147":0,"148":0,"149":0,"150":0,"152":0,"160":0,"172":1,"173":0,"176":0,"177":0,"181":0,"183":0,"184":0,"185":0,"189":0,"190":0,"191":0,"192":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"206":0,"210":0,"211":0,"212":0,"214":0,"215":0,"217":0,"218":0,"220":0,"221":0,"223":0,"224":0,"226":0,"227":0,"231":0,"238":1,"239":0,"242":1,"243":0,"244":0,"245":0,"247":0,"248":0,"252":1,"273":1,"274":0,"275":0,"276":0,"277":0,"278":0,"280":0,"282":0,"283":0,"290":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/bitwise.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/bitwise.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"handleBitwiseOperator","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":19},"end":{"line":14,"column":31}}},"3":{"name":"_castNumber","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":11,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":12,"column":2},"end":{"line":12,"column":19}},"4":{"start":{"line":13,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":14,"column":4},"end":{"line":16,"column":7}},"6":{"start":{"line":15,"column":6},"end":{"line":15,"column":40}},"7":{"start":{"line":17,"column":9},"end":{"line":19,"column":3}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":15}},"9":{"start":{"line":21,"column":2},"end":{"line":21,"column":38}},"10":{"start":{"line":28,"column":0},"end":{"line":34,"column":1}},"11":{"start":{"line":29,"column":2},"end":{"line":29,"column":22}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":45}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":11}},"15":{"start":{"line":36,"column":0},"end":{"line":36,"column":39}}},"branchMap":{"1":{"line":13,"type":"if","locations":[{"start":{"line":13,"column":2},"end":{"line":13,"column":2}},{"start":{"line":13,"column":2},"end":{"line":13,"column":2}}]},"2":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":9}},{"start":{"line":17,"column":9},"end":{"line":17,"column":9}}]},"3":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]}},"code":["/*!"," * Module requirements."," */","","var CastError = require('../../error/cast');","","/*!"," * ignore"," */","","function handleBitwiseOperator(val) {","  var _this = this;","  if (Array.isArray(val)) {","    return val.map(function(v) {","      return _castNumber(_this.path, v);","    });","  } else if (Buffer.isBuffer(val)) {","    return val;","  }","  // Assume trying to cast to number","  return _castNumber(_this.path, val);","}","","/*!"," * ignore"," */","","function _castNumber(path, num) {","  var v = Number(num);","  if (isNaN(v)) {","    throw new CastError('number', num, path);","  }","  return v;","}","","module.exports = handleBitwiseOperator;",""],"l":{"5":1,"11":1,"12":0,"13":0,"14":0,"15":0,"17":0,"18":0,"21":0,"28":1,"29":0,"30":0,"31":0,"33":0,"36":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/boolean.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/boolean.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"SchemaBoolean","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}}},"2":{"name":"(anonymous_2)","line":46,"loc":{"start":{"line":46,"column":40},"end":{"line":46,"column":56}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":31},"end":{"line":57,"column":47}}},"4":{"name":"(anonymous_4)","line":84,"loc":{"start":{"line":84,"column":39},"end":{"line":84,"column":67}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"3":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":50}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":37}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":62}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":52}},"8":{"start":{"line":46,"column":0},"end":{"line":48,"column":2}},"9":{"start":{"line":47,"column":2},"end":{"line":47,"column":43}},"10":{"start":{"line":57,"column":0},"end":{"line":71,"column":2}},"11":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"12":{"start":{"line":59,"column":4},"end":{"line":59,"column":17}},"13":{"start":{"line":61,"column":2},"end":{"line":63,"column":3}},"14":{"start":{"line":62,"column":4},"end":{"line":62,"column":17}},"15":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"16":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"17":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"18":{"start":{"line":68,"column":4},"end":{"line":68,"column":17}},"19":{"start":{"line":70,"column":2},"end":{"line":70,"column":17}},"20":{"start":{"line":73,"column":0},"end":{"line":74,"column":65}},"21":{"start":{"line":84,"column":0},"end":{"line":97,"column":2}},"22":{"start":{"line":85,"column":2},"end":{"line":85,"column":14}},"23":{"start":{"line":86,"column":2},"end":{"line":94,"column":3}},"24":{"start":{"line":87,"column":4},"end":{"line":87,"column":63}},"25":{"start":{"line":89,"column":4},"end":{"line":91,"column":5}},"26":{"start":{"line":90,"column":6},"end":{"line":90,"column":37}},"27":{"start":{"line":93,"column":4},"end":{"line":93,"column":26}},"28":{"start":{"line":96,"column":2},"end":{"line":96,"column":33}},"29":{"start":{"line":103,"column":0},"end":{"line":103,"column":31}}},"branchMap":{"1":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":9},"end":{"line":47,"column":23}},{"start":{"line":47,"column":27},"end":{"line":47,"column":42}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"5":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"6":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"7":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":4},"end":{"line":89,"column":4}},{"start":{"line":89,"column":4},"end":{"line":89,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var utils = require('../utils');","","var SchemaType = require('../schematype');","","/**"," * Boolean SchemaType constructor."," *"," * @param {String} path"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaBoolean(path, options) {","  SchemaType.call(this, path, options, 'Boolean');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaBoolean.schemaName = 'Boolean';","","/*!"," * Inherits from SchemaType."," */","SchemaBoolean.prototype = Object.create(SchemaType.prototype);","SchemaBoolean.prototype.constructor = SchemaBoolean;","","/**"," * Check if the given value satisfies a required validator. For a boolean"," * to satisfy a required validator, it must be strictly equal to true or to"," * false."," *"," * @param {Any} value"," * @return {Boolean}"," * @api public"," */","","SchemaBoolean.prototype.checkRequired = function(value) {","  return value === true || value === false;","};","","/**"," * Casts to boolean"," *"," * @param {Object} value"," * @api private"," */","","SchemaBoolean.prototype.cast = function(value) {","  if (value === null) {","    return value;","  }","  if (value === '0') {","    return false;","  }","  if (value === 'true') {","    return true;","  }","  if (value === 'false') {","    return false;","  }","  return !!value;","};","","SchemaBoolean.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {});","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} val"," * @api private"," */","","SchemaBoolean.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = SchemaBoolean.$conditionalHandlers[$conditional];","","    if (handler) {","      return handler.call(this, val);","    }","","    return this.cast(val);","  }","","  return this.cast($conditional);","};","","/*!"," * Module exports."," */","","module.exports = SchemaBoolean;",""],"l":{"5":1,"7":1,"18":1,"19":0,"28":1,"33":1,"34":1,"46":1,"47":0,"57":1,"58":0,"59":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0,"70":0,"73":1,"84":1,"85":0,"86":0,"87":0,"89":0,"90":0,"93":0,"96":0,"103":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/documentarray.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/documentarray.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"DocumentArray","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":28,"column":45}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":17},"end":{"line":38,"column":28}}},"3":{"name":"_createConstructor","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":45}}},"4":{"name":"EmbeddedDocument","line":69,"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}}},"5":{"name":"(anonymous_5)","line":104,"loc":{"start":{"line":104,"column":40},"end":{"line":104,"column":63}}},"6":{"name":"(anonymous_6)","line":133,"loc":{"start":{"line":133,"column":37},"end":{"line":133,"column":73}}},"7":{"name":"(anonymous_7)","line":135,"loc":{"start":{"line":135,"column":52},"end":{"line":135,"column":66}}},"8":{"name":"callback","line":154,"loc":{"start":{"line":154,"column":4},"end":{"line":154,"column":27}}},"9":{"name":"(anonymous_9)","line":198,"loc":{"start":{"line":198,"column":41},"end":{"line":198,"column":64}}},"10":{"name":"(anonymous_10)","line":244,"loc":{"start":{"line":244,"column":31},"end":{"line":244,"column":73}}},"11":{"name":"scopePaths","line":342,"loc":{"start":{"line":342,"column":0},"end":{"line":342,"column":41}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":42}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":47}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":57}},"8":{"start":{"line":14,"column":0},"end":{"line":14,"column":63}},"9":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"10":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}},"11":{"start":{"line":28,"column":0},"end":{"line":47,"column":1}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":61}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":55}},"14":{"start":{"line":33,"column":2},"end":{"line":33,"column":23}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":39}},"16":{"start":{"line":35,"column":2},"end":{"line":35,"column":29}},"17":{"start":{"line":37,"column":2},"end":{"line":46,"column":3}},"18":{"start":{"line":38,"column":4},"end":{"line":45,"column":7}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":30}},"20":{"start":{"line":40,"column":6},"end":{"line":42,"column":7}},"21":{"start":{"line":41,"column":8},"end":{"line":41,"column":20}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":17}},"23":{"start":{"line":55,"column":0},"end":{"line":55,"column":43}},"24":{"start":{"line":60,"column":0},"end":{"line":60,"column":61}},"25":{"start":{"line":61,"column":0},"end":{"line":61,"column":52}},"26":{"start":{"line":67,"column":0},"end":{"line":98,"column":1}},"27":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":39}},"29":{"start":{"line":73,"column":2},"end":{"line":73,"column":68}},"30":{"start":{"line":74,"column":2},"end":{"line":74,"column":50}},"31":{"start":{"line":75,"column":2},"end":{"line":75,"column":35}},"32":{"start":{"line":76,"column":2},"end":{"line":76,"column":60}},"33":{"start":{"line":77,"column":2},"end":{"line":77,"column":46}},"34":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"35":{"start":{"line":81,"column":4},"end":{"line":81,"column":54}},"36":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"37":{"start":{"line":86,"column":4},"end":{"line":86,"column":44}},"38":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"39":{"start":{"line":90,"column":4},"end":{"line":90,"column":52}},"40":{"start":{"line":93,"column":2},"end":{"line":93,"column":39}},"41":{"start":{"line":95,"column":2},"end":{"line":95,"column":37}},"42":{"start":{"line":97,"column":2},"end":{"line":97,"column":26}},"43":{"start":{"line":104,"column":0},"end":{"line":125,"column":2}},"44":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"45":{"start":{"line":106,"column":4},"end":{"line":106,"column":39}},"46":{"start":{"line":109,"column":2},"end":{"line":109,"column":63}},"47":{"start":{"line":111,"column":2},"end":{"line":111,"column":52}},"48":{"start":{"line":112,"column":2},"end":{"line":112,"column":66}},"49":{"start":{"line":114,"column":2},"end":{"line":120,"column":3}},"50":{"start":{"line":115,"column":4},"end":{"line":117,"column":7}},"51":{"start":{"line":122,"column":2},"end":{"line":122,"column":65}},"52":{"start":{"line":124,"column":2},"end":{"line":124,"column":53}},"53":{"start":{"line":133,"column":0},"end":{"line":185,"column":2}},"54":{"start":{"line":134,"column":2},"end":{"line":134,"column":19}},"55":{"start":{"line":135,"column":2},"end":{"line":184,"column":12}},"56":{"start":{"line":136,"column":4},"end":{"line":138,"column":5}},"57":{"start":{"line":137,"column":6},"end":{"line":137,"column":21}},"58":{"start":{"line":140,"column":4},"end":{"line":140,"column":38}},"59":{"start":{"line":141,"column":4},"end":{"line":141,"column":14}},"60":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"61":{"start":{"line":144,"column":6},"end":{"line":144,"column":18}},"62":{"start":{"line":146,"column":4},"end":{"line":148,"column":5}},"63":{"start":{"line":147,"column":6},"end":{"line":147,"column":18}},"64":{"start":{"line":154,"column":4},"end":{"line":159,"column":5}},"65":{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},"66":{"start":{"line":156,"column":8},"end":{"line":156,"column":20}},"67":{"start":{"line":158,"column":6},"end":{"line":158,"column":27}},"68":{"start":{"line":161,"column":4},"end":{"line":183,"column":5}},"69":{"start":{"line":163,"column":6},"end":{"line":163,"column":25}},"70":{"start":{"line":164,"column":6},"end":{"line":167,"column":7}},"71":{"start":{"line":165,"column":8},"end":{"line":165,"column":29}},"72":{"start":{"line":166,"column":8},"end":{"line":166,"column":17}},"73":{"start":{"line":171,"column":6},"end":{"line":174,"column":7}},"74":{"start":{"line":172,"column":8},"end":{"line":173,"column":26}},"75":{"start":{"line":178,"column":6},"end":{"line":182,"column":7}},"76":{"start":{"line":179,"column":8},"end":{"line":179,"column":64}},"77":{"start":{"line":181,"column":8},"end":{"line":181,"column":52}},"78":{"start":{"line":198,"column":0},"end":{"line":234,"column":2}},"79":{"start":{"line":199,"column":2},"end":{"line":199,"column":85}},"80":{"start":{"line":200,"column":2},"end":{"line":202,"column":3}},"81":{"start":{"line":201,"column":4},"end":{"line":201,"column":27}},"82":{"start":{"line":204,"column":2},"end":{"line":205,"column":25}},"83":{"start":{"line":207,"column":2},"end":{"line":209,"column":3}},"84":{"start":{"line":208,"column":4},"end":{"line":208,"column":11}},"85":{"start":{"line":215,"column":2},"end":{"line":231,"column":3}},"86":{"start":{"line":217,"column":4},"end":{"line":219,"column":5}},"87":{"start":{"line":218,"column":6},"end":{"line":218,"column":12}},"88":{"start":{"line":221,"column":4},"end":{"line":221,"column":23}},"89":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"90":{"start":{"line":223,"column":6},"end":{"line":223,"column":15}},"91":{"start":{"line":226,"column":4},"end":{"line":226,"column":49}},"92":{"start":{"line":228,"column":4},"end":{"line":230,"column":5}},"93":{"start":{"line":229,"column":6},"end":{"line":229,"column":40}},"94":{"start":{"line":233,"column":2},"end":{"line":233,"column":21}},"95":{"start":{"line":244,"column":0},"end":{"line":331,"column":2}},"96":{"start":{"line":245,"column":2},"end":{"line":247,"column":8}},"97":{"start":{"line":249,"column":2},"end":{"line":256,"column":3}},"98":{"start":{"line":252,"column":4},"end":{"line":254,"column":5}},"99":{"start":{"line":253,"column":6},"end":{"line":253,"column":34}},"100":{"start":{"line":255,"column":4},"end":{"line":255,"column":47}},"101":{"start":{"line":258,"column":2},"end":{"line":270,"column":3}},"102":{"start":{"line":260,"column":4},"end":{"line":260,"column":61}},"103":{"start":{"line":261,"column":4},"end":{"line":265,"column":5}},"104":{"start":{"line":262,"column":6},"end":{"line":264,"column":7}},"105":{"start":{"line":263,"column":8},"end":{"line":263,"column":53}},"106":{"start":{"line":266,"column":9},"end":{"line":270,"column":3}},"107":{"start":{"line":269,"column":4},"end":{"line":269,"column":61}},"108":{"start":{"line":272,"column":2},"end":{"line":272,"column":19}},"109":{"start":{"line":274,"column":2},"end":{"line":328,"column":3}},"110":{"start":{"line":275,"column":4},"end":{"line":277,"column":5}},"111":{"start":{"line":276,"column":6},"end":{"line":276,"column":15}},"112":{"start":{"line":279,"column":4},"end":{"line":279,"column":45}},"113":{"start":{"line":280,"column":4},"end":{"line":284,"column":5}},"114":{"start":{"line":283,"column":6},"end":{"line":283,"column":102}},"115":{"start":{"line":287,"column":4},"end":{"line":290,"column":5}},"116":{"start":{"line":289,"column":6},"end":{"line":289,"column":74}},"117":{"start":{"line":291,"column":4},"end":{"line":327,"column":5}},"118":{"start":{"line":292,"column":6},"end":{"line":326,"column":7}},"119":{"start":{"line":293,"column":8},"end":{"line":297,"column":9}},"120":{"start":{"line":294,"column":10},"end":{"line":294,"column":76}},"121":{"start":{"line":296,"column":10},"end":{"line":296,"column":26}},"122":{"start":{"line":299,"column":8},"end":{"line":299,"column":65}},"123":{"start":{"line":300,"column":8},"end":{"line":300,"column":41}},"124":{"start":{"line":302,"column":8},"end":{"line":304,"column":9}},"125":{"start":{"line":303,"column":10},"end":{"line":303,"column":41}},"126":{"start":{"line":306,"column":8},"end":{"line":325,"column":9}},"127":{"start":{"line":309,"column":10},"end":{"line":309,"column":31}},"128":{"start":{"line":312,"column":10},"end":{"line":312,"column":28}},"129":{"start":{"line":314,"column":10},"end":{"line":324,"column":11}},"130":{"start":{"line":315,"column":12},"end":{"line":316,"column":30}},"131":{"start":{"line":319,"column":12},"end":{"line":319,"column":30}},"132":{"start":{"line":321,"column":12},"end":{"line":321,"column":61}},"133":{"start":{"line":322,"column":12},"end":{"line":323,"column":34}},"134":{"start":{"line":330,"column":2},"end":{"line":330,"column":15}},"135":{"start":{"line":342,"column":0},"end":{"line":371,"column":1}},"136":{"start":{"line":343,"column":2},"end":{"line":345,"column":3}},"137":{"start":{"line":344,"column":4},"end":{"line":344,"column":21}},"138":{"start":{"line":347,"column":2},"end":{"line":347,"column":30}},"139":{"start":{"line":348,"column":2},"end":{"line":348,"column":33}},"140":{"start":{"line":349,"column":2},"end":{"line":349,"column":22}},"141":{"start":{"line":350,"column":2},"end":{"line":350,"column":20}},"142":{"start":{"line":351,"column":2},"end":{"line":351,"column":14}},"143":{"start":{"line":352,"column":2},"end":{"line":352,"column":10}},"144":{"start":{"line":353,"column":2},"end":{"line":353,"column":10}},"145":{"start":{"line":355,"column":2},"end":{"line":368,"column":3}},"146":{"start":{"line":356,"column":4},"end":{"line":356,"column":18}},"147":{"start":{"line":357,"column":4},"end":{"line":367,"column":5}},"148":{"start":{"line":358,"column":6},"end":{"line":358,"column":39}},"149":{"start":{"line":359,"column":6},"end":{"line":361,"column":7}},"150":{"start":{"line":360,"column":8},"end":{"line":360,"column":17}},"151":{"start":{"line":362,"column":6},"end":{"line":364,"column":7}},"152":{"start":{"line":363,"column":8},"end":{"line":363,"column":28}},"153":{"start":{"line":365,"column":6},"end":{"line":365,"column":34}},"154":{"start":{"line":366,"column":6},"end":{"line":366,"column":34}},"155":{"start":{"line":370,"column":2},"end":{"line":370,"column":42}},"156":{"start":{"line":377,"column":0},"end":{"line":377,"column":31}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":31}},{"start":{"line":37,"column":35},"end":{"line":37,"column":48}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":40,"column":6}},{"start":{"line":40,"column":6},"end":{"line":40,"column":6}}]},"4":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"5":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":4},"end":{"line":136,"column":4}},{"start":{"line":136,"column":4},"end":{"line":136,"column":4}}]},"6":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":16},"end":{"line":140,"column":21}},{"start":{"line":140,"column":25},"end":{"line":140,"column":37}}]},"7":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"8":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"9":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":8},"end":{"line":146,"column":15}},{"start":{"line":146,"column":19},"end":{"line":146,"column":42}}]},"10":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":6}},{"start":{"line":155,"column":6},"end":{"line":155,"column":6}}]},"11":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":6},"end":{"line":158,"column":13}},{"start":{"line":158,"column":17},"end":{"line":158,"column":26}}]},"12":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"13":{"line":165,"type":"binary-expr","locations":[{"start":{"line":165,"column":8},"end":{"line":165,"column":15}},{"start":{"line":165,"column":19},"end":{"line":165,"column":28}}]},"14":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":6}},{"start":{"line":171,"column":6},"end":{"line":171,"column":6}}]},"15":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":6}},{"start":{"line":178,"column":6},"end":{"line":178,"column":6}}]},"16":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"17":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":14},"end":{"line":204,"column":19}},{"start":{"line":204,"column":23},"end":{"line":204,"column":35}}]},"18":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":2},"end":{"line":207,"column":2}},{"start":{"line":207,"column":2},"end":{"line":207,"column":2}}]},"19":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]},"20":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"21":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"22":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"23":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":4},"end":{"line":252,"column":4}},{"start":{"line":252,"column":4},"end":{"line":252,"column":4}}]},"24":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":13}},{"start":{"line":252,"column":17},"end":{"line":252,"column":21}}]},"25":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":2},"end":{"line":258,"column":2}},{"start":{"line":258,"column":2},"end":{"line":258,"column":2}}]},"26":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":6},"end":{"line":258,"column":47}},{"start":{"line":259,"column":7},"end":{"line":259,"column":15}},{"start":{"line":259,"column":19},"end":{"line":259,"column":49}}]},"27":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":13}},{"start":{"line":258,"column":17},"end":{"line":258,"column":46}}]},"28":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"29":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":12}},{"start":{"line":261,"column":16},"end":{"line":261,"column":30}}]},"30":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":9},"end":{"line":266,"column":9}},{"start":{"line":266,"column":9},"end":{"line":266,"column":9}}]},"31":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":13},"end":{"line":266,"column":18}},{"start":{"line":266,"column":22},"end":{"line":266,"column":51}}]},"32":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"33":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"34":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":8},"end":{"line":280,"column":34}},{"start":{"line":281,"column":8},"end":{"line":281,"column":81}},{"start":{"line":282,"column":8},"end":{"line":282,"column":89}}]},"35":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":4},"end":{"line":287,"column":4}},{"start":{"line":287,"column":4},"end":{"line":287,"column":4}}]},"36":{"line":287,"type":"binary-expr","locations":[{"start":{"line":287,"column":9},"end":{"line":287,"column":40}},{"start":{"line":288,"column":8},"end":{"line":288,"column":46}}]},"37":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"38":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":42}},{"start":{"line":291,"column":46},"end":{"line":291,"column":54}}]},"39":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":6},"end":{"line":292,"column":6}},{"start":{"line":292,"column":6},"end":{"line":292,"column":6}}]},"40":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":8}},{"start":{"line":293,"column":8},"end":{"line":293,"column":8}}]},"41":{"line":294,"type":"binary-expr","locations":[{"start":{"line":294,"column":10},"end":{"line":294,"column":18}},{"start":{"line":294,"column":23},"end":{"line":294,"column":74}}]},"42":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":8},"end":{"line":302,"column":8}},{"start":{"line":302,"column":8},"end":{"line":302,"column":8}}]},"43":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":12},"end":{"line":302,"column":16}},{"start":{"line":302,"column":21},"end":{"line":302,"column":51}}]},"44":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8}},{"start":{"line":306,"column":8},"end":{"line":306,"column":8}}]},"45":{"line":306,"type":"binary-expr","locations":[{"start":{"line":306,"column":12},"end":{"line":306,"column":16}},{"start":{"line":306,"column":20},"end":{"line":306,"column":26}}]},"46":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":2},"end":{"line":343,"column":2}},{"start":{"line":343,"column":2},"end":{"line":343,"column":2}}]},"47":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":8},"end":{"line":343,"column":12}},{"start":{"line":343,"column":16},"end":{"line":343,"column":22}}]},"48":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":4},"end":{"line":357,"column":4}},{"start":{"line":357,"column":4},"end":{"line":357,"column":4}}]},"49":{"line":359,"type":"if","locations":[{"start":{"line":359,"column":6},"end":{"line":359,"column":6}},{"start":{"line":359,"column":6},"end":{"line":359,"column":6}}]},"50":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":6},"end":{"line":362,"column":6}},{"start":{"line":362,"column":6},"end":{"line":362,"column":6}}]},"51":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":13}},{"start":{"line":365,"column":18},"end":{"line":365,"column":32}}]},"52":{"line":370,"type":"binary-expr","locations":[{"start":{"line":370,"column":9},"end":{"line":370,"column":16}},{"start":{"line":370,"column":20},"end":{"line":370,"column":28}},{"start":{"line":370,"column":32},"end":{"line":370,"column":41}}]}},"code":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var ArrayType = require('./array');","var CastError = require('../error/cast');","var EventEmitter = require('events').EventEmitter;","var MongooseDocumentArray = require('../types/documentarray');","var SchemaType = require('../schematype');","var Subdocument = require('../types/embedded');","var applyHooks = require('../services/model/applyHooks');","var discriminator = require('../services/model/discriminator');","var util = require('util');","var utils = require('../utils');","","/**"," * SubdocsArray SchemaType constructor"," *"," * @param {String} key"," * @param {Schema} schema"," * @param {Object} options"," * @inherits SchemaArray"," * @api public"," */","","function DocumentArray(key, schema, options) {","  var EmbeddedDocument = _createConstructor(schema, options);","","  ArrayType.call(this, key, EmbeddedDocument, options);","","  this.schema = schema;","  this.$isMongooseDocumentArray = true;","  var fn = this.defaultValue;","","  if (!('defaultValue' in this) || fn !== void 0) {","    this.default(function() {","      var arr = fn.call(this);","      if (!Array.isArray(arr)) {","        arr = [arr];","      }","      // Leave it up to `cast()` to convert this to a documentarray","      return arr;","    });","  }","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","DocumentArray.schemaName = 'DocumentArray';","","/*!"," * Inherits from ArrayType."," */","DocumentArray.prototype = Object.create(ArrayType.prototype);","DocumentArray.prototype.constructor = DocumentArray;","","/*!"," * Ignore"," */","","function _createConstructor(schema, options) {","  // compile an embedded document for this schema","  function EmbeddedDocument() {","    Subdocument.apply(this, arguments);","  }","","  EmbeddedDocument.prototype = Object.create(Subdocument.prototype);","  EmbeddedDocument.prototype.$__setSchema(schema);","  EmbeddedDocument.schema = schema;","  EmbeddedDocument.prototype.constructor = EmbeddedDocument;","  EmbeddedDocument.$isArraySubdocument = true;","","  // apply methods","  for (var i in schema.methods) {","    EmbeddedDocument.prototype[i] = schema.methods[i];","  }","","  // apply statics","  for (i in schema.statics) {","    EmbeddedDocument[i] = schema.statics[i];","  }","","  for (i in EventEmitter.prototype) {","    EmbeddedDocument[i] = EventEmitter.prototype[i];","  }","","  applyHooks(EmbeddedDocument, schema);","","  EmbeddedDocument.options = options;","","  return EmbeddedDocument;","}","","/*!"," * Ignore"," */","","DocumentArray.prototype.discriminator = function(name, schema) {","  if (typeof name === 'function') {","    name = utils.getFunctionName(name);","  }","","  schema = discriminator(this.casterConstructor, name, schema);","","  var EmbeddedDocument = _createConstructor(schema);","  EmbeddedDocument.baseCasterConstructor = this.casterConstructor;","","  try {","    Object.defineProperty(EmbeddedDocument, 'name', {","      value: name","    });","  } catch (error) {","    // Ignore error, only happens on old versions of node","  }","","  this.casterConstructor.discriminators[name] = EmbeddedDocument;","","  return this.casterConstructor.discriminators[name];","};","","/**"," * Performs local validations first, then validations on each embedded doc"," *"," * @api private"," */","","DocumentArray.prototype.doValidate = function(array, fn, scope, options) {","  var _this = this;","  SchemaType.prototype.doValidate.call(this, array, function(err) {","    if (err) {","      return fn(err);","    }","","    var count = array && array.length;","    var error;","","    if (!count) {","      return fn();","    }","    if (options && options.updateValidator) {","      return fn();","    }","","    // handle sparse arrays, do not use array.forEach which does not","    // iterate over sparse elements yet reports array.length including","    // them :(","","    function callback(err) {","      if (err) {","        error = err;","      }","      --count || fn(error);","    }","","    for (var i = 0, len = count; i < len; ++i) {","      // sidestep sparse entries","      var doc = array[i];","      if (!doc) {","        --count || fn(error);","        continue;","      }","","      // If you set the array index directly, the doc might not yet be","      // a full fledged mongoose subdoc, so make it into one.","      if (!(doc instanceof Subdocument)) {","        doc = array[i] = new _this.casterConstructor(doc, array, undefined,","            undefined, i);","      }","","      // HACK: use $__original_validate to avoid promises so bluebird doesn't","      // complain","      if (doc.$__original_validate) {","        doc.$__original_validate({__noPromise: true}, callback);","      } else {","        doc.validate({__noPromise: true}, callback);","      }","    }","  }, scope);","};","","/**"," * Performs local validations first, then validations on each embedded doc."," *"," * ####Note:"," *"," * This method ignores the asynchronous validators."," *"," * @return {MongooseError|undefined}"," * @api private"," */","","DocumentArray.prototype.doValidateSync = function(array, scope) {","  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);","  if (schemaTypeError) {","    return schemaTypeError;","  }","","  var count = array && array.length,","      resultError = null;","","  if (!count) {","    return;","  }","","  // handle sparse arrays, do not use array.forEach which does not","  // iterate over sparse elements yet reports array.length including","  // them :(","","  for (var i = 0, len = count; i < len; ++i) {","    // only first error","    if (resultError) {","      break;","    }","    // sidestep sparse entries","    var doc = array[i];","    if (!doc) {","      continue;","    }","","    var subdocValidateError = doc.validateSync();","","    if (subdocValidateError) {","      resultError = subdocValidateError;","    }","  }","","  return resultError;","};","","/**"," * Casts contents"," *"," * @param {Object} value"," * @param {Document} document that triggers the casting"," * @api private"," */","","DocumentArray.prototype.cast = function(value, doc, init, prev, options) {","  var selected,","      subdoc,","      i;","","  if (!Array.isArray(value)) {","    // gh-2442 mark whole array as modified if we're initializing a doc from","    // the db and the path isn't an array in the document","    if (!!doc && init) {","      doc.markModified(this.path);","    }","    return this.cast([value], doc, init, prev);","  }","","  if (!(value && value.isMongooseDocumentArray) &&","      (!options || !options.skipDocumentArrayCast)) {","    value = new MongooseDocumentArray(value, this.path, doc);","    if (prev && prev._handlers) {","      for (var key in prev._handlers) {","        doc.removeListener(key, prev._handlers[key]);","      }","    }","  } else if (value && value.isMongooseDocumentArray) {","    // We need to create a new array, otherwise change tracking will","    // update the old doc (gh-4449)","    value = new MongooseDocumentArray(value, this.path, doc);","  }","","  i = value.length;","","  while (i--) {","    if (!value[i]) {","      continue;","    }","","    var Constructor = this.casterConstructor;","    if (Constructor.discriminators &&","        typeof value[i][Constructor.schema.options.discriminatorKey] === 'string' &&","        Constructor.discriminators[value[i][Constructor.schema.options.discriminatorKey]]) {","      Constructor = Constructor.discriminators[value[i][Constructor.schema.options.discriminatorKey]];","    }","","    // Check if the document has a different schema (re gh-3701)","    if ((value[i] instanceof Subdocument) &&","        value[i].schema !== Constructor.schema) {","      value[i] = value[i].toObject({ transform: false, virtuals: false });","    }","    if (!(value[i] instanceof Subdocument) && value[i]) {","      if (init) {","        if (doc) {","          selected || (selected = scopePaths(this, doc.$__.selected, init));","        } else {","          selected = true;","        }","","        subdoc = new Constructor(null, value, true, selected, i);","        value[i] = subdoc.init(value[i]);","      } else {","        if (prev && (subdoc = prev.id(value[i]._id))) {","          subdoc = prev.id(value[i]._id);","        }","","        if (prev && subdoc) {","          // handle resetting doc with existing id but differing data","          // doc.array = [{ doc: 'val' }]","          subdoc.set(value[i]);","          // if set() is hooked it will have no return value","          // see gh-746","          value[i] = subdoc;","        } else {","          try {","            subdoc = new Constructor(value[i], value, undefined,","                undefined, i);","            // if set() is hooked it will have no return value","            // see gh-746","            value[i] = subdoc;","          } catch (error) {","            var valueInErrorMessage = util.inspect(value[i]);","            throw new CastError('embedded', valueInErrorMessage,","              value._path, error);","          }","        }","      }","    }","  }","","  return value;","};","","/*!"," * Scopes paths selected in a query to this array."," * Necessary for proper default application of subdocument values."," *"," * @param {DocumentArray} array - the array to scope `fields` paths"," * @param {Object|undefined} fields - the root fields selected in the query"," * @param {Boolean|undefined} init - if we are being created part of a query result"," */","","function scopePaths(array, fields, init) {","  if (!(init && fields)) {","    return undefined;","  }","","  var path = array.path + '.';","  var keys = Object.keys(fields);","  var i = keys.length;","  var selected = {};","  var hasKeys;","  var key;","  var sub;","","  while (i--) {","    key = keys[i];","    if (key.indexOf(path) === 0) {","      sub = key.substring(path.length);","      if (sub === '$') {","        continue;","      }","      if (sub.indexOf('$.') === 0) {","        sub = sub.substr(2);","      }","      hasKeys || (hasKeys = true);","      selected[sub] = fields[key];","    }","  }","","  return hasKeys && selected || undefined;","}","","/*!"," * Module exports."," */","","module.exports = DocumentArray;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"28":1,"29":0,"31":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"41":0,"44":0,"55":1,"60":1,"61":1,"67":1,"69":1,"70":0,"73":0,"74":0,"75":0,"76":0,"77":0,"80":0,"81":0,"85":0,"86":0,"89":0,"90":0,"93":0,"95":0,"97":0,"104":1,"105":0,"106":0,"109":0,"111":0,"112":0,"114":0,"115":0,"122":0,"124":0,"133":1,"134":0,"135":0,"136":0,"137":0,"140":0,"141":0,"143":0,"144":0,"146":0,"147":0,"154":1,"155":0,"156":0,"158":0,"161":0,"163":0,"164":0,"165":0,"166":0,"171":0,"172":0,"178":0,"179":0,"181":0,"198":1,"199":0,"200":0,"201":0,"204":0,"207":0,"208":0,"215":0,"217":0,"218":0,"221":0,"222":0,"223":0,"226":0,"228":0,"229":0,"233":0,"244":1,"245":0,"249":0,"252":0,"253":0,"255":0,"258":0,"260":0,"261":0,"262":0,"263":0,"266":0,"269":0,"272":0,"274":0,"275":0,"276":0,"279":0,"280":0,"283":0,"287":0,"289":0,"291":0,"292":0,"293":0,"294":0,"296":0,"299":0,"300":0,"302":0,"303":0,"306":0,"309":0,"312":0,"314":0,"315":0,"319":0,"321":0,"322":0,"330":0,"342":1,"343":0,"344":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"362":0,"363":0,"365":0,"366":0,"370":0,"377":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/array.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":1,"51":1,"52":0,"53":1,"54":0,"55":0,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0,0,0,0],"34":[0,0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"SchemaArray","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":56}}},"2":{"name":"(anonymous_2)","line":88,"loc":{"start":{"line":88,"column":17},"end":{"line":88,"column":28}}},"3":{"name":"(anonymous_3)","line":124,"loc":{"start":{"line":124,"column":38},"end":{"line":124,"column":54}}},"4":{"name":"(anonymous_4)","line":136,"loc":{"start":{"line":136,"column":37},"end":{"line":136,"column":60}}},"5":{"name":"(anonymous_5)","line":154,"loc":{"start":{"line":154,"column":29},"end":{"line":154,"column":56}}},"6":{"name":"(anonymous_6)","line":204,"loc":{"start":{"line":204,"column":37},"end":{"line":204,"column":67}}},"7":{"name":"(anonymous_7)","line":236,"loc":{"start":{"line":236,"column":20},"end":{"line":236,"column":32}}},"8":{"name":"cast$all","line":260,"loc":{"start":{"line":260,"column":0},"end":{"line":260,"column":23}}},"9":{"name":"(anonymous_9)","line":265,"loc":{"start":{"line":265,"column":16},"end":{"line":265,"column":28}}},"10":{"name":"cast$elemMatch","line":277,"loc":{"start":{"line":277,"column":0},"end":{"line":277,"column":29}}},"11":{"name":"(anonymous_11)","line":299,"loc":{"start":{"line":299,"column":27},"end":{"line":299,"column":41}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":44}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"5":{"start":{"line":9,"column":0},"end":{"line":16,"column":2}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":46}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":47}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}},"9":{"start":{"line":20,"column":0},"end":{"line":20,"column":30}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":27}},"11":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}},"12":{"start":{"line":23,"column":0},"end":{"line":23,"column":63}},"13":{"start":{"line":24,"column":0},"end":{"line":24,"column":51}},"14":{"start":{"line":36,"column":0},"end":{"line":99,"column":1}},"15":{"start":{"line":37,"column":2},"end":{"line":37,"column":23}},"16":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":36}},"18":{"start":{"line":42,"column":2},"end":{"line":75,"column":3}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":25}},"20":{"start":{"line":45,"column":4},"end":{"line":54,"column":5}},"21":{"start":{"line":46,"column":6},"end":{"line":53,"column":7}},"22":{"start":{"line":48,"column":8},"end":{"line":48,"column":40}},"23":{"start":{"line":49,"column":8},"end":{"line":49,"column":36}},"24":{"start":{"line":50,"column":8},"end":{"line":50,"column":29}},"25":{"start":{"line":52,"column":8},"end":{"line":52,"column":21}},"26":{"start":{"line":57,"column":4},"end":{"line":59,"column":38}},"27":{"start":{"line":61,"column":4},"end":{"line":63,"column":15}},"28":{"start":{"line":65,"column":4},"end":{"line":65,"column":36}},"29":{"start":{"line":66,"column":4},"end":{"line":70,"column":5}},"30":{"start":{"line":67,"column":6},"end":{"line":67,"column":50}},"31":{"start":{"line":69,"column":6},"end":{"line":69,"column":27}},"32":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"33":{"start":{"line":73,"column":6},"end":{"line":73,"column":29}},"34":{"start":{"line":77,"column":2},"end":{"line":77,"column":47}},"35":{"start":{"line":79,"column":2},"end":{"line":79,"column":17}},"36":{"start":{"line":80,"column":2},"end":{"line":80,"column":9}},"37":{"start":{"line":82,"column":2},"end":{"line":85,"column":3}},"38":{"start":{"line":83,"column":4},"end":{"line":83,"column":35}},"39":{"start":{"line":84,"column":4},"end":{"line":84,"column":42}},"40":{"start":{"line":87,"column":2},"end":{"line":98,"column":3}},"41":{"start":{"line":88,"column":4},"end":{"line":97,"column":7}},"42":{"start":{"line":89,"column":6},"end":{"line":89,"column":19}},"43":{"start":{"line":90,"column":6},"end":{"line":94,"column":7}},"44":{"start":{"line":91,"column":8},"end":{"line":91,"column":27}},"45":{"start":{"line":92,"column":13},"end":{"line":94,"column":7}},"46":{"start":{"line":93,"column":8},"end":{"line":93,"column":25}},"47":{"start":{"line":96,"column":6},"end":{"line":96,"column":17}},"48":{"start":{"line":107,"column":0},"end":{"line":107,"column":33}},"49":{"start":{"line":112,"column":0},"end":{"line":112,"column":60}},"50":{"start":{"line":113,"column":0},"end":{"line":113,"column":48}},"51":{"start":{"line":124,"column":0},"end":{"line":126,"column":2}},"52":{"start":{"line":125,"column":2},"end":{"line":125,"column":35}},"53":{"start":{"line":136,"column":0},"end":{"line":143,"column":2}},"54":{"start":{"line":137,"column":2},"end":{"line":140,"column":3}},"55":{"start":{"line":139,"column":4},"end":{"line":139,"column":17}},"56":{"start":{"line":142,"column":2},"end":{"line":142,"column":68}},"57":{"start":{"line":154,"column":0},"end":{"line":194,"column":2}},"58":{"start":{"line":155,"column":2},"end":{"line":187,"column":3}},"59":{"start":{"line":156,"column":4},"end":{"line":165,"column":5}},"60":{"start":{"line":157,"column":6},"end":{"line":157,"column":46}},"61":{"start":{"line":159,"column":6},"end":{"line":164,"column":7}},"62":{"start":{"line":160,"column":8},"end":{"line":160,"column":49}},"63":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"64":{"start":{"line":162,"column":10},"end":{"line":162,"column":17}},"65":{"start":{"line":167,"column":4},"end":{"line":173,"column":5}},"66":{"start":{"line":168,"column":6},"end":{"line":168,"column":55}},"67":{"start":{"line":169,"column":11},"end":{"line":173,"column":5}},"68":{"start":{"line":172,"column":6},"end":{"line":172,"column":55}},"69":{"start":{"line":175,"column":4},"end":{"line":184,"column":5}},"70":{"start":{"line":176,"column":6},"end":{"line":183,"column":7}},"71":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"72":{"start":{"line":178,"column":10},"end":{"line":178,"column":59}},"73":{"start":{"line":182,"column":8},"end":{"line":182,"column":83}},"74":{"start":{"line":186,"column":4},"end":{"line":186,"column":17}},"75":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"76":{"start":{"line":191,"column":4},"end":{"line":191,"column":32}},"77":{"start":{"line":193,"column":2},"end":{"line":193,"column":39}},"78":{"start":{"line":204,"column":0},"end":{"line":258,"column":2}},"79":{"start":{"line":205,"column":2},"end":{"line":206,"column":10}},"80":{"start":{"line":208,"column":2},"end":{"line":255,"column":3}},"81":{"start":{"line":209,"column":4},"end":{"line":209,"column":54}},"82":{"start":{"line":211,"column":4},"end":{"line":213,"column":5}},"83":{"start":{"line":212,"column":6},"end":{"line":212,"column":69}},"84":{"start":{"line":215,"column":4},"end":{"line":215,"column":36}},"85":{"start":{"line":217,"column":4},"end":{"line":217,"column":23}},"86":{"start":{"line":218,"column":4},"end":{"line":218,"column":45}},"87":{"start":{"line":220,"column":4},"end":{"line":226,"column":5}},"88":{"start":{"line":225,"column":6},"end":{"line":225,"column":97}},"89":{"start":{"line":228,"column":4},"end":{"line":228,"column":49}},"90":{"start":{"line":229,"column":4},"end":{"line":229,"column":61}},"91":{"start":{"line":230,"column":4},"end":{"line":232,"column":5}},"92":{"start":{"line":231,"column":6},"end":{"line":231,"column":40}},"93":{"start":{"line":233,"column":4},"end":{"line":233,"column":29}},"94":{"start":{"line":235,"column":4},"end":{"line":254,"column":5}},"95":{"start":{"line":236,"column":6},"end":{"line":249,"column":9}},"96":{"start":{"line":237,"column":8},"end":{"line":239,"column":9}},"97":{"start":{"line":238,"column":10},"end":{"line":238,"column":19}},"98":{"start":{"line":240,"column":8},"end":{"line":243,"column":9}},"99":{"start":{"line":241,"column":10},"end":{"line":241,"column":37}},"100":{"start":{"line":242,"column":10},"end":{"line":242,"column":19}},"101":{"start":{"line":244,"column":8},"end":{"line":247,"column":9}},"102":{"start":{"line":245,"column":10},"end":{"line":245,"column":33}},"103":{"start":{"line":246,"column":10},"end":{"line":246,"column":19}},"104":{"start":{"line":248,"column":8},"end":{"line":248,"column":17}},"105":{"start":{"line":250,"column":11},"end":{"line":254,"column":5}},"106":{"start":{"line":251,"column":6},"end":{"line":251,"column":37}},"107":{"start":{"line":252,"column":11},"end":{"line":254,"column":5}},"108":{"start":{"line":253,"column":6},"end":{"line":253,"column":33}},"109":{"start":{"line":257,"column":2},"end":{"line":257,"column":13}},"110":{"start":{"line":260,"column":0},"end":{"line":275,"column":1}},"111":{"start":{"line":261,"column":2},"end":{"line":263,"column":3}},"112":{"start":{"line":262,"column":4},"end":{"line":262,"column":16}},"113":{"start":{"line":265,"column":2},"end":{"line":272,"column":11}},"114":{"start":{"line":266,"column":4},"end":{"line":270,"column":5}},"115":{"start":{"line":267,"column":6},"end":{"line":267,"column":17}},"116":{"start":{"line":268,"column":6},"end":{"line":268,"column":23}},"117":{"start":{"line":269,"column":6},"end":{"line":269,"column":63}},"118":{"start":{"line":271,"column":4},"end":{"line":271,"column":13}},"119":{"start":{"line":274,"column":2},"end":{"line":274,"column":32}},"120":{"start":{"line":277,"column":0},"end":{"line":291,"column":1}},"121":{"start":{"line":278,"column":2},"end":{"line":278,"column":30}},"122":{"start":{"line":279,"column":2},"end":{"line":279,"column":28}},"123":{"start":{"line":280,"column":2},"end":{"line":280,"column":10}},"124":{"start":{"line":281,"column":2},"end":{"line":281,"column":12}},"125":{"start":{"line":282,"column":2},"end":{"line":288,"column":3}},"126":{"start":{"line":283,"column":4},"end":{"line":283,"column":18}},"127":{"start":{"line":284,"column":4},"end":{"line":284,"column":21}},"128":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"129":{"start":{"line":286,"column":6},"end":{"line":286,"column":47}},"130":{"start":{"line":290,"column":2},"end":{"line":290,"column":50}},"131":{"start":{"line":293,"column":0},"end":{"line":293,"column":61}},"132":{"start":{"line":295,"column":0},"end":{"line":295,"column":23}},"133":{"start":{"line":296,"column":0},"end":{"line":296,"column":25}},"134":{"start":{"line":297,"column":0},"end":{"line":297,"column":35}},"135":{"start":{"line":298,"column":0},"end":{"line":298,"column":54}},"136":{"start":{"line":299,"column":0},"end":{"line":310,"column":2}},"137":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"138":{"start":{"line":301,"column":4},"end":{"line":301,"column":62}},"139":{"start":{"line":304,"column":2},"end":{"line":304,"column":15}},"140":{"start":{"line":305,"column":2},"end":{"line":307,"column":3}},"141":{"start":{"line":306,"column":4},"end":{"line":306,"column":58}},"142":{"start":{"line":309,"column":2},"end":{"line":309,"column":13}},"143":{"start":{"line":312,"column":0},"end":{"line":313,"column":42}},"144":{"start":{"line":315,"column":0},"end":{"line":316,"column":43}},"145":{"start":{"line":318,"column":0},"end":{"line":320,"column":35}},"146":{"start":{"line":322,"column":0},"end":{"line":322,"column":25}},"147":{"start":{"line":323,"column":0},"end":{"line":323,"column":21}},"148":{"start":{"line":325,"column":0},"end":{"line":333,"column":51}},"149":{"start":{"line":339,"column":0},"end":{"line":339,"column":29}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":19}},{"start":{"line":38,"column":23},"end":{"line":38,"column":44}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"6":{"line":57,"type":"cond-expr","locations":[{"start":{"line":58,"column":10},"end":{"line":58,"column":14}},{"start":{"line":59,"column":10},"end":{"line":59,"column":37}}]},"7":{"line":61,"type":"cond-expr","locations":[{"start":{"line":62,"column":10},"end":{"line":62,"column":21}},{"start":{"line":63,"column":10},"end":{"line":63,"column":14}}]},"8":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"10":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"12":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":6},"end":{"line":87,"column":31}},{"start":{"line":87,"column":35},"end":{"line":87,"column":63}}]},"13":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"14":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":13},"end":{"line":92,"column":13}},{"start":{"line":92,"column":13},"end":{"line":92,"column":13}}]},"15":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":12},"end":{"line":125,"column":17}},{"start":{"line":125,"column":21},"end":{"line":125,"column":33}}]},"16":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"17":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":25}},{"start":{"line":137,"column":29},"end":{"line":137,"column":52}}]},"18":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"19":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"20":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":21}},{"start":{"line":156,"column":25},"end":{"line":156,"column":28}}]},"21":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"22":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":36}},{"start":{"line":161,"column":40},"end":{"line":161,"column":58}}]},"23":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"24":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":10},"end":{"line":167,"column":15}},{"start":{"line":167,"column":19},"end":{"line":167,"column":40}}]},"25":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":11},"end":{"line":169,"column":11}},{"start":{"line":169,"column":11},"end":{"line":169,"column":11}}]},"26":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":15},"end":{"line":169,"column":20}},{"start":{"line":169,"column":24},"end":{"line":169,"column":45}}]},"27":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"28":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"29":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":11}},{"start":{"line":190,"column":15},"end":{"line":190,"column":21}}]},"30":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"31":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"32":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"33":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":8},"end":{"line":220,"column":11}},{"start":{"line":221,"column":8},"end":{"line":221,"column":34}},{"start":{"line":222,"column":8},"end":{"line":222,"column":51}},{"start":{"line":223,"column":8},"end":{"line":223,"column":76}},{"start":{"line":224,"column":8},"end":{"line":224,"column":84}}]},"34":{"line":229,"type":"binary-expr","locations":[{"start":{"line":229,"column":17},"end":{"line":229,"column":22}},{"start":{"line":229,"column":27},"end":{"line":229,"column":45}},{"start":{"line":229,"column":49},"end":{"line":229,"column":59}}]},"35":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"36":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":8},"end":{"line":230,"column":15}},{"start":{"line":230,"column":19},"end":{"line":230,"column":43}}]},"37":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":4},"end":{"line":235,"column":4}},{"start":{"line":235,"column":4},"end":{"line":235,"column":4}}]},"38":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"39":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":29}},{"start":{"line":237,"column":33},"end":{"line":237,"column":45}}]},"40":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"41":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]},"42":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":11},"end":{"line":250,"column":11}},{"start":{"line":250,"column":11},"end":{"line":250,"column":11}}]},"43":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":11},"end":{"line":252,"column":11}},{"start":{"line":252,"column":11},"end":{"line":252,"column":11}}]},"44":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":2},"end":{"line":261,"column":2}},{"start":{"line":261,"column":2},"end":{"line":261,"column":2}}]},"45":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":4},"end":{"line":266,"column":4}},{"start":{"line":266,"column":4},"end":{"line":266,"column":4}}]},"46":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"47":{"line":285,"type":"binary-expr","locations":[{"start":{"line":285,"column":8},"end":{"line":285,"column":30}},{"start":{"line":285,"column":34},"end":{"line":285,"column":39}}]},"48":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var $exists = require('./operators/exists');","var $type = require('./operators/type');","var SchemaType = require('../schematype');","var CastError = SchemaType.CastError;","var Types = {","  Boolean: require('./boolean'),","  Date: require('./date'),","  Number: require('./number'),","  String: require('./string'),","  ObjectId: require('./objectid'),","  Buffer: require('./buffer')","};","var MongooseArray = require('../types').Array;","var EmbeddedDoc = require('../types').Embedded;","var Mixed = require('./mixed');","var cast = require('../cast');","var util = require('util');","var utils = require('../utils');","var castToNumber = require('./operators/helpers').castToNumber;","var geospatial = require('./operators/geospatial');","","/**"," * Array SchemaType constructor"," *"," * @param {String} key"," * @param {SchemaType} cast"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaArray(key, cast, options, schemaOptions) {","  var typeKey = 'type';","  if (schemaOptions && schemaOptions.typeKey) {","    typeKey = schemaOptions.typeKey;","  }","","  if (cast) {","    var castOptions = {};","","    if (utils.getFunctionName(cast.constructor) === 'Object') {","      if (cast[typeKey]) {","        // support { type: Woot }","        castOptions = utils.clone(cast); // do not alter user arguments","        delete castOptions[typeKey];","        cast = cast[typeKey];","      } else {","        cast = Mixed;","      }","    }","","    // support { type: 'String' }","    var name = typeof cast === 'string'","        ? cast","        : utils.getFunctionName(cast);","","    var caster = name in Types","        ? Types[name]","        : cast;","","    this.casterConstructor = caster;","    if (typeof caster === 'function') {","      this.caster = new caster(null, castOptions);","    } else {","      this.caster = caster;","    }","","    if (!(this.caster instanceof EmbeddedDoc)) {","      this.caster.path = key;","    }","  }","","  SchemaType.call(this, key, options, 'Array');","","  var defaultArr;","  var fn;","","  if (this.defaultValue != null) {","    defaultArr = this.defaultValue;","    fn = typeof defaultArr === 'function';","  }","","  if (!('defaultValue' in this) || this.defaultValue !== void 0) {","    this.default(function() {","      var arr = [];","      if (fn) {","        arr = defaultArr();","      } else if (defaultArr != null) {","        arr = defaultArr;","      }","      // Leave it up to `cast()` to convert the array","      return arr;","    });","  }","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaArray.schemaName = 'Array';","","/*!"," * Inherits from SchemaType."," */","SchemaArray.prototype = Object.create(SchemaType.prototype);","SchemaArray.prototype.constructor = SchemaArray;","","/**"," * Check if the given value satisfies a required validator. The given value"," * must be not null nor undefined, and have a positive length."," *"," * @param {Any} value"," * @return {Boolean}"," * @api public"," */","","SchemaArray.prototype.checkRequired = function(value) {","  return !!(value && value.length);","};","","/**"," * Overrides the getters application for the population special-case"," *"," * @param {Object} value"," * @param {Object} scope"," * @api private"," */","","SchemaArray.prototype.applyGetters = function(value, scope) {","  if (this.caster.options && this.caster.options.ref) {","    // means the object id was populated","    return value;","  }","","  return SchemaType.prototype.applyGetters.call(this, value, scope);","};","","/**"," * Casts values for set()."," *"," * @param {Object} value"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init whether this is an initialization cast"," * @api private"," */","","SchemaArray.prototype.cast = function(value, doc, init) {","  if (Array.isArray(value)) {","    if (!value.length && doc) {","      var indexes = doc.schema.indexedPaths();","","      for (var i = 0, l = indexes.length; i < l; ++i) {","        var pathIndex = indexes[i][0][this.path];","        if (pathIndex === '2dsphere' || pathIndex === '2d') {","          return;","        }","      }","    }","","    if (!(value && value.isMongooseArray)) {","      value = new MongooseArray(value, this.path, doc);","    } else if (value && value.isMongooseArray) {","      // We need to create a new array, otherwise change tracking will","      // update the old doc (gh-4449)","      value = new MongooseArray(value, this.path, doc);","    }","","    if (this.caster) {","      try {","        for (i = 0, l = value.length; i < l; i++) {","          value[i] = this.caster.cast(value[i], doc, init);","        }","      } catch (e) {","        // rethrow","        throw new CastError('[' + e.kind + ']', util.inspect(value), this.path, e);","      }","    }","","    return value;","  }","  // gh-2442: if we're loading this from the db and its not an array, mark","  // the whole array as modified.","  if (!!doc && !!init) {","    doc.markModified(this.path);","  }","  return this.cast([value], doc, init);","};","","/**"," * Casts values for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaArray.prototype.castForQuery = function($conditional, value) {","  var handler,","      val;","","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with Array.');","    }","","    val = handler.call(this, value);","  } else {","    val = $conditional;","    var Constructor = this.casterConstructor;","","    if (val &&","        Constructor.discriminators &&","        Constructor.schema.options.discriminatorKey &&","        typeof val[Constructor.schema.options.discriminatorKey] === 'string' &&","        Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]]) {","      Constructor = Constructor.discriminators[val[Constructor.schema.options.discriminatorKey]];","    }","","    var proto = this.casterConstructor.prototype;","    var method = proto && (proto.castForQuery || proto.cast);","    if (!method && Constructor.castForQuery) {","      method = Constructor.castForQuery;","    }","    var caster = this.caster;","","    if (Array.isArray(val)) {","      val = val.map(function(v) {","        if (utils.isObject(v) && v.$elemMatch) {","          return v;","        }","        if (method) {","          v = method.call(caster, v);","          return v;","        }","        if (v != null) {","          v = new Constructor(v);","          return v;","        }","        return v;","      });","    } else if (method) {","      val = method.call(caster, val);","    } else if (val != null) {","      val = new Constructor(val);","    }","  }","","  return val;","};","","function cast$all(val) {","  if (!Array.isArray(val)) {","    val = [val];","  }","","  val = val.map(function(v) {","    if (utils.isObject(v)) {","      var o = {};","      o[this.path] = v;","      return cast(this.casterConstructor.schema, o)[this.path];","    }","    return v;","  }, this);","","  return this.castForQuery(val);","}","","function cast$elemMatch(val) {","  var keys = Object.keys(val);","  var numKeys = keys.length;","  var key;","  var value;","  for (var i = 0; i < numKeys; ++i) {","    key = keys[i];","    value = val[key];","    if (key.indexOf('$') === 0 && value) {","      val[key] = this.castForQuery(key, value);","    }","  }","","  return cast(this.casterConstructor.schema, val);","}","","var handle = SchemaArray.prototype.$conditionalHandlers = {};","","handle.$all = cast$all;","handle.$options = String;","handle.$elemMatch = cast$elemMatch;","handle.$geoIntersects = geospatial.cast$geoIntersects;","handle.$or = handle.$and = function(val) {","  if (!Array.isArray(val)) {","    throw new TypeError('conditional $or/$and require array');","  }","","  var ret = [];","  for (var i = 0; i < val.length; ++i) {","    ret.push(cast(this.casterConstructor.schema, val[i]));","  }","","  return ret;","};","","handle.$near =","handle.$nearSphere = geospatial.cast$near;","","handle.$within =","handle.$geoWithin = geospatial.cast$within;","","handle.$size =","handle.$minDistance =","handle.$maxDistance = castToNumber;","","handle.$exists = $exists;","handle.$type = $type;","","handle.$eq =","handle.$gt =","handle.$gte =","handle.$in =","handle.$lt =","handle.$lte =","handle.$ne =","handle.$nin =","handle.$regex = SchemaArray.prototype.castForQuery;","","/*!"," * Module exports."," */","","module.exports = SchemaArray;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"36":1,"37":0,"38":0,"39":0,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"50":0,"52":0,"57":0,"61":0,"65":0,"66":0,"67":0,"69":0,"72":0,"73":0,"77":0,"79":0,"80":0,"82":0,"83":0,"84":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"107":1,"112":1,"113":1,"124":1,"125":0,"136":1,"137":0,"139":0,"142":0,"154":1,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"167":0,"168":0,"169":0,"172":0,"175":0,"176":0,"177":0,"178":0,"182":0,"186":0,"190":0,"191":0,"193":0,"204":1,"205":0,"208":0,"209":0,"211":0,"212":0,"215":0,"217":0,"218":0,"220":0,"225":0,"228":0,"229":0,"230":0,"231":0,"233":0,"235":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"244":0,"245":0,"246":0,"248":0,"250":0,"251":0,"252":0,"253":0,"257":0,"260":1,"261":0,"262":0,"265":0,"266":0,"267":0,"268":0,"269":0,"271":0,"274":0,"277":1,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"290":0,"293":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":0,"301":0,"304":0,"305":0,"306":0,"309":0,"312":1,"315":1,"318":1,"322":1,"323":1,"325":1,"339":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/date.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/date.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"SchemaDate","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}}},"2":{"name":"(anonymous_2)","line":70,"loc":{"start":{"line":70,"column":31},"end":{"line":70,"column":46}}},"3":{"name":"(anonymous_3)","line":90,"loc":{"start":{"line":90,"column":37},"end":{"line":90,"column":53}}},"4":{"name":"(anonymous_4)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":52}}},"5":{"name":"(anonymous_5)","line":127,"loc":{"start":{"line":127,"column":45},"end":{"line":127,"column":57}}},"6":{"name":"(anonymous_6)","line":137,"loc":{"start":{"line":137,"column":37},"end":{"line":137,"column":51}}},"7":{"name":"(anonymous_7)","line":181,"loc":{"start":{"line":181,"column":27},"end":{"line":181,"column":52}}},"8":{"name":"(anonymous_8)","line":183,"loc":{"start":{"line":183,"column":45},"end":{"line":183,"column":57}}},"9":{"name":"(anonymous_9)","line":193,"loc":{"start":{"line":193,"column":37},"end":{"line":193,"column":51}}},"10":{"name":"(anonymous_10)","line":213,"loc":{"start":{"line":213,"column":28},"end":{"line":213,"column":44}}},"11":{"name":"handleSingle","line":255,"loc":{"start":{"line":255,"column":0},"end":{"line":255,"column":27}}},"12":{"name":"(anonymous_12)","line":276,"loc":{"start":{"line":276,"column":36},"end":{"line":276,"column":64}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":40}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":37}},"5":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":46}},"7":{"start":{"line":31,"column":0},"end":{"line":31,"column":31}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":59}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":46}},"10":{"start":{"line":70,"column":0},"end":{"line":78,"column":2}},"11":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"12":{"start":{"line":72,"column":4},"end":{"line":72,"column":21}},"13":{"start":{"line":75,"column":2},"end":{"line":75,"column":29}},"14":{"start":{"line":76,"column":2},"end":{"line":76,"column":29}},"15":{"start":{"line":77,"column":2},"end":{"line":77,"column":14}},"16":{"start":{"line":90,"column":0},"end":{"line":92,"column":2}},"17":{"start":{"line":91,"column":2},"end":{"line":91,"column":31}},"18":{"start":{"line":125,"column":0},"end":{"line":148,"column":2}},"19":{"start":{"line":126,"column":2},"end":{"line":130,"column":3}},"20":{"start":{"line":127,"column":4},"end":{"line":129,"column":13}},"21":{"start":{"line":128,"column":6},"end":{"line":128,"column":47}},"22":{"start":{"line":132,"column":2},"end":{"line":145,"column":3}},"23":{"start":{"line":133,"column":4},"end":{"line":133,"column":57}},"24":{"start":{"line":134,"column":4},"end":{"line":134,"column":98}},"25":{"start":{"line":135,"column":4},"end":{"line":135,"column":21}},"26":{"start":{"line":136,"column":4},"end":{"line":144,"column":7}},"27":{"start":{"line":138,"column":8},"end":{"line":138,"column":69}},"28":{"start":{"line":139,"column":8},"end":{"line":139,"column":62}},"29":{"start":{"line":147,"column":2},"end":{"line":147,"column":14}},"30":{"start":{"line":181,"column":0},"end":{"line":204,"column":2}},"31":{"start":{"line":182,"column":2},"end":{"line":186,"column":3}},"32":{"start":{"line":183,"column":4},"end":{"line":185,"column":13}},"33":{"start":{"line":184,"column":6},"end":{"line":184,"column":47}},"34":{"start":{"line":188,"column":2},"end":{"line":201,"column":3}},"35":{"start":{"line":189,"column":4},"end":{"line":189,"column":57}},"36":{"start":{"line":190,"column":4},"end":{"line":190,"column":98}},"37":{"start":{"line":191,"column":4},"end":{"line":191,"column":21}},"38":{"start":{"line":192,"column":4},"end":{"line":200,"column":7}},"39":{"start":{"line":194,"column":8},"end":{"line":194,"column":69}},"40":{"start":{"line":195,"column":8},"end":{"line":195,"column":62}},"41":{"start":{"line":203,"column":2},"end":{"line":203,"column":14}},"42":{"start":{"line":213,"column":0},"end":{"line":247,"column":2}},"43":{"start":{"line":215,"column":2},"end":{"line":217,"column":3}},"44":{"start":{"line":216,"column":4},"end":{"line":216,"column":16}},"45":{"start":{"line":219,"column":2},"end":{"line":225,"column":3}},"46":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"47":{"start":{"line":221,"column":6},"end":{"line":221,"column":52}},"48":{"start":{"line":224,"column":4},"end":{"line":224,"column":17}},"49":{"start":{"line":227,"column":2},"end":{"line":227,"column":11}},"50":{"start":{"line":229,"column":2},"end":{"line":231,"column":3}},"51":{"start":{"line":230,"column":4},"end":{"line":230,"column":50}},"52":{"start":{"line":233,"column":2},"end":{"line":240,"column":3}},"53":{"start":{"line":236,"column":4},"end":{"line":236,"column":35}},"54":{"start":{"line":237,"column":9},"end":{"line":240,"column":3}},"55":{"start":{"line":239,"column":4},"end":{"line":239,"column":37}},"56":{"start":{"line":242,"column":2},"end":{"line":244,"column":3}},"57":{"start":{"line":243,"column":4},"end":{"line":243,"column":16}},"58":{"start":{"line":246,"column":2},"end":{"line":246,"column":48}},"59":{"start":{"line":255,"column":0},"end":{"line":257,"column":1}},"60":{"start":{"line":256,"column":2},"end":{"line":256,"column":24}},"61":{"start":{"line":259,"column":0},"end":{"line":265,"column":7}},"62":{"start":{"line":276,"column":0},"end":{"line":290,"column":2}},"63":{"start":{"line":277,"column":2},"end":{"line":277,"column":14}},"64":{"start":{"line":279,"column":2},"end":{"line":281,"column":3}},"65":{"start":{"line":280,"column":4},"end":{"line":280,"column":35}},"66":{"start":{"line":283,"column":2},"end":{"line":283,"column":52}},"67":{"start":{"line":285,"column":2},"end":{"line":287,"column":3}},"68":{"start":{"line":286,"column":4},"end":{"line":286,"column":66}},"69":{"start":{"line":289,"column":2},"end":{"line":289,"column":33}},"70":{"start":{"line":296,"column":0},"end":{"line":296,"column":28}}},"branchMap":{"1":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"2":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":6},"end":{"line":71,"column":18}},{"start":{"line":71,"column":22},"end":{"line":71,"column":63}}]},"3":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"4":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"5":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":14},"end":{"line":133,"column":21}},{"start":{"line":133,"column":25},"end":{"line":133,"column":56}}]},"6":{"line":134,"type":"cond-expr","locations":[{"start":{"line":134,"column":53},"end":{"line":134,"column":65}},{"start":{"line":134,"column":68},"end":{"line":134,"column":95}}]},"7":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":40},"end":{"line":138,"column":47}},{"start":{"line":138,"column":50},"end":{"line":138,"column":67}}]},"8":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":15},"end":{"line":139,"column":27}},{"start":{"line":139,"column":31},"end":{"line":139,"column":61}}]},"9":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"10":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"11":{"line":189,"type":"binary-expr","locations":[{"start":{"line":189,"column":14},"end":{"line":189,"column":21}},{"start":{"line":189,"column":25},"end":{"line":189,"column":56}}]},"12":{"line":190,"type":"cond-expr","locations":[{"start":{"line":190,"column":53},"end":{"line":190,"column":65}},{"start":{"line":190,"column":68},"end":{"line":190,"column":95}}]},"13":{"line":194,"type":"cond-expr","locations":[{"start":{"line":194,"column":40},"end":{"line":194,"column":47}},{"start":{"line":194,"column":50},"end":{"line":194,"column":67}}]},"14":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":15},"end":{"line":195,"column":27}},{"start":{"line":195,"column":31},"end":{"line":195,"column":61}}]},"15":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"16":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":20}},{"start":{"line":215,"column":24},"end":{"line":215,"column":40}},{"start":{"line":215,"column":44},"end":{"line":215,"column":56}}]},"17":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"18":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"19":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"20":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":2},"end":{"line":233,"column":2}},{"start":{"line":233,"column":2},"end":{"line":233,"column":2}}]},"21":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":6},"end":{"line":233,"column":29}},{"start":{"line":233,"column":33},"end":{"line":233,"column":58}},{"start":{"line":234,"column":9},"end":{"line":234,"column":39}}]},"22":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":9},"end":{"line":237,"column":9}},{"start":{"line":237,"column":9},"end":{"line":237,"column":9}}]},"23":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"24":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"25":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":2},"end":{"line":285,"column":2}},{"start":{"line":285,"column":2},"end":{"line":285,"column":2}}]}},"code":["/*!"," * Module requirements."," */","","var MongooseError = require('../error');","var utils = require('../utils');","","var SchemaType = require('../schematype');","","var CastError = SchemaType.CastError;","","/**"," * Date SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaDate(key, options) {","  SchemaType.call(this, key, options, 'Date');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaDate.schemaName = 'Date';","","/*!"," * Inherits from SchemaType."," */","SchemaDate.prototype = Object.create(SchemaType.prototype);","SchemaDate.prototype.constructor = SchemaDate;","","/**"," * Declares a TTL index (rounded to the nearest second) for _Date_ types only."," *"," * This sets the `expireAfterSeconds` index option available in MongoDB >= 2.1.2."," * This index type is only compatible with Date types."," *"," * ####Example:"," *"," *     // expire in 24 hours"," *     new Schema({ createdAt: { type: Date, expires: 60*60*24 }});"," *"," * `expires` utilizes the `ms` module from [guille](https://github.com/guille/) allowing us to use a friendlier syntax:"," *"," * ####Example:"," *"," *     // expire in 24 hours"," *     new Schema({ createdAt: { type: Date, expires: '24h' }});"," *"," *     // expire in 1.5 hours"," *     new Schema({ createdAt: { type: Date, expires: '1.5h' }});"," *"," *     // expire in 7 days"," *     var schema = new Schema({ createdAt: Date });"," *     schema.path('createdAt').expires('7d');"," *"," * @param {Number|String} when"," * @added 3.0.0"," * @return {SchemaType} this"," * @api public"," */","","SchemaDate.prototype.expires = function(when) {","  if (!this._index || this._index.constructor.name !== 'Object') {","    this._index = {};","  }","","  this._index.expires = when;","  utils.expires(this._index);","  return this;","};","","/**"," * Check if the given value satisfies a required validator. To satisfy"," * a required validator, the given value must be an instance of `Date`."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaDate.prototype.checkRequired = function(value) {","  return value instanceof Date;","};","","/**"," * Sets a minimum date validator."," *"," * ####Example:"," *"," *     var s = new Schema({ d: { type: Date, min: Date('1970-01-01') })"," *     var M = db.model('M', s)"," *     var m = new M({ d: Date('1969-12-31') })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.d = Date('2014-12-08');"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MIN} token which will be replaced with the invalid value"," *     var min = [Date('1970-01-01'), 'The value of path `{PATH}` ({VALUE}) is beneath the limit ({MIN}).'];"," *     var schema = new Schema({ d: { type: Date, min: min })"," *     var M = mongoose.model('M', schema);"," *     var s= new M({ d: Date('1969-12-31') });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `d` (1969-12-31) is before the limit (1970-01-01)."," *     })"," *"," * @param {Date} value minimum date"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaDate.prototype.min = function(value, message) {","  if (this.minValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.minValidator;","    }, this);","  }","","  if (value) {","    var msg = message || MongooseError.messages.Date.min;","    msg = msg.replace(/{MIN}/, (value === Date.now ? 'Date.now()' : this.cast(value).toString()));","    var _this = this;","    this.validators.push({","      validator: this.minValidator = function(val) {","        var min = (value === Date.now ? value() : _this.cast(value));","        return val === null || val.valueOf() >= min.valueOf();","      },","      message: msg,","      type: 'min',","      min: value","    });","  }","","  return this;","};","","/**"," * Sets a maximum date validator."," *"," * ####Example:"," *"," *     var s = new Schema({ d: { type: Date, max: Date('2014-01-01') })"," *     var M = db.model('M', s)"," *     var m = new M({ d: Date('2014-12-08') })"," *     m.save(function (err) {"," *       console.error(err) // validator error"," *       m.d = Date('2013-12-31');"," *       m.save() // success"," *     })"," *"," *     // custom error messages"," *     // We can also use the special {MAX} token which will be replaced with the invalid value"," *     var max = [Date('2014-01-01'), 'The value of path `{PATH}` ({VALUE}) exceeds the limit ({MAX}).'];"," *     var schema = new Schema({ d: { type: Date, max: max })"," *     var M = mongoose.model('M', schema);"," *     var s= new M({ d: Date('2014-12-08') });"," *     s.validate(function (err) {"," *       console.log(String(err)) // ValidationError: The value of path `d` (2014-12-08) exceeds the limit (2014-01-01)."," *     })"," *"," * @param {Date} maximum date"," * @param {String} [message] optional custom error message"," * @return {SchemaType} this"," * @see Customized Error Messages #error_messages_MongooseError-messages"," * @api public"," */","","SchemaDate.prototype.max = function(value, message) {","  if (this.maxValidator) {","    this.validators = this.validators.filter(function(v) {","      return v.validator !== this.maxValidator;","    }, this);","  }","","  if (value) {","    var msg = message || MongooseError.messages.Date.max;","    msg = msg.replace(/{MAX}/, (value === Date.now ? 'Date.now()' : this.cast(value).toString()));","    var _this = this;","    this.validators.push({","      validator: this.maxValidator = function(val) {","        var max = (value === Date.now ? value() : _this.cast(value));","        return val === null || val.valueOf() <= max.valueOf();","      },","      message: msg,","      type: 'max',","      max: value","    });","  }","","  return this;","};","","/**"," * Casts to date"," *"," * @param {Object} value to cast"," * @api private"," */","","SchemaDate.prototype.cast = function(value) {","  // If null or undefined","  if (value === null || value === void 0 || value === '') {","    return null;","  }","","  if (value instanceof Date) {","    if (isNaN(value.valueOf())) {","      throw new CastError('date', value, this.path);","    }","","    return value;","  }","","  var date;","","  if (typeof value === 'boolean') {","    throw new CastError('date', value, this.path);","  }","","  if (value instanceof Number || typeof value === 'number'","      || String(value) == Number(value)) {","    // support for timestamps","    date = new Date(Number(value));","  } else if (value.valueOf) {","    // support for moment.js","    date = new Date(value.valueOf());","  }","","  if (!isNaN(date.valueOf())) {","    return date;","  }","","  throw new CastError('date', value, this.path);","};","","/*!"," * Date Query casting."," *"," * @api private"," */","","function handleSingle(val) {","  return this.cast(val);","}","","SchemaDate.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle","    });","","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaDate.prototype.castForQuery = function($conditional, val) {","  var handler;","","  if (arguments.length !== 2) {","    return this.cast($conditional);","  }","","  handler = this.$conditionalHandlers[$conditional];","","  if (!handler) {","    throw new Error('Can\\'t use ' + $conditional + ' with Date.');","  }","","  return handler.call(this, val);","};","","/*!"," * Module exports."," */","","module.exports = SchemaDate;",""],"l":{"5":1,"6":1,"8":1,"10":1,"21":1,"22":0,"31":1,"36":1,"37":1,"70":1,"71":0,"72":0,"75":0,"76":0,"77":0,"90":1,"91":0,"125":1,"126":0,"127":0,"128":0,"132":0,"133":0,"134":0,"135":0,"136":0,"138":0,"139":0,"147":0,"181":1,"182":0,"183":0,"184":0,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0,"195":0,"203":0,"213":1,"215":0,"216":0,"219":0,"220":0,"221":0,"224":0,"227":0,"229":0,"230":0,"233":0,"236":0,"237":0,"239":0,"242":0,"243":0,"246":0,"255":1,"256":0,"259":1,"276":1,"277":0,"279":0,"280":0,"283":0,"285":0,"286":0,"289":0,"296":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/objectid.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/objectid.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":1,"65":0,"66":0,"67":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"ObjectId","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":32}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":26},"end":{"line":47,"column":43}}},"3":{"name":"checkRequired","line":65,"loc":{"start":{"line":65,"column":35},"end":{"line":65,"column":70}}},"4":{"name":"(anonymous_4)","line":81,"loc":{"start":{"line":81,"column":26},"end":{"line":81,"column":53}}},"5":{"name":"handleSingle","line":158,"loc":{"start":{"line":158,"column":0},"end":{"line":158,"column":27}}},"6":{"name":"(anonymous_6)","line":178,"loc":{"start":{"line":178,"column":34},"end":{"line":178,"column":62}}},"7":{"name":"defaultId","line":194,"loc":{"start":{"line":194,"column":0},"end":{"line":194,"column":21}}},"8":{"name":"resetId","line":198,"loc":{"start":{"line":198,"column":0},"end":{"line":198,"column":20}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":13}},"2":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"3":{"start":{"line":23,"column":2},"end":{"line":23,"column":50}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":33}},"5":{"start":{"line":37,"column":0},"end":{"line":37,"column":57}},"6":{"start":{"line":38,"column":0},"end":{"line":38,"column":42}},"7":{"start":{"line":47,"column":0},"end":{"line":54,"column":2}},"8":{"start":{"line":48,"column":2},"end":{"line":51,"column":3}},"9":{"start":{"line":49,"column":4},"end":{"line":49,"column":28}},"10":{"start":{"line":50,"column":4},"end":{"line":50,"column":22}},"11":{"start":{"line":53,"column":2},"end":{"line":53,"column":14}},"12":{"start":{"line":65,"column":0},"end":{"line":70,"column":2}},"13":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"14":{"start":{"line":67,"column":4},"end":{"line":67,"column":19}},"15":{"start":{"line":69,"column":2},"end":{"line":69,"column":30}},"16":{"start":{"line":81,"column":0},"end":{"line":152,"column":2}},"17":{"start":{"line":82,"column":2},"end":{"line":121,"column":3}},"18":{"start":{"line":85,"column":4},"end":{"line":87,"column":5}},"19":{"start":{"line":86,"column":6},"end":{"line":86,"column":19}},"20":{"start":{"line":90,"column":4},"end":{"line":90,"column":54}},"21":{"start":{"line":92,"column":4},"end":{"line":95,"column":5}},"22":{"start":{"line":93,"column":6},"end":{"line":93,"column":36}},"23":{"start":{"line":94,"column":6},"end":{"line":94,"column":19}},"24":{"start":{"line":98,"column":4},"end":{"line":102,"column":5}},"25":{"start":{"line":99,"column":6},"end":{"line":99,"column":19}},"26":{"start":{"line":100,"column":11},"end":{"line":102,"column":5}},"27":{"start":{"line":101,"column":6},"end":{"line":101,"column":56}},"28":{"start":{"line":107,"column":4},"end":{"line":107,"column":42}},"29":{"start":{"line":108,"column":4},"end":{"line":108,"column":62}},"30":{"start":{"line":109,"column":4},"end":{"line":109,"column":42}},"31":{"start":{"line":110,"column":4},"end":{"line":110,"column":20}},"32":{"start":{"line":111,"column":4},"end":{"line":118,"column":5}},"33":{"start":{"line":116,"column":6},"end":{"line":116,"column":41}},"34":{"start":{"line":117,"column":6},"end":{"line":117,"column":34}},"35":{"start":{"line":120,"column":4},"end":{"line":120,"column":15}},"36":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"37":{"start":{"line":124,"column":4},"end":{"line":124,"column":17}},"38":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"39":{"start":{"line":128,"column":4},"end":{"line":128,"column":17}},"40":{"start":{"line":131,"column":2},"end":{"line":141,"column":3}},"41":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"42":{"start":{"line":133,"column":6},"end":{"line":133,"column":23}},"43":{"start":{"line":135,"column":4},"end":{"line":140,"column":5}},"44":{"start":{"line":136,"column":6},"end":{"line":139,"column":7}},"45":{"start":{"line":137,"column":8},"end":{"line":137,"column":45}},"46":{"start":{"line":143,"column":2},"end":{"line":149,"column":3}},"47":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"48":{"start":{"line":145,"column":6},"end":{"line":145,"column":39}},"49":{"start":{"line":147,"column":6},"end":{"line":147,"column":56}},"50":{"start":{"line":151,"column":2},"end":{"line":151,"column":52}},"51":{"start":{"line":158,"column":0},"end":{"line":160,"column":1}},"52":{"start":{"line":159,"column":2},"end":{"line":159,"column":24}},"53":{"start":{"line":162,"column":0},"end":{"line":168,"column":7}},"54":{"start":{"line":178,"column":0},"end":{"line":188,"column":2}},"55":{"start":{"line":179,"column":2},"end":{"line":179,"column":14}},"56":{"start":{"line":180,"column":2},"end":{"line":186,"column":3}},"57":{"start":{"line":181,"column":4},"end":{"line":181,"column":54}},"58":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"59":{"start":{"line":183,"column":6},"end":{"line":183,"column":72}},"60":{"start":{"line":185,"column":4},"end":{"line":185,"column":35}},"61":{"start":{"line":187,"column":2},"end":{"line":187,"column":33}},"62":{"start":{"line":194,"column":0},"end":{"line":196,"column":1}},"63":{"start":{"line":195,"column":2},"end":{"line":195,"column":19}},"64":{"start":{"line":198,"column":0},"end":{"line":201,"column":1}},"65":{"start":{"line":199,"column":2},"end":{"line":199,"column":22}},"66":{"start":{"line":200,"column":2},"end":{"line":200,"column":11}},"67":{"start":{"line":207,"column":0},"end":{"line":207,"column":26}}},"branchMap":{"1":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"3":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"4":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"5":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},{"start":{"line":85,"column":26},"end":{"line":85,"column":45}}]},"6":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":12}},{"start":{"line":90,"column":17},"end":{"line":90,"column":52}}]},"7":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"8":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"9":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":11},"end":{"line":100,"column":11}},{"start":{"line":100,"column":11},"end":{"line":100,"column":11}}]},"10":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":15},"end":{"line":100,"column":37}},{"start":{"line":100,"column":41},"end":{"line":100,"column":63}}]},"11":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":36},"end":{"line":108,"column":55}},{"start":{"line":108,"column":58},"end":{"line":108,"column":61}}]},"12":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"13":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":26}},{"start":{"line":112,"column":8},"end":{"line":112,"column":32}},{"start":{"line":113,"column":8},"end":{"line":113,"column":40}},{"start":{"line":114,"column":8},"end":{"line":114,"column":48}},{"start":{"line":115,"column":8},"end":{"line":115,"column":53}}]},"14":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"15":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":20}},{"start":{"line":123,"column":24},"end":{"line":123,"column":43}}]},"16":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"17":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"18":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"19":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"20":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"21":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"22":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]}},"code":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype'),","    CastError = SchemaType.CastError,","    oid = require('../types/objectid'),","    utils = require('../utils'),","    Document;","","/**"," * ObjectId SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function ObjectId(key, options) {","  SchemaType.call(this, key, options, 'ObjectID');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","ObjectId.schemaName = 'ObjectId';","","/*!"," * Inherits from SchemaType."," */","ObjectId.prototype = Object.create(SchemaType.prototype);","ObjectId.prototype.constructor = ObjectId;","","/**"," * Adds an auto-generated ObjectId default if turnOn is true."," * @param {Boolean} turnOn auto generated ObjectId defaults"," * @api public"," * @return {SchemaType} this"," */","","ObjectId.prototype.auto = function(turnOn) {","  if (turnOn) {","    this.default(defaultId);","    this.set(resetId);","  }","","  return this;","};","","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","ObjectId.prototype.checkRequired = function checkRequired(value, doc) {","  if (SchemaType._isRef(this, value, doc, true)) {","    return !!value;","  }","  return value instanceof oid;","};","","/**"," * Casts to ObjectId"," *"," * @param {Object} value"," * @param {Object} doc"," * @param {Boolean} init whether this is an initialization cast"," * @api private"," */","","ObjectId.prototype.cast = function(value, doc, init) {","  if (SchemaType._isRef(this, value, doc, init)) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","      return value;","    }","","    // lazy load","    Document || (Document = require('./../document'));","","    if (value instanceof Document) {","      value.$__.wasPopulated = true;","      return value;","    }","","    // setting a populated path","    if (value instanceof oid) {","      return value;","    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {","      throw new CastError('ObjectId', value, this.path);","    }","","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    var pop = owner.populated(path, true);","    var ret = value;","    if (!doc.$__.populated ||","        !doc.$__.populated[path] ||","        !doc.$__.populated[path].options ||","        !doc.$__.populated[path].options.options ||","        !doc.$__.populated[path].options.options.lean) {","      ret = new pop.options.model(value);","      ret.$__.wasPopulated = true;","    }","","    return ret;","  }","","  if (value === null || value === undefined) {","    return value;","  }","","  if (value instanceof oid) {","    return value;","  }","","  if (value._id) {","    if (value._id instanceof oid) {","      return value._id;","    }","    if (value._id.toString instanceof Function) {","      try {","        return new oid(value._id.toString());","      } catch (e) {","      }","    }","  }","","  if (value.toString instanceof Function) {","    try {","      return new oid(value.toString());","    } catch (err) {","      throw new CastError('ObjectId', value, this.path);","    }","  }","","  throw new CastError('ObjectId', value, this.path);","};","","/*!"," * ignore"," */","","function handleSingle(val) {","  return this.cast(val);","}","","ObjectId.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle","    });","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [val]"," * @api private"," */","","ObjectId.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');","    }","    return handler.call(this, val);","  }","  return this.cast($conditional);","};","","/*!"," * ignore"," */","","function defaultId() {","  return new oid();","}","","function resetId(v) {","  this.$__._id = null;","  return v;","}","","/*!"," * Module exports."," */","","module.exports = ObjectId;",""],"l":{"7":1,"22":1,"23":0,"32":1,"37":1,"38":1,"47":1,"48":0,"49":0,"50":0,"53":0,"65":1,"66":0,"67":0,"69":0,"81":1,"82":0,"85":0,"86":0,"90":0,"92":0,"93":0,"94":0,"98":0,"99":0,"100":0,"101":0,"107":0,"108":0,"109":0,"110":0,"111":0,"116":0,"117":0,"120":0,"123":0,"124":0,"127":0,"128":0,"131":0,"132":0,"133":0,"135":0,"136":0,"137":0,"143":0,"144":0,"145":0,"147":0,"151":0,"158":1,"159":0,"162":1,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"185":0,"187":0,"194":1,"195":0,"198":1,"199":0,"200":0,"207":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/buffer.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":1,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"SchemaBuffer","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":36}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":39},"end":{"line":53,"column":60}}},"3":{"name":"(anonymous_3)","line":69,"loc":{"start":{"line":69,"column":30},"end":{"line":69,"column":57}}},"4":{"name":"handleSingle","line":147,"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":27}}},"5":{"name":"(anonymous_5)","line":171,"loc":{"start":{"line":171,"column":38},"end":{"line":171,"column":66}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":59}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":48}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":37}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":13}},"8":{"start":{"line":24,"column":0},"end":{"line":26,"column":1}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":48}},"10":{"start":{"line":34,"column":0},"end":{"line":34,"column":35}},"11":{"start":{"line":39,"column":0},"end":{"line":39,"column":61}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":50}},"13":{"start":{"line":53,"column":0},"end":{"line":58,"column":2}},"14":{"start":{"line":54,"column":2},"end":{"line":56,"column":3}},"15":{"start":{"line":55,"column":4},"end":{"line":55,"column":19}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":35}},"17":{"start":{"line":69,"column":0},"end":{"line":142,"column":2}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":10}},"19":{"start":{"line":71,"column":2},"end":{"line":102,"column":3}},"20":{"start":{"line":74,"column":4},"end":{"line":76,"column":5}},"21":{"start":{"line":75,"column":6},"end":{"line":75,"column":19}},"22":{"start":{"line":79,"column":4},"end":{"line":79,"column":54}},"23":{"start":{"line":81,"column":4},"end":{"line":84,"column":5}},"24":{"start":{"line":82,"column":6},"end":{"line":82,"column":36}},"25":{"start":{"line":83,"column":6},"end":{"line":83,"column":19}},"26":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"27":{"start":{"line":88,"column":6},"end":{"line":88,"column":19}},"28":{"start":{"line":89,"column":11},"end":{"line":91,"column":5}},"29":{"start":{"line":90,"column":6},"end":{"line":90,"column":54}},"30":{"start":{"line":96,"column":4},"end":{"line":96,"column":42}},"31":{"start":{"line":97,"column":4},"end":{"line":97,"column":62}},"32":{"start":{"line":98,"column":4},"end":{"line":98,"column":42}},"33":{"start":{"line":99,"column":4},"end":{"line":99,"column":39}},"34":{"start":{"line":100,"column":4},"end":{"line":100,"column":32}},"35":{"start":{"line":101,"column":4},"end":{"line":101,"column":15}},"36":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"37":{"start":{"line":106,"column":4},"end":{"line":106,"column":22}},"38":{"start":{"line":109,"column":2},"end":{"line":111,"column":3}},"39":{"start":{"line":110,"column":4},"end":{"line":110,"column":17}},"40":{"start":{"line":113,"column":2},"end":{"line":126,"column":3}},"41":{"start":{"line":114,"column":4},"end":{"line":116,"column":5}},"42":{"start":{"line":115,"column":6},"end":{"line":115,"column":58}},"43":{"start":{"line":118,"column":4},"end":{"line":118,"column":17}},"44":{"start":{"line":119,"column":9},"end":{"line":126,"column":3}},"45":{"start":{"line":120,"column":4},"end":{"line":120,"column":66}},"46":{"start":{"line":121,"column":4},"end":{"line":123,"column":5}},"47":{"start":{"line":122,"column":6},"end":{"line":122,"column":54}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":34}},"49":{"start":{"line":125,"column":4},"end":{"line":125,"column":15}},"50":{"start":{"line":128,"column":2},"end":{"line":130,"column":3}},"51":{"start":{"line":129,"column":4},"end":{"line":129,"column":17}},"52":{"start":{"line":132,"column":2},"end":{"line":132,"column":26}},"53":{"start":{"line":133,"column":2},"end":{"line":139,"column":3}},"54":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"55":{"start":{"line":135,"column":6},"end":{"line":135,"column":22}},"56":{"start":{"line":137,"column":4},"end":{"line":137,"column":54}},"57":{"start":{"line":138,"column":4},"end":{"line":138,"column":15}},"58":{"start":{"line":141,"column":2},"end":{"line":141,"column":50}},"59":{"start":{"line":147,"column":0},"end":{"line":149,"column":1}},"60":{"start":{"line":148,"column":2},"end":{"line":148,"column":32}},"61":{"start":{"line":151,"column":0},"end":{"line":161,"column":7}},"62":{"start":{"line":171,"column":0},"end":{"line":183,"column":2}},"63":{"start":{"line":172,"column":2},"end":{"line":172,"column":14}},"64":{"start":{"line":173,"column":2},"end":{"line":179,"column":3}},"65":{"start":{"line":174,"column":4},"end":{"line":174,"column":54}},"66":{"start":{"line":175,"column":4},"end":{"line":177,"column":5}},"67":{"start":{"line":176,"column":6},"end":{"line":176,"column":70}},"68":{"start":{"line":178,"column":4},"end":{"line":178,"column":35}},"69":{"start":{"line":180,"column":2},"end":{"line":180,"column":21}},"70":{"start":{"line":181,"column":2},"end":{"line":181,"column":30}},"71":{"start":{"line":182,"column":2},"end":{"line":182,"column":82}},"72":{"start":{"line":189,"column":0},"end":{"line":189,"column":30}}},"branchMap":{"1":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"2":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":17}},{"start":{"line":57,"column":21},"end":{"line":57,"column":33}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]},"4":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":4}},{"start":{"line":74,"column":4},"end":{"line":74,"column":4}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":8},"end":{"line":74,"column":22}},{"start":{"line":74,"column":26},"end":{"line":74,"column":45}}]},"6":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":12}},{"start":{"line":79,"column":17},"end":{"line":79,"column":52}}]},"7":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"8":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":11},"end":{"line":89,"column":11}},{"start":{"line":89,"column":11},"end":{"line":89,"column":11}}]},"10":{"line":97,"type":"cond-expr","locations":[{"start":{"line":97,"column":36},"end":{"line":97,"column":55}},{"start":{"line":97,"column":58},"end":{"line":97,"column":61}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"12":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":11}},{"start":{"line":105,"column":15},"end":{"line":105,"column":24}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":2},"end":{"line":109,"column":2}},{"start":{"line":109,"column":2},"end":{"line":109,"column":2}}]},"14":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":6},"end":{"line":109,"column":11}},{"start":{"line":109,"column":15},"end":{"line":109,"column":37}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"16":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"17":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":14}},{"start":{"line":114,"column":18},"end":{"line":114,"column":41}}]},"18":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":9},"end":{"line":119,"column":9}},{"start":{"line":119,"column":9},"end":{"line":119,"column":9}}]},"19":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"20":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"21":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"22":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":23}},{"start":{"line":133,"column":27},"end":{"line":133,"column":44}},{"start":{"line":133,"column":48},"end":{"line":133,"column":68}}]},"23":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"24":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":2},"end":{"line":173,"column":2}},{"start":{"line":173,"column":2},"end":{"line":173,"column":2}}]},"25":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"26":{"line":182,"type":"cond-expr","locations":[{"start":{"line":182,"column":18},"end":{"line":182,"column":72}},{"start":{"line":182,"column":75},"end":{"line":182,"column":81}}]}},"code":["/*!"," * Module dependencies."," */","","var handleBitwiseOperator = require('./operators/bitwise');","var utils = require('../utils');","","var MongooseBuffer = require('../types').Buffer;","var SchemaType = require('../schematype');","","var Binary = MongooseBuffer.Binary;","var CastError = SchemaType.CastError;","var Document;","","/**"," * Buffer SchemaType constructor"," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function SchemaBuffer(key, options) {","  SchemaType.call(this, key, options, 'Buffer');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","SchemaBuffer.schemaName = 'Buffer';","","/*!"," * Inherits from SchemaType."," */","SchemaBuffer.prototype = Object.create(SchemaType.prototype);","SchemaBuffer.prototype.constructor = SchemaBuffer;","","/**"," * Check if the given value satisfies a required validator. To satisfy a"," * required validator, a buffer must not be null or undefined and have"," * non-zero length."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","SchemaBuffer.prototype.checkRequired = function(value, doc) {","  if (SchemaType._isRef(this, value, doc, true)) {","    return !!value;","  }","  return !!(value && value.length);","};","","/**"," * Casts contents"," *"," * @param {Object} value"," * @param {Document} doc document that triggers the casting"," * @param {Boolean} init"," * @api private"," */","","SchemaBuffer.prototype.cast = function(value, doc, init) {","  var ret;","  if (SchemaType._isRef(this, value, doc, init)) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","      return value;","    }","","    // lazy load","    Document || (Document = require('./../document'));","","    if (value instanceof Document) {","      value.$__.wasPopulated = true;","      return value;","    }","","    // setting a populated path","    if (Buffer.isBuffer(value)) {","      return value;","    } else if (!utils.isObject(value)) {","      throw new CastError('buffer', value, this.path);","    }","","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    var pop = owner.populated(path, true);","    ret = new pop.options.model(value);","    ret.$__.wasPopulated = true;","    return ret;","  }","","  // documents","  if (value && value._id) {","    value = value._id;","  }","","  if (value && value.isMongooseBuffer) {","    return value;","  }","","  if (Buffer.isBuffer(value)) {","    if (!value || !value.isMongooseBuffer) {","      value = new MongooseBuffer(value, [this.path, doc]);","    }","","    return value;","  } else if (value instanceof Binary) {","    ret = new MongooseBuffer(value.value(true), [this.path, doc]);","    if (typeof value.sub_type !== 'number') {","      throw new CastError('buffer', value, this.path);","    }","    ret._subtype = value.sub_type;","    return ret;","  }","","  if (value === null) {","    return value;","  }","","  var type = typeof value;","  if (type === 'string' || type === 'number' || Array.isArray(value)) {","    if (type === 'number') {","      value = [value];","    }","    ret = new MongooseBuffer(value, [this.path, doc]);","    return ret;","  }","","  throw new CastError('buffer', value, this.path);","};","","/*!"," * ignore"," */","function handleSingle(val) {","  return this.castForQuery(val);","}","","SchemaBuffer.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $bitsAllClear: handleBitwiseOperator,","      $bitsAnyClear: handleBitwiseOperator,","      $bitsAllSet: handleBitwiseOperator,","      $bitsAnySet: handleBitwiseOperator,","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle","    });","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [value]"," * @api private"," */","","SchemaBuffer.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with Buffer.');","    }","    return handler.call(this, val);","  }","  val = $conditional;","  var casted = this.cast(val);","  return casted ? casted.toObject({ transform: false, virtuals: false }) : casted;","};","","/*!"," * Module exports."," */","","module.exports = SchemaBuffer;",""],"l":{"5":1,"6":1,"8":1,"9":1,"11":1,"12":1,"13":1,"24":1,"25":0,"34":1,"39":1,"40":1,"53":1,"54":0,"55":0,"57":0,"69":1,"70":0,"71":0,"74":0,"75":0,"79":0,"81":0,"82":0,"83":0,"87":0,"88":0,"89":0,"90":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"105":0,"106":0,"109":0,"110":0,"113":0,"114":0,"115":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"128":0,"129":0,"132":0,"133":0,"134":0,"135":0,"137":0,"138":0,"141":0,"147":1,"148":0,"151":1,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"180":0,"181":0,"182":0,"189":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":35}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":10,"column":41}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"5":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"6":{"start":{"line":14,"column":0},"end":{"line":14,"column":41}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":47}}},"branchMap":{},"code":["","/*!"," * Module exports."," */","","exports.Array = require('./array');","exports.Buffer = require('./buffer');","","exports.Document = // @deprecate","exports.Embedded = require('./embedded');","","exports.DocumentArray = require('./documentarray');","exports.Decimal128 = require('./decimal128');","exports.ObjectId = require('./objectid');","","exports.Subdocument = require('./subdocument');",""],"l":{"6":1,"7":1,"9":1,"12":1,"13":1,"14":1,"16":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/array.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":1,"202":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"fnMap":{"1":{"name":"MongooseArray","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}}},"2":{"name":"(anonymous_2)","line":57,"loc":{"start":{"line":57,"column":10},"end":{"line":57,"column":21}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":9},"end":{"line":96,"column":25}}},"4":{"name":"(anonymous_4)","line":140,"loc":{"start":{"line":140,"column":17},"end":{"line":140,"column":46}}},"5":{"name":"(anonymous_5)","line":173,"loc":{"start":{"line":173,"column":19},"end":{"line":173,"column":37}}},"6":{"name":"(anonymous_6)","line":186,"loc":{"start":{"line":186,"column":32},"end":{"line":186,"column":43}}},"7":{"name":"(anonymous_7)","line":210,"loc":{"start":{"line":210,"column":53},"end":{"line":210,"column":65}}},"8":{"name":"(anonymous_8)","line":235,"loc":{"start":{"line":235,"column":17},"end":{"line":235,"column":28}}},"9":{"name":"hasAtomics","line":279,"loc":{"start":{"line":279,"column":14},"end":{"line":279,"column":36}}},"10":{"name":"(anonymous_10)","line":295,"loc":{"start":{"line":295,"column":12},"end":{"line":295,"column":33}}},"11":{"name":"(anonymous_11)","line":308,"loc":{"start":{"line":308,"column":8},"end":{"line":308,"column":19}}},"12":{"name":"(anonymous_12)","line":334,"loc":{"start":{"line":334,"column":17},"end":{"line":334,"column":28}}},"13":{"name":"(anonymous_13)","line":377,"loc":{"start":{"line":377,"column":8},"end":{"line":377,"column":19}}},"14":{"name":"(anonymous_14)","line":403,"loc":{"start":{"line":403,"column":7},"end":{"line":403,"column":18}}},"15":{"name":"$shift","line":443,"loc":{"start":{"line":443,"column":10},"end":{"line":443,"column":28}}},"16":{"name":"(anonymous_16)","line":475,"loc":{"start":{"line":475,"column":9},"end":{"line":475,"column":20}}},"17":{"name":"(anonymous_17)","line":513,"loc":{"start":{"line":513,"column":8},"end":{"line":513,"column":19}}},"18":{"name":"(anonymous_18)","line":522,"loc":{"start":{"line":522,"column":31},"end":{"line":522,"column":43}}},"19":{"name":"(anonymous_19)","line":534,"loc":{"start":{"line":534,"column":51},"end":{"line":534,"column":63}}},"20":{"name":"splice","line":557,"loc":{"start":{"line":557,"column":10},"end":{"line":557,"column":28}}},"21":{"name":"(anonymous_21)","line":587,"loc":{"start":{"line":587,"column":11},"end":{"line":587,"column":22}}},"22":{"name":"(anonymous_22)","line":608,"loc":{"start":{"line":608,"column":8},"end":{"line":608,"column":19}}},"23":{"name":"addToSet","line":632,"loc":{"start":{"line":632,"column":12},"end":{"line":632,"column":32}}},"24":{"name":"(anonymous_24)","line":643,"loc":{"start":{"line":643,"column":19},"end":{"line":643,"column":31}}},"25":{"name":"(anonymous_25)","line":647,"loc":{"start":{"line":647,"column":28},"end":{"line":647,"column":42}}},"26":{"name":"(anonymous_26)","line":653,"loc":{"start":{"line":653,"column":28},"end":{"line":653,"column":40}}},"27":{"name":"set","line":699,"loc":{"start":{"line":699,"column":7},"end":{"line":699,"column":28}}},"28":{"name":"(anonymous_28)","line":720,"loc":{"start":{"line":720,"column":12},"end":{"line":720,"column":30}}},"29":{"name":"(anonymous_29)","line":723,"loc":{"start":{"line":723,"column":22},"end":{"line":723,"column":36}}},"30":{"name":"(anonymous_30)","line":741,"loc":{"start":{"line":741,"column":11},"end":{"line":741,"column":22}}},"31":{"name":"indexOf","line":755,"loc":{"start":{"line":755,"column":11},"end":{"line":755,"column":33}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":46}},"6":{"start":{"line":26,"column":0},"end":{"line":51,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":27,"column":30}},"8":{"start":{"line":29,"column":2},"end":{"line":29,"column":48}},"9":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"10":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"11":{"start":{"line":32,"column":4},"end":{"line":32,"column":52}},"12":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"13":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"14":{"start":{"line":37,"column":2},"end":{"line":37,"column":22}},"15":{"start":{"line":38,"column":2},"end":{"line":38,"column":20}},"16":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"17":{"start":{"line":45,"column":2},"end":{"line":48,"column":3}},"18":{"start":{"line":46,"column":4},"end":{"line":46,"column":22}},"19":{"start":{"line":47,"column":4},"end":{"line":47,"column":40}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":13}},"21":{"start":{"line":53,"column":0},"end":{"line":766,"column":2}},"22":{"start":{"line":58,"column":4},"end":{"line":64,"column":7}},"23":{"start":{"line":97,"column":4},"end":{"line":97,"column":26}},"24":{"start":{"line":98,"column":4},"end":{"line":98,"column":14}},"25":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"26":{"start":{"line":101,"column":6},"end":{"line":101,"column":59}},"27":{"start":{"line":104,"column":4},"end":{"line":123,"column":5}},"28":{"start":{"line":106,"column":6},"end":{"line":106,"column":38}},"29":{"start":{"line":110,"column":6},"end":{"line":113,"column":7}},"30":{"start":{"line":112,"column":8},"end":{"line":112,"column":29}},"31":{"start":{"line":117,"column":6},"end":{"line":118,"column":62}},"32":{"start":{"line":119,"column":6},"end":{"line":121,"column":7}},"33":{"start":{"line":120,"column":8},"end":{"line":120,"column":33}},"34":{"start":{"line":122,"column":6},"end":{"line":122,"column":65}},"35":{"start":{"line":125,"column":4},"end":{"line":125,"column":64}},"36":{"start":{"line":141,"column":4},"end":{"line":142,"column":18}},"37":{"start":{"line":144,"column":4},"end":{"line":158,"column":5}},"38":{"start":{"line":145,"column":6},"end":{"line":145,"column":29}},"39":{"start":{"line":147,"column":6},"end":{"line":155,"column":7}},"40":{"start":{"line":148,"column":8},"end":{"line":154,"column":9}},"41":{"start":{"line":150,"column":10},"end":{"line":150,"column":80}},"42":{"start":{"line":153,"column":10},"end":{"line":153,"column":45}},"43":{"start":{"line":157,"column":6},"end":{"line":157,"column":37}},"44":{"start":{"line":160,"column":4},"end":{"line":160,"column":16}},"45":{"start":{"line":174,"column":4},"end":{"line":179,"column":5}},"46":{"start":{"line":177,"column":6},"end":{"line":177,"column":34}},"47":{"start":{"line":178,"column":6},"end":{"line":178,"column":18}},"48":{"start":{"line":181,"column":4},"end":{"line":181,"column":32}},"49":{"start":{"line":184,"column":4},"end":{"line":189,"column":5}},"50":{"start":{"line":185,"column":6},"end":{"line":185,"column":23}},"51":{"start":{"line":186,"column":6},"end":{"line":188,"column":9}},"52":{"start":{"line":187,"column":8},"end":{"line":187,"column":46}},"53":{"start":{"line":193,"column":4},"end":{"line":199,"column":5}},"54":{"start":{"line":197,"column":6},"end":{"line":197,"column":35}},"55":{"start":{"line":198,"column":6},"end":{"line":198,"column":18}},"56":{"start":{"line":201,"column":4},"end":{"line":201,"column":17}},"57":{"start":{"line":203,"column":4},"end":{"line":219,"column":5}},"58":{"start":{"line":204,"column":6},"end":{"line":204,"column":40}},"59":{"start":{"line":205,"column":6},"end":{"line":205,"column":44}},"60":{"start":{"line":206,"column":11},"end":{"line":219,"column":5}},"61":{"start":{"line":207,"column":6},"end":{"line":207,"column":63}},"62":{"start":{"line":208,"column":6},"end":{"line":216,"column":7}},"63":{"start":{"line":209,"column":8},"end":{"line":209,"column":57}},"64":{"start":{"line":210,"column":8},"end":{"line":212,"column":12}},"65":{"start":{"line":211,"column":10},"end":{"line":211,"column":65}},"66":{"start":{"line":214,"column":8},"end":{"line":214,"column":64}},"67":{"start":{"line":215,"column":8},"end":{"line":215,"column":54}},"68":{"start":{"line":218,"column":6},"end":{"line":218,"column":24}},"69":{"start":{"line":221,"column":4},"end":{"line":221,"column":16}},"70":{"start":{"line":236,"column":4},"end":{"line":236,"column":17}},"71":{"start":{"line":237,"column":4},"end":{"line":237,"column":42}},"72":{"start":{"line":238,"column":4},"end":{"line":238,"column":24}},"73":{"start":{"line":240,"column":4},"end":{"line":243,"column":5}},"74":{"start":{"line":241,"column":6},"end":{"line":241,"column":108}},"75":{"start":{"line":242,"column":6},"end":{"line":242,"column":17}},"76":{"start":{"line":245,"column":4},"end":{"line":265,"column":5}},"77":{"start":{"line":246,"column":6},"end":{"line":246,"column":23}},"78":{"start":{"line":247,"column":6},"end":{"line":247,"column":34}},"79":{"start":{"line":252,"column":6},"end":{"line":258,"column":7}},"80":{"start":{"line":253,"column":8},"end":{"line":253,"column":96}},"81":{"start":{"line":254,"column":13},"end":{"line":258,"column":7}},"82":{"start":{"line":255,"column":8},"end":{"line":255,"column":90}},"83":{"start":{"line":256,"column":13},"end":{"line":258,"column":7}},"84":{"start":{"line":257,"column":8},"end":{"line":257,"column":28}},"85":{"start":{"line":260,"column":6},"end":{"line":262,"column":7}},"86":{"start":{"line":261,"column":8},"end":{"line":261,"column":27}},"87":{"start":{"line":264,"column":6},"end":{"line":264,"column":26}},"88":{"start":{"line":267,"column":4},"end":{"line":267,"column":15}},"89":{"start":{"line":280,"column":4},"end":{"line":282,"column":5}},"90":{"start":{"line":281,"column":6},"end":{"line":281,"column":15}},"91":{"start":{"line":284,"column":4},"end":{"line":284,"column":45}},"92":{"start":{"line":296,"column":4},"end":{"line":296,"column":48}},"93":{"start":{"line":309,"column":4},"end":{"line":309,"column":61}},"94":{"start":{"line":310,"column":4},"end":{"line":311,"column":50}},"95":{"start":{"line":312,"column":4},"end":{"line":312,"column":42}},"96":{"start":{"line":316,"column":4},"end":{"line":316,"column":45}},"97":{"start":{"line":317,"column":4},"end":{"line":317,"column":25}},"98":{"start":{"line":318,"column":4},"end":{"line":318,"column":15}},"99":{"start":{"line":335,"column":4},"end":{"line":335,"column":61}},"100":{"start":{"line":336,"column":4},"end":{"line":336,"column":42}},"101":{"start":{"line":337,"column":4},"end":{"line":337,"column":39}},"102":{"start":{"line":338,"column":4},"end":{"line":338,"column":25}},"103":{"start":{"line":339,"column":4},"end":{"line":339,"column":15}},"104":{"start":{"line":378,"column":4},"end":{"line":378,"column":36}},"105":{"start":{"line":379,"column":4},"end":{"line":379,"column":25}},"106":{"start":{"line":382,"column":4},"end":{"line":384,"column":5}},"107":{"start":{"line":383,"column":6},"end":{"line":383,"column":13}},"108":{"start":{"line":385,"column":4},"end":{"line":385,"column":24}},"109":{"start":{"line":387,"column":4},"end":{"line":387,"column":29}},"110":{"start":{"line":404,"column":4},"end":{"line":404,"column":32}},"111":{"start":{"line":405,"column":4},"end":{"line":405,"column":39}},"112":{"start":{"line":406,"column":4},"end":{"line":406,"column":25}},"113":{"start":{"line":407,"column":4},"end":{"line":407,"column":15}},"114":{"start":{"line":444,"column":4},"end":{"line":444,"column":37}},"115":{"start":{"line":445,"column":4},"end":{"line":445,"column":25}},"116":{"start":{"line":448,"column":4},"end":{"line":450,"column":5}},"117":{"start":{"line":449,"column":6},"end":{"line":449,"column":13}},"118":{"start":{"line":451,"column":4},"end":{"line":451,"column":25}},"119":{"start":{"line":453,"column":4},"end":{"line":453,"column":31}},"120":{"start":{"line":476,"column":4},"end":{"line":476,"column":34}},"121":{"start":{"line":477,"column":4},"end":{"line":477,"column":39}},"122":{"start":{"line":478,"column":4},"end":{"line":478,"column":25}},"123":{"start":{"line":479,"column":4},"end":{"line":479,"column":15}},"124":{"start":{"line":514,"column":4},"end":{"line":517,"column":12}},"125":{"start":{"line":519,"column":4},"end":{"line":531,"column":5}},"126":{"start":{"line":520,"column":6},"end":{"line":520,"column":19}},"127":{"start":{"line":521,"column":6},"end":{"line":530,"column":7}},"128":{"start":{"line":522,"column":8},"end":{"line":524,"column":11}},"129":{"start":{"line":523,"column":10},"end":{"line":523,"column":31}},"130":{"start":{"line":525,"column":8},"end":{"line":527,"column":9}},"131":{"start":{"line":526,"column":10},"end":{"line":526,"column":36}},"132":{"start":{"line":528,"column":13},"end":{"line":530,"column":7}},"133":{"start":{"line":529,"column":8},"end":{"line":529,"column":34}},"134":{"start":{"line":533,"column":4},"end":{"line":539,"column":5}},"135":{"start":{"line":534,"column":6},"end":{"line":536,"column":10}},"136":{"start":{"line":535,"column":8},"end":{"line":535,"column":26}},"137":{"start":{"line":538,"column":6},"end":{"line":538,"column":47}},"138":{"start":{"line":541,"column":4},"end":{"line":541,"column":25}},"139":{"start":{"line":542,"column":4},"end":{"line":542,"column":16}},"140":{"start":{"line":558,"column":4},"end":{"line":558,"column":21}},"141":{"start":{"line":560,"column":4},"end":{"line":570,"column":5}},"142":{"start":{"line":561,"column":6},"end":{"line":561,"column":16}},"143":{"start":{"line":562,"column":6},"end":{"line":566,"column":7}},"144":{"start":{"line":563,"column":8},"end":{"line":565,"column":63}},"145":{"start":{"line":567,"column":6},"end":{"line":567,"column":40}},"146":{"start":{"line":568,"column":6},"end":{"line":568,"column":41}},"147":{"start":{"line":569,"column":6},"end":{"line":569,"column":27}},"148":{"start":{"line":572,"column":4},"end":{"line":572,"column":15}},"149":{"start":{"line":588,"column":4},"end":{"line":588,"column":58}},"150":{"start":{"line":589,"column":4},"end":{"line":589,"column":61}},"151":{"start":{"line":590,"column":4},"end":{"line":590,"column":35}},"152":{"start":{"line":591,"column":4},"end":{"line":591,"column":39}},"153":{"start":{"line":592,"column":4},"end":{"line":592,"column":25}},"154":{"start":{"line":593,"column":4},"end":{"line":593,"column":23}},"155":{"start":{"line":609,"column":4},"end":{"line":609,"column":45}},"156":{"start":{"line":610,"column":4},"end":{"line":610,"column":39}},"157":{"start":{"line":611,"column":4},"end":{"line":611,"column":25}},"158":{"start":{"line":612,"column":4},"end":{"line":612,"column":15}},"159":{"start":{"line":633,"column":4},"end":{"line":633,"column":61}},"160":{"start":{"line":634,"column":4},"end":{"line":634,"column":61}},"161":{"start":{"line":635,"column":4},"end":{"line":635,"column":19}},"162":{"start":{"line":636,"column":4},"end":{"line":636,"column":18}},"163":{"start":{"line":637,"column":4},"end":{"line":641,"column":5}},"164":{"start":{"line":638,"column":6},"end":{"line":638,"column":19}},"165":{"start":{"line":639,"column":11},"end":{"line":641,"column":5}},"166":{"start":{"line":640,"column":6},"end":{"line":640,"column":20}},"167":{"start":{"line":643,"column":4},"end":{"line":667,"column":13}},"168":{"start":{"line":644,"column":6},"end":{"line":644,"column":16}},"169":{"start":{"line":645,"column":6},"end":{"line":659,"column":7}},"170":{"start":{"line":647,"column":10},"end":{"line":649,"column":13}},"171":{"start":{"line":648,"column":12},"end":{"line":648,"column":33}},"172":{"start":{"line":650,"column":10},"end":{"line":650,"column":16}},"173":{"start":{"line":652,"column":10},"end":{"line":652,"column":23}},"174":{"start":{"line":653,"column":10},"end":{"line":655,"column":13}},"175":{"start":{"line":654,"column":12},"end":{"line":654,"column":30}},"176":{"start":{"line":656,"column":10},"end":{"line":656,"column":16}},"177":{"start":{"line":658,"column":10},"end":{"line":658,"column":35}},"178":{"start":{"line":661,"column":6},"end":{"line":666,"column":7}},"179":{"start":{"line":662,"column":8},"end":{"line":662,"column":30}},"180":{"start":{"line":663,"column":8},"end":{"line":663,"column":45}},"181":{"start":{"line":664,"column":8},"end":{"line":664,"column":29}},"182":{"start":{"line":665,"column":8},"end":{"line":665,"column":31}},"183":{"start":{"line":669,"column":4},"end":{"line":669,"column":17}},"184":{"start":{"line":700,"column":4},"end":{"line":700,"column":35}},"185":{"start":{"line":701,"column":4},"end":{"line":704,"column":5}},"186":{"start":{"line":705,"column":4},"end":{"line":705,"column":20}},"187":{"start":{"line":706,"column":4},"end":{"line":706,"column":26}},"188":{"start":{"line":707,"column":4},"end":{"line":707,"column":16}},"189":{"start":{"line":721,"column":4},"end":{"line":728,"column":5}},"190":{"start":{"line":722,"column":6},"end":{"line":722,"column":31}},"191":{"start":{"line":723,"column":6},"end":{"line":727,"column":9}},"192":{"start":{"line":724,"column":8},"end":{"line":726,"column":18}},"193":{"start":{"line":730,"column":4},"end":{"line":730,"column":24}},"194":{"start":{"line":742,"column":4},"end":{"line":742,"column":32}},"195":{"start":{"line":756,"column":4},"end":{"line":758,"column":5}},"196":{"start":{"line":757,"column":6},"end":{"line":757,"column":27}},"197":{"start":{"line":759,"column":4},"end":{"line":763,"column":5}},"198":{"start":{"line":760,"column":6},"end":{"line":762,"column":7}},"199":{"start":{"line":761,"column":8},"end":{"line":761,"column":17}},"200":{"start":{"line":764,"column":4},"end":{"line":764,"column":14}},"201":{"start":{"line":778,"column":0},"end":{"line":778,"column":54}},"202":{"start":{"line":784,"column":0},"end":{"line":784,"column":41}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":9}},{"start":{"line":45,"column":13},"end":{"line":45,"column":36}}]},"3":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"4":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":104,"column":4}},{"start":{"line":104,"column":4},"end":{"line":104,"column":4}}]},"5":{"line":104,"type":"binary-expr","locations":[{"start":{"line":104,"column":8},"end":{"line":104,"column":17}},{"start":{"line":104,"column":21},"end":{"line":104,"column":35}},{"start":{"line":104,"column":39},"end":{"line":104,"column":58}}]},"6":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":6}},{"start":{"line":110,"column":6},"end":{"line":110,"column":6}}]},"7":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":10},"end":{"line":110,"column":32}},{"start":{"line":111,"column":10},"end":{"line":111,"column":35}},{"start":{"line":111,"column":39},"end":{"line":111,"column":61}}]},"8":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":19},"end":{"line":117,"column":31}},{"start":{"line":117,"column":35},"end":{"line":117,"column":68}},{"start":{"line":118,"column":10},"end":{"line":118,"column":61}}]},"9":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":6}},{"start":{"line":119,"column":6},"end":{"line":119,"column":6}}]},"10":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"12":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":8}},{"start":{"line":148,"column":8},"end":{"line":148,"column":8}}]},"13":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"14":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":184,"column":4}},{"start":{"line":184,"column":4},"end":{"line":184,"column":4}}]},"15":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":8},"end":{"line":184,"column":21}},{"start":{"line":184,"column":25},"end":{"line":184,"column":45}}]},"16":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"17":{"line":193,"type":"binary-expr","locations":[{"start":{"line":193,"column":8},"end":{"line":193,"column":26}},{"start":{"line":194,"column":8},"end":{"line":194,"column":35}},{"start":{"line":194,"column":39},"end":{"line":194,"column":55}}]},"18":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"19":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":25}},{"start":{"line":203,"column":29},"end":{"line":203,"column":46}},{"start":{"line":203,"column":50},"end":{"line":203,"column":68}}]},"20":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":17}},{"start":{"line":204,"column":22},"end":{"line":204,"column":38}}]},"21":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":11},"end":{"line":206,"column":11}},{"start":{"line":206,"column":11},"end":{"line":206,"column":11}}]},"22":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":19},"end":{"line":207,"column":35}},{"start":{"line":207,"column":40},"end":{"line":207,"column":61}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":6},"end":{"line":208,"column":6}},{"start":{"line":208,"column":6},"end":{"line":208,"column":6}}]},"24":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":19},"end":{"line":209,"column":32}},{"start":{"line":209,"column":37},"end":{"line":209,"column":55}}]},"25":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":19},"end":{"line":214,"column":32}},{"start":{"line":214,"column":37},"end":{"line":214,"column":62}}]},"26":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":4},"end":{"line":240,"column":4}},{"start":{"line":240,"column":4},"end":{"line":240,"column":4}}]},"27":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":6},"end":{"line":252,"column":6}},{"start":{"line":252,"column":6},"end":{"line":252,"column":6}}]},"28":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":13},"end":{"line":254,"column":13}},{"start":{"line":254,"column":13},"end":{"line":254,"column":13}}]},"29":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":13},"end":{"line":256,"column":13}},{"start":{"line":256,"column":13},"end":{"line":256,"column":13}}]},"30":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":6},"end":{"line":260,"column":6}},{"start":{"line":260,"column":6},"end":{"line":260,"column":6}}]},"31":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"32":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":10},"end":{"line":280,"column":23}},{"start":{"line":280,"column":27},"end":{"line":280,"column":70}}]},"33":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":4},"end":{"line":382,"column":4}},{"start":{"line":382,"column":4},"end":{"line":382,"column":4}}]},"34":{"line":448,"type":"if","locations":[{"start":{"line":448,"column":4},"end":{"line":448,"column":4}},{"start":{"line":448,"column":4},"end":{"line":448,"column":4}}]},"35":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":6},"end":{"line":521,"column":6}},{"start":{"line":521,"column":6},"end":{"line":521,"column":6}}]},"36":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":8},"end":{"line":525,"column":8}},{"start":{"line":525,"column":8},"end":{"line":525,"column":8}}]},"37":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":13},"end":{"line":528,"column":13}},{"start":{"line":528,"column":13},"end":{"line":528,"column":13}}]},"38":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":4},"end":{"line":533,"column":4}},{"start":{"line":533,"column":4},"end":{"line":533,"column":4}}]},"39":{"line":535,"type":"binary-expr","locations":[{"start":{"line":535,"column":15},"end":{"line":535,"column":20}},{"start":{"line":535,"column":24},"end":{"line":535,"column":25}}]},"40":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":4},"end":{"line":560,"column":4}},{"start":{"line":560,"column":4},"end":{"line":560,"column":4}}]},"41":{"line":563,"type":"cond-expr","locations":[{"start":{"line":564,"column":14},"end":{"line":564,"column":26}},{"start":{"line":565,"column":14},"end":{"line":565,"column":62}}]},"42":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":4},"end":{"line":637,"column":4}},{"start":{"line":637,"column":4},"end":{"line":637,"column":4}}]},"43":{"line":639,"type":"if","locations":[{"start":{"line":639,"column":11},"end":{"line":639,"column":11}},{"start":{"line":639,"column":11},"end":{"line":639,"column":11}}]},"44":{"line":645,"type":"switch","locations":[{"start":{"line":646,"column":8},"end":{"line":650,"column":16}},{"start":{"line":651,"column":8},"end":{"line":656,"column":16}},{"start":{"line":657,"column":8},"end":{"line":658,"column":35}}]},"45":{"line":661,"type":"if","locations":[{"start":{"line":661,"column":6},"end":{"line":661,"column":6}},{"start":{"line":661,"column":6},"end":{"line":661,"column":6}}]},"46":{"line":701,"type":"cond-expr","locations":[{"start":{"line":702,"column":8},"end":{"line":702,"column":13}},{"start":{"line":703,"column":8},"end":{"line":703,"column":59}}]},"47":{"line":721,"type":"if","locations":[{"start":{"line":721,"column":4},"end":{"line":721,"column":4}},{"start":{"line":721,"column":4},"end":{"line":721,"column":4}}]},"48":{"line":721,"type":"binary-expr","locations":[{"start":{"line":721,"column":8},"end":{"line":721,"column":15}},{"start":{"line":721,"column":19},"end":{"line":721,"column":37}}]},"49":{"line":724,"type":"cond-expr","locations":[{"start":{"line":725,"column":14},"end":{"line":725,"column":35}},{"start":{"line":726,"column":14},"end":{"line":726,"column":17}}]},"50":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":4},"end":{"line":756,"column":4}},{"start":{"line":756,"column":4},"end":{"line":756,"column":4}}]},"51":{"line":760,"type":"if","locations":[{"start":{"line":760,"column":6},"end":{"line":760,"column":6}},{"start":{"line":760,"column":6},"end":{"line":760,"column":6}}]}},"code":["/*!"," * Module dependencies."," */","","var EmbeddedDocument = require('./embedded');","var Document = require('../document');","var ObjectId = require('./objectid');","var utils = require('../utils');","var isMongooseObject = utils.isMongooseObject;","","/**"," * Mongoose Array constructor."," *"," * ####NOTE:"," *"," * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._"," *"," * @param {Array} values"," * @param {String} path"," * @param {Document} doc parent document"," * @api private"," * @inherits Array"," * @see http://bit.ly/f6CnZU"," */","","function MongooseArray(values, path, doc) {","  var arr = [].concat(values);","","  var keysMA = Object.keys(MongooseArray.mixin);","  var numKeys = keysMA.length;","  for (var i = 0; i < numKeys; ++i) {","    arr[keysMA[i]] = MongooseArray.mixin[keysMA[i]];","  }","","  arr._path = path;","  arr.isMongooseArray = true;","  arr.validators = [];","  arr._atomics = {};","  arr._schema = void 0;","","  // Because doc comes from the context of another function, doc === global","  // can happen if there was a null somewhere up the chain (see #3020)","  // RB Jun 17, 2015 updated to check for presence of expected paths instead","  // to make more proof against unusual node environments","  if (doc && doc instanceof Document) {","    arr._parent = doc;","    arr._schema = doc.schema.path(path);","  }","","  return arr;","}","","MongooseArray.mixin = {","  /*!","   * ignore","   */","  toBSON: function() {","    return this.toObject({","      transform: false,","      virtuals: false,","      _skipDepopulateTopLevel: true,","      depopulate: true,","      flattenDecimals: false","    });","  },","","  /**","   * Stores a queue of atomic operations to perform","   *","   * @property _atomics","   * @api private","   */","","  _atomics: undefined,","","  /**","   * Parent owner document","   *","   * @property _parent","   * @api private","   * @receiver MongooseArray","   */","","  _parent: undefined,","","  /**","   * Casts a member based on this arrays schema.","   *","   * @param {any} value","   * @return value the casted value","   * @method _cast","   * @api private","   * @receiver MongooseArray","   */","","  _cast: function(value) {","    var populated = false;","    var Model;","","    if (this._parent) {","      populated = this._parent.populated(this._path, true);","    }","","    if (populated && value !== null && value !== undefined) {","      // cast to the populated Models schema","      Model = populated.options.model;","","      // only objects are permitted so we can safely assume that","      // non-objects are to be interpreted as _id","      if (Buffer.isBuffer(value) ||","          value instanceof ObjectId || !utils.isObject(value)) {","        value = {_id: value};","      }","","      // gh-2399","      // we should cast model only when it's not a discriminator","      var isDisc = value.schema && value.schema.discriminatorMapping &&","          value.schema.discriminatorMapping.key !== undefined;","      if (!isDisc) {","        value = new Model(value);","      }","      return this._schema.caster.cast(value, this._parent, true);","    }","","    return this._schema.caster.cast(value, this._parent, false);","  },","","  /**","   * Marks this array as modified.","   *","   * If it bubbles up from an embedded document change, then it takes the following arguments (otherwise, takes 0 arguments)","   *","   * @param {EmbeddedDocument} embeddedDoc the embedded doc that invoked this method on the Array","   * @param {String} embeddedPath the path which changed in the embeddedDoc","   * @method _markModified","   * @api private","   * @receiver MongooseArray","   */","","  _markModified: function(elem, embeddedPath) {","    var parent = this._parent,","        dirtyPath;","","    if (parent) {","      dirtyPath = this._path;","","      if (arguments.length) {","        if (embeddedPath != null) {","          // an embedded doc bubbled up the change","          dirtyPath = dirtyPath + '.' + this.indexOf(elem) + '.' + embeddedPath;","        } else {","          // directly set an index","          dirtyPath = dirtyPath + '.' + elem;","        }","      }","","      parent.markModified(dirtyPath);","    }","","    return this;","  },","","  /**","   * Register an atomic operation with the parent.","   *","   * @param {Array} op operation","   * @param {any} val","   * @method _registerAtomic","   * @api private","   * @receiver MongooseArray","   */","","  _registerAtomic: function(op, val) {","    if (op === '$set') {","      // $set takes precedence over all other ops.","      // mark entire array modified.","      this._atomics = {$set: val};","      return this;","    }","","    var atomics = this._atomics;","","    // reset pop/shift after save","    if (op === '$pop' && !('$pop' in atomics)) {","      var _this = this;","      this._parent.once('save', function() {","        _this._popped = _this._shifted = null;","      });","    }","","    // check for impossible $atomic combos (Mongo denies more than one","    // $atomic op on a single path","    if (this._atomics.$set ||","        Object.keys(atomics).length && !(op in atomics)) {","      // a different op was previously registered.","      // save the entire thing.","      this._atomics = {$set: this};","      return this;","    }","","    var selector;","","    if (op === '$pullAll' || op === '$pushAll' || op === '$addToSet') {","      atomics[op] || (atomics[op] = []);","      atomics[op] = atomics[op].concat(val);","    } else if (op === '$pullDocs') {","      var pullOp = atomics['$pull'] || (atomics['$pull'] = {});","      if (val[0] instanceof EmbeddedDocument) {","        selector = pullOp['$or'] || (pullOp['$or'] = []);","        Array.prototype.push.apply(selector, val.map(function(v) {","          return v.toObject({transform: false, virtuals: false});","        }));","      } else {","        selector = pullOp['_id'] || (pullOp['_id'] = {$in: []});","        selector['$in'] = selector['$in'].concat(val);","      }","    } else {","      atomics[op] = val;","    }","","    return this;","  },","","  /**","   * Depopulates stored atomic operation values as necessary for direct insertion to MongoDB.","   *","   * If no atomics exist, we return all array values after conversion.","   *","   * @return {Array}","   * @method $__getAtomics","   * @memberOf MongooseArray","   * @api private","   */","","  $__getAtomics: function() {","    var ret = [];","    var keys = Object.keys(this._atomics);","    var i = keys.length;","","    if (i === 0) {","      ret[0] = ['$set', this.toObject({depopulate: 1, transform: false, _isNested: true, virtuals: false})];","      return ret;","    }","","    while (i--) {","      var op = keys[i];","      var val = this._atomics[op];","","      // the atomic values which are arrays are not MongooseArrays. we","      // need to convert their elements as if they were MongooseArrays","      // to handle populated arrays versus DocumentArrays properly.","      if (isMongooseObject(val)) {","        val = val.toObject({depopulate: 1, transform: false, _isNested: true, virtuals: false});","      } else if (Array.isArray(val)) {","        val = this.toObject.call(val, {depopulate: 1, transform: false, _isNested: true});","      } else if (val.valueOf) {","        val = val.valueOf();","      }","","      if (op === '$addToSet') {","        val = {$each: val};","      }","","      ret.push([op, val]);","    }","","    return ret;","  },","","  /**","   * Returns the number of pending atomic operations to send to the db for this array.","   *","   * @api private","   * @return {Number}","   * @method hasAtomics","   * @receiver MongooseArray","   */","","  hasAtomics: function hasAtomics() {","    if (!(this._atomics && this._atomics.constructor.name === 'Object')) {","      return 0;","    }","","    return Object.keys(this._atomics).length;","  },","","  /**","   * Internal helper for .map()","   *","   * @api private","   * @return {Number}","   * @method _mapCast","   * @receiver MongooseArray","   */","  _mapCast: function(val, index) {","    return this._cast(val, this.length + index);","  },","","  /**","   * Wraps [`Array#push`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push) with proper change tracking.","   *","   * @param {Object} [args...]","   * @api public","   * @method push","   * @receiver MongooseArray","   */","","  push: function() {","    var values = [].map.call(arguments, this._mapCast, this);","    values = this._schema.applySetters(values, this._parent, undefined,","        undefined, {skipDocumentArrayCast: true});","    var ret = [].push.apply(this, values);","","    // $pushAll might be fibbed (could be $push). But it makes it easier to","    // handle what could have been $push, $pushAll combos","    this._registerAtomic('$pushAll', values);","    this._markModified();","    return ret;","  },","","  /**","   * Pushes items to the array non-atomically.","   *","   * ####NOTE:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @param {any} [args...]","   * @api public","   * @method nonAtomicPush","   * @receiver MongooseArray","   */","","  nonAtomicPush: function() {","    var values = [].map.call(arguments, this._mapCast, this);","    var ret = [].push.apply(this, values);","    this._registerAtomic('$set', this);","    this._markModified();","    return ret;","  },","","  /**","   * Pops the array atomically at most one time per document `save()`.","   *","   * #### NOTE:","   *","   * _Calling this mulitple times on an array before saving sends the same command as calling it once._","   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._","   *","   *      doc.array = [1,2,3];","   *","   *      var popped = doc.array.$pop();","   *      console.log(popped); // 3","   *      console.log(doc.array); // [1,2]","   *","   *      // no affect","   *      popped = doc.array.$pop();","   *      console.log(doc.array); // [1,2]","   *","   *      doc.save(function (err) {","   *        if (err) return handleError(err);","   *","   *        // we saved, now $pop works again","   *        popped = doc.array.$pop();","   *        console.log(popped); // 2","   *        console.log(doc.array); // [1]","   *      })","   *","   * @api public","   * @method $pop","   * @memberOf MongooseArray","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop","   * @method $pop","   * @receiver MongooseArray","   */","","  $pop: function() {","    this._registerAtomic('$pop', 1);","    this._markModified();","","    // only allow popping once","    if (this._popped) {","      return;","    }","    this._popped = true;","","    return [].pop.call(this);","  },","","  /**","   * Wraps [`Array#pop`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop) with proper change tracking.","   *","   * ####Note:","   *","   * _marks the entire array as modified which will pass the entire thing to $set potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @see MongooseArray#$pop #types_array_MongooseArray-%24pop","   * @api public","   * @method pop","   * @receiver MongooseArray","   */","","  pop: function() {","    var ret = [].pop.call(this);","    this._registerAtomic('$set', this);","    this._markModified();","    return ret;","  },","","  /**","   * Atomically shifts the array at most one time per document `save()`.","   *","   * ####NOTE:","   *","   * _Calling this mulitple times on an array before saving sends the same command as calling it once._","   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._","   *","   *      doc.array = [1,2,3];","   *","   *      var shifted = doc.array.$shift();","   *      console.log(shifted); // 1","   *      console.log(doc.array); // [2,3]","   *","   *      // no affect","   *      shifted = doc.array.$shift();","   *      console.log(doc.array); // [2,3]","   *","   *      doc.save(function (err) {","   *        if (err) return handleError(err);","   *","   *        // we saved, now $shift works again","   *        shifted = doc.array.$shift();","   *        console.log(shifted ); // 2","   *        console.log(doc.array); // [3]","   *      })","   *","   * @api public","   * @memberOf MongooseArray","   * @method $shift","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop","   */","","  $shift: function $shift() {","    this._registerAtomic('$pop', -1);","    this._markModified();","","    // only allow shifting once","    if (this._shifted) {","      return;","    }","    this._shifted = true;","","    return [].shift.call(this);","  },","","  /**","   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.","   *","   * ####Example:","   *","   *     doc.array = [2,3];","   *     var res = doc.array.shift();","   *     console.log(res) // 2","   *     console.log(doc.array) // [3]","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method shift","   * @receiver MongooseArray","   */","","  shift: function() {","    var ret = [].shift.call(this);","    this._registerAtomic('$set', this);","    this._markModified();","    return ret;","  },","","  /**","   * Pulls items from the array atomically. Equality is determined by casting","   * the provided value to an embedded document and comparing using","   * [the `Document.equals()` function.](./api.html#document_Document-equals)","   *","   * ####Examples:","   *","   *     doc.array.pull(ObjectId)","   *     doc.array.pull({ _id: 'someId' })","   *     doc.array.pull(36)","   *     doc.array.pull('tag 1', 'tag 2')","   *","   * To remove a document from a subdocument array we may pass an object with a matching `_id`.","   *","   *     doc.subdocs.push({ _id: 4815162342 })","   *     doc.subdocs.pull({ _id: 4815162342 }) // removed","   *","   * Or we may passing the _id directly and let mongoose take care of it.","   *","   *     doc.subdocs.push({ _id: 4815162342 })","   *     doc.subdocs.pull(4815162342); // works","   *","   * The first pull call will result in a atomic operation on the database, if pull is called repeatedly without saving the document, a $set operation is used on the complete array instead, overwriting possible changes that happened on the database in the meantime.","   *","   * @param {any} [args...]","   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull","   * @api public","   * @method pull","   * @receiver MongooseArray","   */","","  pull: function() {","    var values = [].map.call(arguments, this._cast, this),","        cur = this._parent.get(this._path),","        i = cur.length,","        mem;","","    while (i--) {","      mem = cur[i];","      if (mem instanceof Document) {","        var some = values.some(function(v) {","          return mem.equals(v);","        });","        if (some) {","          [].splice.call(cur, i, 1);","        }","      } else if (~cur.indexOf.call(values, mem)) {","        [].splice.call(cur, i, 1);","      }","    }","","    if (values[0] instanceof EmbeddedDocument) {","      this._registerAtomic('$pullDocs', values.map(function(v) {","        return v._id || v;","      }));","    } else {","      this._registerAtomic('$pullAll', values);","    }","","    this._markModified();","    return this;","  },","","  /**","   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method splice","   * @receiver MongooseArray","   */","","  splice: function splice() {","    var ret, vals, i;","","    if (arguments.length) {","      vals = [];","      for (i = 0; i < arguments.length; ++i) {","        vals[i] = i < 2","            ? arguments[i]","            : this._cast(arguments[i], arguments[0] + (i - 2));","      }","      ret = [].splice.apply(this, vals);","      this._registerAtomic('$set', this);","      this._markModified();","    }","","    return ret;","  },","","  /**","   * Wraps [`Array#unshift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.","   *","   * ####Note:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method unshift","   * @receiver MongooseArray","   */","","  unshift: function() {","    var values = [].map.call(arguments, this._cast, this);","    values = this._schema.applySetters(values, this._parent);","    [].unshift.apply(this, values);","    this._registerAtomic('$set', this);","    this._markModified();","    return this.length;","  },","","  /**","   * Wraps [`Array#sort`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort) with proper change tracking.","   *","   * ####NOTE:","   *","   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._","   *","   * @api public","   * @method sort","   * @receiver MongooseArray","   */","","  sort: function() {","    var ret = [].sort.apply(this, arguments);","    this._registerAtomic('$set', this);","    this._markModified();","    return ret;","  },","","  /**","   * Adds values to the array if not already present.","   *","   * ####Example:","   *","   *     console.log(doc.array) // [2,3,4]","   *     var added = doc.array.addToSet(4,5);","   *     console.log(doc.array) // [2,3,4,5]","   *     console.log(added)     // [5]","   *","   * @param {any} [args...]","   * @return {Array} the values that were added","   * @receiver MongooseArray","   * @api public","   * @method addToSet","   */","","  addToSet: function addToSet() {","    var values = [].map.call(arguments, this._mapCast, this);","    values = this._schema.applySetters(values, this._parent);","    var added = [];","    var type = '';","    if (values[0] instanceof EmbeddedDocument) {","      type = 'doc';","    } else if (values[0] instanceof Date) {","      type = 'date';","    }","","    values.forEach(function(v) {","      var found;","      switch (type) {","        case 'doc':","          found = this.some(function(doc) {","            return doc.equals(v);","          });","          break;","        case 'date':","          var val = +v;","          found = this.some(function(d) {","            return +d === val;","          });","          break;","        default:","          found = ~this.indexOf(v);","      }","","      if (!found) {","        [].push.call(this, v);","        this._registerAtomic('$addToSet', v);","        this._markModified();","        [].push.call(added, v);","      }","    }, this);","","    return added;","  },","","  /**","   * Sets the casted `val` at index `i` and marks the array modified.","   *","   * ####Example:","   *","   *     // given documents based on the following","   *     var Doc = mongoose.model('Doc', new Schema({ array: [Number] }));","   *","   *     var doc = new Doc({ array: [2,3,4] })","   *","   *     console.log(doc.array) // [2,3,4]","   *","   *     doc.array.set(1,\"5\");","   *     console.log(doc.array); // [2,5,4] // properly cast to number","   *     doc.save() // the change is saved","   *","   *     // VS not using array#set","   *     doc.array[1] = \"5\";","   *     console.log(doc.array); // [2,\"5\",4] // no casting","   *     doc.save() // change is not saved","   *","   * @return {Array} this","   * @api public","   * @method set","   * @receiver MongooseArray","   */","","  set: function set(i, val) {","    var value = this._cast(val, i);","    value = this._schema.caster instanceof EmbeddedDocument ?","        value :","        this._schema.caster.applySetters(val, this._parent)","    ;","    this[i] = value;","    this._markModified(i);","    return this;","  },","","  /**","   * Returns a native js Array.","   *","   * @param {Object} options","   * @return {Array}","   * @api public","   * @method toObject","   * @receiver MongooseArray","   */","","  toObject: function(options) {","    if (options && options.depopulate) {","      options._isNested = true;","      return this.map(function(doc) {","        return doc instanceof Document","            ? doc.toObject(options)","            : doc;","      });","    }","","    return this.slice();","  },","","  /**","   * Helper for console.log","   *","   * @api public","   * @method inspect","   * @receiver MongooseArray","   */","","  inspect: function() {","    return JSON.stringify(this);","  },","","  /**","   * Return the index of `obj` or `-1` if not found.","   *","   * @param {Object} obj the item to look for","   * @return {Number}","   * @api public","   * @method indexOf","   * @receiver MongooseArray","   */","","  indexOf: function indexOf(obj) {","    if (obj instanceof ObjectId) {","      obj = obj.toString();","    }","    for (var i = 0, len = this.length; i < len; ++i) {","      if (obj == this[i]) {","        return i;","      }","    }","    return -1;","  }","};","","/**"," * Alias of [pull](#types_array_MongooseArray-pull)"," *"," * @see MongooseArray#pull #types_array_MongooseArray-pull"," * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull"," * @api public"," * @memberOf MongooseArray"," * @method remove"," */","","MongooseArray.mixin.remove = MongooseArray.mixin.pull;","","/*!"," * Module exports."," */","","module.exports = exports = MongooseArray;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"26":1,"27":0,"29":0,"30":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"45":0,"46":0,"47":0,"50":0,"53":1,"58":0,"97":0,"98":0,"100":0,"101":0,"104":0,"106":0,"110":0,"112":0,"117":0,"119":0,"120":0,"122":0,"125":0,"141":0,"144":0,"145":0,"147":0,"148":0,"150":0,"153":0,"157":0,"160":0,"174":0,"177":0,"178":0,"181":0,"184":0,"185":0,"186":0,"187":0,"193":0,"197":0,"198":0,"201":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"214":0,"215":0,"218":0,"221":0,"236":0,"237":0,"238":0,"240":0,"241":0,"242":0,"245":0,"246":0,"247":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"260":0,"261":0,"264":0,"267":0,"280":0,"281":0,"284":0,"296":0,"309":0,"310":0,"312":0,"316":0,"317":0,"318":0,"335":0,"336":0,"337":0,"338":0,"339":0,"378":0,"379":0,"382":0,"383":0,"385":0,"387":0,"404":0,"405":0,"406":0,"407":0,"444":0,"445":0,"448":0,"449":0,"451":0,"453":0,"476":0,"477":0,"478":0,"479":0,"514":0,"519":0,"520":0,"521":0,"522":0,"523":0,"525":0,"526":0,"528":0,"529":0,"533":0,"534":0,"535":0,"538":0,"541":0,"542":0,"558":0,"560":0,"561":0,"562":0,"563":0,"567":0,"568":0,"569":0,"572":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"609":0,"610":0,"611":0,"612":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"643":0,"644":0,"645":0,"647":0,"648":0,"650":0,"652":0,"653":0,"654":0,"656":0,"658":0,"661":0,"662":0,"663":0,"664":0,"665":0,"669":0,"700":0,"701":0,"705":0,"706":0,"707":0,"721":0,"722":0,"723":0,"724":0,"730":0,"742":0,"756":0,"757":0,"759":0,"760":0,"761":0,"764":0,"778":1,"784":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/embedded.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/embedded.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1,"19":1,"20":16,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":1,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":1,"124":0,"125":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"EmbeddedDocument","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":65}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":19},"end":{"line":34,"column":33}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":30}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":36},"end":{"line":53,"column":47}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":42},"end":{"line":77,"column":57}}},"6":{"name":"(anonymous_6)","line":97,"loc":{"start":{"line":97,"column":38},"end":{"line":97,"column":49}}},"7":{"name":"(anonymous_7)","line":115,"loc":{"start":{"line":115,"column":34},"end":{"line":115,"column":47}}},"8":{"name":"(anonymous_8)","line":117,"loc":{"start":{"line":117,"column":25},"end":{"line":117,"column":43}}},"9":{"name":"registerRemoveListener","line":131,"loc":{"start":{"line":131,"column":0},"end":{"line":131,"column":37}}},"10":{"name":"emitRemove","line":134,"loc":{"start":{"line":134,"column":2},"end":{"line":134,"column":24}}},"11":{"name":"(anonymous_11)","line":154,"loc":{"start":{"line":154,"column":36},"end":{"line":154,"column":58}}},"12":{"name":"(anonymous_12)","line":188,"loc":{"start":{"line":188,"column":36},"end":{"line":188,"column":47}}},"13":{"name":"(anonymous_13)","line":198,"loc":{"start":{"line":198,"column":37},"end":{"line":198,"column":48}}},"14":{"name":"(anonymous_14)","line":211,"loc":{"start":{"line":211,"column":40},"end":{"line":211,"column":72}}},"15":{"name":"(anonymous_15)","line":243,"loc":{"start":{"line":243,"column":40},"end":{"line":243,"column":55}}},"16":{"name":"(anonymous_16)","line":265,"loc":{"start":{"line":265,"column":38},"end":{"line":265,"column":53}}},"17":{"name":"(anonymous_17)","line":281,"loc":{"start":{"line":281,"column":43},"end":{"line":281,"column":54}}},"18":{"name":"(anonymous_18)","line":309,"loc":{"start":{"line":309,"column":41},"end":{"line":309,"column":56}}},"19":{"name":"(anonymous_19)","line":345,"loc":{"start":{"line":345,"column":36},"end":{"line":345,"column":47}}},"20":{"name":"(anonymous_20)","line":355,"loc":{"start":{"line":355,"column":41},"end":{"line":355,"column":52}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":49}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":53}},"4":{"start":{"line":21,"column":0},"end":{"line":41,"column":1}},"5":{"start":{"line":22,"column":2},"end":{"line":28,"column":3}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":38}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":35}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":30}},"10":{"start":{"line":29,"column":2},"end":{"line":29,"column":23}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":43}},"12":{"start":{"line":33,"column":2},"end":{"line":33,"column":19}},"13":{"start":{"line":34,"column":2},"end":{"line":36,"column":5}},"14":{"start":{"line":35,"column":4},"end":{"line":35,"column":22}},"15":{"start":{"line":38,"column":2},"end":{"line":40,"column":5}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":42}},"17":{"start":{"line":46,"column":0},"end":{"line":46,"column":63}},"18":{"start":{"line":47,"column":0},"end":{"line":47,"column":58}},"19":{"start":{"line":49,"column":0},"end":{"line":51,"column":1}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":50}},"21":{"start":{"line":53,"column":0},"end":{"line":61,"column":2}},"22":{"start":{"line":54,"column":2},"end":{"line":60,"column":5}},"23":{"start":{"line":77,"column":0},"end":{"line":91,"column":2}},"24":{"start":{"line":78,"column":2},"end":{"line":78,"column":36}},"25":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"26":{"start":{"line":80,"column":4},"end":{"line":80,"column":11}},"27":{"start":{"line":83,"column":2},"end":{"line":90,"column":3}},"28":{"start":{"line":87,"column":4},"end":{"line":87,"column":39}},"29":{"start":{"line":89,"column":4},"end":{"line":89,"column":49}},"30":{"start":{"line":97,"column":0},"end":{"line":101,"column":2}},"31":{"start":{"line":98,"column":2},"end":{"line":100,"column":36}},"32":{"start":{"line":115,"column":0},"end":{"line":121,"column":2}},"33":{"start":{"line":116,"column":2},"end":{"line":116,"column":38}},"34":{"start":{"line":117,"column":2},"end":{"line":120,"column":5}},"35":{"start":{"line":118,"column":4},"end":{"line":118,"column":15}},"36":{"start":{"line":119,"column":4},"end":{"line":119,"column":14}},"37":{"start":{"line":131,"column":0},"end":{"line":144,"column":1}},"38":{"start":{"line":132,"column":2},"end":{"line":132,"column":34}},"39":{"start":{"line":134,"column":2},"end":{"line":140,"column":3}},"40":{"start":{"line":135,"column":4},"end":{"line":135,"column":45}},"41":{"start":{"line":136,"column":4},"end":{"line":136,"column":47}},"42":{"start":{"line":137,"column":4},"end":{"line":137,"column":28}},"43":{"start":{"line":138,"column":4},"end":{"line":138,"column":40}},"44":{"start":{"line":139,"column":4},"end":{"line":139,"column":23}},"45":{"start":{"line":142,"column":2},"end":{"line":142,"column":31}},"46":{"start":{"line":143,"column":2},"end":{"line":143,"column":33}},"47":{"start":{"line":154,"column":0},"end":{"line":181,"column":2}},"48":{"start":{"line":155,"column":2},"end":{"line":158,"column":3}},"49":{"start":{"line":156,"column":4},"end":{"line":156,"column":17}},"50":{"start":{"line":157,"column":4},"end":{"line":157,"column":24}},"51":{"start":{"line":159,"column":2},"end":{"line":162,"column":3}},"52":{"start":{"line":160,"column":4},"end":{"line":160,"column":19}},"53":{"start":{"line":161,"column":4},"end":{"line":161,"column":16}},"54":{"start":{"line":164,"column":2},"end":{"line":164,"column":10}},"55":{"start":{"line":165,"column":2},"end":{"line":174,"column":3}},"56":{"start":{"line":166,"column":4},"end":{"line":166,"column":24}},"57":{"start":{"line":167,"column":4},"end":{"line":170,"column":5}},"58":{"start":{"line":168,"column":6},"end":{"line":169,"column":63}},"59":{"start":{"line":171,"column":4},"end":{"line":171,"column":40}},"60":{"start":{"line":172,"column":4},"end":{"line":172,"column":27}},"61":{"start":{"line":173,"column":4},"end":{"line":173,"column":33}},"62":{"start":{"line":176,"column":2},"end":{"line":178,"column":3}},"63":{"start":{"line":177,"column":4},"end":{"line":177,"column":13}},"64":{"start":{"line":180,"column":2},"end":{"line":180,"column":14}},"65":{"start":{"line":188,"column":0},"end":{"line":190,"column":2}},"66":{"start":{"line":189,"column":2},"end":{"line":189,"column":78}},"67":{"start":{"line":198,"column":0},"end":{"line":200,"column":2}},"68":{"start":{"line":199,"column":2},"end":{"line":199,"column":84}},"69":{"start":{"line":211,"column":0},"end":{"line":232,"column":2}},"70":{"start":{"line":212,"column":2},"end":{"line":218,"column":3}},"71":{"start":{"line":213,"column":4},"end":{"line":213,"column":61}},"72":{"start":{"line":214,"column":4},"end":{"line":216,"column":5}},"73":{"start":{"line":215,"column":6},"end":{"line":215,"column":18}},"74":{"start":{"line":217,"column":4},"end":{"line":217,"column":14}},"75":{"start":{"line":220,"column":2},"end":{"line":220,"column":27}},"76":{"start":{"line":221,"column":2},"end":{"line":225,"column":3}},"77":{"start":{"line":222,"column":4},"end":{"line":222,"column":46}},"78":{"start":{"line":223,"column":4},"end":{"line":223,"column":55}},"79":{"start":{"line":224,"column":4},"end":{"line":224,"column":49}},"80":{"start":{"line":227,"column":2},"end":{"line":229,"column":3}},"81":{"start":{"line":228,"column":4},"end":{"line":228,"column":72}},"82":{"start":{"line":231,"column":2},"end":{"line":231,"column":14}},"83":{"start":{"line":243,"column":0},"end":{"line":254,"column":2}},"84":{"start":{"line":244,"column":2},"end":{"line":246,"column":3}},"85":{"start":{"line":245,"column":4},"end":{"line":245,"column":11}},"86":{"start":{"line":248,"column":2},"end":{"line":248,"column":27}},"87":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"88":{"start":{"line":250,"column":4},"end":{"line":250,"column":46}},"89":{"start":{"line":251,"column":4},"end":{"line":251,"column":55}},"90":{"start":{"line":252,"column":4},"end":{"line":252,"column":39}},"91":{"start":{"line":265,"column":0},"end":{"line":273,"column":2}},"92":{"start":{"line":266,"column":2},"end":{"line":266,"column":27}},"93":{"start":{"line":267,"column":2},"end":{"line":270,"column":3}},"94":{"start":{"line":268,"column":4},"end":{"line":269,"column":72}},"95":{"start":{"line":272,"column":2},"end":{"line":272,"column":14}},"96":{"start":{"line":281,"column":0},"end":{"line":297,"column":2}},"97":{"start":{"line":282,"column":2},"end":{"line":284,"column":3}},"98":{"start":{"line":283,"column":4},"end":{"line":283,"column":34}},"99":{"start":{"line":286,"column":2},"end":{"line":286,"column":29}},"100":{"start":{"line":287,"column":2},"end":{"line":289,"column":3}},"101":{"start":{"line":288,"column":4},"end":{"line":288,"column":16}},"102":{"start":{"line":291,"column":2},"end":{"line":293,"column":3}},"103":{"start":{"line":292,"column":4},"end":{"line":292,"column":47}},"104":{"start":{"line":295,"column":2},"end":{"line":295,"column":34}},"105":{"start":{"line":296,"column":2},"end":{"line":296,"column":32}},"106":{"start":{"line":309,"column":0},"end":{"line":337,"column":2}},"107":{"start":{"line":310,"column":2},"end":{"line":332,"column":3}},"108":{"start":{"line":311,"column":4},"end":{"line":311,"column":22}},"109":{"start":{"line":312,"column":4},"end":{"line":314,"column":5}},"110":{"start":{"line":313,"column":6},"end":{"line":313,"column":18}},"111":{"start":{"line":316,"column":4},"end":{"line":316,"column":19}},"112":{"start":{"line":317,"column":4},"end":{"line":324,"column":5}},"113":{"start":{"line":318,"column":6},"end":{"line":322,"column":7}},"114":{"start":{"line":319,"column":8},"end":{"line":319,"column":50}},"115":{"start":{"line":321,"column":8},"end":{"line":321,"column":40}},"116":{"start":{"line":323,"column":6},"end":{"line":323,"column":49}},"117":{"start":{"line":326,"column":4},"end":{"line":326,"column":40}},"118":{"start":{"line":328,"column":4},"end":{"line":331,"column":5}},"119":{"start":{"line":330,"column":6},"end":{"line":330,"column":38}},"120":{"start":{"line":334,"column":2},"end":{"line":336,"column":26}},"121":{"start":{"line":345,"column":0},"end":{"line":347,"column":2}},"122":{"start":{"line":346,"column":2},"end":{"line":346,"column":23}},"123":{"start":{"line":355,"column":0},"end":{"line":357,"column":2}},"124":{"start":{"line":356,"column":2},"end":{"line":356,"column":28}},"125":{"start":{"line":363,"column":0},"end":{"line":363,"column":34}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"3":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"4":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":6}},{"start":{"line":118,"column":10},"end":{"line":118,"column":14}}]},"5":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"6":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":7},"end":{"line":155,"column":36}},{"start":{"line":155,"column":40},"end":{"line":155,"column":43}}]},"7":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"8":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":6},"end":{"line":159,"column":25}},{"start":{"line":159,"column":30},"end":{"line":159,"column":37}},{"start":{"line":159,"column":41},"end":{"line":159,"column":53}}]},"9":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":4},"end":{"line":160,"column":6}},{"start":{"line":160,"column":10},"end":{"line":160,"column":18}}]},"10":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":2},"end":{"line":165,"column":2}},{"start":{"line":165,"column":2},"end":{"line":165,"column":2}}]},"11":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"12":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":2},"end":{"line":176,"column":2}},{"start":{"line":176,"column":2},"end":{"line":176,"column":2}}]},"13":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":2},"end":{"line":212,"column":2}},{"start":{"line":212,"column":2},"end":{"line":212,"column":2}}]},"14":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"15":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"16":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"17":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"18":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":2}},{"start":{"line":249,"column":2},"end":{"line":249,"column":2}}]},"19":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"20":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":34}},{"start":{"line":267,"column":38},"end":{"line":267,"column":51}}]},"21":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":11},"end":{"line":268,"column":45}},{"start":{"line":269,"column":6},"end":{"line":269,"column":71}}]},"22":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":2},"end":{"line":282,"column":2}},{"start":{"line":282,"column":2},"end":{"line":282,"column":2}}]},"23":{"line":287,"type":"if","locations":[{"start":{"line":287,"column":2},"end":{"line":287,"column":2}},{"start":{"line":287,"column":2},"end":{"line":287,"column":2}}]},"24":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":9},"end":{"line":291,"column":24}},{"start":{"line":291,"column":28},"end":{"line":291,"column":42}}]},"25":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":13},"end":{"line":292,"column":28}},{"start":{"line":292,"column":32},"end":{"line":292,"column":46}}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":2},"end":{"line":310,"column":2}},{"start":{"line":310,"column":2},"end":{"line":310,"column":2}}]},"27":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"28":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":11},"end":{"line":317,"column":26}},{"start":{"line":317,"column":30},"end":{"line":317,"column":44}}]},"29":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":6},"end":{"line":318,"column":6}},{"start":{"line":318,"column":6},"end":{"line":318,"column":6}}]},"30":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":15},"end":{"line":323,"column":30}},{"start":{"line":323,"column":34},"end":{"line":323,"column":48}}]},"31":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":4},"end":{"line":328,"column":4}},{"start":{"line":328,"column":4},"end":{"line":328,"column":4}}]},"32":{"line":334,"type":"cond-expr","locations":[{"start":{"line":335,"column":8},"end":{"line":335,"column":38}},{"start":{"line":336,"column":8},"end":{"line":336,"column":25}}]}},"code":["/* eslint no-func-assign: 1 */","","/*!"," * Module dependencies."," */","","var Document = require('../document_provider')();","var EventEmitter = require('events').EventEmitter;","var PromiseProvider = require('../promise_provider');","","/**"," * EmbeddedDocument constructor."," *"," * @param {Object} obj js object returned from the db"," * @param {MongooseDocumentArray} parentArr the parent array of this document"," * @param {Boolean} skipId"," * @inherits Document"," * @api private"," */","","function EmbeddedDocument(obj, parentArr, skipId, fields, index) {","  if (parentArr) {","    this.__parentArray = parentArr;","    this.__parent = parentArr._parent;","  } else {","    this.__parentArray = undefined;","    this.__parent = undefined;","  }","  this.__index = index;","","  Document.call(this, obj, fields, skipId);","","  var _this = this;","  this.on('isNew', function(val) {","    _this.isNew = val;","  });","","  _this.on('save', function() {","    _this.constructor.emit('save', _this);","  });","}","","/*!"," * Inherit from Document"," */","EmbeddedDocument.prototype = Object.create(Document.prototype);","EmbeddedDocument.prototype.constructor = EmbeddedDocument;","","for (var i in EventEmitter.prototype) {","  EmbeddedDocument[i] = EventEmitter.prototype[i];","}","","EmbeddedDocument.prototype.toBSON = function() {","  return this.toObject({","    transform: false,","    virtuals: false,","    _skipDepopulateTopLevel: true,","    depopulate: true,","    flattenDecimals: false","  });","};","","/**"," * Marks the embedded doc modified."," *"," * ####Example:"," *"," *     var doc = blogpost.comments.id(hexstring);"," *     doc.mixed.type = 'changed';"," *     doc.markModified('mixed.type');"," *"," * @param {String} path the path which changed"," * @api public"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.markModified = function(path) {","  this.$__.activePaths.modify(path);","  if (!this.__parentArray) {","    return;","  }","","  if (this.isNew) {","    // Mark the WHOLE parent array as modified","    // if this is a new document (i.e., we are initializing","    // a document),","    this.__parentArray._markModified();","  } else {","    this.__parentArray._markModified(this, path);","  }","};","","/*!"," * ignore"," */","","EmbeddedDocument.prototype.populate = function() {","  throw new Error('Mongoose does not support calling populate() on nested ' +","    'docs. Instead of `doc.arr[0].populate(\"path\")`, use ' +","    '`doc.populate(\"arr.0.path\")`');","};","","/**"," * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)"," *"," * ####NOTE:"," *"," * _This is a no-op. Does not actually save the doc to the db._"," *"," * @param {Function} [fn]"," * @return {Promise} resolved Promise"," * @api private"," */","","EmbeddedDocument.prototype.save = function(fn) {","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve) {","    fn && fn();","    resolve();","  });","};","","/*!"," * Registers remove event listeners for triggering"," * on subdocuments."," *"," * @param {EmbeddedDocument} sub"," * @api private"," */","","function registerRemoveListener(sub) {","  var owner = sub.ownerDocument();","","  function emitRemove() {","    owner.removeListener('save', emitRemove);","    owner.removeListener('remove', emitRemove);","    sub.emit('remove', sub);","    sub.constructor.emit('remove', sub);","    owner = sub = null;","  }","","  owner.on('save', emitRemove);","  owner.on('remove', emitRemove);","}","","/**"," * Removes the subdocument from its parent array."," *"," * @param {Object} [options]"," * @param {Function} [fn]"," * @api public"," */","","EmbeddedDocument.prototype.remove = function(options, fn) {","  if ( typeof options === 'function' && !fn ) {","    fn = options;","    options = undefined;","  }","  if (!this.__parentArray || (options && options.noop)) {","    fn && fn(null);","    return this;","  }","","  var _id;","  if (!this.willRemove) {","    _id = this._doc._id;","    if (!_id) {","      throw new Error('For your own good, Mongoose does not know ' +","          'how to remove an EmbeddedDocument that has no _id');","    }","    this.__parentArray.pull({_id: _id});","    this.willRemove = true;","    registerRemoveListener(this);","  }","","  if (fn) {","    fn(null);","  }","","  return this;","};","","/**"," * Override #update method of parent documents."," * @api private"," */","","EmbeddedDocument.prototype.update = function() {","  throw new Error('The #update method is not available on EmbeddedDocuments');","};","","/**"," * Helper for console.log"," *"," * @api public"," */","","EmbeddedDocument.prototype.inspect = function() {","  return this.toObject({ transform: false, retainKeyOrder: true, virtuals: false });","};","","/**"," * Marks a path as invalid, causing validation to fail."," *"," * @param {String} path the field to invalidate"," * @param {String|Error} err error which states the reason `path` was invalid"," * @return {Boolean}"," * @api public"," */","","EmbeddedDocument.prototype.invalidate = function(path, err, val, first) {","  if (!this.__parent) {","    Document.prototype.invalidate.call(this, path, err, val);","    if (err.name === 'ValidatorError') {","      return true;","    }","    throw err;","  }","","  var index = this.__index;","  if (typeof index !== 'undefined') {","    var parentPath = this.__parentArray._path;","    var fullPath = [parentPath, index, path].join('.');","    this.__parent.invalidate(fullPath, err, val);","  }","","  if (first) {","    this.$__.validationError = this.ownerDocument().$__.validationError;","  }","","  return true;","};","","/**"," * Marks a path as valid, removing existing validation errors."," *"," * @param {String} path the field to mark as valid"," * @api private"," * @method $markValid"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.$markValid = function(path) {","  if (!this.__parent) {","    return;","  }","","  var index = this.__index;","  if (typeof index !== 'undefined') {","    var parentPath = this.__parentArray._path;","    var fullPath = [parentPath, index, path].join('.');","    this.__parent.$markValid(fullPath);","  }","};","","/**"," * Checks if a path is invalid"," *"," * @param {String} path the field to check"," * @api private"," * @method $isValid"," * @receiver EmbeddedDocument"," */","","EmbeddedDocument.prototype.$isValid = function(path) {","  var index = this.__index;","  if (typeof index !== 'undefined' && this.__parent) {","    return !this.__parent.$__.validationError ||","      !this.__parent.$__.validationError.errors[this.$__fullPath(path)];","  }","","  return true;","};","","/**"," * Returns the top level document of this sub-document."," *"," * @return {Document}"," */","","EmbeddedDocument.prototype.ownerDocument = function() {","  if (this.$__.ownerDocument) {","    return this.$__.ownerDocument;","  }","","  var parent = this.__parent;","  if (!parent) {","    return this;","  }","","  while (parent.__parent || parent.$parent) {","    parent = parent.__parent || parent.$parent;","  }","","  this.$__.ownerDocument = parent;","  return this.$__.ownerDocument;","};","","/**"," * Returns the full path to this document. If optional `path` is passed, it is appended to the full path."," *"," * @param {String} [path]"," * @return {String}"," * @api private"," * @method $__fullPath"," * @memberOf EmbeddedDocument"," */","","EmbeddedDocument.prototype.$__fullPath = function(path) {","  if (!this.$__.fullPath) {","    var parent = this; // eslint-disable-line consistent-this","    if (!parent.__parent) {","      return path;","    }","","    var paths = [];","    while (parent.__parent || parent.$parent) {","      if (parent.__parent) {","        paths.unshift(parent.__parentArray._path);","      } else {","        paths.unshift(parent.$basePath);","      }","      parent = parent.__parent || parent.$parent;","    }","","    this.$__.fullPath = paths.join('.');","","    if (!this.$__.ownerDocument) {","      // optimization","      this.$__.ownerDocument = parent;","    }","  }","","  return path","      ? this.$__.fullPath + '.' + path","      : this.$__.fullPath;","};","","/**"," * Returns this sub-documents parent document."," *"," * @api public"," */","","EmbeddedDocument.prototype.parent = function() {","  return this.__parent;","};","","/**"," * Returns this sub-documents parent array."," *"," * @api public"," */","","EmbeddedDocument.prototype.parentArray = function() {","  return this.__parentArray;","};","","/*!"," * Module exports."," */","","module.exports = EmbeddedDocument;",""],"l":{"7":1,"8":1,"9":1,"21":1,"22":0,"23":0,"24":0,"26":0,"27":0,"29":0,"31":0,"33":0,"34":0,"35":0,"38":0,"39":0,"46":1,"47":1,"49":1,"50":16,"53":1,"54":0,"77":1,"78":0,"79":0,"80":0,"83":0,"87":0,"89":0,"97":1,"98":0,"115":1,"116":0,"117":0,"118":0,"119":0,"131":1,"132":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"142":0,"143":0,"154":1,"155":0,"156":0,"157":0,"159":0,"160":0,"161":0,"164":0,"165":0,"166":0,"167":0,"168":0,"171":0,"172":0,"173":0,"176":0,"177":0,"180":0,"188":1,"189":0,"198":1,"199":0,"211":1,"212":0,"213":0,"214":0,"215":0,"217":0,"220":0,"221":0,"222":0,"223":0,"224":0,"227":0,"228":0,"231":0,"243":1,"244":0,"245":0,"248":0,"249":0,"250":0,"251":0,"252":0,"265":1,"266":0,"267":0,"268":0,"272":0,"281":1,"282":0,"283":0,"286":0,"287":0,"288":0,"291":0,"292":0,"295":0,"296":0,"309":1,"310":0,"311":0,"312":0,"313":0,"316":0,"317":0,"318":0,"319":0,"321":0,"323":0,"326":0,"328":0,"330":0,"334":0,"345":1,"346":0,"355":1,"356":0,"363":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document_provider.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document_provider.js","s":{"1":1,"2":1,"3":1,"4":2,"5":0,"6":2},"b":{"1":[0,2],"2":[2,0,0]},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"3":{"start":{"line":16,"column":0},"end":{"line":21,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":27}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":18}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":6},"end":{"line":17,"column":35}},{"start":{"line":17,"column":39},"end":{"line":17,"column":70}},{"start":{"line":17,"column":74},"end":{"line":17,"column":102}}]}},"code":["'use strict';","","/* eslint-env browser */","","/*!"," * Module dependencies."," */","var Document = require('./document.js');","var BrowserDocument = require('./browserDocument.js');","","/**"," * Returns the Document constructor for the current context"," *"," * @api private"," */","module.exports = function() {","  if (typeof window !== 'undefined' && typeof document !== 'undefined' && document === window.document) {","    return BrowserDocument;","  }","  return Document;","};",""],"l":{"8":1,"9":1,"16":1,"17":2,"18":0,"20":2}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":8,"52":0,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":1,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":6,"201":2,"202":4,"203":1,"204":0,"205":0,"206":0,"207":1,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":1,"343":0,"344":0,"345":0,"346":0,"347":0,"348":1,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":1,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":1,"395":0,"396":1,"397":0,"398":0,"399":1,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":1,"412":0,"413":0,"414":0,"415":0,"416":1,"417":0,"418":1,"419":0,"420":1,"421":0,"422":1,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":1,"442":0,"443":1,"444":0,"445":1,"446":0,"447":1,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":1,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":1,"506":0,"507":0,"508":0,"509":0,"510":1,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":1,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":1,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":1,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":1,"639":0,"640":0,"641":0,"642":0,"643":0,"644":1,"645":0,"646":1,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":1,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":1,"694":0,"695":0,"696":0,"697":0,"698":0,"699":1,"700":0,"701":0,"702":0,"703":0,"704":0,"705":1,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":1,"735":0,"736":0,"737":1,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":1,"745":0,"746":0,"747":1,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":1,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":1,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":1,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":1,"822":0,"823":1,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":1,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":1,"865":0,"866":1,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":1,"875":0,"876":1,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":1,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":1,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":1,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":1,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":1,"933":0,"934":1,"935":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0,0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0,0,0,0],"61":[2,4],"62":[6,5],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0,0,0,0,0,0,0],"83":[0,0,0],"84":[0,0],"85":[0,0],"86":[0,0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0,0,0,0],"118":[0,0],"119":[0,0],"120":[0,0,0,0,0,0,0,0,0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0,0,0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0,0],"197":[0,0],"198":[0,0,0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0,0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0,0],"247":[0,0],"248":[0,0,0,0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0,0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0,0,0],"285":[0,0],"286":[0,0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0,0],"303":[0,0],"304":[0,0],"305":[0,0],"306":[0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0]},"f":{"1":0,"2":0,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0},"fnMap":{"1":{"name":"Document","line":39,"loc":{"start":{"line":39,"column":0},"end":{"line":39,"column":39}}},"2":{"name":"(anonymous_2)","line":79,"loc":{"start":{"line":79,"column":17},"end":{"line":79,"column":31}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":4},"end":{"line":96,"column":24}}},"4":{"name":"(anonymous_4)","line":97,"loc":{"start":{"line":97,"column":38},"end":{"line":97,"column":49}}},"5":{"name":"(anonymous_5)","line":159,"loc":{"start":{"line":159,"column":33},"end":{"line":159,"column":63}}},"6":{"name":"(anonymous_6)","line":284,"loc":{"start":{"line":284,"column":28},"end":{"line":284,"column":39}}},"7":{"name":"(anonymous_7)","line":304,"loc":{"start":{"line":304,"column":26},"end":{"line":304,"column":50}}},"8":{"name":"init","line":351,"loc":{"start":{"line":351,"column":0},"end":{"line":351,"column":38}}},"9":{"name":"_init","line":371,"loc":{"start":{"line":371,"column":2},"end":{"line":371,"column":24}}},"10":{"name":"(anonymous_10)","line":431,"loc":{"start":{"line":431,"column":35},"end":{"line":431,"column":46}}},"11":{"name":"update","line":488,"loc":{"start":{"line":488,"column":28},"end":{"line":488,"column":46}}},"12":{"name":"(anonymous_12)","line":526,"loc":{"start":{"line":526,"column":25},"end":{"line":526,"column":60}}},"13":{"name":"_handleIndex","line":593,"loc":{"start":{"line":593,"column":2},"end":{"line":593,"column":27}}},"14":{"name":"(anonymous_14)","line":764,"loc":{"start":{"line":764,"column":18},"end":{"line":764,"column":30}}},"15":{"name":"(anonymous_15)","line":767,"loc":{"start":{"line":767,"column":37},"end":{"line":767,"column":49}}},"16":{"name":"cleanModifiedSubpaths","line":799,"loc":{"start":{"line":799,"column":0},"end":{"line":799,"column":42}}},"17":{"name":"(anonymous_17)","line":818,"loc":{"start":{"line":818,"column":37},"end":{"line":818,"column":108}}},"18":{"name":"(anonymous_18)","line":866,"loc":{"start":{"line":866,"column":28},"end":{"line":866,"column":99}}},"19":{"name":"(anonymous_19)","line":883,"loc":{"start":{"line":883,"column":35},"end":{"line":883,"column":58}}},"20":{"name":"(anonymous_20)","line":927,"loc":{"start":{"line":927,"column":30},"end":{"line":927,"column":45}}},"21":{"name":"(anonymous_21)","line":939,"loc":{"start":{"line":939,"column":30},"end":{"line":939,"column":50}}},"22":{"name":"(anonymous_22)","line":960,"loc":{"start":{"line":960,"column":25},"end":{"line":960,"column":46}}},"23":{"name":"(anonymous_23)","line":998,"loc":{"start":{"line":998,"column":29},"end":{"line":998,"column":44}}},"24":{"name":"(anonymous_24)","line":1023,"loc":{"start":{"line":1023,"column":34},"end":{"line":1023,"column":49}}},"25":{"name":"(anonymous_25)","line":1040,"loc":{"start":{"line":1040,"column":36},"end":{"line":1040,"column":51}}},"26":{"name":"(anonymous_26)","line":1059,"loc":{"start":{"line":1059,"column":29},"end":{"line":1059,"column":44}}},"27":{"name":"(anonymous_27)","line":1070,"loc":{"start":{"line":1070,"column":35},"end":{"line":1070,"column":46}}},"28":{"name":"(anonymous_28)","line":1072,"loc":{"start":{"line":1072,"column":36},"end":{"line":1072,"column":57}}},"29":{"name":"(anonymous_29)","line":1074,"loc":{"start":{"line":1074,"column":36},"end":{"line":1074,"column":62}}},"30":{"name":"(anonymous_30)","line":1076,"loc":{"start":{"line":1076,"column":18},"end":{"line":1076,"column":34}}},"31":{"name":"(anonymous_31)","line":1101,"loc":{"start":{"line":1101,"column":32},"end":{"line":1101,"column":48}}},"32":{"name":"(anonymous_32)","line":1108,"loc":{"start":{"line":1108,"column":37},"end":{"line":1108,"column":52}}},"33":{"name":"(anonymous_33)","line":1111,"loc":{"start":{"line":1111,"column":41},"end":{"line":1111,"column":56}}},"34":{"name":"(anonymous_34)","line":1112,"loc":{"start":{"line":1112,"column":38},"end":{"line":1112,"column":52}}},"35":{"name":"(anonymous_35)","line":1136,"loc":{"start":{"line":1136,"column":32},"end":{"line":1136,"column":47}}},"36":{"name":"(anonymous_36)","line":1154,"loc":{"start":{"line":1154,"column":38},"end":{"line":1154,"column":53}}},"37":{"name":"(anonymous_37)","line":1166,"loc":{"start":{"line":1166,"column":28},"end":{"line":1166,"column":43}}},"38":{"name":"isSelected","line":1185,"loc":{"start":{"line":1185,"column":32},"end":{"line":1185,"column":58}}},"39":{"name":"isDirectSelected","line":1262,"loc":{"start":{"line":1262,"column":38},"end":{"line":1262,"column":70}}},"40":{"name":"(anonymous_40)","line":1324,"loc":{"start":{"line":1324,"column":30},"end":{"line":1324,"column":58}}},"41":{"name":"(anonymous_41)","line":1330,"loc":{"start":{"line":1330,"column":31},"end":{"line":1330,"column":42}}},"42":{"name":"_getPathsToValidate","line":1337,"loc":{"start":{"line":1337,"column":0},"end":{"line":1337,"column":34}}},"43":{"name":"(anonymous_43)","line":1341,"loc":{"start":{"line":1341,"column":69},"end":{"line":1341,"column":84}}},"44":{"name":"(anonymous_44)","line":1390,"loc":{"start":{"line":1390,"column":44},"end":{"line":1390,"column":56}}},"45":{"name":"(anonymous_45)","line":1404,"loc":{"start":{"line":1404,"column":33},"end":{"line":1404,"column":52}}},"46":{"name":"(anonymous_46)","line":1406,"loc":{"start":{"line":1406,"column":18},"end":{"line":1406,"column":29}}},"47":{"name":"(anonymous_47)","line":1427,"loc":{"start":{"line":1427,"column":21},"end":{"line":1427,"column":32}}},"48":{"name":"(anonymous_48)","line":1430,"loc":{"start":{"line":1430,"column":98},"end":{"line":1430,"column":114}}},"49":{"name":"(anonymous_49)","line":1441,"loc":{"start":{"line":1441,"column":17},"end":{"line":1441,"column":28}}},"50":{"name":"(anonymous_50)","line":1444,"loc":{"start":{"line":1444,"column":96},"end":{"line":1444,"column":112}}},"51":{"name":"(anonymous_51)","line":1451,"loc":{"start":{"line":1451,"column":21},"end":{"line":1451,"column":36}}},"52":{"name":"(anonymous_52)","line":1459,"loc":{"start":{"line":1459,"column":21},"end":{"line":1459,"column":32}}},"53":{"name":"(anonymous_53)","line":1472,"loc":{"start":{"line":1472,"column":24},"end":{"line":1472,"column":38}}},"54":{"name":"(anonymous_54)","line":1505,"loc":{"start":{"line":1505,"column":34},"end":{"line":1505,"column":60}}},"55":{"name":"(anonymous_55)","line":1527,"loc":{"start":{"line":1527,"column":16},"end":{"line":1527,"column":31}}},"56":{"name":"(anonymous_56)","line":1597,"loc":{"start":{"line":1597,"column":32},"end":{"line":1597,"column":63}}},"57":{"name":"(anonymous_57)","line":1632,"loc":{"start":{"line":1632,"column":32},"end":{"line":1632,"column":47}}},"58":{"name":"(anonymous_58)","line":1652,"loc":{"start":{"line":1652,"column":30},"end":{"line":1652,"column":45}}},"59":{"name":"reset","line":1665,"loc":{"start":{"line":1665,"column":30},"end":{"line":1665,"column":47}}},"60":{"name":"(anonymous_60)","line":1670,"loc":{"start":{"line":1670,"column":25},"end":{"line":1670,"column":37}}},"61":{"name":"(anonymous_61)","line":1673,"loc":{"start":{"line":1673,"column":10},"end":{"line":1673,"column":24}}},"62":{"name":"(anonymous_62)","line":1676,"loc":{"start":{"line":1676,"column":11},"end":{"line":1676,"column":27}}},"63":{"name":"(anonymous_63)","line":1688,"loc":{"start":{"line":1688,"column":26},"end":{"line":1688,"column":41}}},"64":{"name":"(anonymous_64)","line":1701,"loc":{"start":{"line":1701,"column":38},"end":{"line":1701,"column":53}}},"65":{"name":"(anonymous_65)","line":1716,"loc":{"start":{"line":1716,"column":30},"end":{"line":1716,"column":41}}},"66":{"name":"(anonymous_66)","line":1719,"loc":{"start":{"line":1719,"column":47},"end":{"line":1719,"column":62}}},"67":{"name":"(anonymous_67)","line":1729,"loc":{"start":{"line":1729,"column":55},"end":{"line":1729,"column":70}}},"68":{"name":"(anonymous_68)","line":1741,"loc":{"start":{"line":1741,"column":11},"end":{"line":1741,"column":26}}},"69":{"name":"(anonymous_69)","line":1750,"loc":{"start":{"line":1750,"column":14},"end":{"line":1750,"column":29}}},"70":{"name":"compile","line":1778,"loc":{"start":{"line":1778,"column":0},"end":{"line":1778,"column":47}}},"71":{"name":"getOwnPropertyDescriptors","line":1803,"loc":{"start":{"line":1803,"column":0},"end":{"line":1803,"column":43}}},"72":{"name":"(anonymous_72)","line":1806,"loc":{"start":{"line":1806,"column":45},"end":{"line":1806,"column":59}}},"73":{"name":"defineKey","line":1818,"loc":{"start":{"line":1818,"column":0},"end":{"line":1818,"column":69}}},"74":{"name":"(anonymous_74)","line":1826,"loc":{"start":{"line":1826,"column":11},"end":{"line":1826,"column":22}}},"75":{"name":"(anonymous_75)","line":1859,"loc":{"start":{"line":1859,"column":19},"end":{"line":1859,"column":30}}},"76":{"name":"(anonymous_76)","line":1868,"loc":{"start":{"line":1868,"column":19},"end":{"line":1868,"column":30}}},"77":{"name":"(anonymous_77)","line":1886,"loc":{"start":{"line":1886,"column":11},"end":{"line":1886,"column":23}}},"78":{"name":"(anonymous_78)","line":1897,"loc":{"start":{"line":1897,"column":11},"end":{"line":1897,"column":22}}},"79":{"name":"(anonymous_79)","line":1900,"loc":{"start":{"line":1900,"column":11},"end":{"line":1900,"column":23}}},"80":{"name":"(anonymous_80)","line":1916,"loc":{"start":{"line":1916,"column":34},"end":{"line":1916,"column":51}}},"81":{"name":"(anonymous_81)","line":1930,"loc":{"start":{"line":1930,"column":48},"end":{"line":1930,"column":59}}},"82":{"name":"(anonymous_82)","line":1935,"loc":{"start":{"line":1935,"column":25},"end":{"line":1935,"column":37}}},"83":{"name":"(anonymous_83)","line":1938,"loc":{"start":{"line":1938,"column":10},"end":{"line":1938,"column":24}}},"84":{"name":"(anonymous_84)","line":1940,"loc":{"start":{"line":1940,"column":12},"end":{"line":1940,"column":34}}},"85":{"name":"(anonymous_85)","line":1943,"loc":{"start":{"line":1943,"column":10},"end":{"line":1943,"column":24}}},"86":{"name":"(anonymous_86)","line":1957,"loc":{"start":{"line":1957,"column":38},"end":{"line":1957,"column":49}}},"87":{"name":"docReducer","line":1961,"loc":{"start":{"line":1961,"column":2},"end":{"line":1961,"column":34}}},"88":{"name":"_docReduce","line":1972,"loc":{"start":{"line":1972,"column":18},"end":{"line":1972,"column":43}}},"89":{"name":"applyQueue","line":1998,"loc":{"start":{"line":1998,"column":0},"end":{"line":1998,"column":25}}},"90":{"name":"handleReject","line":2013,"loc":{"start":{"line":2013,"column":37},"end":{"line":2013,"column":64}}},"91":{"name":"(anonymous_91)","line":2032,"loc":{"start":{"line":2032,"column":31},"end":{"line":2032,"column":55}}},"92":{"name":"(anonymous_92)","line":2244,"loc":{"start":{"line":2244,"column":30},"end":{"line":2244,"column":48}}},"93":{"name":"minimize","line":2255,"loc":{"start":{"line":2255,"column":0},"end":{"line":2255,"column":23}}},"94":{"name":"applyGetters","line":2292,"loc":{"start":{"line":2292,"column":0},"end":{"line":2292,"column":49}}},"95":{"name":"(anonymous_95)","line":2349,"loc":{"start":{"line":2349,"column":28},"end":{"line":2349,"column":46}}},"96":{"name":"(anonymous_96)","line":2359,"loc":{"start":{"line":2359,"column":29},"end":{"line":2359,"column":47}}},"97":{"name":"(anonymous_97)","line":2378,"loc":{"start":{"line":2378,"column":30},"end":{"line":2378,"column":41}}},"98":{"name":"(anonymous_98)","line":2394,"loc":{"start":{"line":2394,"column":28},"end":{"line":2394,"column":42}}},"99":{"name":"populate","line":2452,"loc":{"start":{"line":2452,"column":30},"end":{"line":2452,"column":50}}},"100":{"name":"(anonymous_100)","line":2510,"loc":{"start":{"line":2510,"column":34},"end":{"line":2510,"column":45}}},"101":{"name":"(anonymous_101)","line":2513,"loc":{"start":{"line":2513,"column":25},"end":{"line":2513,"column":51}}},"102":{"name":"(anonymous_102)","line":2514,"loc":{"start":{"line":2514,"column":19},"end":{"line":2514,"column":40}}},"103":{"name":"(anonymous_103)","line":2541,"loc":{"start":{"line":2541,"column":31},"end":{"line":2541,"column":60}}},"104":{"name":"(anonymous_104)","line":2588,"loc":{"start":{"line":2588,"column":32},"end":{"line":2588,"column":47}}},"105":{"name":"(anonymous_105)","line":2609,"loc":{"start":{"line":2609,"column":33},"end":{"line":2609,"column":48}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":39}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":60}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":48}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":60}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":46}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":38}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":52}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":42}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":35}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":52}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":18}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":18}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":13}},"20":{"start":{"line":24,"column":0},"end":{"line":24,"column":51}},"21":{"start":{"line":25,"column":0},"end":{"line":25,"column":29}},"22":{"start":{"line":39,"column":0},"end":{"line":87,"column":1}},"23":{"start":{"line":40,"column":2},"end":{"line":40,"column":31}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":40}},"25":{"start":{"line":42,"column":2},"end":{"line":42,"column":20}},"26":{"start":{"line":43,"column":2},"end":{"line":43,"column":26}},"27":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"28":{"start":{"line":47,"column":2},"end":{"line":53,"column":3}},"29":{"start":{"line":48,"column":4},"end":{"line":48,"column":33}},"30":{"start":{"line":49,"column":4},"end":{"line":49,"column":23}},"31":{"start":{"line":51,"column":4},"end":{"line":51,"column":66}},"32":{"start":{"line":52,"column":4},"end":{"line":52,"column":31}},"33":{"start":{"line":55,"column":2},"end":{"line":55,"column":44}},"34":{"start":{"line":56,"column":2},"end":{"line":58,"column":3}},"35":{"start":{"line":57,"column":4},"end":{"line":57,"column":46}},"36":{"start":{"line":60,"column":2},"end":{"line":60,"column":38}},"37":{"start":{"line":61,"column":2},"end":{"line":61,"column":52}},"38":{"start":{"line":63,"column":2},"end":{"line":73,"column":3}},"39":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"40":{"start":{"line":65,"column":6},"end":{"line":65,"column":29}},"41":{"start":{"line":68,"column":4},"end":{"line":72,"column":5}},"42":{"start":{"line":69,"column":6},"end":{"line":69,"column":49}},"43":{"start":{"line":71,"column":6},"end":{"line":71,"column":37}},"44":{"start":{"line":75,"column":2},"end":{"line":84,"column":3}},"45":{"start":{"line":76,"column":4},"end":{"line":77,"column":38}},"46":{"start":{"line":79,"column":4},"end":{"line":83,"column":7}},"47":{"start":{"line":80,"column":6},"end":{"line":82,"column":7}},"48":{"start":{"line":81,"column":8},"end":{"line":81,"column":36}},"49":{"start":{"line":86,"column":2},"end":{"line":86,"column":19}},"50":{"start":{"line":93,"column":0},"end":{"line":100,"column":7}},"51":{"start":{"line":97,"column":6},"end":{"line":99,"column":8}},"52":{"start":{"line":98,"column":8},"end":{"line":98,"column":78}},"53":{"start":{"line":102,"column":0},"end":{"line":102,"column":42}},"54":{"start":{"line":111,"column":0},"end":{"line":111,"column":26}},"55":{"start":{"line":120,"column":0},"end":{"line":120,"column":25}},"56":{"start":{"line":136,"column":0},"end":{"line":136,"column":22}},"57":{"start":{"line":145,"column":0},"end":{"line":145,"column":26}},"58":{"start":{"line":159,"column":0},"end":{"line":278,"column":2}},"59":{"start":{"line":160,"column":2},"end":{"line":160,"column":15}},"60":{"start":{"line":161,"column":2},"end":{"line":161,"column":21}},"61":{"start":{"line":162,"column":2},"end":{"line":162,"column":11}},"62":{"start":{"line":163,"column":2},"end":{"line":163,"column":9}},"63":{"start":{"line":164,"column":2},"end":{"line":164,"column":19}},"64":{"start":{"line":169,"column":2},"end":{"line":184,"column":3}},"65":{"start":{"line":170,"column":4},"end":{"line":170,"column":31}},"66":{"start":{"line":171,"column":4},"end":{"line":171,"column":21}},"67":{"start":{"line":173,"column":4},"end":{"line":183,"column":5}},"68":{"start":{"line":174,"column":6},"end":{"line":174,"column":35}},"69":{"start":{"line":176,"column":6},"end":{"line":182,"column":7}},"70":{"start":{"line":177,"column":8},"end":{"line":181,"column":9}},"71":{"start":{"line":179,"column":10},"end":{"line":179,"column":38}},"72":{"start":{"line":180,"column":10},"end":{"line":180,"column":16}},"73":{"start":{"line":186,"column":2},"end":{"line":186,"column":45}},"74":{"start":{"line":187,"column":2},"end":{"line":187,"column":26}},"75":{"start":{"line":188,"column":2},"end":{"line":188,"column":13}},"76":{"start":{"line":190,"column":2},"end":{"line":190,"column":31}},"77":{"start":{"line":191,"column":2},"end":{"line":201,"column":3}},"78":{"start":{"line":192,"column":4},"end":{"line":192,"column":31}},"79":{"start":{"line":193,"column":4},"end":{"line":200,"column":5}},"80":{"start":{"line":194,"column":6},"end":{"line":194,"column":37}},"81":{"start":{"line":195,"column":6},"end":{"line":195,"column":17}},"82":{"start":{"line":196,"column":6},"end":{"line":199,"column":7}},"83":{"start":{"line":197,"column":8},"end":{"line":197,"column":25}},"84":{"start":{"line":198,"column":8},"end":{"line":198,"column":45}},"85":{"start":{"line":203,"column":2},"end":{"line":275,"column":3}},"86":{"start":{"line":204,"column":4},"end":{"line":204,"column":22}},"87":{"start":{"line":206,"column":4},"end":{"line":213,"column":5}},"88":{"start":{"line":207,"column":6},"end":{"line":209,"column":7}},"89":{"start":{"line":208,"column":8},"end":{"line":208,"column":17}},"90":{"start":{"line":210,"column":6},"end":{"line":212,"column":7}},"91":{"start":{"line":211,"column":8},"end":{"line":211,"column":17}},"92":{"start":{"line":215,"column":4},"end":{"line":215,"column":36}},"93":{"start":{"line":216,"column":4},"end":{"line":216,"column":28}},"94":{"start":{"line":217,"column":4},"end":{"line":217,"column":26}},"95":{"start":{"line":218,"column":4},"end":{"line":218,"column":23}},"96":{"start":{"line":219,"column":4},"end":{"line":219,"column":21}},"97":{"start":{"line":220,"column":4},"end":{"line":220,"column":19}},"98":{"start":{"line":221,"column":4},"end":{"line":221,"column":14}},"99":{"start":{"line":222,"column":4},"end":{"line":222,"column":25}},"100":{"start":{"line":224,"column":4},"end":{"line":274,"column":5}},"101":{"start":{"line":225,"column":6},"end":{"line":226,"column":14}},"102":{"start":{"line":228,"column":6},"end":{"line":228,"column":54}},"103":{"start":{"line":231,"column":6},"end":{"line":241,"column":7}},"104":{"start":{"line":232,"column":8},"end":{"line":234,"column":9}},"105":{"start":{"line":233,"column":10},"end":{"line":233,"column":16}},"106":{"start":{"line":235,"column":13},"end":{"line":241,"column":7}},"107":{"start":{"line":236,"column":8},"end":{"line":240,"column":9}},"108":{"start":{"line":237,"column":10},"end":{"line":237,"column":26}},"109":{"start":{"line":238,"column":15},"end":{"line":240,"column":9}},"110":{"start":{"line":239,"column":10},"end":{"line":239,"column":16}},"111":{"start":{"line":243,"column":6},"end":{"line":273,"column":7}},"112":{"start":{"line":244,"column":8},"end":{"line":270,"column":9}},"113":{"start":{"line":245,"column":10},"end":{"line":263,"column":11}},"114":{"start":{"line":247,"column":12},"end":{"line":249,"column":13}},"115":{"start":{"line":248,"column":14},"end":{"line":248,"column":23}},"116":{"start":{"line":251,"column":12},"end":{"line":251,"column":48}},"117":{"start":{"line":252,"column":12},"end":{"line":255,"column":13}},"118":{"start":{"line":253,"column":14},"end":{"line":253,"column":32}},"119":{"start":{"line":254,"column":14},"end":{"line":254,"column":47}},"120":{"start":{"line":256,"column":17},"end":{"line":263,"column":11}},"121":{"start":{"line":258,"column":12},"end":{"line":258,"column":48}},"122":{"start":{"line":259,"column":12},"end":{"line":262,"column":13}},"123":{"start":{"line":260,"column":14},"end":{"line":260,"column":32}},"124":{"start":{"line":261,"column":14},"end":{"line":261,"column":47}},"125":{"start":{"line":265,"column":10},"end":{"line":265,"column":46}},"126":{"start":{"line":266,"column":10},"end":{"line":269,"column":11}},"127":{"start":{"line":267,"column":12},"end":{"line":267,"column":30}},"128":{"start":{"line":268,"column":12},"end":{"line":268,"column":45}},"129":{"start":{"line":272,"column":8},"end":{"line":272,"column":49}},"130":{"start":{"line":277,"column":2},"end":{"line":277,"column":13}},"131":{"start":{"line":284,"column":0},"end":{"line":292,"column":2}},"132":{"start":{"line":285,"column":2},"end":{"line":291,"column":5}},"133":{"start":{"line":304,"column":0},"end":{"line":340,"column":2}},"134":{"start":{"line":308,"column":2},"end":{"line":311,"column":3}},"135":{"start":{"line":309,"column":4},"end":{"line":309,"column":14}},"136":{"start":{"line":310,"column":4},"end":{"line":310,"column":16}},"137":{"start":{"line":313,"column":2},"end":{"line":313,"column":21}},"138":{"start":{"line":317,"column":2},"end":{"line":328,"column":3}},"139":{"start":{"line":319,"column":4},"end":{"line":319,"column":29}},"140":{"start":{"line":320,"column":4},"end":{"line":327,"column":5}},"141":{"start":{"line":321,"column":6},"end":{"line":321,"column":35}},"142":{"start":{"line":322,"column":6},"end":{"line":326,"column":7}},"143":{"start":{"line":323,"column":8},"end":{"line":323,"column":72}},"144":{"start":{"line":325,"column":8},"end":{"line":325,"column":56}},"145":{"start":{"line":330,"column":2},"end":{"line":330,"column":29}},"146":{"start":{"line":331,"column":2},"end":{"line":331,"column":23}},"147":{"start":{"line":333,"column":2},"end":{"line":333,"column":26}},"148":{"start":{"line":334,"column":2},"end":{"line":334,"column":38}},"149":{"start":{"line":336,"column":2},"end":{"line":338,"column":3}},"150":{"start":{"line":337,"column":4},"end":{"line":337,"column":13}},"151":{"start":{"line":339,"column":2},"end":{"line":339,"column":14}},"152":{"start":{"line":351,"column":0},"end":{"line":417,"column":1}},"153":{"start":{"line":352,"column":2},"end":{"line":352,"column":24}},"154":{"start":{"line":354,"column":2},"end":{"line":354,"column":30}},"155":{"start":{"line":355,"column":2},"end":{"line":355,"column":24}},"156":{"start":{"line":356,"column":2},"end":{"line":356,"column":13}},"157":{"start":{"line":357,"column":2},"end":{"line":357,"column":11}},"158":{"start":{"line":358,"column":2},"end":{"line":358,"column":8}},"159":{"start":{"line":359,"column":2},"end":{"line":359,"column":16}},"160":{"start":{"line":361,"column":2},"end":{"line":369,"column":3}},"161":{"start":{"line":362,"column":4},"end":{"line":364,"column":5}},"162":{"start":{"line":363,"column":6},"end":{"line":363,"column":21}},"163":{"start":{"line":366,"column":4},"end":{"line":368,"column":5}},"164":{"start":{"line":367,"column":6},"end":{"line":367,"column":17}},"165":{"start":{"line":371,"column":2},"end":{"line":416,"column":3}},"166":{"start":{"line":372,"column":4},"end":{"line":372,"column":20}},"167":{"start":{"line":373,"column":4},"end":{"line":373,"column":22}},"168":{"start":{"line":374,"column":4},"end":{"line":374,"column":36}},"169":{"start":{"line":379,"column":4},"end":{"line":381,"column":5}},"170":{"start":{"line":380,"column":6},"end":{"line":380,"column":13}},"171":{"start":{"line":383,"column":4},"end":{"line":415,"column":5}},"172":{"start":{"line":386,"column":6},"end":{"line":388,"column":7}},"173":{"start":{"line":387,"column":8},"end":{"line":387,"column":20}},"174":{"start":{"line":389,"column":6},"end":{"line":389,"column":45}},"175":{"start":{"line":390,"column":11},"end":{"line":415,"column":5}},"176":{"start":{"line":391,"column":6},"end":{"line":391,"column":22}},"177":{"start":{"line":393,"column":6},"end":{"line":410,"column":7}},"178":{"start":{"line":394,"column":8},"end":{"line":394,"column":22}},"179":{"start":{"line":395,"column":13},"end":{"line":410,"column":7}},"180":{"start":{"line":396,"column":8},"end":{"line":409,"column":9}},"181":{"start":{"line":397,"column":10},"end":{"line":406,"column":11}},"182":{"start":{"line":398,"column":12},"end":{"line":398,"column":53}},"183":{"start":{"line":400,"column":12},"end":{"line":405,"column":16}},"184":{"start":{"line":408,"column":10},"end":{"line":408,"column":26}},"185":{"start":{"line":412,"column":6},"end":{"line":414,"column":7}},"186":{"start":{"line":413,"column":8},"end":{"line":413,"column":40}},"187":{"start":{"line":431,"column":0},"end":{"line":455,"column":2}},"188":{"start":{"line":433,"column":2},"end":{"line":433,"column":73}},"189":{"start":{"line":434,"column":2},"end":{"line":436,"column":3}},"190":{"start":{"line":435,"column":4},"end":{"line":435,"column":11}},"191":{"start":{"line":438,"column":2},"end":{"line":441,"column":10}},"192":{"start":{"line":443,"column":2},"end":{"line":454,"column":3}},"193":{"start":{"line":444,"column":4},"end":{"line":444,"column":34}},"194":{"start":{"line":445,"column":4},"end":{"line":453,"column":5}},"195":{"start":{"line":446,"column":6},"end":{"line":446,"column":73}},"196":{"start":{"line":447,"column":11},"end":{"line":453,"column":5}},"197":{"start":{"line":450,"column":6},"end":{"line":450,"column":37}},"198":{"start":{"line":452,"column":6},"end":{"line":452,"column":27}},"199":{"start":{"line":461,"column":0},"end":{"line":467,"column":1}},"200":{"start":{"line":462,"column":2},"end":{"line":466,"column":3}},"201":{"start":{"line":463,"column":4},"end":{"line":463,"column":63}},"202":{"start":{"line":465,"column":4},"end":{"line":465,"column":51}},"203":{"start":{"line":488,"column":0},"end":{"line":492,"column":2}},"204":{"start":{"line":489,"column":2},"end":{"line":489,"column":35}},"205":{"start":{"line":490,"column":2},"end":{"line":490,"column":32}},"206":{"start":{"line":491,"column":2},"end":{"line":491,"column":63}},"207":{"start":{"line":526,"column":0},"end":{"line":793,"column":2}},"208":{"start":{"line":527,"column":2},"end":{"line":530,"column":3}},"209":{"start":{"line":528,"column":4},"end":{"line":528,"column":19}},"210":{"start":{"line":529,"column":4},"end":{"line":529,"column":21}},"211":{"start":{"line":532,"column":2},"end":{"line":535,"column":13}},"212":{"start":{"line":537,"column":2},"end":{"line":539,"column":28}},"213":{"start":{"line":541,"column":2},"end":{"line":544,"column":3}},"214":{"start":{"line":542,"column":4},"end":{"line":542,"column":63}},"215":{"start":{"line":543,"column":4},"end":{"line":543,"column":75}},"216":{"start":{"line":546,"column":2},"end":{"line":591,"column":3}},"217":{"start":{"line":549,"column":4},"end":{"line":590,"column":5}},"218":{"start":{"line":550,"column":6},"end":{"line":550,"column":19}},"219":{"start":{"line":551,"column":6},"end":{"line":551,"column":17}},"220":{"start":{"line":552,"column":6},"end":{"line":552,"column":14}},"221":{"start":{"line":554,"column":6},"end":{"line":556,"column":15}},"222":{"start":{"line":558,"column":6},"end":{"line":564,"column":7}},"223":{"start":{"line":559,"column":8},"end":{"line":563,"column":9}},"224":{"start":{"line":560,"column":10},"end":{"line":560,"column":33}},"225":{"start":{"line":562,"column":10},"end":{"line":562,"column":27}},"226":{"start":{"line":566,"column":6},"end":{"line":566,"column":35}},"227":{"start":{"line":567,"column":6},"end":{"line":567,"column":28}},"228":{"start":{"line":568,"column":6},"end":{"line":568,"column":16}},"229":{"start":{"line":569,"column":6},"end":{"line":569,"column":19}},"230":{"start":{"line":570,"column":6},"end":{"line":570,"column":14}},"231":{"start":{"line":572,"column":6},"end":{"line":577,"column":7}},"232":{"start":{"line":573,"column":8},"end":{"line":575,"column":9}},"233":{"start":{"line":574,"column":10},"end":{"line":574,"column":28}},"234":{"start":{"line":576,"column":8},"end":{"line":576,"column":20}},"235":{"start":{"line":579,"column":6},"end":{"line":587,"column":7}},"236":{"start":{"line":580,"column":8},"end":{"line":582,"column":9}},"237":{"start":{"line":581,"column":10},"end":{"line":581,"column":39}},"238":{"start":{"line":584,"column":8},"end":{"line":586,"column":9}},"239":{"start":{"line":585,"column":10},"end":{"line":585,"column":39}},"240":{"start":{"line":589,"column":6},"end":{"line":589,"column":18}},"241":{"start":{"line":593,"column":2},"end":{"line":639,"column":3}},"242":{"start":{"line":594,"column":4},"end":{"line":594,"column":18}},"243":{"start":{"line":595,"column":4},"end":{"line":595,"column":32}},"244":{"start":{"line":596,"column":4},"end":{"line":596,"column":46}},"245":{"start":{"line":598,"column":4},"end":{"line":638,"column":5}},"246":{"start":{"line":609,"column":6},"end":{"line":609,"column":54}},"247":{"start":{"line":610,"column":11},"end":{"line":638,"column":5}},"248":{"start":{"line":612,"column":6},"end":{"line":615,"column":7}},"249":{"start":{"line":614,"column":8},"end":{"line":614,"column":15}},"250":{"start":{"line":617,"column":6},"end":{"line":635,"column":7}},"251":{"start":{"line":619,"column":8},"end":{"line":619,"column":26}},"252":{"start":{"line":620,"column":8},"end":{"line":624,"column":9}},"253":{"start":{"line":623,"column":10},"end":{"line":623,"column":64}},"254":{"start":{"line":625,"column":8},"end":{"line":625,"column":48}},"255":{"start":{"line":626,"column":13},"end":{"line":635,"column":7}},"256":{"start":{"line":627,"column":8},"end":{"line":628,"column":66}},"257":{"start":{"line":629,"column":13},"end":{"line":635,"column":7}},"258":{"start":{"line":630,"column":8},"end":{"line":634,"column":9}},"259":{"start":{"line":631,"column":10},"end":{"line":631,"column":56}},"260":{"start":{"line":633,"column":10},"end":{"line":633,"column":41}},"261":{"start":{"line":636,"column":11},"end":{"line":638,"column":5}},"262":{"start":{"line":637,"column":6},"end":{"line":637,"column":54}},"263":{"start":{"line":641,"column":2},"end":{"line":641,"column":44}},"264":{"start":{"line":642,"column":2},"end":{"line":661,"column":3}},"265":{"start":{"line":643,"column":4},"end":{"line":658,"column":5}},"266":{"start":{"line":645,"column":6},"end":{"line":648,"column":7}},"267":{"start":{"line":646,"column":8},"end":{"line":646,"column":34}},"268":{"start":{"line":647,"column":8},"end":{"line":647,"column":42}},"269":{"start":{"line":650,"column":6},"end":{"line":656,"column":7}},"270":{"start":{"line":651,"column":8},"end":{"line":651,"column":32}},"271":{"start":{"line":652,"column":8},"end":{"line":652,"column":32}},"272":{"start":{"line":653,"column":8},"end":{"line":653,"column":42}},"273":{"start":{"line":655,"column":8},"end":{"line":655,"column":42}},"274":{"start":{"line":657,"column":6},"end":{"line":657,"column":18}},"275":{"start":{"line":659,"column":4},"end":{"line":659,"column":76}},"276":{"start":{"line":660,"column":4},"end":{"line":660,"column":16}},"277":{"start":{"line":663,"column":2},"end":{"line":663,"column":13}},"278":{"start":{"line":664,"column":2},"end":{"line":664,"column":30}},"279":{"start":{"line":666,"column":2},"end":{"line":698,"column":3}},"280":{"start":{"line":668,"column":4},"end":{"line":668,"column":14}},"281":{"start":{"line":670,"column":4},"end":{"line":684,"column":5}},"282":{"start":{"line":671,"column":6},"end":{"line":671,"column":52}},"283":{"start":{"line":672,"column":6},"end":{"line":672,"column":41}},"284":{"start":{"line":673,"column":6},"end":{"line":677,"column":7}},"285":{"start":{"line":675,"column":8},"end":{"line":675,"column":21}},"286":{"start":{"line":676,"column":8},"end":{"line":676,"column":14}},"287":{"start":{"line":680,"column":6},"end":{"line":683,"column":7}},"288":{"start":{"line":681,"column":8},"end":{"line":681,"column":35}},"289":{"start":{"line":682,"column":8},"end":{"line":682,"column":20}},"290":{"start":{"line":686,"column":4},"end":{"line":691,"column":5}},"291":{"start":{"line":687,"column":6},"end":{"line":689,"column":7}},"292":{"start":{"line":688,"column":8},"end":{"line":688,"column":40}},"293":{"start":{"line":690,"column":6},"end":{"line":690,"column":18}},"294":{"start":{"line":692,"column":9},"end":{"line":698,"column":3}},"295":{"start":{"line":693,"column":4},"end":{"line":693,"column":43}},"296":{"start":{"line":694,"column":4},"end":{"line":694,"column":35}},"297":{"start":{"line":695,"column":4},"end":{"line":695,"column":16}},"298":{"start":{"line":697,"column":4},"end":{"line":697,"column":32}},"299":{"start":{"line":700,"column":2},"end":{"line":700,"column":17}},"300":{"start":{"line":705,"column":2},"end":{"line":721,"column":3}},"301":{"start":{"line":706,"column":4},"end":{"line":706,"column":22}},"302":{"start":{"line":708,"column":4},"end":{"line":716,"column":5}},"303":{"start":{"line":709,"column":6},"end":{"line":709,"column":48}},"304":{"start":{"line":710,"column":6},"end":{"line":715,"column":7}},"305":{"start":{"line":713,"column":8},"end":{"line":713,"column":29}},"306":{"start":{"line":714,"column":8},"end":{"line":714,"column":14}},"307":{"start":{"line":718,"column":4},"end":{"line":720,"column":5}},"308":{"start":{"line":719,"column":6},"end":{"line":719,"column":24}},"309":{"start":{"line":724,"column":2},"end":{"line":726,"column":28}},"310":{"start":{"line":728,"column":2},"end":{"line":731,"column":3}},"311":{"start":{"line":729,"column":4},"end":{"line":729,"column":78}},"312":{"start":{"line":730,"column":4},"end":{"line":730,"column":16}},"313":{"start":{"line":733,"column":2},"end":{"line":733,"column":23}},"314":{"start":{"line":734,"column":2},"end":{"line":782,"column":3}},"315":{"start":{"line":737,"column":4},"end":{"line":737,"column":28}},"316":{"start":{"line":738,"column":4},"end":{"line":749,"column":5}},"317":{"start":{"line":742,"column":6},"end":{"line":747,"column":7}},"318":{"start":{"line":743,"column":8},"end":{"line":744,"column":45}},"319":{"start":{"line":746,"column":8},"end":{"line":746,"column":64}},"320":{"start":{"line":748,"column":6},"end":{"line":748,"column":25}},"321":{"start":{"line":751,"column":4},"end":{"line":751,"column":16}},"322":{"start":{"line":752,"column":4},"end":{"line":770,"column":5}},"323":{"start":{"line":761,"column":6},"end":{"line":768,"column":7}},"324":{"start":{"line":762,"column":8},"end":{"line":762,"column":48}},"325":{"start":{"line":763,"column":8},"end":{"line":764,"column":59}},"326":{"start":{"line":764,"column":32},"end":{"line":764,"column":45}},"327":{"start":{"line":766,"column":8},"end":{"line":766,"column":48}},"328":{"start":{"line":767,"column":8},"end":{"line":767,"column":78}},"329":{"start":{"line":767,"column":51},"end":{"line":767,"column":64}},"330":{"start":{"line":769,"column":6},"end":{"line":769,"column":25}},"331":{"start":{"line":771,"column":4},"end":{"line":771,"column":58}},"332":{"start":{"line":773,"column":4},"end":{"line":775,"column":5}},"333":{"start":{"line":774,"column":6},"end":{"line":774,"column":38}},"334":{"start":{"line":777,"column":4},"end":{"line":777,"column":26}},"335":{"start":{"line":779,"column":4},"end":{"line":780,"column":66}},"336":{"start":{"line":781,"column":4},"end":{"line":781,"column":22}},"337":{"start":{"line":784,"column":2},"end":{"line":786,"column":3}},"338":{"start":{"line":785,"column":4},"end":{"line":785,"column":78}},"339":{"start":{"line":788,"column":2},"end":{"line":790,"column":3}},"340":{"start":{"line":789,"column":4},"end":{"line":789,"column":38}},"341":{"start":{"line":792,"column":2},"end":{"line":792,"column":14}},"342":{"start":{"line":799,"column":0},"end":{"line":807,"column":1}},"343":{"start":{"line":800,"column":2},"end":{"line":800,"column":70}},"344":{"start":{"line":801,"column":2},"end":{"line":801,"column":48}},"345":{"start":{"line":802,"column":2},"end":{"line":806,"column":3}},"346":{"start":{"line":803,"column":4},"end":{"line":805,"column":5}},"347":{"start":{"line":804,"column":6},"end":{"line":804,"column":66}},"348":{"start":{"line":818,"column":0},"end":{"line":856,"column":2}},"349":{"start":{"line":819,"column":2},"end":{"line":821,"column":3}},"350":{"start":{"line":820,"column":4},"end":{"line":820,"column":16}},"351":{"start":{"line":823,"column":2},"end":{"line":827,"column":3}},"352":{"start":{"line":826,"column":4},"end":{"line":826,"column":16}},"353":{"start":{"line":829,"column":2},"end":{"line":832,"column":3}},"354":{"start":{"line":831,"column":4},"end":{"line":831,"column":17}},"355":{"start":{"line":836,"column":2},"end":{"line":840,"column":3}},"356":{"start":{"line":839,"column":4},"end":{"line":839,"column":17}},"357":{"start":{"line":842,"column":2},"end":{"line":844,"column":3}},"358":{"start":{"line":843,"column":4},"end":{"line":843,"column":16}},"359":{"start":{"line":846,"column":2},"end":{"line":854,"column":3}},"360":{"start":{"line":853,"column":4},"end":{"line":853,"column":16}},"361":{"start":{"line":855,"column":2},"end":{"line":855,"column":15}},"362":{"start":{"line":866,"column":0},"end":{"line":918,"column":2}},"363":{"start":{"line":867,"column":2},"end":{"line":867,"column":53}},"364":{"start":{"line":869,"column":2},"end":{"line":870,"column":27}},"365":{"start":{"line":871,"column":2},"end":{"line":871,"column":19}},"366":{"start":{"line":873,"column":2},"end":{"line":889,"column":3}},"367":{"start":{"line":874,"column":4},"end":{"line":874,"column":39}},"368":{"start":{"line":877,"column":4},"end":{"line":877,"column":64}},"369":{"start":{"line":878,"column":4},"end":{"line":888,"column":5}},"370":{"start":{"line":879,"column":6},"end":{"line":879,"column":39}},"371":{"start":{"line":883,"column":6},"end":{"line":887,"column":9}},"372":{"start":{"line":884,"column":8},"end":{"line":886,"column":9}},"373":{"start":{"line":885,"column":10},"end":{"line":885,"column":53}},"374":{"start":{"line":891,"column":2},"end":{"line":891,"column":22}},"375":{"start":{"line":892,"column":2},"end":{"line":892,"column":12}},"376":{"start":{"line":893,"column":2},"end":{"line":893,"column":23}},"377":{"start":{"line":894,"column":2},"end":{"line":894,"column":15}},"378":{"start":{"line":896,"column":2},"end":{"line":917,"column":3}},"379":{"start":{"line":897,"column":4},"end":{"line":897,"column":21}},"380":{"start":{"line":898,"column":4},"end":{"line":898,"column":26}},"381":{"start":{"line":899,"column":4},"end":{"line":899,"column":45}},"382":{"start":{"line":901,"column":4},"end":{"line":916,"column":5}},"383":{"start":{"line":902,"column":6},"end":{"line":902,"column":26}},"384":{"start":{"line":904,"column":6},"end":{"line":915,"column":7}},"385":{"start":{"line":905,"column":8},"end":{"line":905,"column":28}},"386":{"start":{"line":906,"column":13},"end":{"line":915,"column":7}},"387":{"start":{"line":907,"column":8},"end":{"line":907,"column":28}},"388":{"start":{"line":908,"column":13},"end":{"line":915,"column":7}},"389":{"start":{"line":909,"column":8},"end":{"line":909,"column":28}},"390":{"start":{"line":910,"column":13},"end":{"line":915,"column":7}},"391":{"start":{"line":911,"column":8},"end":{"line":911,"column":28}},"392":{"start":{"line":913,"column":8},"end":{"line":913,"column":26}},"393":{"start":{"line":914,"column":8},"end":{"line":914,"column":28}},"394":{"start":{"line":927,"column":0},"end":{"line":929,"column":2}},"395":{"start":{"line":928,"column":2},"end":{"line":928,"column":41}},"396":{"start":{"line":939,"column":0},"end":{"line":942,"column":2}},"397":{"start":{"line":940,"column":2},"end":{"line":940,"column":39}},"398":{"start":{"line":941,"column":2},"end":{"line":941,"column":14}},"399":{"start":{"line":960,"column":0},"end":{"line":987,"column":2}},"400":{"start":{"line":961,"column":2},"end":{"line":961,"column":12}},"401":{"start":{"line":962,"column":2},"end":{"line":964,"column":3}},"402":{"start":{"line":963,"column":4},"end":{"line":963,"column":68}},"403":{"start":{"line":966,"column":2},"end":{"line":968,"column":22}},"404":{"start":{"line":970,"column":2},"end":{"line":974,"column":3}},"405":{"start":{"line":971,"column":4},"end":{"line":973,"column":25}},"406":{"start":{"line":976,"column":2},"end":{"line":978,"column":3}},"407":{"start":{"line":977,"column":4},"end":{"line":977,"column":26}},"408":{"start":{"line":982,"column":2},"end":{"line":984,"column":3}},"409":{"start":{"line":983,"column":4},"end":{"line":983,"column":41}},"410":{"start":{"line":986,"column":2},"end":{"line":986,"column":13}},"411":{"start":{"line":998,"column":0},"end":{"line":1006,"column":2}},"412":{"start":{"line":999,"column":2},"end":{"line":1000,"column":41}},"413":{"start":{"line":1002,"column":2},"end":{"line":1004,"column":3}},"414":{"start":{"line":1003,"column":4},"end":{"line":1003,"column":21}},"415":{"start":{"line":1005,"column":2},"end":{"line":1005,"column":32}},"416":{"start":{"line":1023,"column":0},"end":{"line":1025,"column":2}},"417":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":36}},"418":{"start":{"line":1040,"column":0},"end":{"line":1042,"column":2}},"419":{"start":{"line":1041,"column":2},"end":{"line":1041,"column":34}},"420":{"start":{"line":1059,"column":0},"end":{"line":1061,"column":2}},"421":{"start":{"line":1060,"column":2},"end":{"line":1060,"column":36}},"422":{"start":{"line":1070,"column":0},"end":{"line":1080,"column":2}},"423":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":76}},"424":{"start":{"line":1072,"column":2},"end":{"line":1079,"column":9}},"425":{"start":{"line":1073,"column":4},"end":{"line":1073,"column":32}},"426":{"start":{"line":1074,"column":4},"end":{"line":1078,"column":8}},"427":{"start":{"line":1075,"column":6},"end":{"line":1075,"column":69}},"428":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":42}},"429":{"start":{"line":1101,"column":0},"end":{"line":1118,"column":2}},"430":{"start":{"line":1102,"column":2},"end":{"line":1116,"column":3}},"431":{"start":{"line":1103,"column":4},"end":{"line":1105,"column":5}},"432":{"start":{"line":1104,"column":6},"end":{"line":1104,"column":31}},"433":{"start":{"line":1106,"column":4},"end":{"line":1106,"column":40}},"434":{"start":{"line":1107,"column":4},"end":{"line":1107,"column":78}},"435":{"start":{"line":1108,"column":4},"end":{"line":1110,"column":7}},"436":{"start":{"line":1109,"column":6},"end":{"line":1109,"column":39}},"437":{"start":{"line":1111,"column":4},"end":{"line":1115,"column":7}},"438":{"start":{"line":1112,"column":6},"end":{"line":1114,"column":9}},"439":{"start":{"line":1113,"column":8},"end":{"line":1113,"column":61}},"440":{"start":{"line":1117,"column":2},"end":{"line":1117,"column":45}},"441":{"start":{"line":1136,"column":0},"end":{"line":1138,"column":2}},"442":{"start":{"line":1137,"column":2},"end":{"line":1137,"column":55}},"443":{"start":{"line":1154,"column":0},"end":{"line":1156,"column":2}},"444":{"start":{"line":1155,"column":2},"end":{"line":1155,"column":54}},"445":{"start":{"line":1166,"column":0},"end":{"line":1168,"column":2}},"446":{"start":{"line":1167,"column":2},"end":{"line":1167,"column":52}},"447":{"start":{"line":1185,"column":0},"end":{"line":1243,"column":2}},"448":{"start":{"line":1186,"column":2},"end":{"line":1240,"column":3}},"449":{"start":{"line":1187,"column":4},"end":{"line":1189,"column":5}},"450":{"start":{"line":1188,"column":6},"end":{"line":1188,"column":41}},"451":{"start":{"line":1191,"column":4},"end":{"line":1191,"column":47}},"452":{"start":{"line":1192,"column":4},"end":{"line":1192,"column":25}},"453":{"start":{"line":1193,"column":4},"end":{"line":1193,"column":25}},"454":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":12}},"455":{"start":{"line":1196,"column":4},"end":{"line":1199,"column":5}},"456":{"start":{"line":1198,"column":6},"end":{"line":1198,"column":41}},"457":{"start":{"line":1201,"column":4},"end":{"line":1211,"column":5}},"458":{"start":{"line":1202,"column":6},"end":{"line":1202,"column":21}},"459":{"start":{"line":1203,"column":6},"end":{"line":1205,"column":7}},"460":{"start":{"line":1204,"column":8},"end":{"line":1204,"column":17}},"461":{"start":{"line":1206,"column":6},"end":{"line":1208,"column":7}},"462":{"start":{"line":1207,"column":8},"end":{"line":1207,"column":17}},"463":{"start":{"line":1209,"column":6},"end":{"line":1209,"column":43}},"464":{"start":{"line":1210,"column":6},"end":{"line":1210,"column":12}},"465":{"start":{"line":1213,"column":4},"end":{"line":1215,"column":5}},"466":{"start":{"line":1214,"column":6},"end":{"line":1214,"column":18}},"467":{"start":{"line":1217,"column":4},"end":{"line":1219,"column":5}},"468":{"start":{"line":1218,"column":6},"end":{"line":1218,"column":23}},"469":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":21}},"470":{"start":{"line":1222,"column":4},"end":{"line":1222,"column":29}},"471":{"start":{"line":1224,"column":4},"end":{"line":1237,"column":5}},"472":{"start":{"line":1225,"column":6},"end":{"line":1225,"column":21}},"473":{"start":{"line":1226,"column":6},"end":{"line":1228,"column":7}},"474":{"start":{"line":1227,"column":8},"end":{"line":1227,"column":17}},"475":{"start":{"line":1230,"column":6},"end":{"line":1232,"column":7}},"476":{"start":{"line":1231,"column":8},"end":{"line":1231,"column":44}},"477":{"start":{"line":1234,"column":6},"end":{"line":1236,"column":7}},"478":{"start":{"line":1235,"column":8},"end":{"line":1235,"column":25}},"479":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":22}},"480":{"start":{"line":1242,"column":2},"end":{"line":1242,"column":14}},"481":{"start":{"line":1262,"column":0},"end":{"line":1302,"column":2}},"482":{"start":{"line":1263,"column":2},"end":{"line":1299,"column":3}},"483":{"start":{"line":1264,"column":4},"end":{"line":1266,"column":5}},"484":{"start":{"line":1265,"column":6},"end":{"line":1265,"column":41}},"485":{"start":{"line":1268,"column":4},"end":{"line":1268,"column":47}},"486":{"start":{"line":1269,"column":4},"end":{"line":1269,"column":25}},"487":{"start":{"line":1270,"column":4},"end":{"line":1270,"column":25}},"488":{"start":{"line":1271,"column":4},"end":{"line":1271,"column":12}},"489":{"start":{"line":1273,"column":4},"end":{"line":1276,"column":5}},"490":{"start":{"line":1275,"column":6},"end":{"line":1275,"column":41}},"491":{"start":{"line":1278,"column":4},"end":{"line":1288,"column":5}},"492":{"start":{"line":1279,"column":6},"end":{"line":1279,"column":21}},"493":{"start":{"line":1280,"column":6},"end":{"line":1282,"column":7}},"494":{"start":{"line":1281,"column":8},"end":{"line":1281,"column":17}},"495":{"start":{"line":1283,"column":6},"end":{"line":1285,"column":7}},"496":{"start":{"line":1284,"column":8},"end":{"line":1284,"column":17}},"497":{"start":{"line":1286,"column":6},"end":{"line":1286,"column":43}},"498":{"start":{"line":1287,"column":6},"end":{"line":1287,"column":12}},"499":{"start":{"line":1290,"column":4},"end":{"line":1292,"column":5}},"500":{"start":{"line":1291,"column":6},"end":{"line":1291,"column":18}},"501":{"start":{"line":1294,"column":4},"end":{"line":1296,"column":5}},"502":{"start":{"line":1295,"column":6},"end":{"line":1295,"column":23}},"503":{"start":{"line":1298,"column":4},"end":{"line":1298,"column":22}},"504":{"start":{"line":1301,"column":2},"end":{"line":1301,"column":14}},"505":{"start":{"line":1324,"column":0},"end":{"line":1331,"column":2}},"506":{"start":{"line":1325,"column":2},"end":{"line":1328,"column":3}},"507":{"start":{"line":1326,"column":4},"end":{"line":1326,"column":23}},"508":{"start":{"line":1327,"column":4},"end":{"line":1327,"column":19}},"509":{"start":{"line":1330,"column":2},"end":{"line":1330,"column":46}},"510":{"start":{"line":1337,"column":0},"end":{"line":1398,"column":1}},"511":{"start":{"line":1338,"column":2},"end":{"line":1338,"column":8}},"512":{"start":{"line":1341,"column":2},"end":{"line":1350,"column":5}},"513":{"start":{"line":1342,"column":4},"end":{"line":1344,"column":5}},"514":{"start":{"line":1343,"column":6},"end":{"line":1343,"column":19}},"515":{"start":{"line":1345,"column":4},"end":{"line":1345,"column":34}},"516":{"start":{"line":1346,"column":4},"end":{"line":1348,"column":5}},"517":{"start":{"line":1347,"column":6},"end":{"line":1347,"column":47}},"518":{"start":{"line":1349,"column":4},"end":{"line":1349,"column":16}},"519":{"start":{"line":1352,"column":2},"end":{"line":1352,"column":69}},"520":{"start":{"line":1353,"column":2},"end":{"line":1353,"column":71}},"521":{"start":{"line":1354,"column":2},"end":{"line":1354,"column":72}},"522":{"start":{"line":1356,"column":2},"end":{"line":1356,"column":39}},"523":{"start":{"line":1357,"column":2},"end":{"line":1357,"column":13}},"524":{"start":{"line":1358,"column":2},"end":{"line":1358,"column":27}},"525":{"start":{"line":1359,"column":2},"end":{"line":1366,"column":3}},"526":{"start":{"line":1360,"column":4},"end":{"line":1360,"column":24}},"527":{"start":{"line":1361,"column":4},"end":{"line":1365,"column":5}},"528":{"start":{"line":1364,"column":6},"end":{"line":1364,"column":35}},"529":{"start":{"line":1370,"column":2},"end":{"line":1379,"column":3}},"530":{"start":{"line":1371,"column":4},"end":{"line":1371,"column":24}},"531":{"start":{"line":1372,"column":4},"end":{"line":1372,"column":33}},"532":{"start":{"line":1373,"column":4},"end":{"line":1378,"column":5}},"533":{"start":{"line":1374,"column":6},"end":{"line":1374,"column":35}},"534":{"start":{"line":1375,"column":6},"end":{"line":1377,"column":7}},"535":{"start":{"line":1376,"column":8},"end":{"line":1376,"column":35}},"536":{"start":{"line":1381,"column":2},"end":{"line":1381,"column":44}},"537":{"start":{"line":1382,"column":2},"end":{"line":1395,"column":3}},"538":{"start":{"line":1383,"column":4},"end":{"line":1383,"column":31}},"539":{"start":{"line":1384,"column":4},"end":{"line":1394,"column":5}},"540":{"start":{"line":1385,"column":6},"end":{"line":1385,"column":41}},"541":{"start":{"line":1386,"column":6},"end":{"line":1388,"column":7}},"542":{"start":{"line":1387,"column":8},"end":{"line":1387,"column":47}},"543":{"start":{"line":1389,"column":6},"end":{"line":1389,"column":49}},"544":{"start":{"line":1390,"column":6},"end":{"line":1392,"column":9}},"545":{"start":{"line":1391,"column":8},"end":{"line":1391,"column":37}},"546":{"start":{"line":1393,"column":6},"end":{"line":1393,"column":38}},"547":{"start":{"line":1397,"column":2},"end":{"line":1397,"column":15}},"548":{"start":{"line":1404,"column":0},"end":{"line":1482,"column":2}},"549":{"start":{"line":1405,"column":2},"end":{"line":1405,"column":19}},"550":{"start":{"line":1406,"column":2},"end":{"line":1421,"column":4}},"551":{"start":{"line":1407,"column":4},"end":{"line":1407,"column":40}},"552":{"start":{"line":1408,"column":4},"end":{"line":1408,"column":42}},"553":{"start":{"line":1409,"column":4},"end":{"line":1409,"column":34}},"554":{"start":{"line":1410,"column":4},"end":{"line":1410,"column":46}},"555":{"start":{"line":1411,"column":4},"end":{"line":1420,"column":5}},"556":{"start":{"line":1412,"column":6},"end":{"line":1417,"column":7}},"557":{"start":{"line":1414,"column":8},"end":{"line":1416,"column":9}},"558":{"start":{"line":1415,"column":10},"end":{"line":1415,"column":49}},"559":{"start":{"line":1419,"column":6},"end":{"line":1419,"column":17}},"560":{"start":{"line":1424,"column":2},"end":{"line":1424,"column":40}},"561":{"start":{"line":1426,"column":2},"end":{"line":1436,"column":3}},"562":{"start":{"line":1427,"column":4},"end":{"line":1435,"column":7}},"563":{"start":{"line":1428,"column":6},"end":{"line":1428,"column":30}},"564":{"start":{"line":1429,"column":6},"end":{"line":1433,"column":7}},"565":{"start":{"line":1430,"column":8},"end":{"line":1432,"column":11}},"566":{"start":{"line":1431,"column":10},"end":{"line":1431,"column":26}},"567":{"start":{"line":1434,"column":6},"end":{"line":1434,"column":17}},"568":{"start":{"line":1438,"column":2},"end":{"line":1439,"column":16}},"569":{"start":{"line":1441,"column":2},"end":{"line":1449,"column":4}},"570":{"start":{"line":1442,"column":4},"end":{"line":1442,"column":28}},"571":{"start":{"line":1443,"column":4},"end":{"line":1447,"column":5}},"572":{"start":{"line":1444,"column":6},"end":{"line":1446,"column":9}},"573":{"start":{"line":1445,"column":8},"end":{"line":1445,"column":24}},"574":{"start":{"line":1448,"column":4},"end":{"line":1448,"column":15}},"575":{"start":{"line":1451,"column":2},"end":{"line":1479,"column":4}},"576":{"start":{"line":1452,"column":4},"end":{"line":1454,"column":5}},"577":{"start":{"line":1453,"column":6},"end":{"line":1453,"column":13}},"578":{"start":{"line":1456,"column":4},"end":{"line":1456,"column":28}},"579":{"start":{"line":1457,"column":4},"end":{"line":1457,"column":12}},"580":{"start":{"line":1459,"column":4},"end":{"line":1478,"column":7}},"581":{"start":{"line":1460,"column":6},"end":{"line":1460,"column":38}},"582":{"start":{"line":1461,"column":6},"end":{"line":1463,"column":7}},"583":{"start":{"line":1462,"column":8},"end":{"line":1462,"column":37}},"584":{"start":{"line":1466,"column":6},"end":{"line":1469,"column":7}},"585":{"start":{"line":1467,"column":8},"end":{"line":1467,"column":30}},"586":{"start":{"line":1468,"column":8},"end":{"line":1468,"column":15}},"587":{"start":{"line":1471,"column":6},"end":{"line":1471,"column":37}},"588":{"start":{"line":1472,"column":6},"end":{"line":1477,"column":16}},"589":{"start":{"line":1473,"column":8},"end":{"line":1475,"column":9}},"590":{"start":{"line":1474,"column":10},"end":{"line":1474,"column":55}},"591":{"start":{"line":1476,"column":8},"end":{"line":1476,"column":30}},"592":{"start":{"line":1481,"column":2},"end":{"line":1481,"column":30}},"593":{"start":{"line":1505,"column":0},"end":{"line":1564,"column":2}},"594":{"start":{"line":1506,"column":2},"end":{"line":1506,"column":19}},"595":{"start":{"line":1508,"column":2},"end":{"line":1510,"column":3}},"596":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":49}},"597":{"start":{"line":1513,"column":2},"end":{"line":1513,"column":40}},"598":{"start":{"line":1515,"column":2},"end":{"line":1523,"column":3}},"599":{"start":{"line":1516,"column":4},"end":{"line":1516,"column":17}},"600":{"start":{"line":1517,"column":4},"end":{"line":1521,"column":5}},"601":{"start":{"line":1518,"column":6},"end":{"line":1520,"column":7}},"602":{"start":{"line":1519,"column":8},"end":{"line":1519,"column":27}},"603":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":16}},"604":{"start":{"line":1525,"column":2},"end":{"line":1525,"column":22}},"605":{"start":{"line":1527,"column":2},"end":{"line":1547,"column":5}},"606":{"start":{"line":1528,"column":4},"end":{"line":1530,"column":5}},"607":{"start":{"line":1529,"column":6},"end":{"line":1529,"column":13}},"608":{"start":{"line":1532,"column":4},"end":{"line":1532,"column":28}},"609":{"start":{"line":1534,"column":4},"end":{"line":1534,"column":36}},"610":{"start":{"line":1535,"column":4},"end":{"line":1537,"column":5}},"611":{"start":{"line":1536,"column":6},"end":{"line":1536,"column":13}},"612":{"start":{"line":1538,"column":4},"end":{"line":1540,"column":5}},"613":{"start":{"line":1539,"column":6},"end":{"line":1539,"column":13}},"614":{"start":{"line":1542,"column":4},"end":{"line":1542,"column":35}},"615":{"start":{"line":1543,"column":4},"end":{"line":1543,"column":43}},"616":{"start":{"line":1544,"column":4},"end":{"line":1546,"column":5}},"617":{"start":{"line":1545,"column":6},"end":{"line":1545,"column":51}},"618":{"start":{"line":1549,"column":2},"end":{"line":1549,"column":38}},"619":{"start":{"line":1550,"column":2},"end":{"line":1550,"column":40}},"620":{"start":{"line":1551,"column":2},"end":{"line":1551,"column":32}},"621":{"start":{"line":1552,"column":2},"end":{"line":1552,"column":44}},"622":{"start":{"line":1554,"column":2},"end":{"line":1561,"column":3}},"623":{"start":{"line":1555,"column":4},"end":{"line":1560,"column":5}},"624":{"start":{"line":1557,"column":6},"end":{"line":1559,"column":7}},"625":{"start":{"line":1558,"column":8},"end":{"line":1558,"column":47}},"626":{"start":{"line":1563,"column":2},"end":{"line":1563,"column":13}},"627":{"start":{"line":1597,"column":0},"end":{"line":1621,"column":2}},"628":{"start":{"line":1598,"column":2},"end":{"line":1600,"column":3}},"629":{"start":{"line":1599,"column":4},"end":{"line":1599,"column":57}},"630":{"start":{"line":1602,"column":2},"end":{"line":1604,"column":3}},"631":{"start":{"line":1603,"column":4},"end":{"line":1603,"column":11}},"632":{"start":{"line":1606,"column":2},"end":{"line":1613,"column":3}},"633":{"start":{"line":1607,"column":4},"end":{"line":1612,"column":7}},"634":{"start":{"line":1615,"column":2},"end":{"line":1617,"column":3}},"635":{"start":{"line":1616,"column":4},"end":{"line":1616,"column":36}},"636":{"start":{"line":1619,"column":2},"end":{"line":1619,"column":46}},"637":{"start":{"line":1620,"column":2},"end":{"line":1620,"column":34}},"638":{"start":{"line":1632,"column":0},"end":{"line":1641,"column":2}},"639":{"start":{"line":1633,"column":2},"end":{"line":1635,"column":3}},"640":{"start":{"line":1634,"column":4},"end":{"line":1634,"column":11}},"641":{"start":{"line":1637,"column":2},"end":{"line":1637,"column":47}},"642":{"start":{"line":1638,"column":2},"end":{"line":1640,"column":3}},"643":{"start":{"line":1639,"column":4},"end":{"line":1639,"column":36}},"644":{"start":{"line":1652,"column":0},"end":{"line":1654,"column":2}},"645":{"start":{"line":1653,"column":2},"end":{"line":1653,"column":77}},"646":{"start":{"line":1665,"column":0},"end":{"line":1706,"column":2}},"647":{"start":{"line":1666,"column":2},"end":{"line":1666,"column":19}},"648":{"start":{"line":1667,"column":2},"end":{"line":1667,"column":70}},"649":{"start":{"line":1669,"column":2},"end":{"line":1685,"column":5}},"650":{"start":{"line":1671,"column":4},"end":{"line":1671,"column":29}},"651":{"start":{"line":1674,"column":4},"end":{"line":1674,"column":84}},"652":{"start":{"line":1677,"column":4},"end":{"line":1677,"column":25}},"653":{"start":{"line":1678,"column":4},"end":{"line":1684,"column":5}},"654":{"start":{"line":1679,"column":6},"end":{"line":1679,"column":25}},"655":{"start":{"line":1680,"column":6},"end":{"line":1682,"column":7}},"656":{"start":{"line":1681,"column":8},"end":{"line":1681,"column":17}},"657":{"start":{"line":1683,"column":6},"end":{"line":1683,"column":21}},"658":{"start":{"line":1688,"column":2},"end":{"line":1693,"column":5}},"659":{"start":{"line":1689,"column":4},"end":{"line":1689,"column":26}},"660":{"start":{"line":1690,"column":4},"end":{"line":1692,"column":5}},"661":{"start":{"line":1691,"column":6},"end":{"line":1691,"column":25}},"662":{"start":{"line":1696,"column":2},"end":{"line":1696,"column":39}},"663":{"start":{"line":1697,"column":2},"end":{"line":1697,"column":40}},"664":{"start":{"line":1698,"column":2},"end":{"line":1698,"column":39}},"665":{"start":{"line":1699,"column":2},"end":{"line":1699,"column":26}},"666":{"start":{"line":1700,"column":2},"end":{"line":1700,"column":15}},"667":{"start":{"line":1701,"column":2},"end":{"line":1703,"column":5}},"668":{"start":{"line":1702,"column":4},"end":{"line":1702,"column":40}},"669":{"start":{"line":1705,"column":2},"end":{"line":1705,"column":14}},"670":{"start":{"line":1716,"column":0},"end":{"line":1772,"column":2}},"671":{"start":{"line":1717,"column":2},"end":{"line":1717,"column":19}},"672":{"start":{"line":1719,"column":2},"end":{"line":1725,"column":5}},"673":{"start":{"line":1720,"column":4},"end":{"line":1724,"column":6}},"674":{"start":{"line":1729,"column":2},"end":{"line":1738,"column":6}},"675":{"start":{"line":1730,"column":4},"end":{"line":1732,"column":5}},"676":{"start":{"line":1731,"column":6},"end":{"line":1731,"column":13}},"677":{"start":{"line":1733,"column":4},"end":{"line":1737,"column":6}},"678":{"start":{"line":1741,"column":2},"end":{"line":1743,"column":5}},"679":{"start":{"line":1742,"column":4},"end":{"line":1742,"column":62}},"680":{"start":{"line":1746,"column":2},"end":{"line":1748,"column":10}},"681":{"start":{"line":1750,"column":2},"end":{"line":1768,"column":5}},"682":{"start":{"line":1751,"column":4},"end":{"line":1753,"column":5}},"683":{"start":{"line":1752,"column":6},"end":{"line":1752,"column":13}},"684":{"start":{"line":1754,"column":4},"end":{"line":1767,"column":5}},"685":{"start":{"line":1755,"column":6},"end":{"line":1755,"column":33}},"686":{"start":{"line":1756,"column":6},"end":{"line":1756,"column":25}},"687":{"start":{"line":1757,"column":6},"end":{"line":1757,"column":17}},"688":{"start":{"line":1760,"column":6},"end":{"line":1766,"column":7}},"689":{"start":{"line":1764,"column":8},"end":{"line":1764,"column":32}},"690":{"start":{"line":1765,"column":8},"end":{"line":1765,"column":44}},"691":{"start":{"line":1770,"column":2},"end":{"line":1770,"column":24}},"692":{"start":{"line":1771,"column":2},"end":{"line":1771,"column":17}},"693":{"start":{"line":1778,"column":0},"end":{"line":1799,"column":1}},"694":{"start":{"line":1779,"column":2},"end":{"line":1782,"column":10}},"695":{"start":{"line":1784,"column":2},"end":{"line":1798,"column":3}},"696":{"start":{"line":1785,"column":4},"end":{"line":1785,"column":18}},"697":{"start":{"line":1786,"column":4},"end":{"line":1786,"column":21}},"698":{"start":{"line":1788,"column":4},"end":{"line":1797,"column":19}},"699":{"start":{"line":1803,"column":0},"end":{"line":1812,"column":1}},"700":{"start":{"line":1804,"column":2},"end":{"line":1804,"column":18}},"701":{"start":{"line":1806,"column":2},"end":{"line":1809,"column":5}},"702":{"start":{"line":1807,"column":4},"end":{"line":1807,"column":63}},"703":{"start":{"line":1808,"column":4},"end":{"line":1808,"column":34}},"704":{"start":{"line":1811,"column":2},"end":{"line":1811,"column":16}},"705":{"start":{"line":1818,"column":0},"end":{"line":1905,"column":1}},"706":{"start":{"line":1819,"column":2},"end":{"line":1819,"column":49}},"707":{"start":{"line":1820,"column":2},"end":{"line":1820,"column":24}},"708":{"start":{"line":1822,"column":2},"end":{"line":1904,"column":3}},"709":{"start":{"line":1823,"column":4},"end":{"line":1892,"column":7}},"710":{"start":{"line":1827,"column":8},"end":{"line":1827,"column":25}},"711":{"start":{"line":1828,"column":8},"end":{"line":1830,"column":9}},"712":{"start":{"line":1829,"column":10},"end":{"line":1829,"column":32}},"713":{"start":{"line":1832,"column":8},"end":{"line":1882,"column":9}},"714":{"start":{"line":1833,"column":10},"end":{"line":1833,"column":99}},"715":{"start":{"line":1836,"column":10},"end":{"line":1838,"column":11}},"716":{"start":{"line":1837,"column":12},"end":{"line":1837,"column":36}},"717":{"start":{"line":1842,"column":10},"end":{"line":1843,"column":32}},"718":{"start":{"line":1845,"column":10},"end":{"line":1853,"column":11}},"719":{"start":{"line":1847,"column":12},"end":{"line":1852,"column":15}},"720":{"start":{"line":1855,"column":10},"end":{"line":1862,"column":13}},"721":{"start":{"line":1860,"column":14},"end":{"line":1860,"column":70}},"722":{"start":{"line":1864,"column":10},"end":{"line":1871,"column":13}},"723":{"start":{"line":1869,"column":14},"end":{"line":1869,"column":37}},"724":{"start":{"line":1873,"column":10},"end":{"line":1878,"column":13}},"725":{"start":{"line":1880,"column":10},"end":{"line":1880,"column":51}},"726":{"start":{"line":1881,"column":10},"end":{"line":1881,"column":42}},"727":{"start":{"line":1884,"column":8},"end":{"line":1884,"column":38}},"728":{"start":{"line":1887,"column":8},"end":{"line":1889,"column":9}},"729":{"start":{"line":1888,"column":10},"end":{"line":1888,"column":47}},"730":{"start":{"line":1890,"column":8},"end":{"line":1890,"column":53}},"731":{"start":{"line":1894,"column":4},"end":{"line":1903,"column":7}},"732":{"start":{"line":1898,"column":8},"end":{"line":1898,"column":59}},"733":{"start":{"line":1901,"column":8},"end":{"line":1901,"column":62}},"734":{"start":{"line":1916,"column":0},"end":{"line":1919,"column":2}},"735":{"start":{"line":1917,"column":2},"end":{"line":1917,"column":56}},"736":{"start":{"line":1918,"column":2},"end":{"line":1918,"column":23}},"737":{"start":{"line":1930,"column":0},"end":{"line":1946,"column":2}},"738":{"start":{"line":1931,"column":2},"end":{"line":1931,"column":70}},"739":{"start":{"line":1934,"column":2},"end":{"line":1945,"column":5}},"740":{"start":{"line":1936,"column":4},"end":{"line":1936,"column":28}},"741":{"start":{"line":1939,"column":4},"end":{"line":1939,"column":84}},"742":{"start":{"line":1941,"column":4},"end":{"line":1941,"column":30}},"743":{"start":{"line":1944,"column":4},"end":{"line":1944,"column":15}},"744":{"start":{"line":1957,"column":0},"end":{"line":1992,"column":2}},"745":{"start":{"line":1958,"column":2},"end":{"line":1958,"column":70}},"746":{"start":{"line":1959,"column":2},"end":{"line":1959,"column":53}},"747":{"start":{"line":1961,"column":2},"end":{"line":1987,"column":3}},"748":{"start":{"line":1962,"column":4},"end":{"line":1962,"column":25}},"749":{"start":{"line":1964,"column":4},"end":{"line":1966,"column":5}},"750":{"start":{"line":1965,"column":6},"end":{"line":1965,"column":21}},"751":{"start":{"line":1967,"column":4},"end":{"line":1970,"column":5}},"752":{"start":{"line":1968,"column":6},"end":{"line":1968,"column":75}},"753":{"start":{"line":1969,"column":6},"end":{"line":1969,"column":21}},"754":{"start":{"line":1971,"column":4},"end":{"line":1985,"column":5}},"755":{"start":{"line":1972,"column":6},"end":{"line":1980,"column":9}},"756":{"start":{"line":1973,"column":8},"end":{"line":1975,"column":9}},"757":{"start":{"line":1974,"column":10},"end":{"line":1974,"column":17}},"758":{"start":{"line":1976,"column":8},"end":{"line":1978,"column":9}},"759":{"start":{"line":1977,"column":10},"end":{"line":1977,"column":25}},"760":{"start":{"line":1979,"column":8},"end":{"line":1979,"column":77}},"761":{"start":{"line":1981,"column":11},"end":{"line":1985,"column":5}},"762":{"start":{"line":1982,"column":6},"end":{"line":1984,"column":7}},"763":{"start":{"line":1983,"column":8},"end":{"line":1983,"column":67}},"764":{"start":{"line":1986,"column":4},"end":{"line":1986,"column":16}},"765":{"start":{"line":1989,"column":2},"end":{"line":1989,"column":73}},"766":{"start":{"line":1991,"column":2},"end":{"line":1991,"column":17}},"767":{"start":{"line":1998,"column":0},"end":{"line":2011,"column":1}},"768":{"start":{"line":1999,"column":2},"end":{"line":1999,"column":45}},"769":{"start":{"line":2000,"column":2},"end":{"line":2002,"column":3}},"770":{"start":{"line":2001,"column":4},"end":{"line":2001,"column":11}},"771":{"start":{"line":2003,"column":2},"end":{"line":2003,"column":11}},"772":{"start":{"line":2005,"column":2},"end":{"line":2010,"column":3}},"773":{"start":{"line":2006,"column":4},"end":{"line":2006,"column":16}},"774":{"start":{"line":2007,"column":4},"end":{"line":2009,"column":5}},"775":{"start":{"line":2008,"column":6},"end":{"line":2008,"column":39}},"776":{"start":{"line":2013,"column":0},"end":{"line":2022,"column":2}},"777":{"start":{"line":2015,"column":2},"end":{"line":2021,"column":3}},"778":{"start":{"line":2016,"column":4},"end":{"line":2016,"column":28}},"779":{"start":{"line":2017,"column":9},"end":{"line":2021,"column":3}},"780":{"start":{"line":2018,"column":4},"end":{"line":2018,"column":40}},"781":{"start":{"line":2019,"column":9},"end":{"line":2021,"column":3}},"782":{"start":{"line":2020,"column":4},"end":{"line":2020,"column":28}},"783":{"start":{"line":2032,"column":0},"end":{"line":2125,"column":2}},"784":{"start":{"line":2033,"column":2},"end":{"line":2038,"column":4}},"785":{"start":{"line":2042,"column":2},"end":{"line":2045,"column":3}},"786":{"start":{"line":2044,"column":4},"end":{"line":2044,"column":36}},"787":{"start":{"line":2049,"column":2},"end":{"line":2064,"column":3}},"788":{"start":{"line":2051,"column":4},"end":{"line":2063,"column":5}},"789":{"start":{"line":2052,"column":6},"end":{"line":2054,"column":11}},"790":{"start":{"line":2055,"column":6},"end":{"line":2055,"column":26}},"791":{"start":{"line":2056,"column":6},"end":{"line":2056,"column":39}},"792":{"start":{"line":2058,"column":6},"end":{"line":2060,"column":11}},"793":{"start":{"line":2061,"column":6},"end":{"line":2061,"column":27}},"794":{"start":{"line":2062,"column":6},"end":{"line":2062,"column":39}},"795":{"start":{"line":2066,"column":2},"end":{"line":2070,"column":3}},"796":{"start":{"line":2067,"column":4},"end":{"line":2069,"column":5}},"797":{"start":{"line":2068,"column":6},"end":{"line":2068,"column":41}},"798":{"start":{"line":2072,"column":2},"end":{"line":2072,"column":79}},"799":{"start":{"line":2076,"column":2},"end":{"line":2076,"column":44}},"800":{"start":{"line":2078,"column":2},"end":{"line":2078,"column":27}},"801":{"start":{"line":2080,"column":2},"end":{"line":2080,"column":44}},"802":{"start":{"line":2082,"column":2},"end":{"line":2089,"column":3}},"803":{"start":{"line":2083,"column":4},"end":{"line":2083,"column":46}},"804":{"start":{"line":2086,"column":4},"end":{"line":2088,"column":5}},"805":{"start":{"line":2087,"column":6},"end":{"line":2087,"column":32}},"806":{"start":{"line":2091,"column":2},"end":{"line":2093,"column":3}},"807":{"start":{"line":2092,"column":4},"end":{"line":2092,"column":49}},"808":{"start":{"line":2095,"column":2},"end":{"line":2097,"column":3}},"809":{"start":{"line":2096,"column":4},"end":{"line":2096,"column":47}},"810":{"start":{"line":2099,"column":2},"end":{"line":2099,"column":36}},"811":{"start":{"line":2106,"column":2},"end":{"line":2115,"column":3}},"812":{"start":{"line":2108,"column":4},"end":{"line":2108,"column":88}},"813":{"start":{"line":2110,"column":4},"end":{"line":2112,"column":5}},"814":{"start":{"line":2111,"column":6},"end":{"line":2111,"column":97}},"815":{"start":{"line":2114,"column":4},"end":{"line":2114,"column":42}},"816":{"start":{"line":2117,"column":2},"end":{"line":2122,"column":3}},"817":{"start":{"line":2118,"column":4},"end":{"line":2118,"column":48}},"818":{"start":{"line":2119,"column":4},"end":{"line":2121,"column":5}},"819":{"start":{"line":2120,"column":6},"end":{"line":2120,"column":20}},"820":{"start":{"line":2124,"column":2},"end":{"line":2124,"column":13}},"821":{"start":{"line":2244,"column":0},"end":{"line":2246,"column":2}},"822":{"start":{"line":2245,"column":2},"end":{"line":2245,"column":33}},"823":{"start":{"line":2255,"column":0},"end":{"line":2281,"column":1}},"824":{"start":{"line":2256,"column":2},"end":{"line":2260,"column":10}},"825":{"start":{"line":2262,"column":2},"end":{"line":2276,"column":3}},"826":{"start":{"line":2263,"column":4},"end":{"line":2263,"column":18}},"827":{"start":{"line":2264,"column":4},"end":{"line":2264,"column":19}},"828":{"start":{"line":2266,"column":4},"end":{"line":2268,"column":5}},"829":{"start":{"line":2267,"column":6},"end":{"line":2267,"column":31}},"830":{"start":{"line":2270,"column":4},"end":{"line":2273,"column":5}},"831":{"start":{"line":2271,"column":6},"end":{"line":2271,"column":22}},"832":{"start":{"line":2272,"column":6},"end":{"line":2272,"column":15}},"833":{"start":{"line":2275,"column":4},"end":{"line":2275,"column":19}},"834":{"start":{"line":2278,"column":2},"end":{"line":2280,"column":18}},"835":{"start":{"line":2292,"column":0},"end":{"line":2332,"column":1}},"836":{"start":{"line":2293,"column":2},"end":{"line":2293,"column":27}},"837":{"start":{"line":2294,"column":2},"end":{"line":2294,"column":40}},"838":{"start":{"line":2295,"column":2},"end":{"line":2295,"column":23}},"839":{"start":{"line":2296,"column":2},"end":{"line":2296,"column":11}},"840":{"start":{"line":2297,"column":2},"end":{"line":2297,"column":22}},"841":{"start":{"line":2298,"column":2},"end":{"line":2298,"column":8}},"842":{"start":{"line":2300,"column":2},"end":{"line":2302,"column":3}},"843":{"start":{"line":2301,"column":4},"end":{"line":2301,"column":16}},"844":{"start":{"line":2304,"column":2},"end":{"line":2329,"column":3}},"845":{"start":{"line":2305,"column":4},"end":{"line":2305,"column":20}},"846":{"start":{"line":2307,"column":4},"end":{"line":2307,"column":32}},"847":{"start":{"line":2308,"column":4},"end":{"line":2308,"column":28}},"848":{"start":{"line":2309,"column":4},"end":{"line":2309,"column":24}},"849":{"start":{"line":2310,"column":4},"end":{"line":2310,"column":22}},"850":{"start":{"line":2311,"column":4},"end":{"line":2311,"column":13}},"851":{"start":{"line":2312,"column":4},"end":{"line":2312,"column":20}},"852":{"start":{"line":2314,"column":4},"end":{"line":2328,"column":5}},"853":{"start":{"line":2315,"column":6},"end":{"line":2315,"column":23}},"854":{"start":{"line":2316,"column":6},"end":{"line":2316,"column":20}},"855":{"start":{"line":2317,"column":6},"end":{"line":2326,"column":7}},"856":{"start":{"line":2318,"column":8},"end":{"line":2318,"column":54}},"857":{"start":{"line":2319,"column":13},"end":{"line":2326,"column":7}},"858":{"start":{"line":2320,"column":8},"end":{"line":2322,"column":9}},"859":{"start":{"line":2321,"column":10},"end":{"line":2321,"column":27}},"860":{"start":{"line":2323,"column":8},"end":{"line":2323,"column":14}},"861":{"start":{"line":2325,"column":8},"end":{"line":2325,"column":53}},"862":{"start":{"line":2327,"column":6},"end":{"line":2327,"column":14}},"863":{"start":{"line":2331,"column":2},"end":{"line":2331,"column":14}},"864":{"start":{"line":2349,"column":0},"end":{"line":2351,"column":2}},"865":{"start":{"line":2350,"column":2},"end":{"line":2350,"column":39}},"866":{"start":{"line":2359,"column":0},"end":{"line":2369,"column":2}},"867":{"start":{"line":2360,"column":2},"end":{"line":2361,"column":60}},"868":{"start":{"line":2362,"column":2},"end":{"line":2362,"column":11}},"869":{"start":{"line":2363,"column":2},"end":{"line":2367,"column":3}},"870":{"start":{"line":2364,"column":4},"end":{"line":2364,"column":19}},"871":{"start":{"line":2365,"column":4},"end":{"line":2365,"column":26}},"872":{"start":{"line":2366,"column":4},"end":{"line":2366,"column":31}},"873":{"start":{"line":2368,"column":2},"end":{"line":2368,"column":29}},"874":{"start":{"line":2378,"column":0},"end":{"line":2380,"column":2}},"875":{"start":{"line":2379,"column":2},"end":{"line":2379,"column":33}},"876":{"start":{"line":2394,"column":0},"end":{"line":2407,"column":2}},"877":{"start":{"line":2395,"column":2},"end":{"line":2397,"column":3}},"878":{"start":{"line":2396,"column":4},"end":{"line":2396,"column":17}},"879":{"start":{"line":2399,"column":2},"end":{"line":2399,"column":28}},"880":{"start":{"line":2400,"column":2},"end":{"line":2400,"column":45}},"881":{"start":{"line":2401,"column":2},"end":{"line":2403,"column":3}},"882":{"start":{"line":2402,"column":4},"end":{"line":2402,"column":32}},"883":{"start":{"line":2404,"column":2},"end":{"line":2406,"column":22}},"884":{"start":{"line":2452,"column":0},"end":{"line":2482,"column":2}},"885":{"start":{"line":2453,"column":2},"end":{"line":2455,"column":3}},"886":{"start":{"line":2454,"column":4},"end":{"line":2454,"column":16}},"887":{"start":{"line":2457,"column":2},"end":{"line":2457,"column":58}},"888":{"start":{"line":2458,"column":2},"end":{"line":2458,"column":35}},"889":{"start":{"line":2459,"column":2},"end":{"line":2459,"column":9}},"890":{"start":{"line":2461,"column":2},"end":{"line":2463,"column":3}},"891":{"start":{"line":2462,"column":4},"end":{"line":2462,"column":20}},"892":{"start":{"line":2466,"column":2},"end":{"line":2472,"column":3}},"893":{"start":{"line":2468,"column":4},"end":{"line":2468,"column":47}},"894":{"start":{"line":2469,"column":4},"end":{"line":2471,"column":5}},"895":{"start":{"line":2470,"column":6},"end":{"line":2470,"column":32}},"896":{"start":{"line":2474,"column":2},"end":{"line":2479,"column":3}},"897":{"start":{"line":2475,"column":4},"end":{"line":2475,"column":39}},"898":{"start":{"line":2476,"column":4},"end":{"line":2476,"column":34}},"899":{"start":{"line":2477,"column":4},"end":{"line":2477,"column":29}},"900":{"start":{"line":2478,"column":4},"end":{"line":2478,"column":47}},"901":{"start":{"line":2481,"column":2},"end":{"line":2481,"column":14}},"902":{"start":{"line":2510,"column":0},"end":{"line":2522,"column":2}},"903":{"start":{"line":2511,"column":2},"end":{"line":2511,"column":38}},"904":{"start":{"line":2512,"column":2},"end":{"line":2512,"column":19}},"905":{"start":{"line":2513,"column":2},"end":{"line":2521,"column":5}},"906":{"start":{"line":2514,"column":4},"end":{"line":2520,"column":7}},"907":{"start":{"line":2515,"column":6},"end":{"line":2519,"column":7}},"908":{"start":{"line":2516,"column":8},"end":{"line":2516,"column":22}},"909":{"start":{"line":2518,"column":8},"end":{"line":2518,"column":21}},"910":{"start":{"line":2541,"column":0},"end":{"line":2567,"column":2}},"911":{"start":{"line":2544,"column":2},"end":{"line":2553,"column":3}},"912":{"start":{"line":2545,"column":4},"end":{"line":2547,"column":5}},"913":{"start":{"line":2546,"column":6},"end":{"line":2546,"column":23}},"914":{"start":{"line":2548,"column":4},"end":{"line":2548,"column":37}},"915":{"start":{"line":2549,"column":4},"end":{"line":2551,"column":5}},"916":{"start":{"line":2550,"column":6},"end":{"line":2550,"column":21}},"917":{"start":{"line":2552,"column":4},"end":{"line":2552,"column":21}},"918":{"start":{"line":2557,"column":2},"end":{"line":2562,"column":3}},"919":{"start":{"line":2558,"column":4},"end":{"line":2560,"column":5}},"920":{"start":{"line":2559,"column":6},"end":{"line":2559,"column":23}},"921":{"start":{"line":2561,"column":4},"end":{"line":2561,"column":36}},"922":{"start":{"line":2564,"column":2},"end":{"line":2564,"column":50}},"923":{"start":{"line":2565,"column":2},"end":{"line":2565,"column":60}},"924":{"start":{"line":2566,"column":2},"end":{"line":2566,"column":13}},"925":{"start":{"line":2588,"column":0},"end":{"line":2596,"column":2}},"926":{"start":{"line":2589,"column":2},"end":{"line":2589,"column":42}},"927":{"start":{"line":2590,"column":2},"end":{"line":2592,"column":3}},"928":{"start":{"line":2591,"column":4},"end":{"line":2591,"column":11}},"929":{"start":{"line":2593,"column":2},"end":{"line":2593,"column":34}},"930":{"start":{"line":2594,"column":2},"end":{"line":2594,"column":31}},"931":{"start":{"line":2595,"column":2},"end":{"line":2595,"column":14}},"932":{"start":{"line":2609,"column":0},"end":{"line":2612,"column":2}},"933":{"start":{"line":2611,"column":2},"end":{"line":2611,"column":20}},"934":{"start":{"line":2618,"column":0},"end":{"line":2618,"column":43}},"935":{"start":{"line":2619,"column":0},"end":{"line":2619,"column":36}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":26},"end":{"line":51,"column":40}},{"start":{"line":51,"column":44},"end":{"line":51,"column":65}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"4":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"7":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":28}},{"start":{"line":75,"column":32},"end":{"line":75,"column":35}}]},"8":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"10":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":6},"end":{"line":169,"column":12}},{"start":{"line":169,"column":16},"end":{"line":169,"column":70}}]},"11":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"12":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":8},"end":{"line":173,"column":16}},{"start":{"line":173,"column":20},"end":{"line":173,"column":37}}]},"13":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"14":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":12},"end":{"line":177,"column":30}},{"start":{"line":178,"column":13},"end":{"line":178,"column":30}},{"start":{"line":178,"column":34},"end":{"line":178,"column":70}}]},"15":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"16":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":23}},{"start":{"line":191,"column":27},"end":{"line":191,"column":33}}]},"17":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"18":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"19":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":6}},{"start":{"line":210,"column":6},"end":{"line":210,"column":6}}]},"20":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":10},"end":{"line":210,"column":13}},{"start":{"line":210,"column":17},"end":{"line":210,"column":29}}]},"21":{"line":228,"type":"cond-expr","locations":[{"start":{"line":228,"column":36},"end":{"line":228,"column":38}},{"start":{"line":228,"column":41},"end":{"line":228,"column":44}}]},"22":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"23":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":232,"column":8}},{"start":{"line":232,"column":8},"end":{"line":232,"column":8}}]},"24":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":13},"end":{"line":235,"column":13}},{"start":{"line":235,"column":13},"end":{"line":235,"column":13}}]},"25":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":17},"end":{"line":235,"column":34}},{"start":{"line":235,"column":38},"end":{"line":235,"column":44}},{"start":{"line":235,"column":48},"end":{"line":235,"column":57}}]},"26":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"27":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":15},"end":{"line":238,"column":15}},{"start":{"line":238,"column":15},"end":{"line":238,"column":15}}]},"28":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":6}},{"start":{"line":243,"column":6},"end":{"line":243,"column":6}}]},"29":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":8},"end":{"line":244,"column":8}},{"start":{"line":244,"column":8},"end":{"line":244,"column":8}}]},"30":{"line":244,"type":"binary-expr","locations":[{"start":{"line":244,"column":12},"end":{"line":244,"column":18}},{"start":{"line":244,"column":22},"end":{"line":244,"column":38}}]},"31":{"line":245,"type":"if","locations":[{"start":{"line":245,"column":10},"end":{"line":245,"column":10}},{"start":{"line":245,"column":10},"end":{"line":245,"column":10}}]},"32":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":12},"end":{"line":247,"column":12}},{"start":{"line":247,"column":12},"end":{"line":247,"column":12}}]},"33":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":12},"end":{"line":252,"column":12}},{"start":{"line":252,"column":12},"end":{"line":252,"column":12}}]},"34":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":17},"end":{"line":256,"column":17}},{"start":{"line":256,"column":17},"end":{"line":256,"column":17}}]},"35":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":12},"end":{"line":259,"column":12}},{"start":{"line":259,"column":12},"end":{"line":259,"column":12}}]},"36":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":10},"end":{"line":266,"column":10}},{"start":{"line":266,"column":10},"end":{"line":266,"column":10}}]},"37":{"line":272,"type":"binary-expr","locations":[{"start":{"line":272,"column":15},"end":{"line":272,"column":26}},{"start":{"line":272,"column":31},"end":{"line":272,"column":47}}]},"38":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"39":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":2},"end":{"line":317,"column":2}},{"start":{"line":317,"column":2},"end":{"line":317,"column":2}}]},"40":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":22}},{"start":{"line":317,"column":26},"end":{"line":317,"column":47}},{"start":{"line":318,"column":4},"end":{"line":318,"column":8}},{"start":{"line":318,"column":12},"end":{"line":318,"column":26}},{"start":{"line":318,"column":30},"end":{"line":318,"column":51}}]},"41":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":6}},{"start":{"line":322,"column":6},"end":{"line":322,"column":6}}]},"42":{"line":336,"type":"if","locations":[{"start":{"line":336,"column":2},"end":{"line":336,"column":2}},{"start":{"line":336,"column":2},"end":{"line":336,"column":2}}]},"43":{"line":352,"type":"binary-expr","locations":[{"start":{"line":352,"column":11},"end":{"line":352,"column":17}},{"start":{"line":352,"column":21},"end":{"line":352,"column":23}}]},"44":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"45":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"46":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":40}},{"start":{"line":379,"column":44},"end":{"line":379,"column":66}}]},"47":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":4},"end":{"line":383,"column":4}},{"start":{"line":383,"column":4},"end":{"line":383,"column":4}}]},"48":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":8},"end":{"line":383,"column":15}},{"start":{"line":383,"column":19},"end":{"line":383,"column":41}},{"start":{"line":384,"column":9},"end":{"line":384,"column":28}},{"start":{"line":384,"column":32},"end":{"line":384,"column":86}}]},"49":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":6},"end":{"line":386,"column":6}},{"start":{"line":386,"column":6},"end":{"line":386,"column":6}}]},"50":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":11},"end":{"line":390,"column":11}},{"start":{"line":390,"column":11},"end":{"line":390,"column":11}}]},"51":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":6},"end":{"line":393,"column":6}},{"start":{"line":393,"column":6},"end":{"line":393,"column":6}}]},"52":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":13},"end":{"line":395,"column":13}},{"start":{"line":395,"column":13},"end":{"line":395,"column":13}}]},"53":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":8},"end":{"line":396,"column":8}},{"start":{"line":396,"column":8},"end":{"line":396,"column":8}}]},"54":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":6},"end":{"line":412,"column":6}},{"start":{"line":412,"column":6},"end":{"line":412,"column":6}}]},"55":{"line":433,"type":"binary-expr","locations":[{"start":{"line":433,"column":12},"end":{"line":433,"column":40}},{"start":{"line":433,"column":44},"end":{"line":433,"column":72}}]},"56":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":2},"end":{"line":434,"column":2}},{"start":{"line":434,"column":2},"end":{"line":434,"column":2}}]},"57":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":8},"end":{"line":434,"column":11}},{"start":{"line":434,"column":15},"end":{"line":434,"column":66}}]},"58":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":4},"end":{"line":445,"column":4}},{"start":{"line":445,"column":4},"end":{"line":445,"column":4}}]},"59":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":11},"end":{"line":447,"column":11}},{"start":{"line":447,"column":11},"end":{"line":447,"column":11}}]},"60":{"line":447,"type":"binary-expr","locations":[{"start":{"line":447,"column":15},"end":{"line":447,"column":27}},{"start":{"line":447,"column":31},"end":{"line":447,"column":48}},{"start":{"line":447,"column":52},"end":{"line":447,"column":63}},{"start":{"line":449,"column":9},"end":{"line":449,"column":25}},{"start":{"line":449,"column":29},"end":{"line":449,"column":78}}]},"61":{"line":462,"type":"if","locations":[{"start":{"line":462,"column":2},"end":{"line":462,"column":2}},{"start":{"line":462,"column":2},"end":{"line":462,"column":2}}]},"62":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":6},"end":{"line":462,"column":17}},{"start":{"line":462,"column":21},"end":{"line":462,"column":33}}]},"63":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":527,"column":2}},{"start":{"line":527,"column":2},"end":{"line":527,"column":2}}]},"64":{"line":527,"type":"binary-expr","locations":[{"start":{"line":527,"column":6},"end":{"line":527,"column":10}},{"start":{"line":527,"column":14},"end":{"line":527,"column":66}}]},"65":{"line":532,"type":"binary-expr","locations":[{"start":{"line":532,"column":14},"end":{"line":532,"column":21}},{"start":{"line":532,"column":25},"end":{"line":532,"column":38}}]},"66":{"line":533,"type":"binary-expr","locations":[{"start":{"line":533,"column":14},"end":{"line":533,"column":18}},{"start":{"line":533,"column":22},"end":{"line":533,"column":35}}]},"67":{"line":537,"type":"cond-expr","locations":[{"start":{"line":538,"column":8},"end":{"line":538,"column":22}},{"start":{"line":539,"column":8},"end":{"line":539,"column":27}}]},"68":{"line":537,"type":"binary-expr","locations":[{"start":{"line":537,"column":15},"end":{"line":537,"column":22}},{"start":{"line":537,"column":26},"end":{"line":537,"column":45}}]},"69":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":2},"end":{"line":541,"column":2}},{"start":{"line":541,"column":2},"end":{"line":541,"column":2}}]},"70":{"line":542,"type":"binary-expr","locations":[{"start":{"line":542,"column":13},"end":{"line":542,"column":32}},{"start":{"line":542,"column":37},"end":{"line":542,"column":61}}]},"71":{"line":546,"type":"if","locations":[{"start":{"line":546,"column":2},"end":{"line":546,"column":2}},{"start":{"line":546,"column":2},"end":{"line":546,"column":2}}]},"72":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":4},"end":{"line":549,"column":4}},{"start":{"line":549,"column":4},"end":{"line":549,"column":4}}]},"73":{"line":549,"type":"binary-expr","locations":[{"start":{"line":549,"column":8},"end":{"line":549,"column":21}},{"start":{"line":549,"column":25},"end":{"line":549,"column":40}}]},"74":{"line":554,"type":"cond-expr","locations":[{"start":{"line":555,"column":12},"end":{"line":555,"column":21}},{"start":{"line":556,"column":12},"end":{"line":556,"column":14}}]},"75":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":6},"end":{"line":558,"column":6}},{"start":{"line":558,"column":6},"end":{"line":558,"column":6}}]},"76":{"line":559,"type":"if","locations":[{"start":{"line":559,"column":8},"end":{"line":559,"column":8}},{"start":{"line":559,"column":8},"end":{"line":559,"column":8}}]},"77":{"line":572,"type":"if","locations":[{"start":{"line":572,"column":6},"end":{"line":572,"column":6}},{"start":{"line":572,"column":6},"end":{"line":572,"column":6}}]},"78":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":10},"end":{"line":572,"column":19}},{"start":{"line":572,"column":23},"end":{"line":572,"column":52}}]},"79":{"line":573,"type":"if","locations":[{"start":{"line":573,"column":8},"end":{"line":573,"column":8}},{"start":{"line":573,"column":8},"end":{"line":573,"column":8}}]},"80":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":6},"end":{"line":579,"column":6}},{"start":{"line":579,"column":6},"end":{"line":579,"column":6}}]},"81":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":4},"end":{"line":598,"column":4}},{"start":{"line":598,"column":4},"end":{"line":598,"column":4}}]},"82":{"line":598,"type":"binary-expr","locations":[{"start":{"line":598,"column":8},"end":{"line":598,"column":26}},{"start":{"line":599,"column":11},"end":{"line":599,"column":31}},{"start":{"line":601,"column":11},"end":{"line":601,"column":36}},{"start":{"line":602,"column":12},"end":{"line":602,"column":34}},{"start":{"line":602,"column":38},"end":{"line":602,"column":95}},{"start":{"line":603,"column":11},"end":{"line":603,"column":33}},{"start":{"line":604,"column":11},"end":{"line":604,"column":30}},{"start":{"line":605,"column":11},"end":{"line":605,"column":59}},{"start":{"line":606,"column":11},"end":{"line":608,"column":48}}]},"83":{"line":606,"type":"binary-expr","locations":[{"start":{"line":606,"column":13},"end":{"line":606,"column":40}},{"start":{"line":607,"column":8},"end":{"line":607,"column":43}},{"start":{"line":608,"column":8},"end":{"line":608,"column":47}}]},"84":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":11},"end":{"line":610,"column":11}},{"start":{"line":610,"column":11},"end":{"line":610,"column":11}}]},"85":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":6},"end":{"line":612,"column":6}},{"start":{"line":612,"column":6},"end":{"line":612,"column":6}}]},"86":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":10},"end":{"line":612,"column":22}},{"start":{"line":612,"column":26},"end":{"line":612,"column":46}},{"start":{"line":613,"column":10},"end":{"line":613,"column":34}}]},"87":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":6},"end":{"line":617,"column":6}},{"start":{"line":617,"column":6},"end":{"line":617,"column":6}}]},"88":{"line":617,"type":"binary-expr","locations":[{"start":{"line":617,"column":10},"end":{"line":617,"column":29}},{"start":{"line":617,"column":33},"end":{"line":617,"column":55}}]},"89":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":8},"end":{"line":620,"column":8}},{"start":{"line":620,"column":8},"end":{"line":620,"column":8}}]},"90":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":12},"end":{"line":620,"column":39}},{"start":{"line":621,"column":12},"end":{"line":621,"column":55}},{"start":{"line":622,"column":12},"end":{"line":622,"column":41}}]},"91":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":13},"end":{"line":626,"column":13}},{"start":{"line":626,"column":13},"end":{"line":626,"column":13}}]},"92":{"line":626,"type":"binary-expr","locations":[{"start":{"line":626,"column":17},"end":{"line":626,"column":38}},{"start":{"line":626,"column":42},"end":{"line":626,"column":71}}]},"93":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":13},"end":{"line":629,"column":13}},{"start":{"line":629,"column":13},"end":{"line":629,"column":13}}]},"94":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":8},"end":{"line":630,"column":8}},{"start":{"line":630,"column":8},"end":{"line":630,"column":8}}]},"95":{"line":636,"type":"if","locations":[{"start":{"line":636,"column":11},"end":{"line":636,"column":11}},{"start":{"line":636,"column":11},"end":{"line":636,"column":11}}]},"96":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":2},"end":{"line":642,"column":2}},{"start":{"line":642,"column":2},"end":{"line":642,"column":2}}]},"97":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":6},"end":{"line":642,"column":27}},{"start":{"line":642,"column":31},"end":{"line":642,"column":34}}]},"98":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":4},"end":{"line":643,"column":4}},{"start":{"line":643,"column":4},"end":{"line":643,"column":4}}]},"99":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":8},"end":{"line":643,"column":27}},{"start":{"line":644,"column":9},"end":{"line":644,"column":25}},{"start":{"line":644,"column":29},"end":{"line":644,"column":80}}]},"100":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":6},"end":{"line":645,"column":6}},{"start":{"line":645,"column":6},"end":{"line":645,"column":6}}]},"101":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":6},"end":{"line":650,"column":6}},{"start":{"line":650,"column":6},"end":{"line":650,"column":6}}]},"102":{"line":666,"type":"if","locations":[{"start":{"line":666,"column":2},"end":{"line":666,"column":2}},{"start":{"line":666,"column":2},"end":{"line":666,"column":2}}]},"103":{"line":666,"type":"binary-expr","locations":[{"start":{"line":666,"column":6},"end":{"line":666,"column":37}},{"start":{"line":666,"column":41},"end":{"line":666,"column":47}}]},"104":{"line":673,"type":"if","locations":[{"start":{"line":673,"column":6},"end":{"line":673,"column":6}},{"start":{"line":673,"column":6},"end":{"line":673,"column":6}}]},"105":{"line":680,"type":"if","locations":[{"start":{"line":680,"column":6},"end":{"line":680,"column":6}},{"start":{"line":680,"column":6},"end":{"line":680,"column":6}}]},"106":{"line":680,"type":"binary-expr","locations":[{"start":{"line":680,"column":10},"end":{"line":680,"column":30}},{"start":{"line":680,"column":34},"end":{"line":680,"column":77}}]},"107":{"line":686,"type":"if","locations":[{"start":{"line":686,"column":4},"end":{"line":686,"column":4}},{"start":{"line":686,"column":4},"end":{"line":686,"column":4}}]},"108":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":6},"end":{"line":687,"column":6}},{"start":{"line":687,"column":6},"end":{"line":687,"column":6}}]},"109":{"line":692,"type":"if","locations":[{"start":{"line":692,"column":9},"end":{"line":692,"column":9}},{"start":{"line":692,"column":9},"end":{"line":692,"column":9}}]},"110":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":2},"end":{"line":705,"column":2}},{"start":{"line":705,"column":2},"end":{"line":705,"column":2}}]},"111":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":6},"end":{"line":710,"column":6}},{"start":{"line":710,"column":6},"end":{"line":710,"column":6}}]},"112":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":10},"end":{"line":710,"column":40}},{"start":{"line":712,"column":13},"end":{"line":712,"column":39}}]},"113":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":4},"end":{"line":718,"column":4}},{"start":{"line":718,"column":4},"end":{"line":718,"column":4}}]},"114":{"line":724,"type":"cond-expr","locations":[{"start":{"line":725,"column":8},"end":{"line":725,"column":17}},{"start":{"line":726,"column":8},"end":{"line":726,"column":27}}]},"115":{"line":728,"type":"if","locations":[{"start":{"line":728,"column":2},"end":{"line":728,"column":2}},{"start":{"line":728,"column":2},"end":{"line":728,"column":2}}]},"116":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":4},"end":{"line":738,"column":4}},{"start":{"line":738,"column":4},"end":{"line":738,"column":4}}]},"117":{"line":738,"type":"binary-expr","locations":[{"start":{"line":738,"column":8},"end":{"line":738,"column":22}},{"start":{"line":739,"column":8},"end":{"line":739,"column":26}},{"start":{"line":740,"column":8},"end":{"line":740,"column":31}},{"start":{"line":741,"column":9},"end":{"line":741,"column":57}},{"start":{"line":741,"column":61},"end":{"line":741,"column":113}}]},"118":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":6},"end":{"line":742,"column":6}},{"start":{"line":742,"column":6},"end":{"line":742,"column":6}}]},"119":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":4},"end":{"line":752,"column":4}},{"start":{"line":752,"column":4},"end":{"line":752,"column":4}}]},"120":{"line":752,"type":"binary-expr","locations":[{"start":{"line":752,"column":8},"end":{"line":752,"column":22}},{"start":{"line":753,"column":8},"end":{"line":753,"column":42}},{"start":{"line":754,"column":8},"end":{"line":754,"column":34}},{"start":{"line":755,"column":8},"end":{"line":755,"column":34}},{"start":{"line":756,"column":8},"end":{"line":756,"column":26}},{"start":{"line":757,"column":8},"end":{"line":757,"column":22}},{"start":{"line":758,"column":8},"end":{"line":758,"column":34}},{"start":{"line":759,"column":8},"end":{"line":759,"column":36}},{"start":{"line":760,"column":9},"end":{"line":760,"column":72}},{"start":{"line":760,"column":76},"end":{"line":760,"column":135}}]},"121":{"line":761,"type":"if","locations":[{"start":{"line":761,"column":6},"end":{"line":761,"column":6}},{"start":{"line":761,"column":6},"end":{"line":761,"column":6}}]},"122":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":4},"end":{"line":773,"column":4}},{"start":{"line":773,"column":4},"end":{"line":773,"column":4}}]},"123":{"line":773,"type":"binary-expr","locations":[{"start":{"line":773,"column":8},"end":{"line":773,"column":20}},{"start":{"line":773,"column":24},"end":{"line":773,"column":42}}]},"124":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":2},"end":{"line":784,"column":2}},{"start":{"line":784,"column":2},"end":{"line":784,"column":2}}]},"125":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":2},"end":{"line":788,"column":2}},{"start":{"line":788,"column":2},"end":{"line":788,"column":2}}]},"126":{"line":788,"type":"binary-expr","locations":[{"start":{"line":788,"column":6},"end":{"line":788,"column":28}},{"start":{"line":788,"column":33},"end":{"line":788,"column":60}},{"start":{"line":788,"column":64},"end":{"line":788,"column":75}}]},"127":{"line":803,"type":"if","locations":[{"start":{"line":803,"column":4},"end":{"line":803,"column":4}},{"start":{"line":803,"column":4},"end":{"line":803,"column":4}}]},"128":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":2},"end":{"line":819,"column":2}},{"start":{"line":819,"column":2},"end":{"line":819,"column":2}}]},"129":{"line":823,"type":"if","locations":[{"start":{"line":823,"column":2},"end":{"line":823,"column":2}},{"start":{"line":823,"column":2},"end":{"line":823,"column":2}}]},"130":{"line":823,"type":"binary-expr","locations":[{"start":{"line":823,"column":6},"end":{"line":823,"column":23}},{"start":{"line":823,"column":27},"end":{"line":823,"column":49}}]},"131":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":2},"end":{"line":829,"column":2}},{"start":{"line":829,"column":2},"end":{"line":829,"column":2}}]},"132":{"line":829,"type":"binary-expr","locations":[{"start":{"line":829,"column":6},"end":{"line":829,"column":23}},{"start":{"line":829,"column":27},"end":{"line":829,"column":70}}]},"133":{"line":836,"type":"if","locations":[{"start":{"line":836,"column":2},"end":{"line":836,"column":2}},{"start":{"line":836,"column":2},"end":{"line":836,"column":2}}]},"134":{"line":836,"type":"binary-expr","locations":[{"start":{"line":836,"column":6},"end":{"line":836,"column":26}},{"start":{"line":837,"column":6},"end":{"line":837,"column":29}},{"start":{"line":838,"column":6},"end":{"line":838,"column":34}}]},"135":{"line":842,"type":"if","locations":[{"start":{"line":842,"column":2},"end":{"line":842,"column":2}},{"start":{"line":842,"column":2},"end":{"line":842,"column":2}}]},"136":{"line":842,"type":"binary-expr","locations":[{"start":{"line":842,"column":22},"end":{"line":842,"column":30}},{"start":{"line":842,"column":34},"end":{"line":842,"column":48}}]},"137":{"line":846,"type":"if","locations":[{"start":{"line":846,"column":2},"end":{"line":846,"column":2}},{"start":{"line":846,"column":2},"end":{"line":846,"column":2}}]},"138":{"line":846,"type":"binary-expr","locations":[{"start":{"line":846,"column":6},"end":{"line":846,"column":19}},{"start":{"line":847,"column":6},"end":{"line":847,"column":18}},{"start":{"line":848,"column":6},"end":{"line":848,"column":23}},{"start":{"line":849,"column":6},"end":{"line":849,"column":49}},{"start":{"line":850,"column":6},"end":{"line":850,"column":59}}]},"139":{"line":867,"type":"binary-expr","locations":[{"start":{"line":867,"column":13},"end":{"line":867,"column":21}},{"start":{"line":867,"column":25},"end":{"line":867,"column":52}}]},"140":{"line":873,"type":"if","locations":[{"start":{"line":873,"column":2},"end":{"line":873,"column":2}},{"start":{"line":873,"column":2},"end":{"line":873,"column":2}}]},"141":{"line":877,"type":"binary-expr","locations":[{"start":{"line":877,"column":4},"end":{"line":877,"column":17}},{"start":{"line":877,"column":22},"end":{"line":877,"column":62}}]},"142":{"line":878,"type":"if","locations":[{"start":{"line":878,"column":4},"end":{"line":878,"column":4}},{"start":{"line":878,"column":4},"end":{"line":878,"column":4}}]},"143":{"line":878,"type":"binary-expr","locations":[{"start":{"line":878,"column":8},"end":{"line":878,"column":11}},{"start":{"line":878,"column":15},"end":{"line":878,"column":34}}]},"144":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":8},"end":{"line":884,"column":8}},{"start":{"line":884,"column":8},"end":{"line":884,"column":8}}]},"145":{"line":899,"type":"cond-expr","locations":[{"start":{"line":899,"column":18},"end":{"line":899,"column":32}},{"start":{"line":899,"column":35},"end":{"line":899,"column":43}}]},"146":{"line":901,"type":"if","locations":[{"start":{"line":901,"column":4},"end":{"line":901,"column":4}},{"start":{"line":901,"column":4},"end":{"line":901,"column":4}}]},"147":{"line":904,"type":"if","locations":[{"start":{"line":904,"column":6},"end":{"line":904,"column":6}},{"start":{"line":904,"column":6},"end":{"line":904,"column":6}}]},"148":{"line":904,"type":"binary-expr","locations":[{"start":{"line":904,"column":10},"end":{"line":904,"column":23}},{"start":{"line":904,"column":27},"end":{"line":904,"column":88}}]},"149":{"line":906,"type":"if","locations":[{"start":{"line":906,"column":13},"end":{"line":906,"column":13}},{"start":{"line":906,"column":13},"end":{"line":906,"column":13}}]},"150":{"line":906,"type":"binary-expr","locations":[{"start":{"line":906,"column":17},"end":{"line":906,"column":30}},{"start":{"line":906,"column":34},"end":{"line":906,"column":67}}]},"151":{"line":908,"type":"if","locations":[{"start":{"line":908,"column":13},"end":{"line":908,"column":13}},{"start":{"line":908,"column":13},"end":{"line":908,"column":13}}]},"152":{"line":908,"type":"binary-expr","locations":[{"start":{"line":908,"column":17},"end":{"line":908,"column":30}},{"start":{"line":908,"column":34},"end":{"line":908,"column":63}}]},"153":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":13},"end":{"line":910,"column":13}},{"start":{"line":910,"column":13},"end":{"line":910,"column":13}}]},"154":{"line":910,"type":"binary-expr","locations":[{"start":{"line":910,"column":17},"end":{"line":910,"column":30}},{"start":{"line":910,"column":34},"end":{"line":910,"column":62}}]},"155":{"line":962,"type":"if","locations":[{"start":{"line":962,"column":2},"end":{"line":962,"column":2}},{"start":{"line":962,"column":2},"end":{"line":962,"column":2}}]},"156":{"line":966,"type":"binary-expr","locations":[{"start":{"line":966,"column":15},"end":{"line":966,"column":33}},{"start":{"line":966,"column":37},"end":{"line":966,"column":66}}]},"157":{"line":971,"type":"cond-expr","locations":[{"start":{"line":972,"column":10},"end":{"line":972,"column":19}},{"start":{"line":973,"column":10},"end":{"line":973,"column":24}}]},"158":{"line":971,"type":"binary-expr","locations":[{"start":{"line":971,"column":10},"end":{"line":971,"column":22}},{"start":{"line":971,"column":26},"end":{"line":971,"column":40}}]},"159":{"line":976,"type":"if","locations":[{"start":{"line":976,"column":2},"end":{"line":976,"column":2}},{"start":{"line":976,"column":2},"end":{"line":976,"column":2}}]},"160":{"line":982,"type":"if","locations":[{"start":{"line":982,"column":2},"end":{"line":982,"column":2}},{"start":{"line":982,"column":2},"end":{"line":982,"column":2}}]},"161":{"line":982,"type":"binary-expr","locations":[{"start":{"line":982,"column":6},"end":{"line":982,"column":12}},{"start":{"line":982,"column":16},"end":{"line":982,"column":37}}]},"162":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":18},"end":{"line":1000,"column":24}},{"start":{"line":1000,"column":28},"end":{"line":1000,"column":40}}]},"163":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}},{"start":{"line":1002,"column":2},"end":{"line":1002,"column":2}}]},"164":{"line":1102,"type":"if","locations":[{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}},{"start":{"line":1102,"column":2},"end":{"line":1102,"column":2}}]},"165":{"line":1103,"type":"if","locations":[{"start":{"line":1103,"column":4},"end":{"line":1103,"column":4}},{"start":{"line":1103,"column":4},"end":{"line":1103,"column":4}}]},"166":{"line":1111,"type":"binary-expr","locations":[{"start":{"line":1111,"column":11},"end":{"line":1111,"column":26}},{"start":{"line":1111,"column":30},"end":{"line":1115,"column":6}}]},"167":{"line":1113,"type":"binary-expr","locations":[{"start":{"line":1113,"column":15},"end":{"line":1113,"column":27}},{"start":{"line":1113,"column":31},"end":{"line":1113,"column":60}}]},"168":{"line":1186,"type":"if","locations":[{"start":{"line":1186,"column":2},"end":{"line":1186,"column":2}},{"start":{"line":1186,"column":2},"end":{"line":1186,"column":2}}]},"169":{"line":1187,"type":"if","locations":[{"start":{"line":1187,"column":4},"end":{"line":1187,"column":4}},{"start":{"line":1187,"column":4},"end":{"line":1187,"column":4}}]},"170":{"line":1196,"type":"if","locations":[{"start":{"line":1196,"column":4},"end":{"line":1196,"column":4}},{"start":{"line":1196,"column":4},"end":{"line":1196,"column":4}}]},"171":{"line":1196,"type":"binary-expr","locations":[{"start":{"line":1196,"column":8},"end":{"line":1196,"column":15}},{"start":{"line":1196,"column":19},"end":{"line":1196,"column":37}}]},"172":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":6},"end":{"line":1203,"column":6}},{"start":{"line":1203,"column":6},"end":{"line":1203,"column":6}}]},"173":{"line":1206,"type":"if","locations":[{"start":{"line":1206,"column":6},"end":{"line":1206,"column":6}},{"start":{"line":1206,"column":6},"end":{"line":1206,"column":6}}]},"174":{"line":1206,"type":"binary-expr","locations":[{"start":{"line":1206,"column":10},"end":{"line":1206,"column":32}},{"start":{"line":1206,"column":36},"end":{"line":1206,"column":64}}]},"175":{"line":1213,"type":"if","locations":[{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}},{"start":{"line":1213,"column":4},"end":{"line":1213,"column":4}}]},"176":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}},{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}}]},"177":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":6},"end":{"line":1226,"column":6}},{"start":{"line":1226,"column":6},"end":{"line":1226,"column":6}}]},"178":{"line":1230,"type":"if","locations":[{"start":{"line":1230,"column":6},"end":{"line":1230,"column":6}},{"start":{"line":1230,"column":6},"end":{"line":1230,"column":6}}]},"179":{"line":1231,"type":"binary-expr","locations":[{"start":{"line":1231,"column":15},"end":{"line":1231,"column":24}},{"start":{"line":1231,"column":28},"end":{"line":1231,"column":43}}]},"180":{"line":1234,"type":"if","locations":[{"start":{"line":1234,"column":6},"end":{"line":1234,"column":6}},{"start":{"line":1234,"column":6},"end":{"line":1234,"column":6}}]},"181":{"line":1263,"type":"if","locations":[{"start":{"line":1263,"column":2},"end":{"line":1263,"column":2}},{"start":{"line":1263,"column":2},"end":{"line":1263,"column":2}}]},"182":{"line":1264,"type":"if","locations":[{"start":{"line":1264,"column":4},"end":{"line":1264,"column":4}},{"start":{"line":1264,"column":4},"end":{"line":1264,"column":4}}]},"183":{"line":1273,"type":"if","locations":[{"start":{"line":1273,"column":4},"end":{"line":1273,"column":4}},{"start":{"line":1273,"column":4},"end":{"line":1273,"column":4}}]},"184":{"line":1273,"type":"binary-expr","locations":[{"start":{"line":1273,"column":8},"end":{"line":1273,"column":15}},{"start":{"line":1273,"column":19},"end":{"line":1273,"column":37}}]},"185":{"line":1280,"type":"if","locations":[{"start":{"line":1280,"column":6},"end":{"line":1280,"column":6}},{"start":{"line":1280,"column":6},"end":{"line":1280,"column":6}}]},"186":{"line":1283,"type":"if","locations":[{"start":{"line":1283,"column":6},"end":{"line":1283,"column":6}},{"start":{"line":1283,"column":6},"end":{"line":1283,"column":6}}]},"187":{"line":1283,"type":"binary-expr","locations":[{"start":{"line":1283,"column":10},"end":{"line":1283,"column":32}},{"start":{"line":1283,"column":36},"end":{"line":1283,"column":64}}]},"188":{"line":1290,"type":"if","locations":[{"start":{"line":1290,"column":4},"end":{"line":1290,"column":4}},{"start":{"line":1290,"column":4},"end":{"line":1290,"column":4}}]},"189":{"line":1294,"type":"if","locations":[{"start":{"line":1294,"column":4},"end":{"line":1294,"column":4}},{"start":{"line":1294,"column":4},"end":{"line":1294,"column":4}}]},"190":{"line":1325,"type":"if","locations":[{"start":{"line":1325,"column":2},"end":{"line":1325,"column":2}},{"start":{"line":1325,"column":2},"end":{"line":1325,"column":2}}]},"191":{"line":1330,"type":"binary-expr","locations":[{"start":{"line":1330,"column":19},"end":{"line":1330,"column":27}},{"start":{"line":1330,"column":31},"end":{"line":1330,"column":44}}]},"192":{"line":1342,"type":"if","locations":[{"start":{"line":1342,"column":4},"end":{"line":1342,"column":4}},{"start":{"line":1342,"column":4},"end":{"line":1342,"column":4}}]},"193":{"line":1342,"type":"binary-expr","locations":[{"start":{"line":1342,"column":8},"end":{"line":1342,"column":29}},{"start":{"line":1342,"column":33},"end":{"line":1342,"column":54}}]},"194":{"line":1346,"type":"if","locations":[{"start":{"line":1346,"column":4},"end":{"line":1346,"column":4}},{"start":{"line":1346,"column":4},"end":{"line":1346,"column":4}}]},"195":{"line":1361,"type":"if","locations":[{"start":{"line":1361,"column":4},"end":{"line":1361,"column":4}},{"start":{"line":1361,"column":4},"end":{"line":1361,"column":4}}]},"196":{"line":1361,"type":"binary-expr","locations":[{"start":{"line":1361,"column":8},"end":{"line":1361,"column":30}},{"start":{"line":1362,"column":8},"end":{"line":1362,"column":40}},{"start":{"line":1363,"column":8},"end":{"line":1363,"column":47}}]},"197":{"line":1373,"type":"if","locations":[{"start":{"line":1373,"column":4},"end":{"line":1373,"column":4}},{"start":{"line":1373,"column":4},"end":{"line":1373,"column":4}}]},"198":{"line":1373,"type":"binary-expr","locations":[{"start":{"line":1373,"column":8},"end":{"line":1373,"column":11}},{"start":{"line":1373,"column":15},"end":{"line":1373,"column":34}},{"start":{"line":1373,"column":38},"end":{"line":1373,"column":59}},{"start":{"line":1373,"column":63},"end":{"line":1373,"column":91}}]},"199":{"line":1384,"type":"if","locations":[{"start":{"line":1384,"column":4},"end":{"line":1384,"column":4}},{"start":{"line":1384,"column":4},"end":{"line":1384,"column":4}}]},"200":{"line":1386,"type":"if","locations":[{"start":{"line":1386,"column":6},"end":{"line":1386,"column":6}},{"start":{"line":1386,"column":6},"end":{"line":1386,"column":6}}]},"201":{"line":1411,"type":"if","locations":[{"start":{"line":1411,"column":4},"end":{"line":1411,"column":4}},{"start":{"line":1411,"column":4},"end":{"line":1411,"column":4}}]},"202":{"line":1414,"type":"if","locations":[{"start":{"line":1414,"column":8},"end":{"line":1414,"column":8}},{"start":{"line":1414,"column":8},"end":{"line":1414,"column":8}}]},"203":{"line":1414,"type":"binary-expr","locations":[{"start":{"line":1414,"column":12},"end":{"line":1414,"column":27}},{"start":{"line":1414,"column":31},"end":{"line":1414,"column":81}}]},"204":{"line":1426,"type":"if","locations":[{"start":{"line":1426,"column":2},"end":{"line":1426,"column":2}},{"start":{"line":1426,"column":2},"end":{"line":1426,"column":2}}]},"205":{"line":1429,"type":"if","locations":[{"start":{"line":1429,"column":6},"end":{"line":1429,"column":6}},{"start":{"line":1429,"column":6},"end":{"line":1429,"column":6}}]},"206":{"line":1443,"type":"if","locations":[{"start":{"line":1443,"column":4},"end":{"line":1443,"column":4}},{"start":{"line":1443,"column":4},"end":{"line":1443,"column":4}}]},"207":{"line":1452,"type":"if","locations":[{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}},{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}}]},"208":{"line":1461,"type":"if","locations":[{"start":{"line":1461,"column":6},"end":{"line":1461,"column":6}},{"start":{"line":1461,"column":6},"end":{"line":1461,"column":6}}]},"209":{"line":1462,"type":"binary-expr","locations":[{"start":{"line":1462,"column":15},"end":{"line":1462,"column":22}},{"start":{"line":1462,"column":26},"end":{"line":1462,"column":36}}]},"210":{"line":1466,"type":"if","locations":[{"start":{"line":1466,"column":6},"end":{"line":1466,"column":6}},{"start":{"line":1466,"column":6},"end":{"line":1466,"column":6}}]},"211":{"line":1467,"type":"binary-expr","locations":[{"start":{"line":1467,"column":8},"end":{"line":1467,"column":15}},{"start":{"line":1467,"column":19},"end":{"line":1467,"column":29}}]},"212":{"line":1473,"type":"if","locations":[{"start":{"line":1473,"column":8},"end":{"line":1473,"column":8}},{"start":{"line":1473,"column":8},"end":{"line":1473,"column":8}}]},"213":{"line":1476,"type":"binary-expr","locations":[{"start":{"line":1476,"column":8},"end":{"line":1476,"column":15}},{"start":{"line":1476,"column":19},"end":{"line":1476,"column":29}}]},"214":{"line":1508,"type":"if","locations":[{"start":{"line":1508,"column":2},"end":{"line":1508,"column":2}},{"start":{"line":1508,"column":2},"end":{"line":1508,"column":2}}]},"215":{"line":1515,"type":"if","locations":[{"start":{"line":1515,"column":2},"end":{"line":1515,"column":2}},{"start":{"line":1515,"column":2},"end":{"line":1515,"column":2}}]},"216":{"line":1515,"type":"binary-expr","locations":[{"start":{"line":1515,"column":6},"end":{"line":1515,"column":21}},{"start":{"line":1515,"column":25},"end":{"line":1515,"column":47}}]},"217":{"line":1518,"type":"if","locations":[{"start":{"line":1518,"column":6},"end":{"line":1518,"column":6}},{"start":{"line":1518,"column":6},"end":{"line":1518,"column":6}}]},"218":{"line":1528,"type":"if","locations":[{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}},{"start":{"line":1528,"column":4},"end":{"line":1528,"column":4}}]},"219":{"line":1535,"type":"if","locations":[{"start":{"line":1535,"column":4},"end":{"line":1535,"column":4}},{"start":{"line":1535,"column":4},"end":{"line":1535,"column":4}}]},"220":{"line":1538,"type":"if","locations":[{"start":{"line":1538,"column":4},"end":{"line":1538,"column":4}},{"start":{"line":1538,"column":4},"end":{"line":1538,"column":4}}]},"221":{"line":1544,"type":"if","locations":[{"start":{"line":1544,"column":4},"end":{"line":1544,"column":4}},{"start":{"line":1544,"column":4},"end":{"line":1544,"column":4}}]},"222":{"line":1554,"type":"if","locations":[{"start":{"line":1554,"column":2},"end":{"line":1554,"column":2}},{"start":{"line":1554,"column":2},"end":{"line":1554,"column":2}}]},"223":{"line":1557,"type":"if","locations":[{"start":{"line":1557,"column":6},"end":{"line":1557,"column":6}},{"start":{"line":1557,"column":6},"end":{"line":1557,"column":6}}]},"224":{"line":1598,"type":"if","locations":[{"start":{"line":1598,"column":2},"end":{"line":1598,"column":2}},{"start":{"line":1598,"column":2},"end":{"line":1598,"column":2}}]},"225":{"line":1602,"type":"if","locations":[{"start":{"line":1602,"column":2},"end":{"line":1602,"column":2}},{"start":{"line":1602,"column":2},"end":{"line":1602,"column":2}}]},"226":{"line":1606,"type":"if","locations":[{"start":{"line":1606,"column":2},"end":{"line":1606,"column":2}},{"start":{"line":1606,"column":2},"end":{"line":1606,"column":2}}]},"227":{"line":1606,"type":"binary-expr","locations":[{"start":{"line":1606,"column":6},"end":{"line":1606,"column":10}},{"start":{"line":1606,"column":14},"end":{"line":1606,"column":37}}]},"228":{"line":1610,"type":"binary-expr","locations":[{"start":{"line":1610,"column":12},"end":{"line":1610,"column":16}},{"start":{"line":1610,"column":20},"end":{"line":1610,"column":34}}]},"229":{"line":1615,"type":"if","locations":[{"start":{"line":1615,"column":2},"end":{"line":1615,"column":2}},{"start":{"line":1615,"column":2},"end":{"line":1615,"column":2}}]},"230":{"line":1633,"type":"if","locations":[{"start":{"line":1633,"column":2},"end":{"line":1633,"column":2}},{"start":{"line":1633,"column":2},"end":{"line":1633,"column":2}}]},"231":{"line":1633,"type":"binary-expr","locations":[{"start":{"line":1633,"column":6},"end":{"line":1633,"column":31}},{"start":{"line":1633,"column":35},"end":{"line":1633,"column":73}}]},"232":{"line":1638,"type":"if","locations":[{"start":{"line":1638,"column":2},"end":{"line":1638,"column":2}},{"start":{"line":1638,"column":2},"end":{"line":1638,"column":2}}]},"233":{"line":1653,"type":"binary-expr","locations":[{"start":{"line":1653,"column":9},"end":{"line":1653,"column":34}},{"start":{"line":1653,"column":38},"end":{"line":1653,"column":76}}]},"234":{"line":1667,"type":"binary-expr","locations":[{"start":{"line":1667,"column":2},"end":{"line":1667,"column":15}},{"start":{"line":1667,"column":20},"end":{"line":1667,"column":68}}]},"235":{"line":1674,"type":"binary-expr","locations":[{"start":{"line":1674,"column":11},"end":{"line":1674,"column":14}},{"start":{"line":1674,"column":18},"end":{"line":1674,"column":38}},{"start":{"line":1674,"column":42},"end":{"line":1674,"column":69}},{"start":{"line":1674,"column":73},"end":{"line":1674,"column":83}}]},"236":{"line":1680,"type":"if","locations":[{"start":{"line":1680,"column":6},"end":{"line":1680,"column":6}},{"start":{"line":1680,"column":6},"end":{"line":1680,"column":6}}]},"237":{"line":1690,"type":"if","locations":[{"start":{"line":1690,"column":4},"end":{"line":1690,"column":4}},{"start":{"line":1690,"column":4},"end":{"line":1690,"column":4}}]},"238":{"line":1690,"type":"binary-expr","locations":[{"start":{"line":1690,"column":8},"end":{"line":1690,"column":12}},{"start":{"line":1690,"column":16},"end":{"line":1690,"column":29}}]},"239":{"line":1730,"type":"if","locations":[{"start":{"line":1730,"column":4},"end":{"line":1730,"column":4}},{"start":{"line":1730,"column":4},"end":{"line":1730,"column":4}}]},"240":{"line":1730,"type":"binary-expr","locations":[{"start":{"line":1730,"column":8},"end":{"line":1730,"column":22}},{"start":{"line":1730,"column":26},"end":{"line":1730,"column":47}}]},"241":{"line":1742,"type":"cond-expr","locations":[{"start":{"line":1742,"column":30},"end":{"line":1742,"column":32}},{"start":{"line":1742,"column":36},"end":{"line":1742,"column":59}}]},"242":{"line":1742,"type":"cond-expr","locations":[{"start":{"line":1742,"column":54},"end":{"line":1742,"column":55}},{"start":{"line":1742,"column":58},"end":{"line":1742,"column":59}}]},"243":{"line":1751,"type":"if","locations":[{"start":{"line":1751,"column":4},"end":{"line":1751,"column":4}},{"start":{"line":1751,"column":4},"end":{"line":1751,"column":4}}]},"244":{"line":1754,"type":"if","locations":[{"start":{"line":1754,"column":4},"end":{"line":1754,"column":4}},{"start":{"line":1754,"column":4},"end":{"line":1754,"column":4}}]},"245":{"line":1760,"type":"if","locations":[{"start":{"line":1760,"column":6},"end":{"line":1760,"column":6}},{"start":{"line":1760,"column":6},"end":{"line":1760,"column":6}}]},"246":{"line":1760,"type":"binary-expr","locations":[{"start":{"line":1760,"column":10},"end":{"line":1760,"column":19}},{"start":{"line":1760,"column":23},"end":{"line":1760,"column":41}},{"start":{"line":1760,"column":45},"end":{"line":1760,"column":67}}]},"247":{"line":1789,"type":"cond-expr","locations":[{"start":{"line":1792,"column":14},"end":{"line":1792,"column":18}},{"start":{"line":1793,"column":14},"end":{"line":1793,"column":18}}]},"248":{"line":1789,"type":"binary-expr","locations":[{"start":{"line":1789,"column":10},"end":{"line":1789,"column":62}},{"start":{"line":1790,"column":11},"end":{"line":1790,"column":35}},{"start":{"line":1791,"column":12},"end":{"line":1791,"column":34}},{"start":{"line":1791,"column":39},"end":{"line":1791,"column":65}},{"start":{"line":1791,"column":69},"end":{"line":1791,"column":83}}]},"249":{"line":1819,"type":"cond-expr","locations":[{"start":{"line":1819,"column":23},"end":{"line":1819,"column":35}},{"start":{"line":1819,"column":38},"end":{"line":1819,"column":40}}]},"250":{"line":1820,"type":"binary-expr","locations":[{"start":{"line":1820,"column":11},"end":{"line":1820,"column":17}},{"start":{"line":1820,"column":21},"end":{"line":1820,"column":23}}]},"251":{"line":1822,"type":"if","locations":[{"start":{"line":1822,"column":2},"end":{"line":1822,"column":2}},{"start":{"line":1822,"column":2},"end":{"line":1822,"column":2}}]},"252":{"line":1828,"type":"if","locations":[{"start":{"line":1828,"column":8},"end":{"line":1828,"column":8}},{"start":{"line":1828,"column":8},"end":{"line":1828,"column":8}}]},"253":{"line":1832,"type":"if","locations":[{"start":{"line":1832,"column":8},"end":{"line":1832,"column":8}},{"start":{"line":1832,"column":8},"end":{"line":1832,"column":8}}]},"254":{"line":1836,"type":"if","locations":[{"start":{"line":1836,"column":10},"end":{"line":1836,"column":10}},{"start":{"line":1836,"column":10},"end":{"line":1836,"column":10}}]},"255":{"line":1887,"type":"if","locations":[{"start":{"line":1887,"column":8},"end":{"line":1887,"column":8}},{"start":{"line":1887,"column":8},"end":{"line":1887,"column":8}}]},"256":{"line":1890,"type":"binary-expr","locations":[{"start":{"line":1890,"column":16},"end":{"line":1890,"column":30}},{"start":{"line":1890,"column":34},"end":{"line":1890,"column":38}}]},"257":{"line":1898,"type":"binary-expr","locations":[{"start":{"line":1898,"column":29},"end":{"line":1898,"column":43}},{"start":{"line":1898,"column":47},"end":{"line":1898,"column":51}}]},"258":{"line":1901,"type":"binary-expr","locations":[{"start":{"line":1901,"column":29},"end":{"line":1901,"column":43}},{"start":{"line":1901,"column":47},"end":{"line":1901,"column":51}}]},"259":{"line":1931,"type":"binary-expr","locations":[{"start":{"line":1931,"column":2},"end":{"line":1931,"column":15}},{"start":{"line":1931,"column":20},"end":{"line":1931,"column":68}}]},"260":{"line":1939,"type":"binary-expr","locations":[{"start":{"line":1939,"column":11},"end":{"line":1939,"column":14}},{"start":{"line":1939,"column":18},"end":{"line":1939,"column":38}},{"start":{"line":1939,"column":42},"end":{"line":1939,"column":69}},{"start":{"line":1939,"column":73},"end":{"line":1939,"column":83}}]},"261":{"line":1958,"type":"binary-expr","locations":[{"start":{"line":1958,"column":2},"end":{"line":1958,"column":15}},{"start":{"line":1958,"column":20},"end":{"line":1958,"column":68}}]},"262":{"line":1959,"type":"binary-expr","locations":[{"start":{"line":1959,"column":13},"end":{"line":1959,"column":21}},{"start":{"line":1959,"column":25},"end":{"line":1959,"column":52}}]},"263":{"line":1964,"type":"if","locations":[{"start":{"line":1964,"column":4},"end":{"line":1964,"column":4}},{"start":{"line":1964,"column":4},"end":{"line":1964,"column":4}}]},"264":{"line":1967,"type":"if","locations":[{"start":{"line":1967,"column":4},"end":{"line":1967,"column":4}},{"start":{"line":1967,"column":4},"end":{"line":1967,"column":4}}]},"265":{"line":1967,"type":"binary-expr","locations":[{"start":{"line":1967,"column":8},"end":{"line":1967,"column":11}},{"start":{"line":1967,"column":15},"end":{"line":1967,"column":34}}]},"266":{"line":1971,"type":"if","locations":[{"start":{"line":1971,"column":4},"end":{"line":1971,"column":4}},{"start":{"line":1971,"column":4},"end":{"line":1971,"column":4}}]},"267":{"line":1971,"type":"binary-expr","locations":[{"start":{"line":1971,"column":8},"end":{"line":1971,"column":11}},{"start":{"line":1971,"column":15},"end":{"line":1971,"column":42}}]},"268":{"line":1973,"type":"if","locations":[{"start":{"line":1973,"column":8},"end":{"line":1973,"column":8}},{"start":{"line":1973,"column":8},"end":{"line":1973,"column":8}}]},"269":{"line":1973,"type":"binary-expr","locations":[{"start":{"line":1973,"column":12},"end":{"line":1973,"column":16}},{"start":{"line":1973,"column":20},"end":{"line":1973,"column":29}}]},"270":{"line":1976,"type":"if","locations":[{"start":{"line":1976,"column":8},"end":{"line":1976,"column":8}},{"start":{"line":1976,"column":8},"end":{"line":1976,"column":8}}]},"271":{"line":1981,"type":"if","locations":[{"start":{"line":1981,"column":11},"end":{"line":1981,"column":11}},{"start":{"line":1981,"column":11},"end":{"line":1981,"column":11}}]},"272":{"line":1981,"type":"binary-expr","locations":[{"start":{"line":1981,"column":15},"end":{"line":1981,"column":38}},{"start":{"line":1981,"column":42},"end":{"line":1981,"column":57}}]},"273":{"line":1982,"type":"if","locations":[{"start":{"line":1982,"column":6},"end":{"line":1982,"column":6}},{"start":{"line":1982,"column":6},"end":{"line":1982,"column":6}}]},"274":{"line":1999,"type":"binary-expr","locations":[{"start":{"line":1999,"column":10},"end":{"line":1999,"column":20}},{"start":{"line":1999,"column":24},"end":{"line":1999,"column":44}}]},"275":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":2},"end":{"line":2000,"column":2}},{"start":{"line":2000,"column":2},"end":{"line":2000,"column":2}}]},"276":{"line":2007,"type":"if","locations":[{"start":{"line":2007,"column":4},"end":{"line":2007,"column":4}},{"start":{"line":2007,"column":4},"end":{"line":2007,"column":4}}]},"277":{"line":2007,"type":"binary-expr","locations":[{"start":{"line":2007,"column":8},"end":{"line":2007,"column":25}},{"start":{"line":2007,"column":29},"end":{"line":2007,"column":47}},{"start":{"line":2007,"column":51},"end":{"line":2007,"column":67}}]},"278":{"line":2015,"type":"if","locations":[{"start":{"line":2015,"column":2},"end":{"line":2015,"column":2}},{"start":{"line":2015,"column":2},"end":{"line":2015,"column":2}}]},"279":{"line":2017,"type":"if","locations":[{"start":{"line":2017,"column":9},"end":{"line":2017,"column":9}},{"start":{"line":2017,"column":9},"end":{"line":2017,"column":9}}]},"280":{"line":2017,"type":"binary-expr","locations":[{"start":{"line":2017,"column":13},"end":{"line":2017,"column":39}},{"start":{"line":2017,"column":43},"end":{"line":2017,"column":85}}]},"281":{"line":2019,"type":"if","locations":[{"start":{"line":2019,"column":9},"end":{"line":2019,"column":9}},{"start":{"line":2019,"column":9},"end":{"line":2019,"column":9}}]},"282":{"line":2019,"type":"binary-expr","locations":[{"start":{"line":2019,"column":13},"end":{"line":2019,"column":27}},{"start":{"line":2019,"column":31},"end":{"line":2019,"column":61}}]},"283":{"line":2042,"type":"if","locations":[{"start":{"line":2042,"column":2},"end":{"line":2042,"column":2}},{"start":{"line":2042,"column":2},"end":{"line":2042,"column":2}}]},"284":{"line":2042,"type":"binary-expr","locations":[{"start":{"line":2042,"column":6},"end":{"line":2042,"column":13}},{"start":{"line":2042,"column":17},"end":{"line":2042,"column":35}},{"start":{"line":2042,"column":39},"end":{"line":2042,"column":56}},{"start":{"line":2042,"column":60},"end":{"line":2042,"column":81}}]},"285":{"line":2049,"type":"if","locations":[{"start":{"line":2049,"column":2},"end":{"line":2049,"column":2}},{"start":{"line":2049,"column":2},"end":{"line":2049,"column":2}}]},"286":{"line":2049,"type":"binary-expr","locations":[{"start":{"line":2049,"column":6},"end":{"line":2049,"column":75}},{"start":{"line":2050,"column":7},"end":{"line":2050,"column":14}},{"start":{"line":2050,"column":18},"end":{"line":2050,"column":43}}]},"287":{"line":2049,"type":"binary-expr","locations":[{"start":{"line":2049,"column":8},"end":{"line":2049,"column":15}},{"start":{"line":2049,"column":19},"end":{"line":2049,"column":74}}]},"288":{"line":2051,"type":"if","locations":[{"start":{"line":2051,"column":4},"end":{"line":2051,"column":4}},{"start":{"line":2051,"column":4},"end":{"line":2051,"column":4}}]},"289":{"line":2052,"type":"cond-expr","locations":[{"start":{"line":2053,"column":8},"end":{"line":2053,"column":41}},{"start":{"line":2054,"column":8},"end":{"line":2054,"column":10}}]},"290":{"line":2058,"type":"cond-expr","locations":[{"start":{"line":2059,"column":8},"end":{"line":2059,"column":43}},{"start":{"line":2060,"column":8},"end":{"line":2060,"column":10}}]},"291":{"line":2067,"type":"if","locations":[{"start":{"line":2067,"column":4},"end":{"line":2067,"column":4}},{"start":{"line":2067,"column":4},"end":{"line":2067,"column":4}}]},"292":{"line":2072,"type":"binary-expr","locations":[{"start":{"line":2072,"column":3},"end":{"line":2072,"column":24}},{"start":{"line":2072,"column":30},"end":{"line":2072,"column":77}}]},"293":{"line":2080,"type":"binary-expr","locations":[{"start":{"line":2080,"column":12},"end":{"line":2080,"column":37}},{"start":{"line":2080,"column":41},"end":{"line":2080,"column":43}}]},"294":{"line":2082,"type":"if","locations":[{"start":{"line":2082,"column":2},"end":{"line":2082,"column":2}},{"start":{"line":2082,"column":2},"end":{"line":2082,"column":2}}]},"295":{"line":2086,"type":"if","locations":[{"start":{"line":2086,"column":4},"end":{"line":2086,"column":4}},{"start":{"line":2086,"column":4},"end":{"line":2086,"column":4}}]},"296":{"line":2087,"type":"binary-expr","locations":[{"start":{"line":2087,"column":12},"end":{"line":2087,"column":25}},{"start":{"line":2087,"column":29},"end":{"line":2087,"column":31}}]},"297":{"line":2091,"type":"if","locations":[{"start":{"line":2091,"column":2},"end":{"line":2091,"column":2}},{"start":{"line":2091,"column":2},"end":{"line":2091,"column":2}}]},"298":{"line":2091,"type":"binary-expr","locations":[{"start":{"line":2091,"column":6},"end":{"line":2091,"column":22}},{"start":{"line":2091,"column":26},"end":{"line":2091,"column":41}},{"start":{"line":2091,"column":45},"end":{"line":2091,"column":71}}]},"299":{"line":2095,"type":"if","locations":[{"start":{"line":2095,"column":2},"end":{"line":2095,"column":2}},{"start":{"line":2095,"column":2},"end":{"line":2095,"column":2}}]},"300":{"line":2095,"type":"binary-expr","locations":[{"start":{"line":2095,"column":6},"end":{"line":2095,"column":34}},{"start":{"line":2095,"column":38},"end":{"line":2095,"column":68}}]},"301":{"line":2106,"type":"if","locations":[{"start":{"line":2106,"column":2},"end":{"line":2106,"column":2}},{"start":{"line":2106,"column":2},"end":{"line":2106,"column":2}}]},"302":{"line":2106,"type":"binary-expr","locations":[{"start":{"line":2106,"column":6},"end":{"line":2106,"column":24}},{"start":{"line":2107,"column":7},"end":{"line":2107,"column":35}},{"start":{"line":2107,"column":39},"end":{"line":2107,"column":48}}]},"303":{"line":2108,"type":"cond-expr","locations":[{"start":{"line":2108,"column":30},"end":{"line":2108,"column":56}},{"start":{"line":2108,"column":59},"end":{"line":2108,"column":87}}]},"304":{"line":2110,"type":"if","locations":[{"start":{"line":2110,"column":4},"end":{"line":2110,"column":4}},{"start":{"line":2110,"column":4},"end":{"line":2110,"column":4}}]},"305":{"line":2111,"type":"cond-expr","locations":[{"start":{"line":2111,"column":61},"end":{"line":2111,"column":78}},{"start":{"line":2111,"column":81},"end":{"line":2111,"column":95}}]},"306":{"line":2117,"type":"if","locations":[{"start":{"line":2117,"column":2},"end":{"line":2117,"column":2}},{"start":{"line":2117,"column":2},"end":{"line":2117,"column":2}}]},"307":{"line":2119,"type":"if","locations":[{"start":{"line":2119,"column":4},"end":{"line":2119,"column":4}},{"start":{"line":2119,"column":4},"end":{"line":2119,"column":4}}]},"308":{"line":2266,"type":"if","locations":[{"start":{"line":2266,"column":4},"end":{"line":2266,"column":4}},{"start":{"line":2266,"column":4},"end":{"line":2266,"column":4}}]},"309":{"line":2266,"type":"binary-expr","locations":[{"start":{"line":2266,"column":8},"end":{"line":2266,"column":27}},{"start":{"line":2266,"column":31},"end":{"line":2266,"column":52}}]},"310":{"line":2270,"type":"if","locations":[{"start":{"line":2270,"column":4},"end":{"line":2270,"column":4}},{"start":{"line":2270,"column":4},"end":{"line":2270,"column":4}}]},"311":{"line":2278,"type":"cond-expr","locations":[{"start":{"line":2279,"column":8},"end":{"line":2279,"column":11}},{"start":{"line":2280,"column":8},"end":{"line":2280,"column":17}}]},"312":{"line":2300,"type":"if","locations":[{"start":{"line":2300,"column":2},"end":{"line":2300,"column":2}},{"start":{"line":2300,"column":2},"end":{"line":2300,"column":2}}]},"313":{"line":2317,"type":"if","locations":[{"start":{"line":2317,"column":6},"end":{"line":2317,"column":6}},{"start":{"line":2317,"column":6},"end":{"line":2317,"column":6}}]},"314":{"line":2319,"type":"if","locations":[{"start":{"line":2319,"column":13},"end":{"line":2319,"column":13}},{"start":{"line":2319,"column":13},"end":{"line":2319,"column":13}}]},"315":{"line":2320,"type":"if","locations":[{"start":{"line":2320,"column":8},"end":{"line":2320,"column":8}},{"start":{"line":2320,"column":8},"end":{"line":2320,"column":8}}]},"316":{"line":2325,"type":"binary-expr","locations":[{"start":{"line":2325,"column":17},"end":{"line":2325,"column":29}},{"start":{"line":2325,"column":34},"end":{"line":2325,"column":51}}]},"317":{"line":2360,"type":"binary-expr","locations":[{"start":{"line":2360,"column":15},"end":{"line":2360,"column":22}},{"start":{"line":2361,"column":4},"end":{"line":2361,"column":59}}]},"318":{"line":2363,"type":"if","locations":[{"start":{"line":2363,"column":2},"end":{"line":2363,"column":2}},{"start":{"line":2363,"column":2},"end":{"line":2363,"column":2}}]},"319":{"line":2395,"type":"if","locations":[{"start":{"line":2395,"column":2},"end":{"line":2395,"column":2}},{"start":{"line":2395,"column":2},"end":{"line":2395,"column":2}}]},"320":{"line":2400,"type":"cond-expr","locations":[{"start":{"line":2400,"column":24},"end":{"line":2400,"column":38}},{"start":{"line":2400,"column":41},"end":{"line":2400,"column":44}}]},"321":{"line":2401,"type":"if","locations":[{"start":{"line":2401,"column":2},"end":{"line":2401,"column":2}},{"start":{"line":2401,"column":2},"end":{"line":2401,"column":2}}]},"322":{"line":2401,"type":"binary-expr","locations":[{"start":{"line":2401,"column":6},"end":{"line":2401,"column":10}},{"start":{"line":2401,"column":14},"end":{"line":2401,"column":20}}]},"323":{"line":2404,"type":"cond-expr","locations":[{"start":{"line":2405,"column":8},"end":{"line":2405,"column":25}},{"start":{"line":2406,"column":8},"end":{"line":2406,"column":21}}]},"324":{"line":2404,"type":"binary-expr","locations":[{"start":{"line":2404,"column":9},"end":{"line":2404,"column":12}},{"start":{"line":2404,"column":16},"end":{"line":2404,"column":26}}]},"325":{"line":2453,"type":"if","locations":[{"start":{"line":2453,"column":2},"end":{"line":2453,"column":2}},{"start":{"line":2453,"column":2},"end":{"line":2453,"column":2}}]},"326":{"line":2457,"type":"binary-expr","locations":[{"start":{"line":2457,"column":12},"end":{"line":2457,"column":29}},{"start":{"line":2457,"column":34},"end":{"line":2457,"column":56}}]},"327":{"line":2461,"type":"if","locations":[{"start":{"line":2461,"column":2},"end":{"line":2461,"column":2}},{"start":{"line":2461,"column":2},"end":{"line":2461,"column":2}}]},"328":{"line":2466,"type":"if","locations":[{"start":{"line":2466,"column":2},"end":{"line":2466,"column":2}},{"start":{"line":2466,"column":2},"end":{"line":2466,"column":2}}]},"329":{"line":2474,"type":"if","locations":[{"start":{"line":2474,"column":2},"end":{"line":2474,"column":2}},{"start":{"line":2474,"column":2},"end":{"line":2474,"column":2}}]},"330":{"line":2515,"type":"if","locations":[{"start":{"line":2515,"column":6},"end":{"line":2515,"column":6}},{"start":{"line":2515,"column":6},"end":{"line":2515,"column":6}}]},"331":{"line":2544,"type":"if","locations":[{"start":{"line":2544,"column":2},"end":{"line":2544,"column":2}},{"start":{"line":2544,"column":2},"end":{"line":2544,"column":2}}]},"332":{"line":2544,"type":"binary-expr","locations":[{"start":{"line":2544,"column":6},"end":{"line":2544,"column":18}},{"start":{"line":2544,"column":22},"end":{"line":2544,"column":36}}]},"333":{"line":2545,"type":"if","locations":[{"start":{"line":2545,"column":4},"end":{"line":2545,"column":4}},{"start":{"line":2545,"column":4},"end":{"line":2545,"column":4}}]},"334":{"line":2549,"type":"if","locations":[{"start":{"line":2549,"column":4},"end":{"line":2549,"column":4}},{"start":{"line":2549,"column":4},"end":{"line":2549,"column":4}}]},"335":{"line":2557,"type":"if","locations":[{"start":{"line":2557,"column":2},"end":{"line":2557,"column":2}},{"start":{"line":2557,"column":2},"end":{"line":2557,"column":2}}]},"336":{"line":2558,"type":"if","locations":[{"start":{"line":2558,"column":4},"end":{"line":2558,"column":4}},{"start":{"line":2558,"column":4},"end":{"line":2558,"column":4}}]},"337":{"line":2564,"type":"binary-expr","locations":[{"start":{"line":2564,"column":2},"end":{"line":2564,"column":20}},{"start":{"line":2564,"column":25},"end":{"line":2564,"column":48}}]},"338":{"line":2590,"type":"if","locations":[{"start":{"line":2590,"column":2},"end":{"line":2590,"column":2}},{"start":{"line":2590,"column":2},"end":{"line":2590,"column":2}}]},"339":{"line":2611,"type":"binary-expr","locations":[{"start":{"line":2611,"column":9},"end":{"line":2611,"column":13}},{"start":{"line":2611,"column":17},"end":{"line":2611,"column":19}}]}},"code":["/*!"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","var MongooseError = require('./error');","var MixedSchema = require('./schema/mixed');","var Schema = require('./schema');","var ObjectExpectedError = require('./error/objectExpected');","var StrictModeError = require('./error/strict');","var ValidatorError = require('./schematype').ValidatorError;","var utils = require('./utils');","var clone = utils.clone;","var isMongooseObject = utils.isMongooseObject;","var inspect = require('util').inspect;","var ValidationError = MongooseError.ValidationError;","var InternalCache = require('./internal');","var deepEqual = utils.deepEqual;","var hooks = require('hooks-fixed');","var PromiseProvider = require('./promise_provider');","var DocumentArray;","var MongooseArray;","var Embedded;","var flatten = require('./services/common').flatten;","var mpath = require('mpath');","","/**"," * Document constructor."," *"," * @param {Object} obj the values to set"," * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data"," * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted on a document after it has was retreived from the db and fully hydrated by Mongoose."," * @event `save`: Emitted when the document is successfully saved"," * @api private"," */","","function Document(obj, fields, skipId) {","  this.$__ = new InternalCache;","  this.$__.emitter = new EventEmitter();","  this.isNew = true;","  this.errors = undefined;","","  var schema = this.schema;","","  if (typeof fields === 'boolean') {","    this.$__.strictMode = fields;","    fields = undefined;","  } else {","    this.$__.strictMode = schema.options && schema.options.strict;","    this.$__.selected = fields;","  }","","  var required = schema.requiredPaths(true);","  for (var i = 0; i < required.length; ++i) {","    this.$__.activePaths.require(required[i]);","  }","","  this.$__.emitter.setMaxListeners(0);","  this._doc = this.$__buildDoc(obj, fields, skipId);","","  if (obj) {","    if (obj instanceof Document) {","      this.isNew = obj.isNew;","    }","    // Skip set hooks","    if (this.$__original_set) {","      this.$__original_set(obj, undefined, true);","    } else {","      this.set(obj, undefined, true);","    }","  }","","  if (!schema.options.strict && obj) {","    var _this = this,","        keys = Object.keys(this._doc);","","    keys.forEach(function(key) {","      if (!(key in schema.tree)) {","        defineKey(key, null, _this);","      }","    });","  }","","  applyQueue(this);","}","","/*!"," * Document exposes the NodeJS event emitter API, so you can use"," * `on`, `once`, etc."," */","utils.each(","    ['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',","      'removeAllListeners', 'addListener'],","    function(emitterFn) {","      Document.prototype[emitterFn] = function() {","        return this.$__.emitter[emitterFn].apply(this.$__.emitter, arguments);","      };","    });","","Document.prototype.constructor = Document;","","/**"," * The documents schema."," *"," * @api public"," * @property schema"," */","","Document.prototype.schema;","","/**"," * Boolean flag specifying if the document is new."," *"," * @api public"," * @property isNew"," */","","Document.prototype.isNew;","","/**"," * The string version of this documents _id."," *"," * ####Note:"," *"," * This getter exists on all documents by default. The getter can be disabled by setting the `id` [option](/docs/guide.html#id) of its `Schema` to false at construction time."," *"," *     new Schema({ name: String }, { id: false });"," *"," * @api public"," * @see Schema options /docs/guide.html#options"," * @property id"," */","","Document.prototype.id;","","/**"," * Hash containing current validation errors."," *"," * @api public"," * @property errors"," */","","Document.prototype.errors;","","/**"," * Builds the default doc structure"," *"," * @param {Object} obj"," * @param {Object} [fields]"," * @param {Boolean} [skipId]"," * @return {Object}"," * @api private"," * @method $__buildDoc"," * @memberOf Document"," */","","Document.prototype.$__buildDoc = function(obj, fields, skipId) {","  var doc = {};","  var exclude = null;","  var keys;","  var ki;","  var _this = this;","","  // determine if this doc is a result of a query with","  // excluded fields","","  if (fields && utils.getFunctionName(fields.constructor) === 'Object') {","    keys = Object.keys(fields);","    ki = keys.length;","","    if (ki === 1 && keys[0] === '_id') {","      exclude = !!fields[keys[ki]];","    } else {","      while (ki--) {","        if (keys[ki] !== '_id' &&","            (!fields[keys[ki]] || typeof fields[keys[ki]] !== 'object')) {","          exclude = !fields[keys[ki]];","          break;","        }","      }","    }","  }","","  var paths = Object.keys(this.schema.paths);","  var plen = paths.length;","  var ii = 0;","","  var hasIncludedChildren = {};","  if (exclude === false && fields) {","    keys = Object.keys(fields);","    for (var j = 0; j < keys.length; ++j) {","      var parts = keys[j].split('.');","      var c = [];","      for (var k = 0; k < parts.length; ++k) {","        c.push(parts[k]);","        hasIncludedChildren[c.join('.')] = 1;","      }","    }","  }","","  for (; ii < plen; ++ii) {","    var p = paths[ii];","","    if (p === '_id') {","      if (skipId) {","        continue;","      }","      if (obj && '_id' in obj) {","        continue;","      }","    }","","    var type = this.schema.paths[p];","    var path = p.split('.');","    var len = path.length;","    var last = len - 1;","    var curPath = '';","    var doc_ = doc;","    var i = 0;","    var included = false;","","    for (; i < len; ++i) {","      var piece = path[i],","          def;","","      curPath += (!curPath.length ? '' : '.') + piece;","","      // support excluding intermediary levels","      if (exclude === true) {","        if (curPath in fields) {","          break;","        }","      } else if (exclude === false && fields && !included) {","        if (curPath in fields) {","          included = true;","        } else if (!hasIncludedChildren[curPath]) {","          break;","        }","      }","","      if (i === last) {","        if (fields && exclude !== null) {","          if (exclude === true) {","            // apply defaults to all non-excluded fields","            if (p in fields) {","              continue;","            }","","            def = type.getDefault(_this, false);","            if (typeof def !== 'undefined') {","              doc_[piece] = def;","              _this.$__.activePaths.default(p);","            }","          } else if (included) {","            // selected field","            def = type.getDefault(_this, false);","            if (typeof def !== 'undefined') {","              doc_[piece] = def;","              _this.$__.activePaths.default(p);","            }","          }","        } else {","          def = type.getDefault(_this, false);","          if (typeof def !== 'undefined') {","            doc_[piece] = def;","            _this.$__.activePaths.default(p);","          }","        }","      } else {","        doc_ = doc_[piece] || (doc_[piece] = {});","      }","    }","  }","","  return doc;","};","","/*!"," * Converts to POJO when you use the document for querying"," */","","Document.prototype.toBSON = function() {","  return this.toObject({","    transform: false,","    virtuals: false,","    _skipDepopulateTopLevel: true,","    depopulate: true,","    flattenDecimals: false","  });","};","","/**"," * Initializes the document without setters or marking anything modified."," *"," * Called internally after a document is returned from mongodb."," *"," * @param {Object} doc document returned by mongo"," * @param {Function} fn callback"," * @api public"," */","","Document.prototype.init = function(doc, opts, fn) {","  // do not prefix this method with $__ since its","  // used by public hooks","","  if (typeof opts === 'function') {","    fn = opts;","    opts = null;","  }","","  this.isNew = false;","","  // handle docs with populated paths","  // If doc._id is not null or undefined","  if (doc._id !== null && doc._id !== undefined &&","    opts && opts.populated && opts.populated.length) {","    var id = String(doc._id);","    for (var i = 0; i < opts.populated.length; ++i) {","      var item = opts.populated[i];","      if (item.isVirtual) {","        this.populated(item.path, utils.getValue(item.path, doc), item);","      } else {","        this.populated(item.path, item._docs[id], item);","      }","    }","  }","","  init(this, doc, this._doc);","  this.$__storeShard();","","  this.emit('init', this);","  this.constructor.emit('init', this);","","  if (fn) {","    fn(null);","  }","  return this;","};","","/*!"," * Init helper."," *"," * @param {Object} self document instance"," * @param {Object} obj raw mongodb doc"," * @param {Object} doc object we are initializing"," * @api private"," */","","function init(self, obj, doc, prefix) {","  prefix = prefix || '';","","  var keys = Object.keys(obj);","  var len = keys.length;","  var schema;","  var path;","  var i;","  var index = 0;","","  if (self.schema.options.retainKeyOrder) {","    while (index < len) {","      _init(index++);","    }","  } else {","    while (len--) {","      _init(len);","    }","  }","","  function _init(index) {","    i = keys[index];","    path = prefix + i;","    schema = self.schema.path(path);","","    // Should still work if not a model-level discriminator, but should not be","    // necessary. This is *only* to catch the case where we queried using the","    // base model and the discriminated model has a projection","    if (self.schema.$isRootDiscriminator && !self.isSelected(path)) {","      return;","    }","","    if (!schema && utils.isObject(obj[i]) &&","        (!obj[i].constructor || utils.getFunctionName(obj[i].constructor) === 'Object')) {","      // assume nested object","      if (!doc[i]) {","        doc[i] = {};","      }","      init(self, obj[i], doc[i], path + '.');","    } else if (!schema) {","      doc[i] = obj[i];","    } else {","      if (obj[i] === null) {","        doc[i] = null;","      } else if (obj[i] !== undefined) {","        if (schema) {","          try {","            doc[i] = schema.cast(obj[i], self, true);","          } catch (e) {","            self.invalidate(e.path, new ValidatorError({","              path: e.path,","              message: e.message,","              type: 'cast',","              value: e.value","            }));","          }","        } else {","          doc[i] = obj[i];","        }","      }","      // mark as hydrated","      if (!self.isModified(path)) {","        self.$__.activePaths.init(path);","      }","    }","  }","}","","/**"," * Stores the current values of the shard keys."," *"," * ####Note:"," *"," * _Shard key values do not / are not allowed to change._"," *"," * @api private"," * @method $__storeShard"," * @memberOf Document"," */","","Document.prototype.$__storeShard = function() {","  // backwards compat","  var key = this.schema.options.shardKey || this.schema.options.shardkey;","  if (!(key && utils.getFunctionName(key.constructor) === 'Object')) {","    return;","  }","","  var orig = this.$__.shardval = {},","      paths = Object.keys(key),","      len = paths.length,","      val;","","  for (var i = 0; i < len; ++i) {","    val = this.getValue(paths[i]);","    if (isMongooseObject(val)) {","      orig[paths[i]] = val.toObject({depopulate: true, _isNested: true});","    } else if (val !== null && val !== undefined && val.valueOf &&","          // Explicitly don't take value of dates","        (!val.constructor || utils.getFunctionName(val.constructor) !== 'Date')) {","      orig[paths[i]] = val.valueOf();","    } else {","      orig[paths[i]] = val;","    }","  }","};","","/*!"," * Set up middleware support"," */","","for (var k in hooks) {","  if (k === 'pre' || k === 'post') {","    Document.prototype['$' + k] = Document['$' + k] = hooks[k];","  } else {","    Document.prototype[k] = Document[k] = hooks[k];","  }","}","","/**"," * Sends an update command with this document `_id` as the query selector."," *"," * ####Example:"," *"," *     weirdCar.update({$inc: {wheels:1}}, { w: 1 }, callback);"," *"," * ####Valid options:"," *"," *  - same as in [Model.update](#model_Model.update)"," *"," * @see Model.update #model_Model.update"," * @param {Object} doc"," * @param {Object} options"," * @param {Function} callback"," * @return {Query}"," * @api public"," */","","Document.prototype.update = function update() {","  var args = utils.args(arguments);","  args.unshift({_id: this._id});","  return this.constructor.update.apply(this.constructor, args);","};","","/**"," * Sets the value of a path, or many paths."," *"," * ####Example:"," *"," *     // path, value"," *     doc.set(path, value)"," *"," *     // object"," *     doc.set({"," *         path  : value"," *       , path2 : {"," *            path  : value"," *         }"," *     })"," *"," *     // on-the-fly cast to number"," *     doc.set(path, value, Number)"," *"," *     // on-the-fly cast to string"," *     doc.set(path, value, String)"," *"," *     // changing strict mode behavior"," *     doc.set(path, value, { strict: false });"," *"," * @param {String|Object} path path or object of key/vals to set"," * @param {Any} val the value to set"," * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for \"on-the-fly\" attributes"," * @param {Object} [options] optionally specify options that modify the behavior of the set"," * @api public"," */","","Document.prototype.set = function(path, val, type, options) {","  if (type && utils.getFunctionName(type.constructor) === 'Object') {","    options = type;","    type = undefined;","  }","","  var merge = options && options.merge,","      adhoc = type && type !== true,","      constructing = type === true,","      adhocs;","","  var strict = options && 'strict' in options","      ? options.strict","      : this.$__.strictMode;","","  if (adhoc) {","    adhocs = this.$__.adhocPaths || (this.$__.adhocPaths = {});","    adhocs[path] = Schema.interpretAsType(path, type, this.schema.options);","  }","","  if (typeof path !== 'string') {","    // new Document({ key: val })","","    if (path === null || path === void 0) {","      var _ = path;","      path = val;","      val = _;","    } else {","      var prefix = val","          ? val + '.'","          : '';","","      if (path instanceof Document) {","        if (path.$__isNested) {","          path = path.toObject();","        } else {","          path = path._doc;","        }","      }","","      var keys = Object.keys(path);","      var len = keys.length;","      var i = 0;","      var pathtype;","      var key;","","      if (len === 0 && !this.schema.options.minimize) {","        if (val) {","          this.set(val, {});","        }","        return this;","      }","","      if (this.schema.options.retainKeyOrder) {","        while (i < len) {","          _handleIndex.call(this, i++);","        }","      } else {","        while (len--) {","          _handleIndex.call(this, len);","        }","      }","","      return this;","    }","  }","","  function _handleIndex(i) {","    key = keys[i];","    var pathName = prefix + key;","    pathtype = this.schema.pathType(pathName);","","    if (path[key] !== null","        && path[key] !== void 0","          // need to know if plain object - no Buffer, ObjectId, ref, etc","        && utils.isObject(path[key])","        && (!path[key].constructor || utils.getFunctionName(path[key].constructor) === 'Object')","        && pathtype !== 'virtual'","        && pathtype !== 'real'","        && !(this.$__path(pathName) instanceof MixedSchema)","        && !(this.schema.paths[pathName] &&","        this.schema.paths[pathName].options &&","        this.schema.paths[pathName].options.ref)) {","      this.set(path[key], prefix + key, constructing);","    } else if (strict) {","      // Don't overwrite defaults with undefined keys (gh-3981)","      if (constructing && path[key] === void 0 &&","          this.get(key) !== void 0) {","        return;","      }","","      if (pathtype === 'real' || pathtype === 'virtual') {","        // Check for setting single embedded schema to document (gh-3535)","        var p = path[key];","        if (this.schema.paths[pathName] &&","            this.schema.paths[pathName].$isSingleNested &&","            path[key] instanceof Document) {","          p = p.toObject({ virtuals: false, transform: false });","        }","        this.set(prefix + key, p, constructing);","      } else if (pathtype === 'nested' && path[key] instanceof Document) {","        this.set(prefix + key,","            path[key].toObject({transform: false}), constructing);","      } else if (strict === 'throw') {","        if (pathtype === 'nested') {","          throw new ObjectExpectedError(key, path[key]);","        } else {","          throw new StrictModeError(key);","        }","      }","    } else if (path[key] !== void 0) {","      this.set(prefix + key, path[key], constructing);","    }","  }","","  var pathType = this.schema.pathType(path);","  if (pathType === 'nested' && val) {","    if (utils.isObject(val) &&","        (!val.constructor || utils.getFunctionName(val.constructor) === 'Object')) {","      if (!merge) {","        this.setValue(path, null);","        cleanModifiedSubpaths(this, path);","      }","","      if (Object.keys(val).length === 0) {","        this.setValue(path, {});","        this.markModified(path);","        cleanModifiedSubpaths(this, path);","      } else {","        this.set(val, path, constructing);","      }","      return this;","    }","    this.invalidate(path, new MongooseError.CastError('Object', val, path));","    return this;","  }","","  var schema;","  var parts = path.split('.');","","  if (pathType === 'adhocOrUndefined' && strict) {","    // check for roots that are Mixed types","    var mixed;","","    for (i = 0; i < parts.length; ++i) {","      var subpath = parts.slice(0, i + 1).join('.');","      schema = this.schema.path(subpath);","      if (schema instanceof MixedSchema) {","        // allow changes to sub paths of mixed types","        mixed = true;","        break;","      }","","      // If path is underneath a virtual, bypass everything and just set it.","      if (i + 1 < parts.length && this.schema.pathType(subpath) === 'virtual') {","        mpath.set(path, val, this);","        return this;","      }","    }","","    if (!mixed) {","      if (strict === 'throw') {","        throw new StrictModeError(path);","      }","      return this;","    }","  } else if (pathType === 'virtual') {","    schema = this.schema.virtualpath(path);","    schema.applySetters(val, this);","    return this;","  } else {","    schema = this.$__path(path);","  }","","  var pathToMark;","","  // When using the $set operator the path to the field must already exist.","  // Else mongodb throws: \"LEFT_SUBFIELD only supports Object\"","","  if (parts.length <= 1) {","    pathToMark = path;","  } else {","    for (i = 0; i < parts.length; ++i) {","      subpath = parts.slice(0, i + 1).join('.');","      if (this.isDirectModified(subpath) // earlier prefixes that are already","            // marked as dirty have precedence","          || this.get(subpath) === null) {","        pathToMark = subpath;","        break;","      }","    }","","    if (!pathToMark) {","      pathToMark = path;","    }","  }","","  // if this doc is being constructed we should not trigger getters","  var priorVal = constructing","      ? undefined","      : this.getValue(path);","","  if (!schema) {","    this.$__set(pathToMark, path, constructing, parts, schema, val, priorVal);","    return this;","  }","","  var shouldSet = true;","  try {","    // If the user is trying to set a ref path to a document with","    // the correct model name, treat it as populated","    var didPopulate = false;","    if (schema.options &&","        schema.options.ref &&","        val instanceof Document &&","        (schema.options.ref === val.constructor.modelName || schema.options.ref === val.constructor.baseModelName)) {","      if (this.ownerDocument) {","        this.ownerDocument().populated(this.$__fullPath(path),","          val._id, {model: val.constructor});","      } else {","        this.populated(path, val._id, {model: val.constructor});","      }","      didPopulate = true;","    }","","    var popOpts;","    if (schema.options &&","        Array.isArray(schema.options.type) &&","        schema.options.type.length &&","        schema.options.type[0].ref &&","        Array.isArray(val) &&","        val.length > 0 &&","        val[0] instanceof Document &&","        val[0].constructor.modelName &&","        (schema.options.type[0].ref === val[0].constructor.baseModelName || schema.options.type[0].ref === val[0].constructor.modelName)) {","      if (this.ownerDocument) {","        popOpts = { model: val[0].constructor };","        this.ownerDocument().populated(this.$__fullPath(path),","          val.map(function(v) { return v._id; }), popOpts);","      } else {","        popOpts = { model: val[0].constructor };","        this.populated(path, val.map(function(v) { return v._id; }), popOpts);","      }","      didPopulate = true;","    }","    val = schema.applySetters(val, this, false, priorVal);","","    if (!didPopulate && this.$__.populated) {","      delete this.$__.populated[path];","    }","","    this.$markValid(path);","  } catch (e) {","    this.invalidate(path,","      new MongooseError.CastError(schema.instance, val, path, e));","    shouldSet = false;","  }","","  if (shouldSet) {","    this.$__set(pathToMark, path, constructing, parts, schema, val, priorVal);","  }","","  if (schema.$isSingleNested && (this.isDirectModified(path) || val == null)) {","    cleanModifiedSubpaths(this, path);","  }","","  return this;","};","","/*!"," * ignore"," */","","function cleanModifiedSubpaths(doc, path) {","  var _modifiedPaths = Object.keys(doc.$__.activePaths.states.modify);","  var _numModifiedPaths = _modifiedPaths.length;","  for (var j = 0; j < _numModifiedPaths; ++j) {","    if (_modifiedPaths[j].indexOf(path + '.') === 0) {","      delete doc.$__.activePaths.states.modify[_modifiedPaths[j]];","    }","  }","}","","/**"," * Determine if we should mark this change as modified."," *"," * @return {Boolean}"," * @api private"," * @method $__shouldModify"," * @memberOf Document"," */","","Document.prototype.$__shouldModify = function(pathToMark, path, constructing, parts, schema, val, priorVal) {","  if (this.isNew) {","    return true;","  }","","  if (undefined === val && !this.isSelected(path)) {","    // when a path is not selected in a query, its initial","    // value will be undefined.","    return true;","  }","","  if (undefined === val && path in this.$__.activePaths.states.default) {","    // we're just unsetting the default value which was never saved","    return false;","  }","","  // gh-3992: if setting a populated field to a doc, don't mark modified","  // if they have the same _id","  if (this.populated(path) &&","      val instanceof Document &&","      deepEqual(val._id, priorVal)) {","    return false;","  }","","  if (!deepEqual(val, priorVal || this.get(path))) {","    return true;","  }","","  if (!constructing &&","      val !== null &&","      val !== undefined &&","      path in this.$__.activePaths.states.default &&","      deepEqual(val, schema.getDefault(this, constructing))) {","    // a path with a default was $unset on the server","    // and the user is setting it to the same value again","    return true;","  }","  return false;","};","","/**"," * Handles the actual setting of the value and marking the path modified if appropriate."," *"," * @api private"," * @method $__set"," * @memberOf Document"," */","","Document.prototype.$__set = function(pathToMark, path, constructing, parts, schema, val, priorVal) {","  Embedded = Embedded || require('./types/embedded');","","  var shouldModify = this.$__shouldModify(pathToMark, path, constructing, parts,","    schema, val, priorVal);","  var _this = this;","","  if (shouldModify) {","    this.markModified(pathToMark, val);","","    // handle directly setting arrays (gh-1126)","    MongooseArray || (MongooseArray = require('./types/array'));","    if (val && val.isMongooseArray) {","      val._registerAtomic('$set', val);","","      // Small hack for gh-1638: if we're overwriting the entire array, ignore","      // paths that were modified before the array overwrite","      this.$__.activePaths.forEach(function(modifiedPath) {","        if (modifiedPath.indexOf(path + '.') === 0) {","          _this.$__.activePaths.ignore(modifiedPath);","        }","      });","    }","  }","","  var obj = this._doc;","  var i = 0;","  var l = parts.length;","  var cur = '';","","  for (; i < l; i++) {","    var next = i + 1;","    var last = next === l;","    cur += (cur ? '.' + parts[i] : parts[i]);","","    if (last) {","      obj[parts[i]] = val;","    } else {","      if (obj[parts[i]] && utils.getFunctionName(obj[parts[i]].constructor) === 'Object') {","        obj = obj[parts[i]];","      } else if (obj[parts[i]] && obj[parts[i]] instanceof Embedded) {","        obj = obj[parts[i]];","      } else if (obj[parts[i]] && obj[parts[i]].$isSingleNested) {","        obj = obj[parts[i]];","      } else if (obj[parts[i]] && Array.isArray(obj[parts[i]])) {","        obj = obj[parts[i]];","      } else {","        this.set(cur, {});","        obj = obj[parts[i]];","      }","    }","  }","};","","/**"," * Gets a raw value from a path (no getters)"," *"," * @param {String} path"," * @api private"," */","","Document.prototype.getValue = function(path) {","  return utils.getValue(path, this._doc);","};","","/**"," * Sets a raw value for a path (no casting, setters, transformations)"," *"," * @param {String} path"," * @param {Object} value"," * @api private"," */","","Document.prototype.setValue = function(path, val) {","  utils.setValue(path, val, this._doc);","  return this;","};","","/**"," * Returns the value of a path."," *"," * ####Example"," *"," *     // path"," *     doc.get('age') // 47"," *"," *     // dynamic casting to a string"," *     doc.get('age', String) // \"47\""," *"," * @param {String} path"," * @param {Schema|String|Number|Buffer|*} [type] optionally specify a type for on-the-fly attributes"," * @api public"," */","","Document.prototype.get = function(path, type) {","  var adhoc;","  if (type) {","    adhoc = Schema.interpretAsType(path, type, this.schema.options);","  }","","  var schema = this.$__path(path) || this.schema.virtualpath(path),","      pieces = path.split('.'),","      obj = this._doc;","","  for (var i = 0, l = pieces.length; i < l; i++) {","    obj = obj === null || obj === void 0","        ? undefined","        : obj[pieces[i]];","  }","","  if (adhoc) {","    obj = adhoc.cast(obj);","  }","","  // Check if this path is populated - don't apply getters if it is,","  // because otherwise its a nested object. See gh-3357","  if (schema && !this.populated(path)) {","    obj = schema.applyGetters(obj, this);","  }","","  return obj;","};","","/**"," * Returns the schematype for the given `path`."," *"," * @param {String} path"," * @api private"," * @method $__path"," * @memberOf Document"," */","","Document.prototype.$__path = function(path) {","  var adhocs = this.$__.adhocPaths,","      adhocType = adhocs && adhocs[path];","","  if (adhocType) {","    return adhocType;","  }","  return this.schema.path(path);","};","","/**"," * Marks the path as having pending changes to write to the db."," *"," * _Very helpful when using [Mixed](./schematypes.html#mixed) types._"," *"," * ####Example:"," *"," *     doc.mixed.type = 'changed';"," *     doc.markModified('mixed.type');"," *     doc.save() // changes to mixed.type are now persisted"," *"," * @param {String} path the path to mark modified"," * @api public"," */","","Document.prototype.markModified = function(path) {","  this.$__.activePaths.modify(path);","};","","/**"," * Clears the modified state on the specified path."," *"," * ####Example:"," *"," *     doc.foo = 'bar';"," *     doc.unmarkModified('foo');"," *     doc.save() // changes to foo will not be persisted"," *"," * @param {String} path the path to unmark modified"," * @api public"," */","","Document.prototype.unmarkModified = function(path) {","  this.$__.activePaths.init(path);","};","","/**"," * Don't run validation on this path or persist changes to this path."," *"," * ####Example:"," *"," *     doc.foo = null;"," *     doc.$ignore('foo');"," *     doc.save() // changes to foo will not be persisted and validators won't be run"," *"," * @memberOf Document"," * @method $ignore"," * @param {String} path the path to ignore"," * @api public"," */","","Document.prototype.$ignore = function(path) {","  this.$__.activePaths.ignore(path);","};","","/**"," * Returns the list of paths that have been modified."," *"," * @return {Array}"," * @api public"," */","","Document.prototype.modifiedPaths = function() {","  var directModifiedPaths = Object.keys(this.$__.activePaths.states.modify);","  return directModifiedPaths.reduce(function(list, path) {","    var parts = path.split('.');","    return list.concat(parts.reduce(function(chains, part, i) {","      return chains.concat(parts.slice(0, i).concat(part).join('.'));","    }, []).filter(function(chain) {","      return (list.indexOf(chain) === -1);","    }));","  }, []);","};","","/**"," * Returns true if this document was modified, else false."," *"," * If `path` is given, checks if a path or any full path containing `path` as part of its path chain has been modified."," *"," * ####Example"," *"," *     doc.set('documents.0.title', 'changed');"," *     doc.isModified()                      // true"," *     doc.isModified('documents')           // true"," *     doc.isModified('documents.0.title')   // true"," *     doc.isModified('documents otherProp') // true"," *     doc.isDirectModified('documents')     // false"," *"," * @param {String} [path] optional"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isModified = function(paths) {","  if (paths) {","    if (!Array.isArray(paths)) {","      paths = paths.split(' ');","    }","    var modified = this.modifiedPaths();","    var directModifiedPaths = Object.keys(this.$__.activePaths.states.modify);","    var isModifiedChild = paths.some(function(path) {","      return !!~modified.indexOf(path);","    });","    return isModifiedChild || paths.some(function(path) {","      return directModifiedPaths.some(function(mod) {","        return mod === path || path.indexOf(mod + '.') === 0;","      });","    });","  }","  return this.$__.activePaths.some('modify');","};","","/**"," * Checks if a path is set to its default."," *"," * ####Example"," *"," *     MyModel = mongoose.model('test', { name: { type: String, default: 'Val '} });"," *     var m = new MyModel();"," *     m.$isDefault('name'); // true"," *"," * @memberOf Document"," * @method $isDefault"," * @param {String} [path]"," * @return {Boolean}"," * @api public"," */","","Document.prototype.$isDefault = function(path) {","  return (path in this.$__.activePaths.states.default);","};","","/**"," * Returns true if `path` was directly set and modified, else false."," *"," * ####Example"," *"," *     doc.set('documents.0.title', 'changed');"," *     doc.isDirectModified('documents.0.title') // true"," *     doc.isDirectModified('documents') // false"," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isDirectModified = function(path) {","  return (path in this.$__.activePaths.states.modify);","};","","/**"," * Checks if `path` was initialized."," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isInit = function(path) {","  return (path in this.$__.activePaths.states.init);","};","","/**"," * Checks if `path` was selected in the source query which initialized this document."," *"," * ####Example"," *"," *     Thing.findOne().select('name').exec(function (err, doc) {"," *        doc.isSelected('name') // true"," *        doc.isSelected('age')  // false"," *     })"," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isSelected = function isSelected(path) {","  if (this.$__.selected) {","    if (path === '_id') {","      return this.$__.selected._id !== 0;","    }","","    var paths = Object.keys(this.$__.selected);","    var i = paths.length;","    var inclusive = null;","    var cur;","","    if (i === 1 && paths[0] === '_id') {","      // only _id was selected.","      return this.$__.selected._id === 0;","    }","","    while (i--) {","      cur = paths[i];","      if (cur === '_id') {","        continue;","      }","      if (this.$__.selected[cur] && this.$__.selected[cur].$meta) {","        continue;","      }","      inclusive = !!this.$__.selected[cur];","      break;","    }","","    if (inclusive === null) {","      return true;","    }","","    if (path in this.$__.selected) {","      return inclusive;","    }","","    i = paths.length;","    var pathDot = path + '.';","","    while (i--) {","      cur = paths[i];","      if (cur === '_id') {","        continue;","      }","","      if (cur.indexOf(pathDot) === 0) {","        return inclusive || cur !== pathDot;","      }","","      if (pathDot.indexOf(cur + '.') === 0) {","        return inclusive;","      }","    }","","    return !inclusive;","  }","","  return true;","};","","/**"," * Checks if `path` was explicitly selected. If no projection, always returns"," * true."," *"," * ####Example"," *"," *     Thing.findOne().select('nested.name').exec(function (err, doc) {"," *        doc.isDirectSelected('nested.name') // true"," *        doc.isDirectSelected('nested.otherName') // false"," *        doc.isDirectSelected('nested')  // false"," *     })"," *"," * @param {String} path"," * @return {Boolean}"," * @api public"," */","","Document.prototype.isDirectSelected = function isDirectSelected(path) {","  if (this.$__.selected) {","    if (path === '_id') {","      return this.$__.selected._id !== 0;","    }","","    var paths = Object.keys(this.$__.selected);","    var i = paths.length;","    var inclusive = null;","    var cur;","","    if (i === 1 && paths[0] === '_id') {","      // only _id was selected.","      return this.$__.selected._id === 0;","    }","","    while (i--) {","      cur = paths[i];","      if (cur === '_id') {","        continue;","      }","      if (this.$__.selected[cur] && this.$__.selected[cur].$meta) {","        continue;","      }","      inclusive = !!this.$__.selected[cur];","      break;","    }","","    if (inclusive === null) {","      return true;","    }","","    if (path in this.$__.selected) {","      return inclusive;","    }","","    return !inclusive;","  }","","  return true;","};","","/**"," * Executes registered validation rules for this document."," *"," * ####Note:"," *"," * This method is called `pre` save and if a validation rule is violated, [save](#model_Model-save) is aborted and the error is returned to your `callback`."," *"," * ####Example:"," *"," *     doc.validate(function (err) {"," *       if (err) handleError(err);"," *       else // validation passed"," *     });"," *"," * @param {Object} optional options internal options"," * @param {Function} callback optional callback called after validation completes, passing an error if one occurred"," * @return {Promise} Promise"," * @api public"," */","","Document.prototype.validate = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","","  this.$__validate(callback || function() {});","};","","/*!"," * ignore"," */","","function _getPathsToValidate(doc) {","  var i;","","  // only validate required fields when necessary","  var paths = Object.keys(doc.$__.activePaths.states.require).filter(function(path) {","    if (!doc.isSelected(path) && !doc.isModified(path)) {","      return false;","    }","    var p = doc.schema.path(path);","    if (typeof p.originalRequiredValue === 'function') {","      return p.originalRequiredValue.call(doc);","    }","    return true;","  });","","  paths = paths.concat(Object.keys(doc.$__.activePaths.states.init));","  paths = paths.concat(Object.keys(doc.$__.activePaths.states.modify));","  paths = paths.concat(Object.keys(doc.$__.activePaths.states.default));","","  var subdocs = doc.$__getAllSubdocs();","  var subdoc;","  var len = subdocs.length;","  for (i = 0; i < len; ++i) {","    subdoc = subdocs[i];","    if (subdoc.$isSingleNested &&","        doc.isModified(subdoc.$basePath) &&","        !doc.isDirectModified(subdoc.$basePath)) {","      paths.push(subdoc.$basePath);","    }","  }","","  // gh-661: if a whole array is modified, make sure to run validation on all","  // the children as well","  for (i = 0; i < paths.length; ++i) {","    var path = paths[i];","    var val = doc.getValue(path);","    if (val && val.isMongooseArray && !Buffer.isBuffer(val) && !val.isMongooseDocumentArray) {","      var numElements = val.length;","      for (var j = 0; j < numElements; ++j) {","        paths.push(path + '.' + j);","      }","    }","  }","","  var flattenOptions = { skipArrays: true };","  for (i = 0; i < paths.length; ++i) {","    var pathToCheck = paths[i];","    if (doc.schema.nested[pathToCheck]) {","      var _v = doc.getValue(pathToCheck);","      if (isMongooseObject(_v)) {","        _v = _v.toObject({ transform: false });","      }","      var flat = flatten(_v, '', flattenOptions);","      var _subpaths = Object.keys(flat).map(function(p) {","        return pathToCheck + '.' + p;","      });","      paths = paths.concat(_subpaths);","    }","  }","","  return paths;","}","","/*!"," * ignore"," */","","Document.prototype.$__validate = function(callback) {","  var _this = this;","  var _complete = function() {","    var err = _this.$__.validationError;","    _this.$__.validationError = undefined;","    _this.emit('validate', _this);","    _this.constructor.emit('validate', _this);","    if (err) {","      for (var key in err.errors) {","        // Make sure cast errors persist","        if (!_this.__parent && err.errors[key] instanceof MongooseError.CastError) {","          _this.invalidate(key, err.errors[key]);","        }","      }","","      return err;","    }","  };","","  // only validate required fields when necessary","  var paths = _getPathsToValidate(this);","","  if (paths.length === 0) {","    process.nextTick(function() {","      var error = _complete();","      if (error) {","        return _this.schema.s.hooks.execPost('validate:error', _this, [ _this], { error: error }, function(error) {","          callback(error);","        });","      }","      callback();","    });","  }","","  var validating = {},","      total = 0;","","  var complete = function() {","    var error = _complete();","    if (error) {","      return _this.schema.s.hooks.execPost('validate:error', _this, [ _this], { error: error }, function(error) {","        callback(error);","      });","    }","    callback();","  };","","  var validatePath = function(path) {","    if (validating[path]) {","      return;","    }","","    validating[path] = true;","    total++;","","    process.nextTick(function() {","      var p = _this.schema.path(path);","      if (!p) {","        return --total || complete();","      }","","      // If user marked as invalid or there was a cast error, don't validate","      if (!_this.$isValid(path)) {","        --total || complete();","        return;","      }","","      var val = _this.getValue(path);","      p.doValidate(val, function(err) {","        if (err) {","          _this.invalidate(path, err, undefined, true);","        }","        --total || complete();","      }, _this);","    });","  };","","  paths.forEach(validatePath);","};","","/**"," * Executes registered validation rules (skipping asynchronous validators) for this document."," *"," * ####Note:"," *"," * This method is useful if you need synchronous validation."," *"," * ####Example:"," *"," *     var err = doc.validateSync();"," *     if ( err ){"," *       handleError( err );"," *     } else {"," *       // validation passed"," *     }"," *"," * @param {Array|string} pathsToValidate only validate the given paths"," * @return {MongooseError|undefined} MongooseError if there are errors during validation, or undefined if there is no error."," * @api public"," */","","Document.prototype.validateSync = function(pathsToValidate) {","  var _this = this;","","  if (typeof pathsToValidate === 'string') {","    pathsToValidate = pathsToValidate.split(' ');","  }","","  // only validate required fields when necessary","  var paths = _getPathsToValidate(this);","","  if (pathsToValidate && pathsToValidate.length) {","    var tmp = [];","    for (var i = 0; i < paths.length; ++i) {","      if (pathsToValidate.indexOf(paths[i]) !== -1) {","        tmp.push(paths[i]);","      }","    }","    paths = tmp;","  }","","  var validating = {};","","  paths.forEach(function(path) {","    if (validating[path]) {","      return;","    }","","    validating[path] = true;","","    var p = _this.schema.path(path);","    if (!p) {","      return;","    }","    if (!_this.$isValid(path)) {","      return;","    }","","    var val = _this.getValue(path);","    var err = p.doValidateSync(val, _this);","    if (err) {","      _this.invalidate(path, err, undefined, true);","    }","  });","","  var err = _this.$__.validationError;","  _this.$__.validationError = undefined;","  _this.emit('validate', _this);","  _this.constructor.emit('validate', _this);","","  if (err) {","    for (var key in err.errors) {","      // Make sure cast errors persist","      if (err.errors[key] instanceof MongooseError.CastError) {","        _this.invalidate(key, err.errors[key]);","      }","    }","  }","","  return err;","};","","/**"," * Marks a path as invalid, causing validation to fail."," *"," * The `errorMsg` argument will become the message of the `ValidationError`."," *"," * The `value` argument (if passed) will be available through the `ValidationError.value` property."," *"," *     doc.invalidate('size', 'must be less than 20', 14);",""," *     doc.validate(function (err) {"," *       console.log(err)"," *       // prints"," *       { message: 'Validation failed',"," *         name: 'ValidationError',"," *         errors:"," *          { size:"," *             { message: 'must be less than 20',"," *               name: 'ValidatorError',"," *               path: 'size',"," *               type: 'user defined',"," *               value: 14 } } }"," *     })"," *"," * @param {String} path the field to invalidate"," * @param {String|Error} errorMsg the error which states the reason `path` was invalid"," * @param {Object|String|Number|any} value optional invalid value"," * @param {String} [kind] optional `kind` property for the error"," * @return {ValidationError} the current ValidationError, with all currently invalidated paths"," * @api public"," */","","Document.prototype.invalidate = function(path, err, val, kind) {","  if (!this.$__.validationError) {","    this.$__.validationError = new ValidationError(this);","  }","","  if (this.$__.validationError.errors[path]) {","    return;","  }","","  if (!err || typeof err === 'string') {","    err = new ValidatorError({","      path: path,","      message: err,","      type: kind || 'user defined',","      value: val","    });","  }","","  if (this.$__.validationError === err) {","    return this.$__.validationError;","  }","","  this.$__.validationError.errors[path] = err;","  return this.$__.validationError;","};","","/**"," * Marks a path as valid, removing existing validation errors."," *"," * @param {String} path the field to mark as valid"," * @api private"," * @method $markValid"," * @receiver Document"," */","","Document.prototype.$markValid = function(path) {","  if (!this.$__.validationError || !this.$__.validationError.errors[path]) {","    return;","  }","","  delete this.$__.validationError.errors[path];","  if (Object.keys(this.$__.validationError.errors).length === 0) {","    this.$__.validationError = null;","  }","};","","/**"," * Checks if a path is invalid"," *"," * @param {String} path the field to check"," * @method $isValid"," * @api private"," * @receiver Document"," */","","Document.prototype.$isValid = function(path) {","  return !this.$__.validationError || !this.$__.validationError.errors[path];","};","","/**"," * Resets the internal modified state of this document."," *"," * @api private"," * @return {Document}"," * @method $__reset"," * @memberOf Document"," */","","Document.prototype.$__reset = function reset() {","  var _this = this;","  DocumentArray || (DocumentArray = require('./types/documentarray'));","","  this.$__.activePaths","  .map('init', 'modify', function(i) {","    return _this.getValue(i);","  })","  .filter(function(val) {","    return val && val instanceof Array && val.isMongooseDocumentArray && val.length;","  })","  .forEach(function(array) {","    var i = array.length;","    while (i--) {","      var doc = array[i];","      if (!doc) {","        continue;","      }","      doc.$__reset();","    }","  });","","  // clear atomics","  this.$__dirty().forEach(function(dirt) {","    var type = dirt.value;","    if (type && type._atomics) {","      type._atomics = {};","    }","  });","","  // Clear 'dirty' cache","  this.$__.activePaths.clear('modify');","  this.$__.activePaths.clear('default');","  this.$__.validationError = undefined;","  this.errors = undefined;","  _this = this;","  this.schema.requiredPaths().forEach(function(path) {","    _this.$__.activePaths.require(path);","  });","","  return this;","};","","/**"," * Returns this documents dirty paths / vals."," *"," * @api private"," * @method $__dirty"," * @memberOf Document"," */","","Document.prototype.$__dirty = function() {","  var _this = this;","","  var all = this.$__.activePaths.map('modify', function(path) {","    return {","      path: path,","      value: _this.getValue(path),","      schema: _this.$__path(path)","    };","  });","","  // gh-2558: if we had to set a default and the value is not undefined,","  // we have to save as well","  all = all.concat(this.$__.activePaths.map('default', function(path) {","    if (path === '_id' || !_this.getValue(path)) {","      return;","    }","    return {","      path: path,","      value: _this.getValue(path),","      schema: _this.$__path(path)","    };","  }));","","  // Sort dirty paths in a flat hierarchy.","  all.sort(function(a, b) {","    return (a.path < b.path ? -1 : (a.path > b.path ? 1 : 0));","  });","","  // Ignore \"foo.a\" if \"foo\" is dirty already.","  var minimal = [],","      lastPath,","      top;","","  all.forEach(function(item) {","    if (!item) {","      return;","    }","    if (item.path.indexOf(lastPath) !== 0) {","      lastPath = item.path + '.';","      minimal.push(item);","      top = item;","    } else {","      // special case for top level MongooseArrays","      if (top.value && top.value._atomics && top.value.hasAtomics()) {","        // the `top` array itself and a sub path of `top` are being modified.","        // the only way to honor all of both modifications is through a $set","        // of entire array.","        top.value._atomics = {};","        top.value._atomics.$set = top.value;","      }","    }","  });","","  top = lastPath = null;","  return minimal;","};","","/*!"," * Compiles schemas."," */","","function compile(tree, proto, prefix, options) {","  var keys = Object.keys(tree),","      i = keys.length,","      limb,","      key;","","  while (i--) {","    key = keys[i];","    limb = tree[key];","","    defineKey(key,","        ((utils.getFunctionName(limb.constructor) === 'Object'","        && Object.keys(limb).length)","        && (!limb[options.typeKey] || (options.typeKey === 'type' && limb.type.type))","            ? limb","            : null)","        , proto","        , prefix","        , keys","        , options);","  }","}","","// gets descriptors for all properties of `object`","// makes all properties non-enumerable to match previous behavior to #2211","function getOwnPropertyDescriptors(object) {","  var result = {};","","  Object.getOwnPropertyNames(object).forEach(function(key) {","    result[key] = Object.getOwnPropertyDescriptor(object, key);","    result[key].enumerable = true;","  });","","  return result;","}","","/*!"," * Defines the accessor named prop on the incoming prototype."," */","","function defineKey(prop, subprops, prototype, prefix, keys, options) {","  var path = (prefix ? prefix + '.' : '') + prop;","  prefix = prefix || '';","","  if (subprops) {","    Object.defineProperty(prototype, prop, {","      enumerable: true,","      configurable: true,","      get: function() {","        var _this = this;","        if (!this.$__.getters) {","          this.$__.getters = {};","        }","","        if (!this.$__.getters[path]) {","          var nested = Object.create(Object.getPrototypeOf(this), getOwnPropertyDescriptors(this));","","          // save scope for nested getters/setters","          if (!prefix) {","            nested.$__.scope = this;","          }","","          // shadow inherited getters from sub-objects so","          // thing.nested.nested.nested... doesn't occur (gh-366)","          var i = 0,","              len = keys.length;","","          for (; i < len; ++i) {","            // over-write the parents getter without triggering it","            Object.defineProperty(nested, keys[i], {","              enumerable: false,    // It doesn't show up.","              writable: true,       // We can set it later.","              configurable: true,   // We can Object.defineProperty again.","              value: undefined      // It shadows its parent.","            });","          }","","          Object.defineProperty(nested, 'toObject', {","            enumerable: true,","            configurable: true,","            writable: false,","            value: function() {","              return clone(_this.get(path), { retainKeyOrder: true });","            }","          });","","          Object.defineProperty(nested, 'toJSON', {","            enumerable: true,","            configurable: true,","            writable: false,","            value: function() {","              return _this.get(path);","            }","          });","","          Object.defineProperty(nested, '$__isNested', {","            enumerable: true,","            configurable: true,","            writable: false,","            value: true","          });","","          compile(subprops, nested, path, options);","          this.$__.getters[path] = nested;","        }","","        return this.$__.getters[path];","      },","      set: function(v) {","        if (v instanceof Document) {","          v = v.toObject({ transform: false });","        }","        return (this.$__.scope || this).set(path, v);","      }","    });","  } else {","    Object.defineProperty(prototype, prop, {","      enumerable: true,","      configurable: true,","      get: function() {","        return this.get.call(this.$__.scope || this, path);","      },","      set: function(v) {","        return this.set.call(this.$__.scope || this, path, v);","      }","    });","  }","}","","/**"," * Assigns/compiles `schema` into this documents prototype."," *"," * @param {Schema} schema"," * @api private"," * @method $__setSchema"," * @memberOf Document"," */","","Document.prototype.$__setSchema = function(schema) {","  compile(schema.tree, this, undefined, schema.options);","  this.schema = schema;","};","","","/**"," * Get active path that were changed and are arrays"," *"," * @api private"," * @method $__getArrayPathsToValidate"," * @memberOf Document"," */","","Document.prototype.$__getArrayPathsToValidate = function() {","  DocumentArray || (DocumentArray = require('./types/documentarray'));","","  // validate all document arrays.","  return this.$__.activePaths","  .map('init', 'modify', function(i) {","    return this.getValue(i);","  }.bind(this))","  .filter(function(val) {","    return val && val instanceof Array && val.isMongooseDocumentArray && val.length;","  }).reduce(function(seed, array) {","    return seed.concat(array);","  }, [])","  .filter(function(doc) {","    return doc;","  });","};","","","/**"," * Get all subdocs (by bfs)"," *"," * @api private"," * @method $__getAllSubdocs"," * @memberOf Document"," */","","Document.prototype.$__getAllSubdocs = function() {","  DocumentArray || (DocumentArray = require('./types/documentarray'));","  Embedded = Embedded || require('./types/embedded');","","  function docReducer(seed, path) {","    var val = this[path];","","    if (val instanceof Embedded) {","      seed.push(val);","    }","    if (val && val.$isSingleNested) {","      seed = Object.keys(val._doc).reduce(docReducer.bind(val._doc), seed);","      seed.push(val);","    }","    if (val && val.isMongooseDocumentArray) {","      val.forEach(function _docReduce(doc) {","        if (!doc || !doc._doc) {","          return;","        }","        if (doc instanceof Embedded) {","          seed.push(doc);","        }","        seed = Object.keys(doc._doc).reduce(docReducer.bind(doc._doc), seed);","      });","    } else if (val instanceof Document && val.$__isNested) {","      if (val) {","        seed = Object.keys(val).reduce(docReducer.bind(val), seed);","      }","    }","    return seed;","  }","","  var subDocs = Object.keys(this._doc).reduce(docReducer.bind(this), []);","","  return subDocs;","};","","/*!"," * Runs queued functions"," */","","function applyQueue(doc) {","  var q = doc.schema && doc.schema.callQueue;","  if (!q.length) {","    return;","  }","  var pair;","","  for (var i = 0; i < q.length; ++i) {","    pair = q[i];","    if (pair[0] !== 'pre' && pair[0] !== 'post' && pair[0] !== 'on') {","      doc[pair[0]].apply(doc, pair[1]);","    }","  }","}","","Document.prototype.$__handleReject = function handleReject(err) {","  // emit on the Model if listening","  if (this.listeners('error').length) {","    this.emit('error', err);","  } else if (this.constructor.listeners && this.constructor.listeners('error').length) {","    this.constructor.emit('error', err);","  } else if (this.listeners && this.listeners('error').length) {","    this.emit('error', err);","  }","};","","/**"," * Internal helper for toObject() and toJSON() that doesn't manipulate options"," *"," * @api private"," * @method $toObject"," * @memberOf Document"," */","","Document.prototype.$toObject = function(options, json) {","  var defaultOptions = {","    transform: true,","    json: json,","    retainKeyOrder: this.schema.options.retainKeyOrder,","    flattenDecimals: true","  };","","  // _isNested will only be true if this is not the top level document, we","  // should never depopulate","  if (options && options.depopulate && options._isNested && this.$__.wasPopulated) {","    // populated paths that we set to a document","    return clone(this._id, options);","  }","","  // When internally saving this document we always pass options,","  // bypassing the custom schema options.","  if (!(options && utils.getFunctionName(options.constructor) === 'Object') ||","      (options && options._useSchemaOptions)) {","    if (json) {","      options = this.schema.options.toJSON ?","        clone(this.schema.options.toJSON) :","        {};","      options.json = true;","      options._useSchemaOptions = true;","    } else {","      options = this.schema.options.toObject ?","        clone(this.schema.options.toObject) :","        {};","      options.json = false;","      options._useSchemaOptions = true;","    }","  }","","  for (var key in defaultOptions) {","    if (options[key] === undefined) {","      options[key] = defaultOptions[key];","    }","  }","","  ('minimize' in options) || (options.minimize = this.schema.options.minimize);","","  // remember the root transform function","  // to save it from being overwritten by sub-transform functions","  var originalTransform = options.transform;","","  options._isNested = true;","","  var ret = clone(this._doc, options) || {};","","  if (options.getters) {","    applyGetters(this, ret, 'paths', options);","    // applyGetters for paths will add nested empty objects;","    // if minimize is set, we need to remove them.","    if (options.minimize) {","      ret = minimize(ret) || {};","    }","  }","","  if (options.virtuals || options.getters && options.virtuals !== false) {","    applyGetters(this, ret, 'virtuals', options);","  }","","  if (options.versionKey === false && this.schema.options.versionKey) {","    delete ret[this.schema.options.versionKey];","  }","","  var transform = options.transform;","","  // In the case where a subdocument has its own transform function, we need to","  // check and see if the parent has a transform (options.transform) and if the","  // child schema has a transform (this.schema.options.toObject) In this case,","  // we need to adjust options.transform to be the child schema's transform and","  // not the parent schema's","  if (transform === true ||","      (this.schema.options.toObject && transform)) {","    var opts = options.json ? this.schema.options.toJSON : this.schema.options.toObject;","","    if (opts) {","      transform = (typeof options.transform === 'function' ? options.transform : opts.transform);","    }","  } else {","    options.transform = originalTransform;","  }","","  if (typeof transform === 'function') {","    var xformed = transform(this, ret, options);","    if (typeof xformed !== 'undefined') {","      ret = xformed;","    }","  }","","  return ret;","};","","/**"," * Converts this document into a plain javascript object, ready for storage in MongoDB."," *"," * Buffers are converted to instances of [mongodb.Binary](http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html) for proper storage."," *"," * ####Options:"," *"," * - `getters` apply all getters (path and virtual getters)"," * - `virtuals` apply virtual getters (can override `getters` option)"," * - `minimize` remove empty objects (defaults to true)"," * - `transform` a transform function to apply to the resulting document before returning"," * - `depopulate` depopulate any populated paths, replacing them with their original refs (defaults to false)"," * - `versionKey` whether to include the version key (defaults to true)"," * - `retainKeyOrder` keep the order of object keys. If this is set to true, `Object.keys(new Doc({ a: 1, b: 2}).toObject())` will always produce `['a', 'b']` (defaults to false)"," *"," * ####Getters/Virtuals"," *"," * Example of only applying path getters"," *"," *     doc.toObject({ getters: true, virtuals: false })"," *"," * Example of only applying virtual getters"," *"," *     doc.toObject({ virtuals: true })"," *"," * Example of applying both path and virtual getters"," *"," *     doc.toObject({ getters: true })"," *"," * To apply these options to every document of your schema by default, set your [schemas](#schema_Schema) `toObject` option to the same argument."," *"," *     schema.set('toObject', { virtuals: true })"," *"," * ####Transform"," *"," * We may need to perform a transformation of the resulting object based on some criteria, say to remove some sensitive information or return a custom object. In this case we set the optional `transform` function."," *"," * Transform functions receive three arguments"," *"," *     function (doc, ret, options) {}"," *"," * - `doc` The mongoose document which is being converted"," * - `ret` The plain object representation which has been converted"," * - `options` The options in use (either schema options or the options passed inline)"," *"," * ####Example"," *"," *     // specify the transform schema option"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       // remove the _id of every document before returning the result"," *       delete ret._id;"," *       return ret;"," *     }"," *"," *     // without the transformation in the schema"," *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }"," *"," *     // with the transformation"," *     doc.toObject(); // { name: 'Wreck-it Ralph' }"," *"," * With transformations we can do a lot more than remove properties. We can even return completely new customized objects:"," *"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       return { movie: ret.name }"," *     }"," *"," *     // without the transformation in the schema"," *     doc.toObject(); // { _id: 'anId', name: 'Wreck-it Ralph' }"," *"," *     // with the transformation"," *     doc.toObject(); // { movie: 'Wreck-it Ralph' }"," *"," * _Note: if a transform function returns `undefined`, the return value will be ignored._"," *"," * Transformations may also be applied inline, overridding any transform set in the options:"," *"," *     function xform (doc, ret, options) {"," *       return { inline: ret.name, custom: true }"," *     }"," *"," *     // pass the transform as an inline option"," *     doc.toObject({ transform: xform }); // { inline: 'Wreck-it Ralph', custom: true }"," *"," * If you want to skip transformations, use `transform: false`:"," *"," *     if (!schema.options.toObject) schema.options.toObject = {};"," *     schema.options.toObject.hide = '_id';"," *     schema.options.toObject.transform = function (doc, ret, options) {"," *       if (options.hide) {"," *         options.hide.split(' ').forEach(function (prop) {"," *           delete ret[prop];"," *         });"," *       }"," *       return ret;"," *     }"," *"," *     var doc = new Doc({ _id: 'anId', secret: 47, name: 'Wreck-it Ralph' });"," *     doc.toObject();                                        // { secret: 47, name: 'Wreck-it Ralph' }"," *     doc.toObject({ hide: 'secret _id', transform: false });// { _id: 'anId', secret: 47, name: 'Wreck-it Ralph' }"," *     doc.toObject({ hide: 'secret _id', transform: true }); // { name: 'Wreck-it Ralph' }"," *"," * Transforms are applied _only to the document and are not applied to sub-documents_."," *"," * Transforms, like all of these options, are also available for `toJSON`."," *"," * See [schema options](/docs/guide.html#toObject) for some more details."," *"," * _During save, no custom options are applied to the document before being sent to the database._"," *"," * @param {Object} [options]"," * @return {Object} js object"," * @see mongodb.Binary http://mongodb.github.com/node-mongodb-native/api-bson-generated/binary.html"," * @api public"," */","","Document.prototype.toObject = function(options) {","  return this.$toObject(options);","};","","/*!"," * Minimizes an object, removing undefined values and empty objects"," *"," * @param {Object} object to minimize"," * @return {Object}"," */","","function minimize(obj) {","  var keys = Object.keys(obj),","      i = keys.length,","      hasKeys,","      key,","      val;","","  while (i--) {","    key = keys[i];","    val = obj[key];","","    if (utils.isObject(val) && !Buffer.isBuffer(val)) {","      obj[key] = minimize(val);","    }","","    if (undefined === obj[key]) {","      delete obj[key];","      continue;","    }","","    hasKeys = true;","  }","","  return hasKeys","      ? obj","      : undefined;","}","","/*!"," * Applies virtuals properties to `json`."," *"," * @param {Document} self"," * @param {Object} json"," * @param {String} type either `virtuals` or `paths`"," * @return {Object} `json`"," */","","function applyGetters(self, json, type, options) {","  var schema = self.schema;","  var paths = Object.keys(schema[type]);","  var i = paths.length;","  var path;","  var cur = self._doc;","  var v;","","  if (!cur) {","    return json;","  }","","  while (i--) {","    path = paths[i];","","    var parts = path.split('.');","    var plen = parts.length;","    var last = plen - 1;","    var branch = json;","    var part;","    cur = self._doc;","","    for (var ii = 0; ii < plen; ++ii) {","      part = parts[ii];","      v = cur[part];","      if (ii === last) {","        branch[part] = clone(self.get(path), options);","      } else if (v == null) {","        if (part in cur) {","          branch[part] = v;","        }","        break;","      } else {","        branch = branch[part] || (branch[part] = {});","      }","      cur = v;","    }","  }","","  return json;","}","","/**"," * The return value of this method is used in calls to JSON.stringify(doc)."," *"," * This method accepts the same options as [Document#toObject](#document_Document-toObject). To apply the options to every document of your schema by default, set your [schemas](#schema_Schema) `toJSON` option to the same argument."," *"," *     schema.set('toJSON', { virtuals: true })"," *"," * See [schema options](/docs/guide.html#toJSON) for details."," *"," * @param {Object} options"," * @return {Object}"," * @see Document#toObject #document_Document-toObject"," * @api public"," */","","Document.prototype.toJSON = function(options) {","  return this.$toObject(options, true);","};","","/**"," * Helper for console.log"," *"," * @api public"," */","","Document.prototype.inspect = function(options) {","  var isPOJO = options &&","    utils.getFunctionName(options.constructor) === 'Object';","  var opts;","  if (isPOJO) {","    opts = options;","    opts.minimize = false;","    opts.retainKeyOrder = true;","  }","  return this.toObject(opts);","};","","/**"," * Helper for console.log"," *"," * @api public"," * @method toString"," */","","Document.prototype.toString = function() {","  return inspect(this.inspect());","};","","/**"," * Returns true if the Document stores the same data as doc."," *"," * Documents are considered equal when they have matching `_id`s, unless neither"," * document has an `_id`, in which case this function falls back to using"," * `deepEqual()`."," *"," * @param {Document} doc a document to compare"," * @return {Boolean}"," * @api public"," */","","Document.prototype.equals = function(doc) {","  if (!doc) {","    return false;","  }","","  var tid = this.get('_id');","  var docid = doc.get ? doc.get('_id') : doc;","  if (!tid && !docid) {","    return deepEqual(this, doc);","  }","  return tid && tid.equals","      ? tid.equals(docid)","      : tid === docid;","};","","/**"," * Populates document references, executing the `callback` when complete."," * If you want to use promises instead, use this function with"," * [`execPopulate()`](#document_Document-execPopulate)"," *"," * ####Example:"," *"," *     doc"," *     .populate('company')"," *     .populate({"," *       path: 'notes',"," *       match: /airline/,"," *       select: 'text',"," *       model: 'modelName'"," *       options: opts"," *     }, function (err, user) {"," *       assert(doc._id === user._id) // the document itself is passed"," *     })"," *"," *     // summary"," *     doc.populate(path)                   // not executed"," *     doc.populate(options);               // not executed"," *     doc.populate(path, callback)         // executed"," *     doc.populate(options, callback);     // executed"," *     doc.populate(callback);              // executed"," *     doc.populate(options).execPopulate() // executed, returns promise"," *"," *"," * ####NOTE:"," *"," * Population does not occur unless a `callback` is passed *or* you explicitly"," * call `execPopulate()`."," * Passing the same path a second time will overwrite the previous path options."," * See [Model.populate()](#model_Model.populate) for explaination of options."," *"," * @see Model.populate #model_Model.populate"," * @see Document.execPopulate #document_Document-execPopulate"," * @param {String|Object} [path] The path to populate or an options object"," * @param {Function} [callback] When passed, population is invoked"," * @api public"," * @return {Document} this"," */","","Document.prototype.populate = function populate() {","  if (arguments.length === 0) {","    return this;","  }","","  var pop = this.$__.populate || (this.$__.populate = {});","  var args = utils.args(arguments);","  var fn;","","  if (typeof args[args.length - 1] === 'function') {","    fn = args.pop();","  }","","  // allow `doc.populate(callback)`","  if (args.length) {","    // use hash to remove duplicate paths","    var res = utils.populate.apply(null, args);","    for (var i = 0; i < res.length; ++i) {","      pop[res[i].path] = res[i];","    }","  }","","  if (fn) {","    var paths = utils.object.vals(pop);","    this.$__.populate = undefined;","    paths.__noPromise = true;","    this.constructor.populate(this, paths, fn);","  }","","  return this;","};","","/**"," * Explicitly executes population and returns a promise. Useful for ES2015"," * integration."," *"," * ####Example:"," *"," *     var promise = doc."," *       populate('company')."," *       populate({"," *         path: 'notes',"," *         match: /airline/,"," *         select: 'text',"," *         model: 'modelName'"," *         options: opts"," *       })."," *       execPopulate();"," *"," *     // summary"," *     doc.execPopulate().then(resolve, reject);"," *"," *"," * @see Document.populate #document_Document-populate"," * @api public"," * @return {Promise} promise that resolves to the document when population is done"," */","","Document.prototype.execPopulate = function() {","  var Promise = PromiseProvider.get();","  var _this = this;","  return new Promise.ES6(function(resolve, reject) {","    _this.populate(function(error, res) {","      if (error) {","        reject(error);","      } else {","        resolve(res);","      }","    });","  });","};","","/**"," * Gets _id(s) used during population of the given `path`."," *"," * ####Example:"," *"," *     Model.findOne().populate('author').exec(function (err, doc) {"," *       console.log(doc.author.name)         // Dr.Seuss"," *       console.log(doc.populated('author')) // '5144cf8050f071d979c118a7'"," *     })"," *"," * If the path was not populated, undefined is returned."," *"," * @param {String} path"," * @return {Array|ObjectId|Number|Buffer|String|undefined}"," * @api public"," */","","Document.prototype.populated = function(path, val, options) {","  // val and options are internal","","  if (val === null || val === void 0) {","    if (!this.$__.populated) {","      return undefined;","    }","    var v = this.$__.populated[path];","    if (v) {","      return v.value;","    }","    return undefined;","  }","","  // internal","","  if (val === true) {","    if (!this.$__.populated) {","      return undefined;","    }","    return this.$__.populated[path];","  }","","  this.$__.populated || (this.$__.populated = {});","  this.$__.populated[path] = {value: val, options: options};","  return val;","};","","/**"," * Takes a populated field and returns it to its unpopulated state."," *"," * ####Example:"," *"," *     Model.findOne().populate('author').exec(function (err, doc) {"," *       console.log(doc.author.name); // Dr.Seuss"," *       console.log(doc.depopulate('author'));"," *       console.log(doc.author); // '5144cf8050f071d979c118a7'"," *     })"," *"," * If the path was not populated, this is a no-op."," *"," * @param {String} path"," * @return {Document} this"," * @see Document.populate #document_Document-populate"," * @api public"," */","","Document.prototype.depopulate = function(path) {","  var populatedIds = this.populated(path);","  if (!populatedIds) {","    return;","  }","  delete this.$__.populated[path];","  this.set(path, populatedIds);","  return this;","};","","","/**"," * Returns the full path to this document."," *"," * @param {String} [path]"," * @return {String}"," * @api private"," * @method $__fullPath"," * @memberOf Document"," */","","Document.prototype.$__fullPath = function(path) {","  // overridden in SubDocuments","  return path || '';","};","","/*!"," * Module exports."," */","","Document.ValidationError = ValidationError;","module.exports = exports = Document;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"39":1,"40":0,"41":0,"42":0,"43":0,"45":0,"47":0,"48":0,"49":0,"51":0,"52":0,"55":0,"56":0,"57":0,"60":0,"61":0,"63":0,"64":0,"65":0,"68":0,"69":0,"71":0,"75":0,"76":0,"79":0,"80":0,"81":0,"86":0,"93":1,"97":8,"98":0,"102":1,"111":1,"120":1,"136":1,"145":1,"159":1,"160":0,"161":0,"162":0,"163":0,"164":0,"169":0,"170":0,"171":0,"173":0,"174":0,"176":0,"177":0,"179":0,"180":0,"186":0,"187":0,"188":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"203":0,"204":0,"206":0,"207":0,"208":0,"210":0,"211":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"224":0,"225":0,"228":0,"231":0,"232":0,"233":0,"235":0,"236":0,"237":0,"238":0,"239":0,"243":0,"244":0,"245":0,"247":0,"248":0,"251":0,"252":0,"253":0,"254":0,"256":0,"258":0,"259":0,"260":0,"261":0,"265":0,"266":0,"267":0,"268":0,"272":0,"277":0,"284":1,"285":0,"304":1,"308":0,"309":0,"310":0,"313":0,"317":0,"319":0,"320":0,"321":0,"322":0,"323":0,"325":0,"330":0,"331":0,"333":0,"334":0,"336":0,"337":0,"339":0,"351":1,"352":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"361":0,"362":0,"363":0,"366":0,"367":0,"371":1,"372":0,"373":0,"374":0,"379":0,"380":0,"383":0,"386":0,"387":0,"389":0,"390":0,"391":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"400":0,"408":0,"412":0,"413":0,"431":1,"433":0,"434":0,"435":0,"438":0,"443":0,"444":0,"445":0,"446":0,"447":0,"450":0,"452":0,"461":1,"462":6,"463":2,"465":4,"488":1,"489":0,"490":0,"491":0,"526":1,"527":0,"528":0,"529":0,"532":0,"537":0,"541":0,"542":0,"543":0,"546":0,"549":0,"550":0,"551":0,"552":0,"554":0,"558":0,"559":0,"560":0,"562":0,"566":0,"567":0,"568":0,"569":0,"570":0,"572":0,"573":0,"574":0,"576":0,"579":0,"580":0,"581":0,"584":0,"585":0,"589":0,"593":1,"594":0,"595":0,"596":0,"598":0,"609":0,"610":0,"612":0,"614":0,"617":0,"619":0,"620":0,"623":0,"625":0,"626":0,"627":0,"629":0,"630":0,"631":0,"633":0,"636":0,"637":0,"641":0,"642":0,"643":0,"645":0,"646":0,"647":0,"650":0,"651":0,"652":0,"653":0,"655":0,"657":0,"659":0,"660":0,"663":0,"664":0,"666":0,"668":0,"670":0,"671":0,"672":0,"673":0,"675":0,"676":0,"680":0,"681":0,"682":0,"686":0,"687":0,"688":0,"690":0,"692":0,"693":0,"694":0,"695":0,"697":0,"700":0,"705":0,"706":0,"708":0,"709":0,"710":0,"713":0,"714":0,"718":0,"719":0,"724":0,"728":0,"729":0,"730":0,"733":0,"734":0,"737":0,"738":0,"742":0,"743":0,"746":0,"748":0,"751":0,"752":0,"761":0,"762":0,"763":0,"764":0,"766":0,"767":0,"769":0,"771":0,"773":0,"774":0,"777":0,"779":0,"781":0,"784":0,"785":0,"788":0,"789":0,"792":0,"799":1,"800":0,"801":0,"802":0,"803":0,"804":0,"818":1,"819":0,"820":0,"823":0,"826":0,"829":0,"831":0,"836":0,"839":0,"842":0,"843":0,"846":0,"853":0,"855":0,"866":1,"867":0,"869":0,"871":0,"873":0,"874":0,"877":0,"878":0,"879":0,"883":0,"884":0,"885":0,"891":0,"892":0,"893":0,"894":0,"896":0,"897":0,"898":0,"899":0,"901":0,"902":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"913":0,"914":0,"927":1,"928":0,"939":1,"940":0,"941":0,"960":1,"961":0,"962":0,"963":0,"966":0,"970":0,"971":0,"976":0,"977":0,"982":0,"983":0,"986":0,"998":1,"999":0,"1002":0,"1003":0,"1005":0,"1023":1,"1024":0,"1040":1,"1041":0,"1059":1,"1060":0,"1070":1,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1077":0,"1101":1,"1102":0,"1103":0,"1104":0,"1106":0,"1107":0,"1108":0,"1109":0,"1111":0,"1112":0,"1113":0,"1117":0,"1136":1,"1137":0,"1154":1,"1155":0,"1166":1,"1167":0,"1185":1,"1186":0,"1187":0,"1188":0,"1191":0,"1192":0,"1193":0,"1194":0,"1196":0,"1198":0,"1201":0,"1202":0,"1203":0,"1204":0,"1206":0,"1207":0,"1209":0,"1210":0,"1213":0,"1214":0,"1217":0,"1218":0,"1221":0,"1222":0,"1224":0,"1225":0,"1226":0,"1227":0,"1230":0,"1231":0,"1234":0,"1235":0,"1239":0,"1242":0,"1262":1,"1263":0,"1264":0,"1265":0,"1268":0,"1269":0,"1270":0,"1271":0,"1273":0,"1275":0,"1278":0,"1279":0,"1280":0,"1281":0,"1283":0,"1284":0,"1286":0,"1287":0,"1290":0,"1291":0,"1294":0,"1295":0,"1298":0,"1301":0,"1324":1,"1325":0,"1326":0,"1327":0,"1330":0,"1337":1,"1338":0,"1341":0,"1342":0,"1343":0,"1345":0,"1346":0,"1347":0,"1349":0,"1352":0,"1353":0,"1354":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1364":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1389":0,"1390":0,"1391":0,"1393":0,"1397":0,"1404":1,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1414":0,"1415":0,"1419":0,"1424":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1434":0,"1438":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1448":0,"1451":0,"1452":0,"1453":0,"1456":0,"1457":0,"1459":0,"1460":0,"1461":0,"1462":0,"1466":0,"1467":0,"1468":0,"1471":0,"1472":0,"1473":0,"1474":0,"1476":0,"1481":0,"1505":1,"1506":0,"1508":0,"1509":0,"1513":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1522":0,"1525":0,"1527":0,"1528":0,"1529":0,"1532":0,"1534":0,"1535":0,"1536":0,"1538":0,"1539":0,"1542":0,"1543":0,"1544":0,"1545":0,"1549":0,"1550":0,"1551":0,"1552":0,"1554":0,"1555":0,"1557":0,"1558":0,"1563":0,"1597":1,"1598":0,"1599":0,"1602":0,"1603":0,"1606":0,"1607":0,"1615":0,"1616":0,"1619":0,"1620":0,"1632":1,"1633":0,"1634":0,"1637":0,"1638":0,"1639":0,"1652":1,"1653":0,"1665":1,"1666":0,"1667":0,"1669":0,"1671":0,"1674":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1683":0,"1688":0,"1689":0,"1690":0,"1691":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1705":0,"1716":1,"1717":0,"1719":0,"1720":0,"1729":0,"1730":0,"1731":0,"1733":0,"1741":0,"1742":0,"1746":0,"1750":0,"1751":0,"1752":0,"1754":0,"1755":0,"1756":0,"1757":0,"1760":0,"1764":0,"1765":0,"1770":0,"1771":0,"1778":1,"1779":0,"1784":0,"1785":0,"1786":0,"1788":0,"1803":1,"1804":0,"1806":0,"1807":0,"1808":0,"1811":0,"1818":1,"1819":0,"1820":0,"1822":0,"1823":0,"1827":0,"1828":0,"1829":0,"1832":0,"1833":0,"1836":0,"1837":0,"1842":0,"1845":0,"1847":0,"1855":0,"1860":0,"1864":0,"1869":0,"1873":0,"1880":0,"1881":0,"1884":0,"1887":0,"1888":0,"1890":0,"1894":0,"1898":0,"1901":0,"1916":1,"1917":0,"1918":0,"1930":1,"1931":0,"1934":0,"1936":0,"1939":0,"1941":0,"1944":0,"1957":1,"1958":0,"1959":0,"1961":1,"1962":0,"1964":0,"1965":0,"1967":0,"1968":0,"1969":0,"1971":0,"1972":0,"1973":0,"1974":0,"1976":0,"1977":0,"1979":0,"1981":0,"1982":0,"1983":0,"1986":0,"1989":0,"1991":0,"1998":1,"1999":0,"2000":0,"2001":0,"2003":0,"2005":0,"2006":0,"2007":0,"2008":0,"2013":1,"2015":0,"2016":0,"2017":0,"2018":0,"2019":0,"2020":0,"2032":1,"2033":0,"2042":0,"2044":0,"2049":0,"2051":0,"2052":0,"2055":0,"2056":0,"2058":0,"2061":0,"2062":0,"2066":0,"2067":0,"2068":0,"2072":0,"2076":0,"2078":0,"2080":0,"2082":0,"2083":0,"2086":0,"2087":0,"2091":0,"2092":0,"2095":0,"2096":0,"2099":0,"2106":0,"2108":0,"2110":0,"2111":0,"2114":0,"2117":0,"2118":0,"2119":0,"2120":0,"2124":0,"2244":1,"2245":0,"2255":1,"2256":0,"2262":0,"2263":0,"2264":0,"2266":0,"2267":0,"2270":0,"2271":0,"2272":0,"2275":0,"2278":0,"2292":1,"2293":0,"2294":0,"2295":0,"2296":0,"2297":0,"2298":0,"2300":0,"2301":0,"2304":0,"2305":0,"2307":0,"2308":0,"2309":0,"2310":0,"2311":0,"2312":0,"2314":0,"2315":0,"2316":0,"2317":0,"2318":0,"2319":0,"2320":0,"2321":0,"2323":0,"2325":0,"2327":0,"2331":0,"2349":1,"2350":0,"2359":1,"2360":0,"2362":0,"2363":0,"2364":0,"2365":0,"2366":0,"2368":0,"2378":1,"2379":0,"2394":1,"2395":0,"2396":0,"2399":0,"2400":0,"2401":0,"2402":0,"2404":0,"2452":1,"2453":0,"2454":0,"2457":0,"2458":0,"2459":0,"2461":0,"2462":0,"2466":0,"2468":0,"2469":0,"2470":0,"2474":0,"2475":0,"2476":0,"2477":0,"2478":0,"2481":0,"2510":1,"2511":0,"2512":0,"2513":0,"2514":0,"2515":0,"2516":0,"2518":0,"2541":1,"2544":0,"2545":0,"2546":0,"2548":0,"2549":0,"2550":0,"2552":0,"2557":0,"2558":0,"2559":0,"2561":0,"2564":0,"2565":0,"2566":0,"2588":1,"2589":0,"2590":0,"2591":0,"2593":0,"2594":0,"2595":0,"2609":1,"2611":0,"2618":1,"2619":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/mixed.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/mixed.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Mixed","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":30}}},"2":{"name":"(anonymous_2)","line":25,"loc":{"start":{"line":25,"column":24},"end":{"line":25,"column":35}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":23},"end":{"line":57,"column":37}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":52}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"3":{"start":{"line":17,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":18,"column":2},"end":{"line":29,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":30}},"6":{"start":{"line":20,"column":4},"end":{"line":28,"column":5}},"7":{"start":{"line":22,"column":6},"end":{"line":22,"column":30}},"8":{"start":{"line":23,"column":11},"end":{"line":28,"column":5}},"9":{"start":{"line":25,"column":6},"end":{"line":27,"column":8}},"10":{"start":{"line":26,"column":8},"end":{"line":26,"column":18}},"11":{"start":{"line":31,"column":2},"end":{"line":31,"column":48}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":27}},"13":{"start":{"line":45,"column":0},"end":{"line":45,"column":54}},"14":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}},"15":{"start":{"line":57,"column":0},"end":{"line":59,"column":2}},"16":{"start":{"line":58,"column":2},"end":{"line":58,"column":13}},"17":{"start":{"line":69,"column":0},"end":{"line":74,"column":2}},"18":{"start":{"line":70,"column":2},"end":{"line":72,"column":3}},"19":{"start":{"line":71,"column":4},"end":{"line":71,"column":15}},"20":{"start":{"line":73,"column":2},"end":{"line":73,"column":15}},"21":{"start":{"line":80,"column":0},"end":{"line":80,"column":23}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":6},"end":{"line":18,"column":13}},{"start":{"line":18,"column":17},"end":{"line":18,"column":32}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":26}},{"start":{"line":20,"column":30},"end":{"line":20,"column":46}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":11},"end":{"line":23,"column":11}},{"start":{"line":23,"column":11},"end":{"line":23,"column":11}}]},"6":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":53}},{"start":{"line":23,"column":57},"end":{"line":23,"column":86}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","var utils = require('../utils');","","/**"," * Mixed SchemaType constructor."," *"," * @param {String} path"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function Mixed(path, options) {","  if (options && options.default) {","    var def = options.default;","    if (Array.isArray(def) && def.length === 0) {","      // make sure empty array defaults are handled","      options.default = Array;","    } else if (!options.shared && utils.isObject(def) && Object.keys(def).length === 0) {","      // prevent odd \"shared\" objects between documents","      options.default = function() {","        return {};","      };","    }","  }","","  SchemaType.call(this, path, options, 'Mixed');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","Mixed.schemaName = 'Mixed';","","/*!"," * Inherits from SchemaType."," */","Mixed.prototype = Object.create(SchemaType.prototype);","Mixed.prototype.constructor = Mixed;","","/**"," * Casts `val` for Mixed."," *"," * _this is a no-op_"," *"," * @param {Object} value to cast"," * @api private"," */","","Mixed.prototype.cast = function(val) {","  return val;","};","","/**"," * Casts contents for queries."," *"," * @param {String} $cond"," * @param {any} [val]"," * @api private"," */","","Mixed.prototype.castForQuery = function($cond, val) {","  if (arguments.length === 2) {","    return val;","  }","  return $cond;","};","","/*!"," * Module exports."," */","","module.exports = Mixed;",""],"l":{"5":1,"6":1,"17":1,"18":0,"19":0,"20":0,"22":0,"23":0,"25":0,"26":0,"31":0,"40":1,"45":1,"46":1,"57":1,"58":0,"69":1,"70":0,"71":0,"73":0,"80":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/objectExpected.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/objectExpected.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":1,"11":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ObjectExpectedError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":18,"column":75}},"4":{"start":{"line":19,"column":2},"end":{"line":23,"column":3}},"5":{"start":{"line":20,"column":4},"end":{"line":20,"column":34}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":35}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":36}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}},"9":{"start":{"line":32,"column":0},"end":{"line":32,"column":71}},"10":{"start":{"line":33,"column":0},"end":{"line":33,"column":58}},"11":{"start":{"line":35,"column":0},"end":{"line":35,"column":37}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/**"," * Strict mode error constructor"," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function ObjectExpectedError(path, val) {","  MongooseError.call(this, 'Tried to set nested object field `' + path +","    '` to primitive value `' + val + '` and strict mode is set to throw.');","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.name = 'ObjectExpectedError';","  this.path = path;","}","","/*!"," * Inherits from MongooseError."," */","","ObjectExpectedError.prototype = Object.create(MongooseError.prototype);","ObjectExpectedError.prototype.constructor = MongooseError;","","module.exports = ObjectExpectedError;",""],"l":{"5":1,"16":1,"17":0,"19":0,"20":0,"22":0,"24":0,"25":0,"32":1,"33":1,"35":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/strict.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/strict.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"StrictModeError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":36}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":27,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":18,"column":28}},"4":{"start":{"line":19,"column":2},"end":{"line":19,"column":32}},"5":{"start":{"line":20,"column":2},"end":{"line":24,"column":3}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":32}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":19}},"10":{"start":{"line":33,"column":0},"end":{"line":33,"column":67}},"11":{"start":{"line":34,"column":0},"end":{"line":34,"column":54}},"12":{"start":{"line":36,"column":0},"end":{"line":36,"column":33}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":11}},{"start":{"line":17,"column":15},"end":{"line":18,"column":27}}]},"2":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/**"," * Strict mode error constructor"," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function StrictModeError(path, msg) {","  msg = msg || 'Field `' + path + '` is not in schema and strict ' +","    'mode is set to throw.';","  MongooseError.call(this, msg);","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.name = 'StrictModeError';","  this.path = path;","}","","/*!"," * Inherits from MongooseError."," */","","StrictModeError.prototype = Object.create(MongooseError.prototype);","StrictModeError.prototype.constructor = MongooseError;","","module.exports = StrictModeError;",""],"l":{"5":1,"16":1,"17":0,"19":0,"20":0,"21":0,"23":0,"25":0,"26":0,"33":1,"34":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/internal.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/internal.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"InternalCache","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":25}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":45}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":87}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":31,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":28}},"7":{"start":{"line":13,"column":2},"end":{"line":13,"column":28}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":29}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":35}},"10":{"start":{"line":16,"column":2},"end":{"line":16,"column":30}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":28}},"12":{"start":{"line":18,"column":2},"end":{"line":18,"column":29}},"13":{"start":{"line":19,"column":2},"end":{"line":19,"column":27}},"14":{"start":{"line":20,"column":2},"end":{"line":20,"column":20}},"15":{"start":{"line":21,"column":2},"end":{"line":21,"column":23}},"16":{"start":{"line":22,"column":2},"end":{"line":22,"column":28}},"17":{"start":{"line":23,"column":2},"end":{"line":23,"column":29}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":28}},"19":{"start":{"line":25,"column":2},"end":{"line":25,"column":25}},"20":{"start":{"line":26,"column":2},"end":{"line":26,"column":38}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":33}},"22":{"start":{"line":30,"column":2},"end":{"line":30,"column":28}}},"branchMap":{},"code":["/*!"," * Dependencies"," */","","var StateMachine = require('./statemachine');","var ActiveRoster = StateMachine.ctor('require', 'modify', 'init', 'default', 'ignore');","","module.exports = exports = InternalCache;","","function InternalCache() {","  this.strictMode = undefined;","  this.selected = undefined;","  this.shardval = undefined;","  this.saveError = undefined;","  this.validationError = undefined;","  this.adhocPaths = undefined;","  this.removing = undefined;","  this.inserting = undefined;","  this.version = undefined;","  this.getters = {};","  this._id = undefined;","  this.populate = undefined; // what we want to populate in this doc","  this.populated = undefined;// the _ids that have been populated","  this.wasPopulated = false; // if this doc was the result of a population","  this.scope = undefined;","  this.activePaths = new ActiveRoster;","","  // embedded docs","  this.ownerDocument = undefined;","  this.fullPath = undefined;","}",""],"l":{"5":1,"6":1,"8":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/statemachine.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/statemachine.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":1,"16":5,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":5,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"StateMachine","line":15,"loc":{"start":{"line":15,"column":46},"end":{"line":15,"column":70}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":20},"end":{"line":32,"column":31}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":13},"end":{"line":35,"column":24}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":17},"end":{"line":52,"column":33}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":28},"end":{"line":54,"column":43}}},"6":{"name":"_changeState","line":72,"loc":{"start":{"line":72,"column":38},"end":{"line":72,"column":77}}},"7":{"name":"clear","line":84,"loc":{"start":{"line":84,"column":31},"end":{"line":84,"column":53}}},"8":{"name":"some","line":104,"loc":{"start":{"line":104,"column":30},"end":{"line":104,"column":46}}},"9":{"name":"(anonymous_9)","line":107,"loc":{"start":{"line":107,"column":41},"end":{"line":107,"column":57}}},"10":{"name":"_iter","line":121,"loc":{"start":{"line":121,"column":31},"end":{"line":121,"column":58}}},"11":{"name":"(anonymous_11)","line":122,"loc":{"start":{"line":122,"column":9},"end":{"line":122,"column":20}}},"12":{"name":"(anonymous_12)","line":131,"loc":{"start":{"line":131,"column":30},"end":{"line":131,"column":53}}},"13":{"name":"(anonymous_13)","line":135,"loc":{"start":{"line":135,"column":29},"end":{"line":135,"column":54}}},"14":{"name":"forEach","line":155,"loc":{"start":{"line":155,"column":33},"end":{"line":155,"column":52}}},"15":{"name":"map","line":175,"loc":{"start":{"line":175,"column":29},"end":{"line":175,"column":44}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":15,"column":0},"end":{"line":16,"column":2}},"3":{"start":{"line":32,"column":0},"end":{"line":60,"column":2}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":37}},"5":{"start":{"line":35,"column":2},"end":{"line":48,"column":4}},"6":{"start":{"line":36,"column":4},"end":{"line":36,"column":40}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":20}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":21}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":29}},"10":{"start":{"line":41,"column":4},"end":{"line":42,"column":14}},"11":{"start":{"line":44,"column":4},"end":{"line":47,"column":5}},"12":{"start":{"line":45,"column":6},"end":{"line":45,"column":24}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":30}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":38}},"15":{"start":{"line":52,"column":2},"end":{"line":57,"column":5}},"16":{"start":{"line":54,"column":4},"end":{"line":56,"column":6}},"17":{"start":{"line":55,"column":6},"end":{"line":55,"column":37}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":14}},"19":{"start":{"line":72,"column":0},"end":{"line":78,"column":2}},"20":{"start":{"line":73,"column":2},"end":{"line":73,"column":49}},"21":{"start":{"line":74,"column":2},"end":{"line":74,"column":42}},"22":{"start":{"line":74,"column":18},"end":{"line":74,"column":42}},"23":{"start":{"line":76,"column":2},"end":{"line":76,"column":31}},"24":{"start":{"line":77,"column":2},"end":{"line":77,"column":38}},"25":{"start":{"line":84,"column":0},"end":{"line":94,"column":2}},"26":{"start":{"line":85,"column":2},"end":{"line":87,"column":11}},"27":{"start":{"line":89,"column":2},"end":{"line":93,"column":3}},"28":{"start":{"line":90,"column":4},"end":{"line":90,"column":19}},"29":{"start":{"line":91,"column":4},"end":{"line":91,"column":36}},"30":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"31":{"start":{"line":104,"column":0},"end":{"line":110,"column":2}},"32":{"start":{"line":105,"column":2},"end":{"line":105,"column":19}},"33":{"start":{"line":106,"column":2},"end":{"line":106,"column":60}},"34":{"start":{"line":107,"column":2},"end":{"line":109,"column":5}},"35":{"start":{"line":108,"column":4},"end":{"line":108,"column":51}},"36":{"start":{"line":121,"column":0},"end":{"line":139,"column":2}},"37":{"start":{"line":122,"column":2},"end":{"line":138,"column":4}},"38":{"start":{"line":123,"column":4},"end":{"line":125,"column":42}},"39":{"start":{"line":127,"column":4},"end":{"line":127,"column":49}},"40":{"start":{"line":127,"column":24},"end":{"line":127,"column":49}},"41":{"start":{"line":129,"column":4},"end":{"line":129,"column":21}},"42":{"start":{"line":131,"column":4},"end":{"line":133,"column":11}},"43":{"start":{"line":132,"column":6},"end":{"line":132,"column":60}},"44":{"start":{"line":135,"column":4},"end":{"line":137,"column":7}},"45":{"start":{"line":136,"column":6},"end":{"line":136,"column":38}},"46":{"start":{"line":155,"column":0},"end":{"line":158,"column":2}},"47":{"start":{"line":156,"column":2},"end":{"line":156,"column":39}},"48":{"start":{"line":157,"column":2},"end":{"line":157,"column":45}},"49":{"start":{"line":175,"column":0},"end":{"line":178,"column":2}},"50":{"start":{"line":176,"column":2},"end":{"line":176,"column":31}},"51":{"start":{"line":177,"column":2},"end":{"line":177,"column":41}}},"branchMap":{"1":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"2":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":32},"end":{"line":106,"column":41}},{"start":{"line":106,"column":44},"end":{"line":106,"column":59}}]},"3":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]}},"code":["","/*!"," * Module dependencies."," */","","var utils = require('./utils');","","/*!"," * StateMachine represents a minimal `interface` for the"," * constructors it builds via StateMachine.ctor(...)."," *"," * @api private"," */","","var StateMachine = module.exports = exports = function StateMachine() {","};","","/*!"," * StateMachine.ctor('state1', 'state2', ...)"," * A factory method for subclassing StateMachine."," * The arguments are a list of states. For each state,"," * the constructor's prototype gets state transition"," * methods named after each state. These transition methods"," * place their path argument into the given state."," *"," * @param {String} state"," * @param {String} [state]"," * @return {Function} subclass constructor"," * @private"," */","","StateMachine.ctor = function() {","  var states = utils.args(arguments);","","  var ctor = function() {","    StateMachine.apply(this, arguments);","    this.paths = {};","    this.states = {};","    this.stateNames = states;","","    var i = states.length,","        state;","","    while (i--) {","      state = states[i];","      this.states[state] = {};","    }","  };","","  ctor.prototype = new StateMachine();","","  states.forEach(function(state) {","    // Changes the `path`'s state to `state`.","    ctor.prototype[state] = function(path) {","      this._changeState(path, state);","    };","  });","","  return ctor;","};","","/*!"," * This function is wrapped by the state change functions:"," *"," * - `require(path)`"," * - `modify(path)`"," * - `init(path)`"," *"," * @api private"," */","","StateMachine.prototype._changeState = function _changeState(path, nextState) {","  var prevBucket = this.states[this.paths[path]];","  if (prevBucket) delete prevBucket[path];","","  this.paths[path] = nextState;","  this.states[nextState][path] = true;","};","","/*!"," * ignore"," */","","StateMachine.prototype.clear = function clear(state) {","  var keys = Object.keys(this.states[state]),","      i = keys.length,","      path;","","  while (i--) {","    path = keys[i];","    delete this.states[state][path];","    delete this.paths[path];","  }","};","","/*!"," * Checks to see if at least one path is in the states passed in via `arguments`"," * e.g., this.some('required', 'inited')"," *"," * @param {String} state that we want to check for."," * @private"," */","","StateMachine.prototype.some = function some() {","  var _this = this;","  var what = arguments.length ? arguments : this.stateNames;","  return Array.prototype.some.call(what, function(state) {","    return Object.keys(_this.states[state]).length;","  });","};","","/*!"," * This function builds the functions that get assigned to `forEach` and `map`,"," * since both of those methods share a lot of the same logic."," *"," * @param {String} iterMethod is either 'forEach' or 'map'"," * @return {Function}"," * @api private"," */","","StateMachine.prototype._iter = function _iter(iterMethod) {","  return function() {","    var numArgs = arguments.length,","        states = utils.args(arguments, 0, numArgs - 1),","        callback = arguments[numArgs - 1];","","    if (!states.length) states = this.stateNames;","","    var _this = this;","","    var paths = states.reduce(function(paths, state) {","      return paths.concat(Object.keys(_this.states[state]));","    }, []);","","    return paths[iterMethod](function(path, i, paths) {","      return callback(path, i, paths);","    });","  };","};","","/*!"," * Iterates over the paths that belong to one of the parameter states."," *"," * The function profile can look like:"," * this.forEach(state1, fn);         // iterates over all paths in state1"," * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2"," * this.forEach(fn);                 // iterates over all paths in all states"," *"," * @param {String} [state]"," * @param {String} [state]"," * @param {Function} callback"," * @private"," */","","StateMachine.prototype.forEach = function forEach() {","  this.forEach = this._iter('forEach');","  return this.forEach.apply(this, arguments);","};","","/*!"," * Maps over the paths that belong to one of the parameter states."," *"," * The function profile can look like:"," * this.forEach(state1, fn);         // iterates over all paths in state1"," * this.forEach(state1, state2, fn); // iterates over all paths in state1 or state2"," * this.forEach(fn);                 // iterates over all paths in all states"," *"," * @param {String} [state]"," * @param {String} [state]"," * @param {Function} callback"," * @return {Array}"," * @private"," */","","StateMachine.prototype.map = function map() {","  this.map = this._iter('map');","  return this.map.apply(this, arguments);","};",""],"l":{"6":1,"15":1,"32":1,"33":1,"35":1,"36":0,"37":0,"38":0,"39":0,"41":0,"44":0,"45":0,"46":0,"50":1,"52":1,"54":5,"55":0,"59":1,"72":1,"73":0,"74":0,"76":0,"77":0,"84":1,"85":0,"89":0,"90":0,"91":0,"92":0,"104":1,"105":0,"106":0,"107":0,"108":0,"121":1,"122":0,"123":0,"127":0,"129":0,"131":0,"132":0,"135":0,"136":0,"155":1,"156":0,"157":0,"175":1,"176":0,"177":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/promise_provider.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/promise_provider.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":1},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":14},"end":{"line":22,"column":25}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":28}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":27}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":36}},"2":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"5":{"start":{"line":32,"column":0},"end":{"line":39,"column":2}},"6":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":45}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":28}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":51}},"11":{"start":{"line":47,"column":0},"end":{"line":49,"column":2}},"12":{"start":{"line":48,"column":2},"end":{"line":48,"column":30}},"13":{"start":{"line":51,"column":0},"end":{"line":51,"column":25}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var MPromise = require('./promise');","","/**"," * Helper for multiplexing promise implementations"," *"," * @api private"," */","","var Promise = {","  _promise: MPromise","};","","/**"," * Get the current promise constructor"," *"," * @api private"," */","Promise.get = function() {","  return Promise._promise;","};","","/**"," * Set the current promise constructor"," *"," * @api private"," */","","Promise.set = function(lib) {","  if (lib === MPromise) {","    return Promise.reset();","  }","  Promise._promise = require('./ES6Promise');","  Promise._promise.use(lib);","  require('mquery').Promise = Promise._promise.ES6;","};","","/**"," * Resets to using mpromise"," *"," * @api private"," */","","Promise.reset = function() {","  Promise._promise = MPromise;","};","","module.exports = Promise;",""],"l":{"5":1,"13":1,"22":1,"23":0,"32":1,"33":0,"34":0,"36":0,"37":0,"38":0,"47":1,"48":0,"51":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/promise.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":1,"14":0,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Promise","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":21}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":14},"end":{"line":41,"column":33}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":4},"end":{"line":46,"column":15}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}}},"5":{"name":"(anonymous_5)","line":88,"loc":{"start":{"line":88,"column":26},"end":{"line":88,"column":45}}},"6":{"name":"(anonymous_6)","line":138,"loc":{"start":{"line":138,"column":26},"end":{"line":138,"column":40}}},"7":{"name":"(anonymous_7)","line":163,"loc":{"start":{"line":163,"column":28},"end":{"line":163,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":27}},"3":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":26}},"5":{"start":{"line":41,"column":0},"end":{"line":54,"column":2}},"6":{"start":{"line":42,"column":2},"end":{"line":42,"column":30}},"7":{"start":{"line":45,"column":2},"end":{"line":51,"column":7}},"8":{"start":{"line":47,"column":6},"end":{"line":47,"column":49}},"9":{"start":{"line":50,"column":6},"end":{"line":50,"column":23}},"10":{"start":{"line":53,"column":2},"end":{"line":53,"column":17}},"11":{"start":{"line":60,"column":0},"end":{"line":67,"column":3}},"12":{"start":{"line":73,"column":0},"end":{"line":76,"column":46}},"13":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"14":{"start":{"line":89,"column":2},"end":{"line":89,"column":35}},"15":{"start":{"line":96,"column":0},"end":{"line":96,"column":29}},"16":{"start":{"line":97,"column":0},"end":{"line":97,"column":24}},"17":{"start":{"line":138,"column":0},"end":{"line":146,"column":2}},"18":{"start":{"line":139,"column":2},"end":{"line":144,"column":3}},"19":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"20":{"start":{"line":141,"column":6},"end":{"line":141,"column":30}},"21":{"start":{"line":143,"column":4},"end":{"line":143,"column":25}},"22":{"start":{"line":145,"column":2},"end":{"line":145,"column":26}},"23":{"start":{"line":163,"column":0},"end":{"line":166,"column":2}},"24":{"start":{"line":164,"column":2},"end":{"line":164,"column":34}},"25":{"start":{"line":164,"column":11},"end":{"line":164,"column":34}},"26":{"start":{"line":165,"column":2},"end":{"line":165,"column":76}},"27":{"start":{"line":188,"column":0},"end":{"line":188,"column":56}},"28":{"start":{"line":215,"column":0},"end":{"line":215,"column":56}},"29":{"start":{"line":231,"column":0},"end":{"line":231,"column":60}},"30":{"start":{"line":247,"column":0},"end":{"line":247,"column":58}},"31":{"start":{"line":314,"column":0},"end":{"line":314,"column":25}}},"branchMap":{"1":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":2},"end":{"line":139,"column":2}},{"start":{"line":139,"column":2},"end":{"line":139,"column":2}}]},"2":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"3":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":2},"end":{"line":164,"column":2}},{"start":{"line":164,"column":2},"end":{"line":164,"column":2}}]}},"code":["/*!"," * Module dependencies"," */","","var MPromise = require('mpromise');","var util = require('util');","","/**"," * Promise constructor."," *"," * Promises are returned from executed queries. Example:"," *"," *     var query = Candy.find({ bar: true });"," *     var promise = query.exec();"," *"," * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,"," * if native promises are not present) but still"," * support plugging in your own ES6-compatible promises library. Mongoose 5.0"," * will **not** support mpromise."," *"," * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature"," * @inherits mpromise https://github.com/aheckmann/mpromise"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `err`: Emits when the promise is rejected"," * @event `complete`: Emits when the promise is fulfilled"," * @api public"," * @deprecated"," */","","function Promise(fn) {","  MPromise.call(this, fn);","}","","/**"," * ES6-style promise constructor wrapper around mpromise."," *"," * @param {Function} resolver"," * @return {Promise} new promise"," * @api public"," */","Promise.ES6 = function(resolver) {","  var promise = new Promise();","","  // No try/catch for backwards compatibility","  resolver(","    function() {","      promise.complete.apply(promise, arguments);","    },","    function(e) {","      promise.error(e);","    });","","  return promise;","};","","/*!"," * Inherit from mpromise"," */","","Promise.prototype = Object.create(MPromise.prototype, {","  constructor: {","    value: Promise,","    enumerable: false,","    writable: true,","    configurable: true","  }","});","","/*!"," * ignore"," */","","Promise.prototype.then = util.deprecate(Promise.prototype.then,","  'Mongoose: mpromise (mongoose\\'s default promise library) is deprecated, ' +","  'plug in your own promise library instead: ' +","  'http://mongoosejs.com/docs/promises.html');","","/**"," * ES6-style `.catch()` shorthand"," *"," * @method catch"," * @memberOf Promise"," * @param {Function} onReject"," * @return {Promise}"," * @api public"," */","","Promise.prototype.catch = function(onReject) {","  return this.then(null, onReject);","};","","/*!"," * Override event names for backward compatibility."," */","","Promise.SUCCESS = 'complete';","Promise.FAILURE = 'err';","","/**"," * Adds `listener` to the `event`."," *"," * If `event` is either the success or failure event and the event has already been emitted, the`listener` is called immediately and passed the results of the original emitted event."," *"," * @see mpromise#on https://github.com/aheckmann/mpromise#on"," * @method on"," * @memberOf Promise"," * @param {String} event"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," */","","/**"," * Rejects this promise with `reason`."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * @see mpromise#reject https://github.com/aheckmann/mpromise#reject"," * @method reject"," * @memberOf Promise"," * @param {Object|String|Error} reason"," * @return {Promise} this"," * @api public"," */","","/**"," * Rejects this promise with `err`."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * Differs from [#reject](#promise_Promise-reject) by first casting `err` to an `Error` if it is not `instanceof Error`."," *"," * @api public"," * @param {Error|String} err"," * @return {Promise} this"," */","","Promise.prototype.error = function(err) {","  if (!(err instanceof Error)) {","    if (err instanceof Object) {","      err = util.inspect(err);","    }","    err = new Error(err);","  }","  return this.reject(err);","};","","/**"," * Resolves this promise to a rejected state if `err` is passed or a fulfilled state if no `err` is passed."," *"," * If the promise has already been fulfilled or rejected, not action is taken."," *"," * `err` will be cast to an Error if not already instanceof Error."," *"," * _NOTE: overrides [mpromise#resolve](https://github.com/aheckmann/mpromise#resolve) to provide error casting._"," *"," * @param {Error} [err] error or null"," * @param {Object} [val] value to fulfill the promise with"," * @api public"," * @deprecated"," */","","Promise.prototype.resolve = function(err) {","  if (err) return this.error(err);","  return this.fulfill.apply(this, Array.prototype.slice.call(arguments, 1));","};","","/**"," * Adds a single function as a listener to both err and complete."," *"," * It will be executed with traditional node.js argument position when the promise is resolved."," *"," *     promise.addBack(function (err, args...) {"," *       if (err) return handleError(err);"," *       console.log('success');"," *     })"," *"," * Alias of [mpromise#onResolve](https://github.com/aheckmann/mpromise#onresolve)."," *"," * _Deprecated. Use `onResolve` instead._"," *"," * @method addBack"," * @param {Function} listener"," * @return {Promise} this"," * @deprecated"," */","","Promise.prototype.addBack = Promise.prototype.onResolve;","","/**"," * Fulfills this promise with passed arguments."," *"," * @method fulfill"," * @receiver Promise"," * @see https://github.com/aheckmann/mpromise#fulfill"," * @param {any} args"," * @api public"," * @deprecated"," */","","/**"," * Fulfills this promise with passed arguments."," *"," * Alias of [mpromise#fulfill](https://github.com/aheckmann/mpromise#fulfill)."," *"," * _Deprecated. Use `fulfill` instead._"," *"," * @method complete"," * @receiver Promise"," * @param {any} args"," * @api public"," * @deprecated"," */","","Promise.prototype.complete = MPromise.prototype.fulfill;","","/**"," * Adds a listener to the `complete` (success) event."," *"," * Alias of [mpromise#onFulfill](https://github.com/aheckmann/mpromise#onfulfill)."," *"," * _Deprecated. Use `onFulfill` instead._"," *"," * @method addCallback"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," * @deprecated"," */","","Promise.prototype.addCallback = Promise.prototype.onFulfill;","","/**"," * Adds a listener to the `err` (rejected) event."," *"," * Alias of [mpromise#onReject](https://github.com/aheckmann/mpromise#onreject)."," *"," * _Deprecated. Use `onReject` instead._"," *"," * @method addErrback"," * @param {Function} listener"," * @return {Promise} this"," * @api public"," * @deprecated"," */","","Promise.prototype.addErrback = Promise.prototype.onReject;","","/**"," * Creates a new promise and returns it. If `onFulfill` or `onReject` are passed, they are added as SUCCESS/ERROR callbacks to this promise after the nextTick."," *"," * Conforms to [promises/A+](https://github.com/promises-aplus/promises-spec) specification."," *"," * ####Example:"," *"," *     var promise = Meetups.find({ tags: 'javascript' }).select('_id').exec();"," *     promise.then(function (meetups) {"," *       var ids = meetups.map(function (m) {"," *         return m._id;"," *       });"," *       return People.find({ meetups: { $in: ids } }).exec();"," *     }).then(function (people) {"," *       if (people.length < 10000) {"," *         throw new Error('Too few people!!!');"," *       } else {"," *         throw new Error('Still need more people!!!');"," *       }"," *     }).then(null, function (err) {"," *       assert.ok(err instanceof Error);"," *     });"," *"," * @see promises-A+ https://github.com/promises-aplus/promises-spec"," * @see mpromise#then https://github.com/aheckmann/mpromise#then"," * @method then"," * @memberOf Promise"," * @param {Function} onFulFill"," * @param {Function} onReject"," * @return {Promise} newPromise"," * @deprecated"," */","","/**"," * Signifies that this promise was the last in a chain of `then()s`: if a handler passed to the call to `then` which produced this promise throws, the exception will go uncaught."," *"," * ####Example:"," *"," *     var p = new Promise;"," *     p.then(function(){ throw new Error('shucks') });"," *     setTimeout(function () {"," *       p.fulfill();"," *       // error was caught and swallowed by the promise returned from"," *       // p.then(). we either have to always register handlers on"," *       // the returned promises or we can do the following..."," *     }, 10);"," *"," *     // this time we use .end() which prevents catching thrown errors"," *     var p = new Promise;"," *     var p2 = p.then(function(){ throw new Error('shucks') }).end(); // <--"," *     setTimeout(function () {"," *       p.fulfill(); // throws \"shucks\""," *     }, 10);"," *"," * @api public"," * @see mpromise#end https://github.com/aheckmann/mpromise#end"," * @method end"," * @memberOf Promise"," * @deprecated"," */","","/*!"," * expose"," */","","module.exports = Promise;",""],"l":{"5":1,"6":1,"30":1,"31":0,"41":1,"42":0,"45":0,"47":0,"50":0,"53":0,"60":1,"73":1,"88":1,"89":0,"96":1,"97":1,"138":1,"139":0,"140":0,"141":0,"143":0,"145":0,"163":1,"164":0,"165":0,"188":1,"215":1,"231":1,"247":1,"314":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/common.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/common.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0,0,0,0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"flatten","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":40}}},"2":{"name":"modifiedPaths","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":45}}},"3":{"name":"shouldFlatten","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":28}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"4":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"5":{"start":{"line":17,"column":0},"end":{"line":48,"column":1}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":11}},"7":{"start":{"line":19,"column":2},"end":{"line":23,"column":3}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":79}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}},"10":{"start":{"line":25,"column":2},"end":{"line":25,"column":28}},"11":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}},"12":{"start":{"line":27,"column":2},"end":{"line":27,"column":32}},"13":{"start":{"line":29,"column":2},"end":{"line":45,"column":3}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":22}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":29}},"17":{"start":{"line":33,"column":4},"end":{"line":44,"column":5}},"18":{"start":{"line":34,"column":6},"end":{"line":36,"column":7}},"19":{"start":{"line":35,"column":8},"end":{"line":35,"column":17}},"20":{"start":{"line":37,"column":6},"end":{"line":37,"column":42}},"21":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"22":{"start":{"line":39,"column":8},"end":{"line":39,"column":28}},"23":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"24":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"25":{"start":{"line":47,"column":2},"end":{"line":47,"column":16}},"26":{"start":{"line":54,"column":0},"end":{"line":74,"column":1}},"27":{"start":{"line":55,"column":2},"end":{"line":55,"column":39}},"28":{"start":{"line":56,"column":2},"end":{"line":56,"column":28}},"29":{"start":{"line":57,"column":2},"end":{"line":57,"column":24}},"30":{"start":{"line":58,"column":2},"end":{"line":58,"column":32}},"31":{"start":{"line":60,"column":2},"end":{"line":71,"column":3}},"32":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"33":{"start":{"line":62,"column":4},"end":{"line":62,"column":26}},"34":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"35":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"36":{"start":{"line":66,"column":6},"end":{"line":66,"column":64}},"37":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"38":{"start":{"line":69,"column":6},"end":{"line":69,"column":45}},"39":{"start":{"line":73,"column":2},"end":{"line":73,"column":16}},"40":{"start":{"line":80,"column":0},"end":{"line":87,"column":1}},"41":{"start":{"line":81,"column":2},"end":{"line":86,"column":29}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":12}},{"start":{"line":19,"column":16},"end":{"line":19,"column":46}},{"start":{"line":19,"column":50},"end":{"line":19,"column":74}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":23},"end":{"line":22,"column":29}},{"start":{"line":22,"column":33},"end":{"line":22,"column":35}}]},"4":{"line":27,"type":"cond-expr","locations":[{"start":{"line":27,"column":16},"end":{"line":27,"column":26}},{"start":{"line":27,"column":29},"end":{"line":27,"column":31}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":6}},{"start":{"line":34,"column":6},"end":{"line":34,"column":6}}]},"7":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":17}},{"start":{"line":34,"column":21},"end":{"line":34,"column":39}},{"start":{"line":34,"column":43},"end":{"line":34,"column":61}}]},"8":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"9":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":25},"end":{"line":55,"column":31}},{"start":{"line":55,"column":35},"end":{"line":55,"column":37}}]},"10":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":11},"end":{"line":57,"column":17}},{"start":{"line":57,"column":21},"end":{"line":57,"column":23}}]},"11":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":16},"end":{"line":58,"column":26}},{"start":{"line":58,"column":29},"end":{"line":58,"column":31}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"13":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":35}},{"start":{"line":65,"column":39},"end":{"line":65,"column":60}}]},"14":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"15":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":9},"end":{"line":81,"column":12}},{"start":{"line":82,"column":4},"end":{"line":82,"column":27}},{"start":{"line":83,"column":4},"end":{"line":83,"column":26}},{"start":{"line":84,"column":4},"end":{"line":84,"column":30}},{"start":{"line":85,"column":5},"end":{"line":85,"column":24}},{"start":{"line":85,"column":28},"end":{"line":85,"column":42}},{"start":{"line":86,"column":4},"end":{"line":86,"column":28}}]}},"code":["'use strict';","","/*!"," * Module dependencies."," */","","var ObjectId = require('../types/objectid');","var utils = require('../utils');","","exports.flatten = flatten;","exports.modifiedPaths = modifiedPaths;","","/*!"," * ignore"," */","","function flatten(update, path, options) {","  var keys;","  if (update && utils.isMongooseObject(update) && !Buffer.isBuffer(update)) {","    keys = Object.keys(update.toObject({ transform: false, virtuals: false }));","  } else {","    keys = Object.keys(update || {});","  }","","  var numKeys = keys.length;","  var result = {};","  path = path ? path + '.' : '';","","  for (var i = 0; i < numKeys; ++i) {","    var key = keys[i];","    var val = update[key];","    result[path + key] = val;","    if (shouldFlatten(val)) {","      if (options && options.skipArrays && Array.isArray(val)) {","        continue;","      }","      var flat = flatten(val, path + key);","      for (var k in flat) {","        result[k] = flat[k];","      }","      if (Array.isArray(val)) {","        result[path + key] = val;","      }","    }","  }","","  return result;","}","","/*!"," * ignore"," */","","function modifiedPaths(update, path, result) {","  var keys = Object.keys(update || {});","  var numKeys = keys.length;","  result = result || {};","  path = path ? path + '.' : '';","","  for (var i = 0; i < numKeys; ++i) {","    var key = keys[i];","    var val = update[key];","","    result[path + key] = true;","    if (utils.isMongooseObject(val) && !Buffer.isBuffer(val)) {","      val = val.toObject({ transform: false, virtuals: false });","    }","    if (shouldFlatten(val)) {","      modifiedPaths(val, path + key, result);","    }","  }","","  return result;","}","","/*!"," * ignore"," */","","function shouldFlatten(val) {","  return val &&","    typeof val === 'object' &&","    !(val instanceof Date) &&","    !(val instanceof ObjectId) &&","    (!Array.isArray(val) || val.length > 0) &&","    !(val instanceof Buffer);","}",""],"l":{"7":1,"8":1,"10":1,"11":1,"17":1,"18":0,"19":0,"20":0,"22":0,"25":0,"26":0,"27":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"47":0,"54":1,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"68":0,"69":0,"73":0,"80":1,"81":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/browserDocument.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/browserDocument.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1,"49":1,"50":8,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":1,"153":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"f":{"1":0,"2":8,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"Document","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":57}}},"2":{"name":"(anonymous_2)","line":111,"loc":{"start":{"line":111,"column":4},"end":{"line":111,"column":24}}},"3":{"name":"(anonymous_3)","line":112,"loc":{"start":{"line":112,"column":28},"end":{"line":112,"column":39}}},"4":{"name":"(anonymous_4)","line":126,"loc":{"start":{"line":126,"column":48},"end":{"line":126,"column":59}}},"5":{"name":"(anonymous_5)","line":168,"loc":{"start":{"line":168,"column":22},"end":{"line":168,"column":37}}},"6":{"name":"(anonymous_6)","line":176,"loc":{"start":{"line":176,"column":30},"end":{"line":176,"column":45}}},"7":{"name":"(anonymous_7)","line":181,"loc":{"start":{"line":181,"column":31},"end":{"line":181,"column":46}}},"8":{"name":"(anonymous_8)","line":189,"loc":{"start":{"line":189,"column":29},"end":{"line":189,"column":44}}},"9":{"name":"(anonymous_9)","line":194,"loc":{"start":{"line":194,"column":30},"end":{"line":194,"column":45}}},"10":{"name":"(anonymous_10)","line":211,"loc":{"start":{"line":211,"column":23},"end":{"line":211,"column":42}}},"11":{"name":"wrappedPointCut","line":212,"loc":{"start":{"line":212,"column":13},"end":{"line":212,"column":40}}},"12":{"name":"(anonymous_12)","line":224,"loc":{"start":{"line":224,"column":38},"end":{"line":224,"column":64}}},"13":{"name":"(anonymous_13)","line":225,"loc":{"start":{"line":225,"column":20},"end":{"line":225,"column":36}}},"14":{"name":"(anonymous_14)","line":251,"loc":{"start":{"line":251,"column":12},"end":{"line":251,"column":23}}},"15":{"name":"(anonymous_15)","line":252,"loc":{"start":{"line":252,"column":31},"end":{"line":252,"column":42}}},"16":{"name":"(anonymous_16)","line":256,"loc":{"start":{"line":256,"column":12},"end":{"line":256,"column":28}}},"17":{"name":"(anonymous_17)","line":257,"loc":{"start":{"line":257,"column":31},"end":{"line":257,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":39}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":43}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":13}},"12":{"start":{"line":30,"column":0},"end":{"line":93,"column":1}},"13":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"14":{"start":{"line":32,"column":4},"end":{"line":32,"column":63}},"15":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":32}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":33}},"18":{"start":{"line":44,"column":2},"end":{"line":50,"column":3}},"19":{"start":{"line":45,"column":4},"end":{"line":45,"column":20}},"20":{"start":{"line":47,"column":4},"end":{"line":49,"column":5}},"21":{"start":{"line":48,"column":6},"end":{"line":48,"column":31}},"22":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"23":{"start":{"line":53,"column":4},"end":{"line":53,"column":49}},"24":{"start":{"line":56,"column":2},"end":{"line":56,"column":28}},"25":{"start":{"line":58,"column":2},"end":{"line":58,"column":31}},"26":{"start":{"line":59,"column":2},"end":{"line":59,"column":40}},"27":{"start":{"line":60,"column":2},"end":{"line":60,"column":20}},"28":{"start":{"line":61,"column":2},"end":{"line":61,"column":26}},"29":{"start":{"line":63,"column":2},"end":{"line":69,"column":3}},"30":{"start":{"line":64,"column":4},"end":{"line":64,"column":33}},"31":{"start":{"line":65,"column":4},"end":{"line":65,"column":23}},"32":{"start":{"line":67,"column":4},"end":{"line":67,"column":76}},"33":{"start":{"line":68,"column":4},"end":{"line":68,"column":31}},"34":{"start":{"line":71,"column":2},"end":{"line":71,"column":45}},"35":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"36":{"start":{"line":73,"column":4},"end":{"line":73,"column":46}},"37":{"start":{"line":76,"column":2},"end":{"line":76,"column":38}},"38":{"start":{"line":77,"column":2},"end":{"line":77,"column":52}},"39":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"40":{"start":{"line":80,"column":4},"end":{"line":80,"column":19}},"41":{"start":{"line":83,"column":2},"end":{"line":83,"column":36}},"42":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"43":{"start":{"line":87,"column":4},"end":{"line":87,"column":32}},"44":{"start":{"line":90,"column":2},"end":{"line":92,"column":3}},"45":{"start":{"line":91,"column":4},"end":{"line":91,"column":32}},"46":{"start":{"line":99,"column":0},"end":{"line":99,"column":61}},"47":{"start":{"line":100,"column":0},"end":{"line":100,"column":42}},"48":{"start":{"line":106,"column":0},"end":{"line":106,"column":39}},"49":{"start":{"line":108,"column":0},"end":{"line":115,"column":7}},"50":{"start":{"line":112,"column":6},"end":{"line":114,"column":8}},"51":{"start":{"line":113,"column":8},"end":{"line":113,"column":80}},"52":{"start":{"line":126,"column":0},"end":{"line":283,"column":2}},"53":{"start":{"line":127,"column":2},"end":{"line":127,"column":53}},"54":{"start":{"line":128,"column":2},"end":{"line":128,"column":38}},"55":{"start":{"line":130,"column":2},"end":{"line":130,"column":19}},"56":{"start":{"line":131,"column":2},"end":{"line":131,"column":49}},"57":{"start":{"line":132,"column":2},"end":{"line":132,"column":15}},"58":{"start":{"line":133,"column":2},"end":{"line":133,"column":10}},"59":{"start":{"line":134,"column":2},"end":{"line":134,"column":8}},"60":{"start":{"line":135,"column":2},"end":{"line":135,"column":8}},"61":{"start":{"line":136,"column":2},"end":{"line":136,"column":15}},"62":{"start":{"line":137,"column":2},"end":{"line":137,"column":11}},"63":{"start":{"line":138,"column":2},"end":{"line":140,"column":3}},"64":{"start":{"line":139,"column":4},"end":{"line":139,"column":17}},"65":{"start":{"line":143,"column":2},"end":{"line":143,"column":28}},"66":{"start":{"line":144,"column":2},"end":{"line":144,"column":11}},"67":{"start":{"line":146,"column":2},"end":{"line":164,"column":3}},"68":{"start":{"line":147,"column":4},"end":{"line":147,"column":16}},"69":{"start":{"line":148,"column":4},"end":{"line":151,"column":5}},"70":{"start":{"line":149,"column":6},"end":{"line":149,"column":43}},"71":{"start":{"line":150,"column":6},"end":{"line":150,"column":15}},"72":{"start":{"line":152,"column":4},"end":{"line":152,"column":38}},"73":{"start":{"line":153,"column":4},"end":{"line":153,"column":51}},"74":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"75":{"start":{"line":155,"column":6},"end":{"line":155,"column":45}},"76":{"start":{"line":157,"column":4},"end":{"line":163,"column":5}},"77":{"start":{"line":158,"column":6},"end":{"line":158,"column":39}},"78":{"start":{"line":159,"column":11},"end":{"line":163,"column":5}},"79":{"start":{"line":160,"column":6},"end":{"line":160,"column":34}},"80":{"start":{"line":162,"column":6},"end":{"line":162,"column":38}},"81":{"start":{"line":167,"column":2},"end":{"line":167,"column":27}},"82":{"start":{"line":168,"column":2},"end":{"line":170,"column":5}},"83":{"start":{"line":169,"column":4},"end":{"line":169,"column":32}},"84":{"start":{"line":171,"column":2},"end":{"line":171,"column":21}},"85":{"start":{"line":174,"column":2},"end":{"line":199,"column":3}},"86":{"start":{"line":175,"column":4},"end":{"line":179,"column":5}},"87":{"start":{"line":176,"column":6},"end":{"line":178,"column":9}},"88":{"start":{"line":177,"column":8},"end":{"line":177,"column":38}},"89":{"start":{"line":180,"column":4},"end":{"line":184,"column":5}},"90":{"start":{"line":181,"column":6},"end":{"line":183,"column":9}},"91":{"start":{"line":182,"column":8},"end":{"line":182,"column":39}},"92":{"start":{"line":185,"column":4},"end":{"line":185,"column":23}},"93":{"start":{"line":186,"column":9},"end":{"line":199,"column":3}},"94":{"start":{"line":188,"column":4},"end":{"line":192,"column":5}},"95":{"start":{"line":189,"column":6},"end":{"line":191,"column":9}},"96":{"start":{"line":190,"column":8},"end":{"line":190,"column":38}},"97":{"start":{"line":193,"column":4},"end":{"line":197,"column":5}},"98":{"start":{"line":194,"column":6},"end":{"line":196,"column":9}},"99":{"start":{"line":195,"column":8},"end":{"line":195,"column":39}},"100":{"start":{"line":198,"column":4},"end":{"line":198,"column":22}},"101":{"start":{"line":201,"column":2},"end":{"line":201,"column":29}},"102":{"start":{"line":202,"column":2},"end":{"line":202,"column":20}},"103":{"start":{"line":203,"column":2},"end":{"line":281,"column":3}},"104":{"start":{"line":204,"column":4},"end":{"line":204,"column":23}},"105":{"start":{"line":206,"column":4},"end":{"line":206,"column":46}},"106":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"107":{"start":{"line":208,"column":6},"end":{"line":208,"column":15}},"108":{"start":{"line":210,"column":4},"end":{"line":210,"column":37}},"109":{"start":{"line":211,"column":4},"end":{"line":264,"column":16}},"110":{"start":{"line":212,"column":6},"end":{"line":263,"column":8}},"111":{"start":{"line":213,"column":8},"end":{"line":213,"column":44}},"112":{"start":{"line":214,"column":8},"end":{"line":214,"column":33}},"113":{"start":{"line":215,"column":8},"end":{"line":215,"column":15}},"114":{"start":{"line":216,"column":8},"end":{"line":216,"column":40}},"115":{"start":{"line":217,"column":8},"end":{"line":217,"column":21}},"116":{"start":{"line":218,"column":8},"end":{"line":222,"column":9}},"117":{"start":{"line":219,"column":10},"end":{"line":219,"column":29}},"118":{"start":{"line":221,"column":10},"end":{"line":221,"column":23}},"119":{"start":{"line":224,"column":8},"end":{"line":245,"column":11}},"120":{"start":{"line":225,"column":10},"end":{"line":242,"column":13}},"121":{"start":{"line":226,"column":12},"end":{"line":236,"column":13}},"122":{"start":{"line":230,"column":14},"end":{"line":232,"column":15}},"123":{"start":{"line":231,"column":16},"end":{"line":231,"column":50}},"124":{"start":{"line":233,"column":14},"end":{"line":233,"column":43}},"125":{"start":{"line":234,"column":14},"end":{"line":234,"column":28}},"126":{"start":{"line":235,"column":14},"end":{"line":235,"column":21}},"127":{"start":{"line":240,"column":12},"end":{"line":240,"column":64}},"128":{"start":{"line":241,"column":12},"end":{"line":241,"column":45}},"129":{"start":{"line":244,"column":10},"end":{"line":244,"column":45}},"130":{"start":{"line":246,"column":8},"end":{"line":261,"column":9}},"131":{"start":{"line":247,"column":10},"end":{"line":249,"column":11}},"132":{"start":{"line":248,"column":12},"end":{"line":248,"column":53}},"133":{"start":{"line":250,"column":10},"end":{"line":260,"column":15}},"134":{"start":{"line":252,"column":14},"end":{"line":254,"column":17}},"135":{"start":{"line":253,"column":16},"end":{"line":253,"column":56}},"136":{"start":{"line":257,"column":14},"end":{"line":259,"column":17}},"137":{"start":{"line":258,"column":16},"end":{"line":258,"column":26}},"138":{"start":{"line":262,"column":8},"end":{"line":262,"column":23}},"139":{"start":{"line":266,"column":4},"end":{"line":266,"column":32}},"140":{"start":{"line":267,"column":4},"end":{"line":267,"column":35}},"141":{"start":{"line":268,"column":4},"end":{"line":268,"column":9}},"142":{"start":{"line":269,"column":4},"end":{"line":273,"column":5}},"143":{"start":{"line":270,"column":6},"end":{"line":270,"column":29}},"144":{"start":{"line":271,"column":6},"end":{"line":271,"column":24}},"145":{"start":{"line":272,"column":6},"end":{"line":272,"column":36}},"146":{"start":{"line":275,"column":4},"end":{"line":275,"column":32}},"147":{"start":{"line":276,"column":4},"end":{"line":280,"column":5}},"148":{"start":{"line":277,"column":6},"end":{"line":277,"column":30}},"149":{"start":{"line":278,"column":6},"end":{"line":278,"column":24}},"150":{"start":{"line":279,"column":6},"end":{"line":279,"column":37}},"151":{"start":{"line":282,"column":2},"end":{"line":282,"column":15}},"152":{"start":{"line":289,"column":0},"end":{"line":289,"column":43}},"153":{"start":{"line":290,"column":0},"end":{"line":290,"column":36}}},"branchMap":{"1":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":28}},{"start":{"line":36,"column":32},"end":{"line":36,"column":56}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":11},"end":{"line":41,"column":22}},{"start":{"line":41,"column":26},"end":{"line":41,"column":32}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"6":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":18}},{"start":{"line":44,"column":22},"end":{"line":44,"column":40}}]},"7":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":10},"end":{"line":45,"column":13}},{"start":{"line":45,"column":17},"end":{"line":45,"column":19}}]},"8":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":2},"end":{"line":52,"column":2}},{"start":{"line":52,"column":2},"end":{"line":52,"column":2}}]},"10":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"11":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":26},"end":{"line":67,"column":45}},{"start":{"line":67,"column":49},"end":{"line":67,"column":75}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"13":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":15}},{"start":{"line":79,"column":19},"end":{"line":79,"column":22}}]},"14":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":13},"end":{"line":127,"column":21}},{"start":{"line":127,"column":25},"end":{"line":127,"column":52}}]},"15":{"line":131,"type":"binary-expr","locations":[{"start":{"line":131,"column":10},"end":{"line":131,"column":22}},{"start":{"line":131,"column":26},"end":{"line":131,"column":48}}]},"16":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":2},"end":{"line":138,"column":2}},{"start":{"line":138,"column":2},"end":{"line":138,"column":2}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"18":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":25}},{"start":{"line":148,"column":29},"end":{"line":148,"column":47}},{"start":{"line":148,"column":51},"end":{"line":148,"column":67}}]},"19":{"line":153,"type":"cond-expr","locations":[{"start":{"line":153,"column":34},"end":{"line":153,"column":40}},{"start":{"line":153,"column":43},"end":{"line":153,"column":50}}]},"20":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]},"21":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":4},"end":{"line":157,"column":4}},{"start":{"line":157,"column":4},"end":{"line":157,"column":4}}]},"22":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":11},"end":{"line":159,"column":11}},{"start":{"line":159,"column":11},"end":{"line":159,"column":11}}]},"23":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"24":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":17}},{"start":{"line":174,"column":21},"end":{"line":174,"column":46}}]},"25":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"26":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":4},"end":{"line":180,"column":4}},{"start":{"line":180,"column":4},"end":{"line":180,"column":4}}]},"27":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":9},"end":{"line":186,"column":9}},{"start":{"line":186,"column":9},"end":{"line":186,"column":9}}]},"28":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"29":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"30":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"31":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"32":{"line":218,"type":"binary-expr","locations":[{"start":{"line":218,"column":12},"end":{"line":218,"column":19}},{"start":{"line":218,"column":23},"end":{"line":218,"column":52}}]},"33":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":12}},{"start":{"line":226,"column":12},"end":{"line":226,"column":12}}]},"34":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":14},"end":{"line":230,"column":14}},{"start":{"line":230,"column":14},"end":{"line":230,"column":14}}]},"35":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":8},"end":{"line":246,"column":8}},{"start":{"line":246,"column":8},"end":{"line":246,"column":8}}]},"36":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":10},"end":{"line":247,"column":10}},{"start":{"line":247,"column":10},"end":{"line":247,"column":10}}]}},"code":["/*!"," * Module dependencies."," */","","var NodeJSDocument = require('./document');","var EventEmitter = require('events').EventEmitter;","var MongooseError = require('./error');","var Schema = require('./schema');","var ObjectId = require('./types/objectid');","var utils = require('./utils');","var ValidationError = MongooseError.ValidationError;","var InternalCache = require('./internal');","var PromiseProvider = require('./promise_provider');","var VersionError = require('./error').VersionError;","","var Embedded;","","/**"," * Document constructor."," *"," * @param {Object} obj the values to set"," * @param {Object} [fields] optional object containing the fields which were selected in the query returning this document and any populated paths data"," * @param {Boolean} [skipId] bool, should we auto create an ObjectId _id"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `init`: Emitted on a document after it has was retrieved from the db and fully hydrated by Mongoose."," * @event `save`: Emitted when the document is successfully saved"," * @api private"," */","","function Document(obj, schema, fields, skipId, skipInit) {","  if (!(this instanceof Document)) {","    return new Document(obj, schema, fields, skipId, skipInit);","  }","","","  if (utils.isObject(schema) && !schema.instanceOfSchema) {","    schema = new Schema(schema);","  }","","  // When creating EmbeddedDocument, it already has the schema and he doesn't need the _id","  schema = this.schema || schema;","","  // Generate ObjectId if it is missing, but it requires a scheme","  if (!this.schema && schema.options._id) {","    obj = obj || {};","","    if (obj._id === undefined) {","      obj._id = new ObjectId();","    }","  }","","  if (!schema) {","    throw new MongooseError.MissingSchemaError();","  }","","  this.$__setSchema(schema);","","  this.$__ = new InternalCache;","  this.$__.emitter = new EventEmitter();","  this.isNew = true;","  this.errors = undefined;","","  if (typeof fields === 'boolean') {","    this.$__.strictMode = fields;","    fields = undefined;","  } else {","    this.$__.strictMode = this.schema.options && this.schema.options.strict;","    this.$__.selected = fields;","  }","","  var required = this.schema.requiredPaths();","  for (var i = 0; i < required.length; ++i) {","    this.$__.activePaths.require(required[i]);","  }","","  this.$__.emitter.setMaxListeners(0);","  this._doc = this.$__buildDoc(obj, fields, skipId);","","  if (!skipInit && obj) {","    this.init(obj);","  }","","  this.$__registerHooksFromSchema();","","  // apply methods","  for (var m in schema.methods) {","    this[m] = schema.methods[m];","  }","  // apply statics","  for (var s in schema.statics) {","    this[s] = schema.statics[s];","  }","}","","/*!"," * Inherit from the NodeJS document"," */","","Document.prototype = Object.create(NodeJSDocument.prototype);","Document.prototype.constructor = Document;","","/*!"," * Browser doc exposes the event emitter API"," */","","Document.$emitter = new EventEmitter();","","utils.each(","    ['on', 'once', 'emit', 'listeners', 'removeListener', 'setMaxListeners',","      'removeAllListeners', 'addListener'],","    function(emitterFn) {","      Document[emitterFn] = function() {","        return Document.$emitter[emitterFn].apply(Document.$emitter, arguments);","      };","    });","","/*!"," * Executes methods queued from the Schema definition"," *"," * @api private"," * @method $__registerHooksFromSchema"," * @deprecated"," * @memberOf Document"," */","","Document.prototype.$__registerHooksFromSchema = function() {","  Embedded = Embedded || require('./types/embedded');","  var Promise = PromiseProvider.get();","","  var _this = this;","  var q = _this.schema && _this.schema.callQueue;","  var toWrapEl;","  var len;","  var i;","  var j;","  var pointCut;","  var keys;","  if (!q.length) {","    return _this;","  }","","  // we are only interested in 'pre' hooks, and group by point-cut","  var toWrap = { post: [] };","  var pair;","","  for (i = 0; i < q.length; ++i) {","    pair = q[i];","    if (pair[0] !== 'pre' && pair[0] !== 'post' && pair[0] !== 'on') {","      _this[pair[0]].apply(_this, pair[1]);","      continue;","    }","    var args = [].slice.call(pair[1]);","    pointCut = pair[0] === 'on' ? 'post' : args[0];","    if (!(pointCut in toWrap)) {","      toWrap[pointCut] = {post: [], pre: []};","    }","    if (pair[0] === 'post') {","      toWrap[pointCut].post.push(args);","    } else if (pair[0] === 'on') {","      toWrap[pointCut].push(args);","    } else {","      toWrap[pointCut].pre.push(args);","    }","  }","","  // 'post' hooks are simpler","  len = toWrap.post.length;","  toWrap.post.forEach(function(args) {","    _this.on.apply(_this, args);","  });","  delete toWrap.post;","","  // 'init' should be synchronous on subdocuments","  if (toWrap.init && _this instanceof Embedded) {","    if (toWrap.init.pre) {","      toWrap.init.pre.forEach(function(args) {","        _this.$pre.apply(_this, args);","      });","    }","    if (toWrap.init.post) {","      toWrap.init.post.forEach(function(args) {","        _this.$post.apply(_this, args);","      });","    }","    delete toWrap.init;","  } else if (toWrap.set) {","    // Set hooks also need to be sync re: gh-3479","    if (toWrap.set.pre) {","      toWrap.set.pre.forEach(function(args) {","        _this.$pre.apply(_this, args);","      });","    }","    if (toWrap.set.post) {","      toWrap.set.post.forEach(function(args) {","        _this.$post.apply(_this, args);","      });","    }","    delete toWrap.set;","  }","","  keys = Object.keys(toWrap);","  len = keys.length;","  for (i = 0; i < len; ++i) {","    pointCut = keys[i];","    // this is so we can wrap everything into a promise;","    var newName = ('$__original_' + pointCut);","    if (!_this[pointCut]) {","      continue;","    }","    _this[newName] = _this[pointCut];","    _this[pointCut] = (function(_newName) {","      return function wrappedPointCut() {","        var args = [].slice.call(arguments);","        var lastArg = args.pop();","        var fn;","        var originalError = new Error();","        var $results;","        if (lastArg && typeof lastArg !== 'function') {","          args.push(lastArg);","        } else {","          fn = lastArg;","        }","","        var promise = new Promise.ES6(function(resolve, reject) {","          args.push(function(error) {","            if (error) {","              // gh-2633: since VersionError is very generic, take the","              // stack trace of the original save() function call rather","              // than the async trace","              if (error instanceof VersionError) {","                error.stack = originalError.stack;","              }","              _this.$__handleReject(error);","              reject(error);","              return;","            }","","            // There may be multiple results and promise libs other than","            // mpromise don't support passing multiple values to `resolve()`","            $results = Array.prototype.slice.call(arguments, 1);","            resolve.apply(promise, $results);","          });","","          _this[_newName].apply(_this, args);","        });","        if (fn) {","          if (_this.constructor.$wrapCallback) {","            fn = _this.constructor.$wrapCallback(fn);","          }","          return promise.then(","            function() {","              process.nextTick(function() {","                fn.apply(null, [null].concat($results));","              });","            },","            function(error) {","              process.nextTick(function() {","                fn(error);","              });","            });","        }","        return promise;","      };","    })(newName);","","    toWrapEl = toWrap[pointCut];","    var _len = toWrapEl.pre.length;","    args;","    for (j = 0; j < _len; ++j) {","      args = toWrapEl.pre[j];","      args[0] = newName;","      _this.$pre.apply(_this, args);","    }","","    _len = toWrapEl.post.length;","    for (j = 0; j < _len; ++j) {","      args = toWrapEl.post[j];","      args[0] = newName;","      _this.$post.apply(_this, args);","    }","  }","  return _this;","};","","/*!"," * Module exports."," */","","Document.ValidationError = ValidationError;","module.exports = exports = Document;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"16":1,"30":1,"31":0,"32":0,"36":0,"37":0,"41":0,"44":0,"45":0,"47":0,"48":0,"52":0,"53":0,"56":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"67":0,"68":0,"71":0,"72":0,"73":0,"76":0,"77":0,"79":0,"80":0,"83":0,"86":0,"87":0,"90":0,"91":0,"99":1,"100":1,"106":1,"108":1,"112":8,"113":0,"126":1,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"143":0,"144":0,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"160":0,"162":0,"167":0,"168":0,"169":0,"171":0,"174":0,"175":0,"176":0,"177":0,"180":0,"181":0,"182":0,"185":0,"186":0,"188":0,"189":0,"190":0,"193":0,"194":0,"195":0,"198":0,"201":0,"202":0,"203":0,"204":0,"206":0,"207":0,"208":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"221":0,"224":0,"225":0,"226":0,"230":0,"231":0,"233":0,"234":0,"235":0,"240":0,"241":0,"244":0,"246":0,"247":0,"248":0,"250":0,"252":0,"253":0,"257":0,"258":0,"262":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"275":0,"276":0,"277":0,"278":0,"279":0,"282":0,"289":1,"290":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/buffer.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/buffer.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":25,"38":7,"39":18,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[7,18],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":25,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"MongooseBuffer","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":47}}},"2":{"name":"(anonymous_2)","line":100,"loc":{"start":{"line":100,"column":17},"end":{"line":100,"column":28}}},"3":{"name":"(anonymous_3)","line":117,"loc":{"start":{"line":117,"column":9},"end":{"line":117,"column":20}}},"4":{"name":"(anonymous_4)","line":140,"loc":{"start":{"line":140,"column":8},"end":{"line":140,"column":25}}},"5":{"name":"(anonymous_5)","line":165,"loc":{"start":{"line":165,"column":21},"end":{"line":165,"column":38}}},"6":{"name":"(anonymous_6)","line":169,"loc":{"start":{"line":169,"column":33},"end":{"line":169,"column":44}}},"7":{"name":"(anonymous_7)","line":199,"loc":{"start":{"line":199,"column":32},"end":{"line":199,"column":50}}},"8":{"name":"(anonymous_8)","line":215,"loc":{"start":{"line":215,"column":30},"end":{"line":215,"column":46}}},"9":{"name":"(anonymous_9)","line":255,"loc":{"start":{"line":255,"column":31},"end":{"line":255,"column":49}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":32}},"2":{"start":{"line":21,"column":0},"end":{"line":62,"column":1}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":32}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":10}},"5":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":12}},"7":{"start":{"line":28,"column":4},"end":{"line":28,"column":16}},"8":{"start":{"line":31,"column":2},"end":{"line":31,"column":15}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":11}},"10":{"start":{"line":33,"column":2},"end":{"line":33,"column":10}},"11":{"start":{"line":35,"column":2},"end":{"line":41,"column":3}},"12":{"start":{"line":37,"column":4},"end":{"line":37,"column":21}},"13":{"start":{"line":38,"column":4},"end":{"line":38,"column":20}},"14":{"start":{"line":40,"column":4},"end":{"line":40,"column":22}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":46}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":44}},"17":{"start":{"line":45,"column":2},"end":{"line":45,"column":30}},"18":{"start":{"line":48,"column":2},"end":{"line":52,"column":5}},"19":{"start":{"line":54,"column":2},"end":{"line":58,"column":3}},"20":{"start":{"line":55,"column":4},"end":{"line":57,"column":7}},"21":{"start":{"line":60,"column":2},"end":{"line":60,"column":19}},"22":{"start":{"line":61,"column":2},"end":{"line":61,"column":13}},"23":{"start":{"line":70,"column":0},"end":{"line":149,"column":2}},"24":{"start":{"line":101,"column":4},"end":{"line":101,"column":30}},"25":{"start":{"line":103,"column":4},"end":{"line":105,"column":5}},"26":{"start":{"line":104,"column":6},"end":{"line":104,"column":38}},"27":{"start":{"line":106,"column":4},"end":{"line":106,"column":16}},"28":{"start":{"line":118,"column":4},"end":{"line":118,"column":64}},"29":{"start":{"line":120,"column":4},"end":{"line":122,"column":5}},"30":{"start":{"line":121,"column":6},"end":{"line":121,"column":27}},"31":{"start":{"line":124,"column":4},"end":{"line":124,"column":19}},"32":{"start":{"line":141,"column":4},"end":{"line":141,"column":59}},"33":{"start":{"line":143,"column":4},"end":{"line":145,"column":5}},"34":{"start":{"line":144,"column":6},"end":{"line":144,"column":29}},"35":{"start":{"line":147,"column":4},"end":{"line":147,"column":15}},"36":{"start":{"line":155,"column":0},"end":{"line":174,"column":3}},"37":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"38":{"start":{"line":167,"column":4},"end":{"line":167,"column":11}},"39":{"start":{"line":169,"column":2},"end":{"line":173,"column":4}},"40":{"start":{"line":170,"column":4},"end":{"line":170,"column":62}},"41":{"start":{"line":171,"column":4},"end":{"line":171,"column":25}},"42":{"start":{"line":172,"column":4},"end":{"line":172,"column":15}},"43":{"start":{"line":199,"column":0},"end":{"line":204,"column":2}},"44":{"start":{"line":200,"column":2},"end":{"line":202,"column":29}},"45":{"start":{"line":203,"column":2},"end":{"line":203,"column":35}},"46":{"start":{"line":215,"column":0},"end":{"line":231,"column":2}},"47":{"start":{"line":216,"column":2},"end":{"line":218,"column":3}},"48":{"start":{"line":217,"column":4},"end":{"line":217,"column":17}},"49":{"start":{"line":220,"column":2},"end":{"line":222,"column":3}},"50":{"start":{"line":221,"column":4},"end":{"line":221,"column":17}},"51":{"start":{"line":224,"column":2},"end":{"line":228,"column":3}},"52":{"start":{"line":225,"column":4},"end":{"line":227,"column":5}},"53":{"start":{"line":226,"column":6},"end":{"line":226,"column":19}},"54":{"start":{"line":230,"column":2},"end":{"line":230,"column":14}},"55":{"start":{"line":255,"column":0},"end":{"line":265,"column":2}},"56":{"start":{"line":256,"column":2},"end":{"line":258,"column":3}},"57":{"start":{"line":257,"column":4},"end":{"line":257,"column":62}},"58":{"start":{"line":260,"column":2},"end":{"line":262,"column":3}},"59":{"start":{"line":261,"column":4},"end":{"line":261,"column":25}},"60":{"start":{"line":264,"column":2},"end":{"line":264,"column":26}},"61":{"start":{"line":271,"column":0},"end":{"line":271,"column":31}},"62":{"start":{"line":273,"column":0},"end":{"line":273,"column":32}}},"branchMap":{"1":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"2":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":18}},{"start":{"line":25,"column":22},"end":{"line":25,"column":43}},{"start":{"line":25,"column":47},"end":{"line":25,"column":73}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"4":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":2},"end":{"line":54,"column":2}},{"start":{"line":54,"column":2},"end":{"line":54,"column":2}}]},"5":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":6},"end":{"line":54,"column":9}},{"start":{"line":54,"column":13},"end":{"line":54,"column":37}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"8":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"9":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":14}},{"start":{"line":143,"column":18},"end":{"line":143,"column":41}}]},"10":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":2},"end":{"line":166,"column":2}},{"start":{"line":166,"column":2},"end":{"line":166,"column":2}}]},"11":{"line":200,"type":"cond-expr","locations":[{"start":{"line":201,"column":8},"end":{"line":201,"column":15}},{"start":{"line":202,"column":9},"end":{"line":202,"column":27}}]},"12":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":9},"end":{"line":202,"column":22}},{"start":{"line":202,"column":26},"end":{"line":202,"column":27}}]},"13":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":2},"end":{"line":216,"column":2}},{"start":{"line":216,"column":2},"end":{"line":216,"column":2}}]},"14":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"15":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":4}},{"start":{"line":225,"column":4},"end":{"line":225,"column":4}}]},"16":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"17":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var Binary = require('../drivers').Binary,","    utils = require('../utils');","","/**"," * Mongoose Buffer constructor."," *"," * Values always have to be passed to the constructor to initialize."," *"," * @param {Buffer} value"," * @param {String} encode"," * @param {Number} offset"," * @api private"," * @inherits Buffer"," * @see http://bit.ly/f6CnZU"," */","","function MongooseBuffer(value, encode, offset) {","  var length = arguments.length;","  var val;","","  if (length === 0 || arguments[0] === null || arguments[0] === undefined) {","    val = 0;","  } else {","    val = value;","  }","","  var encoding;","  var path;","  var doc;","","  if (Array.isArray(encode)) {","    // internal casting","    path = encode[0];","    doc = encode[1];","  } else {","    encoding = encode;","  }","","  var buf = new Buffer(val, encoding, offset);","  utils.decorate(buf, MongooseBuffer.mixin);","  buf.isMongooseBuffer = true;","","  // make sure these internal props don't show up in Object.keys()","  Object.defineProperties(buf, {","    validators: {value: []},","    _path: {value: path},","    _parent: {value: doc}","  });","","  if (doc && typeof path === 'string') {","    Object.defineProperty(buf, '_schema', {","      value: doc.schema.path(path)","    });","  }","","  buf._subtype = 0;","  return buf;","}","","/*!"," * Inherit from Buffer."," */","","// MongooseBuffer.prototype = new Buffer(0);","","MongooseBuffer.mixin = {","","  /**","   * Parent owner document","   *","   * @api private","   * @property _parent","   * @receiver MongooseBuffer","   */","","  _parent: undefined,","","  /**","   * Default subtype for the Binary representing this Buffer","   *","   * @api private","   * @property _subtype","   * @receiver MongooseBuffer","   */","","  _subtype: undefined,","","  /**","   * Marks this buffer as modified.","   *","   * @api private","   * @method _markModified","   * @receiver MongooseBuffer","   */","","  _markModified: function() {","    var parent = this._parent;","","    if (parent) {","      parent.markModified(this._path);","    }","    return this;","  },","","  /**","   * Writes the buffer.","   *","   * @api public","   * @method write","   * @receiver MongooseBuffer","   */","","  write: function() {","    var written = Buffer.prototype.write.apply(this, arguments);","","    if (written > 0) {","      this._markModified();","    }","","    return written;","  },","","  /**","   * Copies the buffer.","   *","   * ####Note:","   *","   * `Buffer#copy` does not mark `target` as modified so you must copy from a `MongooseBuffer` for it to work as expected. This is a work around since `copy` modifies the target, not this.","   *","   * @return {Number} The number of bytes copied.","   * @param {Buffer} target","   * @method copy","   * @receiver MongooseBuffer","   */","","  copy: function(target) {","    var ret = Buffer.prototype.copy.apply(this, arguments);","","    if (target && target.isMongooseBuffer) {","      target._markModified();","    }","","    return ret;","  }","};","","/*!"," * Compile other Buffer methods marking this buffer as modified."," */","","(","// node < 0.5","    'writeUInt8 writeUInt16 writeUInt32 writeInt8 writeInt16 writeInt32 ' +","    'writeFloat writeDouble fill ' +","    'utf8Write binaryWrite asciiWrite set ' +","","// node >= 0.5","    'writeUInt16LE writeUInt16BE writeUInt32LE writeUInt32BE ' +","    'writeInt16LE writeInt16BE writeInt32LE writeInt32BE ' +","    'writeFloatLE writeFloatBE writeDoubleLE writeDoubleBE'",").split(' ').forEach(function(method) {","  if (!Buffer.prototype[method]) {","    return;","  }","  MongooseBuffer.mixin[method] = function() {","    var ret = Buffer.prototype[method].apply(this, arguments);","    this._markModified();","    return ret;","  };","});","","/**"," * Converts this buffer to its Binary type representation."," *"," * ####SubTypes:"," *"," *   var bson = require('bson')"," *   bson.BSON_BINARY_SUBTYPE_DEFAULT"," *   bson.BSON_BINARY_SUBTYPE_FUNCTION"," *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY"," *   bson.BSON_BINARY_SUBTYPE_UUID"," *   bson.BSON_BINARY_SUBTYPE_MD5"," *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED"," *"," *   doc.buffer.toObject(bson.BSON_BINARY_SUBTYPE_USER_DEFINED);"," *"," * @see http://bsonspec.org/#/specification"," * @param {Hex} [subtype]"," * @return {Binary}"," * @api public"," * @method toObject"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.toObject = function(options) {","  var subtype = typeof options === 'number'","      ? options","      : (this._subtype || 0);","  return new Binary(this, subtype);","};","","/**"," * Determines if this buffer is equals to `other` buffer"," *"," * @param {Buffer} other"," * @return {Boolean}"," * @method equals"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.equals = function(other) {","  if (!Buffer.isBuffer(other)) {","    return false;","  }","","  if (this.length !== other.length) {","    return false;","  }","","  for (var i = 0; i < this.length; ++i) {","    if (this[i] !== other[i]) {","      return false;","    }","  }","","  return true;","};","","/**"," * Sets the subtype option and marks the buffer modified."," *"," * ####SubTypes:"," *"," *   var bson = require('bson')"," *   bson.BSON_BINARY_SUBTYPE_DEFAULT"," *   bson.BSON_BINARY_SUBTYPE_FUNCTION"," *   bson.BSON_BINARY_SUBTYPE_BYTE_ARRAY"," *   bson.BSON_BINARY_SUBTYPE_UUID"," *   bson.BSON_BINARY_SUBTYPE_MD5"," *   bson.BSON_BINARY_SUBTYPE_USER_DEFINED"," *"," *   doc.buffer.subtype(bson.BSON_BINARY_SUBTYPE_UUID);"," *"," * @see http://bsonspec.org/#/specification"," * @param {Hex} subtype"," * @api public"," * @method subtype"," * @receiver MongooseBuffer"," */","","MongooseBuffer.mixin.subtype = function(subtype) {","  if (typeof subtype !== 'number') {","    throw new TypeError('Invalid subtype. Expected a number');","  }","","  if (this._subtype !== subtype) {","    this._markModified();","  }","","  this._subtype = subtype;","};","","/*!"," * Module exports."," */","","MongooseBuffer.Binary = Binary;","","module.exports = MongooseBuffer;",""],"l":{"5":1,"21":1,"22":0,"23":0,"25":0,"26":0,"28":0,"31":0,"32":0,"33":0,"35":0,"37":0,"38":0,"40":0,"43":0,"44":0,"45":0,"48":0,"54":0,"55":0,"60":0,"61":0,"70":1,"101":0,"103":0,"104":0,"106":0,"118":0,"120":0,"121":0,"124":0,"141":0,"143":0,"144":0,"147":0,"155":1,"166":25,"167":7,"169":18,"170":0,"171":0,"172":0,"199":1,"200":0,"203":0,"215":1,"216":0,"217":0,"220":0,"221":0,"224":0,"225":0,"226":0,"230":0,"255":1,"256":0,"257":0,"260":0,"261":0,"264":0,"271":1,"273":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/documentarray.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/documentarray.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0],"25":[0,0],"26":[0,0,0,0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"MongooseDocumentArray","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":50}}},"2":{"name":"(anonymous_2)","line":83,"loc":{"start":{"line":83,"column":10},"end":{"line":83,"column":21}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":9},"end":{"line":101,"column":32}}},"4":{"name":"(anonymous_4)","line":153,"loc":{"start":{"line":153,"column":6},"end":{"line":153,"column":19}}},"5":{"name":"(anonymous_5)","line":206,"loc":{"start":{"line":206,"column":12},"end":{"line":206,"column":30}}},"6":{"name":"(anonymous_6)","line":207,"loc":{"start":{"line":207,"column":20},"end":{"line":207,"column":34}}},"7":{"name":"(anonymous_7)","line":220,"loc":{"start":{"line":220,"column":11},"end":{"line":220,"column":22}}},"8":{"name":"(anonymous_8)","line":235,"loc":{"start":{"line":235,"column":10},"end":{"line":235,"column":24}}},"9":{"name":"notify","line":258,"loc":{"start":{"line":258,"column":10},"end":{"line":258,"column":33}}},"10":{"name":"notify","line":260,"loc":{"start":{"line":260,"column":11},"end":{"line":260,"column":32}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":9,"column":38}},"2":{"start":{"line":23,"column":0},"end":{"line":73,"column":1}},"3":{"start":{"line":24,"column":2},"end":{"line":24,"column":30}},"4":{"start":{"line":25,"column":2},"end":{"line":25,"column":19}},"5":{"start":{"line":27,"column":2},"end":{"line":34,"column":4}},"6":{"start":{"line":38,"column":2},"end":{"line":38,"column":48}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":30}},"8":{"start":{"line":40,"column":2},"end":{"line":42,"column":3}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":52}},"10":{"start":{"line":44,"column":2},"end":{"line":44,"column":57}},"11":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"12":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"13":{"start":{"line":47,"column":4},"end":{"line":47,"column":62}},"14":{"start":{"line":50,"column":2},"end":{"line":50,"column":33}},"15":{"start":{"line":51,"column":2},"end":{"line":51,"column":25}},"16":{"start":{"line":52,"column":2},"end":{"line":54,"column":3}},"17":{"start":{"line":53,"column":4},"end":{"line":53,"column":36}},"18":{"start":{"line":60,"column":2},"end":{"line":70,"column":3}},"19":{"start":{"line":61,"column":4},"end":{"line":61,"column":22}},"20":{"start":{"line":62,"column":4},"end":{"line":62,"column":40}},"21":{"start":{"line":63,"column":4},"end":{"line":66,"column":6}},"22":{"start":{"line":68,"column":4},"end":{"line":68,"column":39}},"23":{"start":{"line":69,"column":4},"end":{"line":69,"column":41}},"24":{"start":{"line":72,"column":2},"end":{"line":72,"column":13}},"25":{"start":{"line":79,"column":0},"end":{"line":280,"column":2}},"26":{"start":{"line":84,"column":4},"end":{"line":90,"column":7}},"27":{"start":{"line":102,"column":4},"end":{"line":102,"column":53}},"28":{"start":{"line":103,"column":4},"end":{"line":113,"column":5}},"29":{"start":{"line":106,"column":6},"end":{"line":110,"column":7}},"30":{"start":{"line":108,"column":8},"end":{"line":108,"column":38}},"31":{"start":{"line":109,"column":8},"end":{"line":109,"column":35}},"32":{"start":{"line":111,"column":6},"end":{"line":111,"column":28}},"33":{"start":{"line":112,"column":6},"end":{"line":112,"column":19}},"34":{"start":{"line":115,"column":4},"end":{"line":117,"column":5}},"35":{"start":{"line":116,"column":6},"end":{"line":116,"column":18}},"36":{"start":{"line":122,"column":4},"end":{"line":125,"column":5}},"37":{"start":{"line":124,"column":6},"end":{"line":124,"column":27}},"38":{"start":{"line":127,"column":4},"end":{"line":133,"column":5}},"39":{"start":{"line":132,"column":6},"end":{"line":132,"column":99}},"40":{"start":{"line":135,"column":4},"end":{"line":135,"column":69}},"41":{"start":{"line":154,"column":4},"end":{"line":156,"column":12}},"42":{"start":{"line":158,"column":4},"end":{"line":165,"column":5}},"43":{"start":{"line":159,"column":6},"end":{"line":159,"column":63}},"44":{"start":{"line":160,"column":6},"end":{"line":162,"column":7}},"45":{"start":{"line":161,"column":8},"end":{"line":161,"column":33}},"46":{"start":{"line":164,"column":6},"end":{"line":164,"column":20}},"47":{"start":{"line":167,"column":4},"end":{"line":187,"column":5}},"48":{"start":{"line":168,"column":6},"end":{"line":170,"column":7}},"49":{"start":{"line":169,"column":8},"end":{"line":169,"column":17}},"50":{"start":{"line":171,"column":6},"end":{"line":171,"column":31}},"51":{"start":{"line":173,"column":6},"end":{"line":186,"column":7}},"52":{"start":{"line":174,"column":8},"end":{"line":174,"column":17}},"53":{"start":{"line":175,"column":13},"end":{"line":186,"column":7}},"54":{"start":{"line":176,"column":8},"end":{"line":176,"column":34}},"55":{"start":{"line":177,"column":8},"end":{"line":179,"column":9}},"56":{"start":{"line":178,"column":10},"end":{"line":178,"column":25}},"57":{"start":{"line":180,"column":13},"end":{"line":186,"column":7}},"58":{"start":{"line":181,"column":8},"end":{"line":183,"column":9}},"59":{"start":{"line":182,"column":10},"end":{"line":182,"column":25}},"60":{"start":{"line":184,"column":13},"end":{"line":186,"column":7}},"61":{"start":{"line":185,"column":8},"end":{"line":185,"column":23}},"62":{"start":{"line":189,"column":4},"end":{"line":189,"column":16}},"63":{"start":{"line":207,"column":4},"end":{"line":209,"column":7}},"64":{"start":{"line":208,"column":6},"end":{"line":208,"column":50}},"65":{"start":{"line":221,"column":4},"end":{"line":221,"column":44}},"66":{"start":{"line":236,"column":4},"end":{"line":236,"column":53}},"67":{"start":{"line":237,"column":4},"end":{"line":243,"column":5}},"68":{"start":{"line":242,"column":6},"end":{"line":242,"column":97}},"69":{"start":{"line":245,"column":4},"end":{"line":245,"column":32}},"70":{"start":{"line":259,"column":4},"end":{"line":259,"column":21}},"71":{"start":{"line":260,"column":4},"end":{"line":277,"column":6}},"72":{"start":{"line":261,"column":6},"end":{"line":261,"column":27}},"73":{"start":{"line":262,"column":6},"end":{"line":276,"column":7}},"74":{"start":{"line":263,"column":8},"end":{"line":265,"column":9}},"75":{"start":{"line":264,"column":10},"end":{"line":264,"column":19}},"76":{"start":{"line":266,"column":8},"end":{"line":274,"column":9}},"77":{"start":{"line":269,"column":12},"end":{"line":269,"column":27}},"78":{"start":{"line":270,"column":12},"end":{"line":270,"column":18}},"79":{"start":{"line":273,"column":12},"end":{"line":273,"column":18}},"80":{"start":{"line":275,"column":8},"end":{"line":275,"column":34}},"81":{"start":{"line":286,"column":0},"end":{"line":286,"column":39}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"2":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":9}},{"start":{"line":60,"column":13},"end":{"line":60,"column":36}}]},"3":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":4},"end":{"line":103,"column":4}},{"start":{"line":103,"column":4},"end":{"line":103,"column":4}}]},"4":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":8},"end":{"line":103,"column":36}},{"start":{"line":105,"column":9},"end":{"line":105,"column":14}},{"start":{"line":105,"column":18},"end":{"line":105,"column":35}},{"start":{"line":105,"column":39},"end":{"line":105,"column":94}}]},"5":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"6":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":12},"end":{"line":106,"column":26}},{"start":{"line":106,"column":30},"end":{"line":106,"column":49}}]},"7":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":4},"end":{"line":115,"column":4}},{"start":{"line":115,"column":4},"end":{"line":115,"column":4}}]},"8":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":8},"end":{"line":115,"column":27}},{"start":{"line":115,"column":31},"end":{"line":115,"column":45}}]},"9":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"10":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":8},"end":{"line":122,"column":30}},{"start":{"line":123,"column":8},"end":{"line":123,"column":33}},{"start":{"line":123,"column":37},"end":{"line":123,"column":59}}]},"11":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":13}},{"start":{"line":128,"column":8},"end":{"line":128,"column":34}},{"start":{"line":129,"column":8},"end":{"line":129,"column":51}},{"start":{"line":130,"column":8},"end":{"line":130,"column":78}},{"start":{"line":131,"column":8},"end":{"line":131,"column":86}}]},"13":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":6},"end":{"line":160,"column":6}},{"start":{"line":160,"column":6},"end":{"line":160,"column":6}}]},"14":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":6},"end":{"line":168,"column":6}},{"start":{"line":168,"column":6},"end":{"line":168,"column":6}}]},"15":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":6},"end":{"line":173,"column":6}},{"start":{"line":173,"column":6},"end":{"line":173,"column":6}}]},"16":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":22}},{"start":{"line":173,"column":26},"end":{"line":173,"column":52}}]},"17":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":13},"end":{"line":175,"column":13}},{"start":{"line":175,"column":13},"end":{"line":175,"column":13}}]},"18":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":11}},{"start":{"line":176,"column":16},"end":{"line":176,"column":32}}]},"19":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":8},"end":{"line":177,"column":8}},{"start":{"line":177,"column":8},"end":{"line":177,"column":8}}]},"20":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":13},"end":{"line":180,"column":13}},{"start":{"line":180,"column":13},"end":{"line":180,"column":13}}]},"21":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":17},"end":{"line":180,"column":42}},{"start":{"line":180,"column":46},"end":{"line":180,"column":72}}]},"22":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":8},"end":{"line":181,"column":8}},{"start":{"line":181,"column":8},"end":{"line":181,"column":8}}]},"23":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":13},"end":{"line":184,"column":13}},{"start":{"line":184,"column":13},"end":{"line":184,"column":13}}]},"24":{"line":208,"type":"binary-expr","locations":[{"start":{"line":208,"column":13},"end":{"line":208,"column":16}},{"start":{"line":208,"column":20},"end":{"line":208,"column":41}},{"start":{"line":208,"column":45},"end":{"line":208,"column":49}}]},"25":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":4},"end":{"line":237,"column":4}},{"start":{"line":237,"column":4},"end":{"line":237,"column":4}}]},"26":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":11}},{"start":{"line":238,"column":8},"end":{"line":238,"column":34}},{"start":{"line":239,"column":8},"end":{"line":239,"column":51}},{"start":{"line":240,"column":8},"end":{"line":240,"column":76}},{"start":{"line":241,"column":8},"end":{"line":241,"column":84}}]},"27":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":8},"end":{"line":263,"column":8}},{"start":{"line":263,"column":8},"end":{"line":263,"column":8}}]},"28":{"line":266,"type":"switch","locations":[{"start":{"line":268,"column":10},"end":{"line":270,"column":18}},{"start":{"line":271,"column":10},"end":{"line":273,"column":18}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseArray = require('./array'),","    ObjectId = require('./objectid'),","    ObjectIdSchema = require('../schema/objectid'),","    utils = require('../utils'),","    Document = require('../document');","","/**"," * DocumentArray constructor"," *"," * @param {Array} values"," * @param {String} path the path to this array"," * @param {Document} doc parent document"," * @api private"," * @return {MongooseDocumentArray}"," * @inherits MongooseArray"," * @see http://bit.ly/f6CnZU"," */","","function MongooseDocumentArray(values, path, doc) {","  var arr = [].concat(values);","  arr._path = path;","","  var props = {","    isMongooseArray: true,","    isMongooseDocumentArray: true,","    validators: [],","    _atomics: {},","    _schema: void 0,","    _handlers: void 0","  };","","  // Values always have to be passed to the constructor to initialize, since","  // otherwise MongooseArray#push will mark the array as modified to the parent.","  var keysMA = Object.keys(MongooseArray.mixin);","  var numKeys = keysMA.length;","  for (var j = 0; j < numKeys; ++j) {","    arr[keysMA[j]] = MongooseArray.mixin[keysMA[j]];","  }","","  var keysMDA = Object.keys(MongooseDocumentArray.mixin);","  numKeys = keysMDA.length;","  for (var i = 0; i < numKeys; ++i) {","    arr[keysMDA[i]] = MongooseDocumentArray.mixin[keysMDA[i]];","  }","","  var keysP = Object.keys(props);","  numKeys = keysP.length;","  for (var k = 0; k < numKeys; ++k) {","    arr[keysP[k]] = props[keysP[k]];","  }","","  // Because doc comes from the context of another function, doc === global","  // can happen if there was a null somewhere up the chain (see #3020 && #3034)","  // RB Jun 17, 2015 updated to check for presence of expected paths instead","  // to make more proof against unusual node environments","  if (doc && doc instanceof Document) {","    arr._parent = doc;","    arr._schema = doc.schema.path(path);","    arr._handlers = {","      isNew: arr.notify('isNew'),","      save: arr.notify('save')","    };","","    doc.on('save', arr._handlers.save);","    doc.on('isNew', arr._handlers.isNew);","  }","","  return arr;","}","","/*!"," * Inherits from MongooseArray"," */","// MongooseDocumentArray.mixin = Object.create( MongooseArray.mixin );","MongooseDocumentArray.mixin = {","  /*!","   * ignore","   */","  toBSON: function() {","    return this.toObject({","      transform: false,","      virtuals: false,","      _skipDepopulateTopLevel: true,","      depopulate: true,","      flattenDecimals: false","    });","  },","","  /**","   * Overrides MongooseArray#cast","   *","   * @method _cast","   * @api private","   * @receiver MongooseDocumentArray","   */","","  _cast: function(value, index) {","    var Constructor = this._schema.casterConstructor;","    if (value instanceof Constructor ||","        // Hack re: #5001, see #5005","        (value && value.constructor && value.constructor.baseCasterConstructor === Constructor)) {","      if (!(value.__parent && value.__parentArray)) {","        // value may have been created using array.create()","        value.__parent = this._parent;","        value.__parentArray = this;","      }","      value.__index = index;","      return value;","    }","","    if (value === undefined || value === null) {","      return null;","    }","","    // handle cast('string') or cast(ObjectId) etc.","    // only objects are permitted so we can safely assume that","    // non-objects are to be interpreted as _id","    if (Buffer.isBuffer(value) ||","        value instanceof ObjectId || !utils.isObject(value)) {","      value = {_id: value};","    }","","    if (value &&","        Constructor.discriminators &&","        Constructor.schema.options.discriminatorKey &&","        typeof value[Constructor.schema.options.discriminatorKey] === 'string' &&","        Constructor.discriminators[value[Constructor.schema.options.discriminatorKey]]) {","      Constructor = Constructor.discriminators[value[Constructor.schema.options.discriminatorKey]];","    }","","    return new Constructor(value, this, undefined, undefined, index);","  },","","  /**","   * Searches array items for the first document with a matching _id.","   *","   * ####Example:","   *","   *     var embeddedDoc = m.array.id(some_id);","   *","   * @return {EmbeddedDocument|null} the subdocument or null if not found.","   * @param {ObjectId|String|Number|Buffer} id","   * @TODO cast to the _id based on schema for proper comparison","   * @method id","   * @api public","   * @receiver MongooseDocumentArray","   */","","  id: function(id) {","    var casted,","        sid,","        _id;","","    try {","      var casted_ = ObjectIdSchema.prototype.cast.call({}, id);","      if (casted_) {","        casted = String(casted_);","      }","    } catch (e) {","      casted = null;","    }","","    for (var i = 0, l = this.length; i < l; i++) {","      if (!this[i]) {","        continue;","      }","      _id = this[i].get('_id');","","      if (_id === null || typeof _id === 'undefined') {","        continue;","      } else if (_id instanceof Document) {","        sid || (sid = String(id));","        if (sid == _id._id) {","          return this[i];","        }","      } else if (!(id instanceof ObjectId) && !(_id instanceof ObjectId)) {","        if (utils.deepEqual(id, _id)) {","          return this[i];","        }","      } else if (casted == _id) {","        return this[i];","      }","    }","","    return null;","  },","","  /**","   * Returns a native js Array of plain js objects","   *","   * ####NOTE:","   *","   * _Each sub-document is converted to a plain object by calling its `#toObject` method._","   *","   * @param {Object} [options] optional options to pass to each documents `toObject` method call during conversion","   * @return {Array}","   * @method toObject","   * @api public","   * @receiver MongooseDocumentArray","   */","","  toObject: function(options) {","    return this.map(function(doc) {","      return doc && doc.toObject(options) || null;","    });","  },","","  /**","   * Helper for console.log","   *","   * @method inspect","   * @api public","   * @receiver MongooseDocumentArray","   */","","  inspect: function() {","    return Array.prototype.slice.call(this);","  },","","  /**","   * Creates a subdocument casted to this schema.","   *","   * This is the same subdocument constructor used for casting.","   *","   * @param {Object} obj the value to cast to this arrays SubDocument schema","   * @method create","   * @api public","   * @receiver MongooseDocumentArray","   */","","  create: function(obj) {","    var Constructor = this._schema.casterConstructor;","    if (obj &&","        Constructor.discriminators &&","        Constructor.schema.options.discriminatorKey &&","        typeof obj[Constructor.schema.options.discriminatorKey] === 'string' &&","        Constructor.discriminators[obj[Constructor.schema.options.discriminatorKey]]) {","      Constructor = Constructor.discriminators[obj[Constructor.schema.options.discriminatorKey]];","    }","","    return new Constructor(obj);","  },","","  /**","   * Creates a fn that notifies all child docs of `event`.","   *","   * @param {String} event","   * @return {Function}","   * @method notify","   * @api private","   * @receiver MongooseDocumentArray","   */","","  notify: function notify(event) {","    var _this = this;","    return function notify(val) {","      var i = _this.length;","      while (i--) {","        if (!_this[i]) {","          continue;","        }","        switch (event) {","          // only swap for save event for now, we may change this to all event types later","          case 'save':","            val = _this[i];","            break;","          default:","            // NO-OP","            break;","        }","        _this[i].emit(event, val);","      }","    };","  }","","};","","/*!"," * Module exports."," */","","module.exports = MongooseDocumentArray;",""],"l":{"5":1,"23":1,"24":0,"25":0,"27":0,"38":0,"39":0,"40":0,"41":0,"44":0,"45":0,"46":0,"47":0,"50":0,"51":0,"52":0,"53":0,"60":0,"61":0,"62":0,"63":0,"68":0,"69":0,"72":0,"79":1,"84":0,"102":0,"103":0,"106":0,"108":0,"109":0,"111":0,"112":0,"115":0,"116":0,"122":0,"124":0,"127":0,"132":0,"135":0,"154":0,"158":0,"159":0,"160":0,"161":0,"164":0,"167":0,"168":0,"169":0,"171":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"180":0,"181":0,"182":0,"184":0,"185":0,"189":0,"207":0,"208":0,"221":0,"236":0,"237":0,"242":0,"245":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"266":0,"269":0,"270":0,"273":0,"275":0,"286":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/subdocument.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/types/subdocument.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":1,"56":0,"57":1,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"Subdocument","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":31},"end":{"line":20,"column":42}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":29},"end":{"line":42,"column":42}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":25},"end":{"line":44,"column":43}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":48}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":37},"end":{"line":56,"column":52}}},"7":{"name":"(anonymous_7)","line":66,"loc":{"start":{"line":66,"column":35},"end":{"line":66,"column":50}}},"8":{"name":"(anonymous_8)","line":73,"loc":{"start":{"line":73,"column":35},"end":{"line":73,"column":60}}},"9":{"name":"(anonymous_9)","line":88,"loc":{"start":{"line":88,"column":38},"end":{"line":88,"column":49}}},"10":{"name":"(anonymous_10)","line":112,"loc":{"start":{"line":112,"column":31},"end":{"line":112,"column":59}}},"11":{"name":"(anonymous_11)","line":133,"loc":{"start":{"line":133,"column":33},"end":{"line":133,"column":44}}},"12":{"name":"registerRemoveListener","line":147,"loc":{"start":{"line":147,"column":0},"end":{"line":147,"column":37}}},"13":{"name":"emitRemove","line":150,"loc":{"start":{"line":150,"column":2},"end":{"line":150,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":38}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":53}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":29}},"4":{"start":{"line":13,"column":0},"end":{"line":16,"column":1}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":30}},"6":{"start":{"line":15,"column":2},"end":{"line":15,"column":37}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":58}},"8":{"start":{"line":20,"column":0},"end":{"line":28,"column":2}},"9":{"start":{"line":21,"column":2},"end":{"line":27,"column":5}},"10":{"start":{"line":42,"column":0},"end":{"line":48,"column":2}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":38}},"12":{"start":{"line":44,"column":2},"end":{"line":47,"column":5}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":15}},"14":{"start":{"line":46,"column":4},"end":{"line":46,"column":14}},"15":{"start":{"line":50,"column":0},"end":{"line":54,"column":2}},"16":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":67}},"18":{"start":{"line":56,"column":0},"end":{"line":64,"column":2}},"19":{"start":{"line":57,"column":2},"end":{"line":57,"column":51}},"20":{"start":{"line":58,"column":2},"end":{"line":63,"column":3}},"21":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"22":{"start":{"line":60,"column":6},"end":{"line":60,"column":13}},"23":{"start":{"line":62,"column":4},"end":{"line":62,"column":64}},"24":{"start":{"line":66,"column":0},"end":{"line":71,"column":2}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":49}},"26":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":62}},"28":{"start":{"line":73,"column":0},"end":{"line":80,"column":2}},"29":{"start":{"line":74,"column":2},"end":{"line":74,"column":59}},"30":{"start":{"line":75,"column":2},"end":{"line":79,"column":3}},"31":{"start":{"line":76,"column":4},"end":{"line":76,"column":72}},"32":{"start":{"line":77,"column":9},"end":{"line":79,"column":3}},"33":{"start":{"line":78,"column":4},"end":{"line":78,"column":14}},"34":{"start":{"line":88,"column":0},"end":{"line":103,"column":2}},"35":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"36":{"start":{"line":90,"column":4},"end":{"line":90,"column":34}},"37":{"start":{"line":93,"column":2},"end":{"line":93,"column":28}},"38":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"39":{"start":{"line":95,"column":4},"end":{"line":95,"column":16}},"40":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"41":{"start":{"line":99,"column":4},"end":{"line":99,"column":47}},"42":{"start":{"line":101,"column":2},"end":{"line":101,"column":34}},"43":{"start":{"line":102,"column":2},"end":{"line":102,"column":32}},"44":{"start":{"line":112,"column":0},"end":{"line":127,"column":2}},"45":{"start":{"line":113,"column":2},"end":{"line":116,"column":3}},"46":{"start":{"line":114,"column":4},"end":{"line":114,"column":23}},"47":{"start":{"line":115,"column":4},"end":{"line":115,"column":19}},"48":{"start":{"line":119,"column":2},"end":{"line":122,"column":3}},"49":{"start":{"line":120,"column":4},"end":{"line":120,"column":43}},"50":{"start":{"line":121,"column":4},"end":{"line":121,"column":33}},"51":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"52":{"start":{"line":125,"column":4},"end":{"line":125,"column":19}},"53":{"start":{"line":133,"column":0},"end":{"line":137,"column":2}},"54":{"start":{"line":134,"column":2},"end":{"line":136,"column":37}},"55":{"start":{"line":147,"column":0},"end":{"line":160,"column":1}},"56":{"start":{"line":148,"column":2},"end":{"line":148,"column":34}},"57":{"start":{"line":150,"column":2},"end":{"line":156,"column":3}},"58":{"start":{"line":151,"column":4},"end":{"line":151,"column":45}},"59":{"start":{"line":152,"column":4},"end":{"line":152,"column":47}},"60":{"start":{"line":153,"column":4},"end":{"line":153,"column":28}},"61":{"start":{"line":154,"column":4},"end":{"line":154,"column":40}},"62":{"start":{"line":155,"column":4},"end":{"line":155,"column":23}},"63":{"start":{"line":158,"column":2},"end":{"line":158,"column":31}},"64":{"start":{"line":159,"column":2},"end":{"line":159,"column":33}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":6}},{"start":{"line":45,"column":10},"end":{"line":45,"column":14}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"6":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":2},"end":{"line":75,"column":2}},{"start":{"line":75,"column":2},"end":{"line":75,"column":2}}]},"7":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":9},"end":{"line":77,"column":9}},{"start":{"line":77,"column":9},"end":{"line":77,"column":9}}]},"8":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":13},"end":{"line":77,"column":32}},{"start":{"line":77,"column":36},"end":{"line":77,"column":60}}]},"9":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"10":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"11":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":9},"end":{"line":98,"column":23}},{"start":{"line":98,"column":27},"end":{"line":98,"column":42}}]},"12":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":13},"end":{"line":99,"column":27}},{"start":{"line":99,"column":31},"end":{"line":99,"column":46}}]},"13":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"14":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"15":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":6},"end":{"line":119,"column":14}},{"start":{"line":119,"column":18},"end":{"line":119,"column":31}}]},"16":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]}},"code":["var Document = require('../document');","var PromiseProvider = require('../promise_provider');","","module.exports = Subdocument;","","/**"," * Subdocument constructor."," *"," * @inherits Document"," * @api private"," */","","function Subdocument(value, fields) {","  this.$isSingleNested = true;","  Document.call(this, value, fields);","}","","Subdocument.prototype = Object.create(Document.prototype);","","Subdocument.prototype.toBSON = function() {","  return this.toObject({","    transform: false,","    virtuals: false,","    _skipDepopulateTopLevel: true,","    depopulate: true,","    flattenDecimals: false","  });","};","","/**"," * Used as a stub for [hooks.js](https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3)"," *"," * ####NOTE:"," *"," * _This is a no-op. Does not actually save the doc to the db._"," *"," * @param {Function} [fn]"," * @return {Promise} resolved Promise"," * @api private"," */","","Subdocument.prototype.save = function(fn) {","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve) {","    fn && fn();","    resolve();","  });","};","","Subdocument.prototype.$isValid = function(path) {","  if (this.$parent) {","    return this.$parent.$isValid([this.$basePath, path].join('.'));","  }","};","","Subdocument.prototype.markModified = function(path) {","  Document.prototype.markModified.call(this, path);","  if (this.$parent) {","    if (this.$parent.isDirectModified(this.$basePath)) {","      return;","    }","    this.$parent.markModified([this.$basePath, path].join('.'));","  }","};","","Subdocument.prototype.$markValid = function(path) {","  Document.prototype.$markValid.call(this, path);","  if (this.$parent) {","    this.$parent.$markValid([this.$basePath, path].join('.'));","  }","};","","Subdocument.prototype.invalidate = function(path, err, val) {","  Document.prototype.invalidate.call(this, path, err, val);","  if (this.$parent) {","    this.$parent.invalidate([this.$basePath, path].join('.'), err, val);","  } else if (err.kind === 'cast' || err.name === 'CastError') {","    throw err;","  }","};","","/**"," * Returns the top level document of this sub-document."," *"," * @return {Document}"," */","","Subdocument.prototype.ownerDocument = function() {","  if (this.$__.ownerDocument) {","    return this.$__.ownerDocument;","  }","","  var parent = this.$parent;","  if (!parent) {","    return this;","  }","","  while (parent.$parent || parent.__parent) {","    parent = parent.$parent || parent.__parent;","  }","  this.$__.ownerDocument = parent;","  return this.$__.ownerDocument;","};","","/**"," * Null-out this subdoc"," *"," * @param {Object} [options]"," * @param {Function} [callback] optional callback for compatibility with Document.prototype.remove"," */","","Subdocument.prototype.remove = function(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","","  // If removing entire doc, no need to remove subdoc","  if (!options || !options.noop) {","    this.$parent.set(this.$basePath, null);","    registerRemoveListener(this);","  }","","  if (typeof callback === 'function') {","    callback(null);","  }","};","","/*!"," * ignore"," */","","Subdocument.prototype.populate = function() {","  throw new Error('Mongoose does not support calling populate() on nested ' +","    'docs. Instead of `doc.nested.populate(\"path\")`, use ' +","    '`doc.populate(\"nested.path\")`');","};","","/*!"," * Registers remove event listeners for triggering"," * on subdocuments."," *"," * @param {EmbeddedDocument} sub"," * @api private"," */","","function registerRemoveListener(sub) {","  var owner = sub.ownerDocument();","","  function emitRemove() {","    owner.removeListener('save', emitRemove);","    owner.removeListener('remove', emitRemove);","    sub.emit('remove', sub);","    sub.constructor.emit('remove', sub);","    owner = sub = null;","  }","","  owner.on('save', emitRemove);","  owner.on('remove', emitRemove);","}",""],"l":{"1":1,"2":1,"4":1,"13":1,"14":0,"15":0,"18":1,"20":1,"21":0,"42":1,"43":0,"44":0,"45":0,"46":0,"50":1,"51":0,"52":0,"56":1,"57":0,"58":0,"59":0,"60":0,"62":0,"66":1,"67":0,"68":0,"69":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"88":1,"89":0,"90":0,"93":0,"94":0,"95":0,"98":0,"99":0,"101":0,"102":0,"112":1,"113":0,"114":0,"115":0,"119":0,"120":0,"121":0,"124":0,"125":0,"133":1,"134":0,"147":1,"148":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"158":0,"159":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/cast.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/cast.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0,0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0,0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0,0,0],"38":[0,0],"39":[0,0],"40":[0,0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"cast","line":19,"loc":{"start":{"line":19,"column":17},"end":{"line":19,"column":53}}},"2":{"name":"(anonymous_2)","line":187,"loc":{"start":{"line":187,"column":49},"end":{"line":187,"column":61}}},"3":{"name":"_cast","line":237,"loc":{"start":{"line":237,"column":0},"end":{"line":237,"column":32}}},"4":{"name":"(anonymous_4)","line":239,"loc":{"start":{"line":239,"column":16},"end":{"line":239,"column":34}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":38}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":66}},"5":{"start":{"line":19,"column":0},"end":{"line":235,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":28,"column":10}},"7":{"start":{"line":30,"column":2},"end":{"line":232,"column":3}},"8":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":20}},"10":{"start":{"line":34,"column":4},"end":{"line":231,"column":5}},"11":{"start":{"line":35,"column":6},"end":{"line":35,"column":25}},"12":{"start":{"line":37,"column":6},"end":{"line":39,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":38,"column":38}},"14":{"start":{"line":40,"column":11},"end":{"line":231,"column":5}},"15":{"start":{"line":41,"column":6},"end":{"line":41,"column":24}},"16":{"start":{"line":43,"column":6},"end":{"line":45,"column":7}},"17":{"start":{"line":44,"column":8},"end":{"line":44,"column":69}},"18":{"start":{"line":47,"column":6},"end":{"line":49,"column":7}},"19":{"start":{"line":48,"column":8},"end":{"line":48,"column":35}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":15}},"21":{"start":{"line":52,"column":11},"end":{"line":231,"column":5}},"22":{"start":{"line":53,"column":6},"end":{"line":53,"column":30}},"23":{"start":{"line":55,"column":6},"end":{"line":58,"column":7}},"24":{"start":{"line":57,"column":8},"end":{"line":57,"column":17}},"25":{"start":{"line":60,"column":6},"end":{"line":60,"column":37}},"26":{"start":{"line":62,"column":6},"end":{"line":230,"column":7}},"27":{"start":{"line":64,"column":8},"end":{"line":68,"column":27}},"28":{"start":{"line":71,"column":8},"end":{"line":77,"column":9}},"29":{"start":{"line":72,"column":10},"end":{"line":72,"column":54}},"30":{"start":{"line":73,"column":10},"end":{"line":73,"column":50}},"31":{"start":{"line":74,"column":10},"end":{"line":76,"column":11}},"32":{"start":{"line":75,"column":12},"end":{"line":75,"column":18}},"33":{"start":{"line":80,"column":8},"end":{"line":91,"column":9}},"34":{"start":{"line":82,"column":10},"end":{"line":89,"column":11}},"35":{"start":{"line":83,"column":12},"end":{"line":83,"column":32}},"36":{"start":{"line":84,"column":12},"end":{"line":84,"column":52}},"37":{"start":{"line":85,"column":12},"end":{"line":85,"column":47}},"38":{"start":{"line":86,"column":12},"end":{"line":86,"column":85}},"39":{"start":{"line":88,"column":12},"end":{"line":88,"column":28}},"40":{"start":{"line":90,"column":10},"end":{"line":90,"column":19}},"41":{"start":{"line":93,"column":8},"end":{"line":174,"column":9}},"42":{"start":{"line":97,"column":10},"end":{"line":97,"column":23}},"43":{"start":{"line":98,"column":10},"end":{"line":108,"column":11}},"44":{"start":{"line":99,"column":12},"end":{"line":99,"column":26}},"45":{"start":{"line":100,"column":17},"end":{"line":108,"column":11}},"46":{"start":{"line":101,"column":12},"end":{"line":101,"column":32}},"47":{"start":{"line":102,"column":17},"end":{"line":108,"column":11}},"48":{"start":{"line":103,"column":12},"end":{"line":103,"column":28}},"49":{"start":{"line":104,"column":17},"end":{"line":108,"column":11}},"50":{"start":{"line":105,"column":12},"end":{"line":105,"column":35}},"51":{"start":{"line":106,"column":17},"end":{"line":108,"column":11}},"52":{"start":{"line":107,"column":12},"end":{"line":107,"column":31}},"53":{"start":{"line":110,"column":10},"end":{"line":173,"column":11}},"54":{"start":{"line":111,"column":12},"end":{"line":111,"column":66}},"55":{"start":{"line":112,"column":12},"end":{"line":112,"column":33}},"56":{"start":{"line":114,"column":12},"end":{"line":116,"column":13}},"57":{"start":{"line":115,"column":14},"end":{"line":115,"column":75}},"58":{"start":{"line":117,"column":12},"end":{"line":119,"column":13}},"59":{"start":{"line":118,"column":14},"end":{"line":118,"column":75}},"60":{"start":{"line":121,"column":12},"end":{"line":170,"column":13}},"61":{"start":{"line":122,"column":14},"end":{"line":125,"column":36}},"62":{"start":{"line":127,"column":14},"end":{"line":129,"column":15}},"63":{"start":{"line":128,"column":16},"end":{"line":128,"column":81}},"64":{"start":{"line":131,"column":14},"end":{"line":131,"column":33}},"65":{"start":{"line":132,"column":19},"end":{"line":170,"column":13}},"66":{"start":{"line":135,"column":14},"end":{"line":135,"column":40}},"67":{"start":{"line":136,"column":19},"end":{"line":170,"column":13}},"68":{"start":{"line":139,"column":14},"end":{"line":141,"column":15}},"69":{"start":{"line":140,"column":16},"end":{"line":140,"column":81}},"70":{"start":{"line":142,"column":14},"end":{"line":144,"column":15}},"71":{"start":{"line":143,"column":16},"end":{"line":143,"column":81}},"72":{"start":{"line":145,"column":14},"end":{"line":150,"column":15}},"73":{"start":{"line":146,"column":16},"end":{"line":149,"column":19}},"74":{"start":{"line":151,"column":14},"end":{"line":151,"column":50}},"75":{"start":{"line":152,"column":19},"end":{"line":170,"column":13}},"76":{"start":{"line":153,"column":14},"end":{"line":169,"column":15}},"77":{"start":{"line":154,"column":16},"end":{"line":156,"column":17}},"78":{"start":{"line":155,"column":18},"end":{"line":155,"column":82}},"79":{"start":{"line":157,"column":16},"end":{"line":157,"column":57}},"80":{"start":{"line":158,"column":16},"end":{"line":161,"column":17}},"81":{"start":{"line":159,"column":18},"end":{"line":160,"column":78}},"82":{"start":{"line":162,"column":16},"end":{"line":162,"column":52}},"83":{"start":{"line":164,"column":16},"end":{"line":165,"column":38}},"84":{"start":{"line":166,"column":16},"end":{"line":168,"column":17}},"85":{"start":{"line":167,"column":18},"end":{"line":167,"column":62}},"86":{"start":{"line":172,"column":12},"end":{"line":172,"column":37}},"87":{"start":{"line":176,"column":8},"end":{"line":182,"column":9}},"88":{"start":{"line":177,"column":10},"end":{"line":179,"column":11}},"89":{"start":{"line":178,"column":12},"end":{"line":178,"column":44}},"90":{"start":{"line":180,"column":10},"end":{"line":181,"column":68}},"91":{"start":{"line":183,"column":13},"end":{"line":230,"column":7}},"92":{"start":{"line":184,"column":8},"end":{"line":184,"column":25}},"93":{"start":{"line":185,"column":8},"end":{"line":185,"column":17}},"94":{"start":{"line":186,"column":13},"end":{"line":230,"column":7}},"95":{"start":{"line":187,"column":8},"end":{"line":189,"column":11}},"96":{"start":{"line":188,"column":10},"end":{"line":188,"column":68}},"97":{"start":{"line":191,"column":8},"end":{"line":220,"column":9}},"98":{"start":{"line":192,"column":10},"end":{"line":192,"column":51}},"99":{"start":{"line":194,"column":10},"end":{"line":195,"column":20}},"100":{"start":{"line":197,"column":10},"end":{"line":197,"column":24}},"101":{"start":{"line":199,"column":10},"end":{"line":219,"column":11}},"102":{"start":{"line":200,"column":12},"end":{"line":200,"column":26}},"103":{"start":{"line":201,"column":12},"end":{"line":201,"column":32}},"104":{"start":{"line":203,"column":12},"end":{"line":218,"column":13}},"105":{"start":{"line":204,"column":14},"end":{"line":214,"column":15}},"106":{"start":{"line":205,"column":16},"end":{"line":205,"column":44}},"107":{"start":{"line":206,"column":16},"end":{"line":212,"column":17}},"108":{"start":{"line":207,"column":18},"end":{"line":209,"column":19}},"109":{"start":{"line":208,"column":20},"end":{"line":208,"column":76}},"110":{"start":{"line":211,"column":18},"end":{"line":211,"column":70}},"111":{"start":{"line":213,"column":16},"end":{"line":213,"column":25}},"112":{"start":{"line":215,"column":14},"end":{"line":215,"column":82}},"113":{"start":{"line":217,"column":14},"end":{"line":217,"column":66}},"114":{"start":{"line":221,"column":13},"end":{"line":230,"column":7}},"115":{"start":{"line":222,"column":8},"end":{"line":222,"column":24}},"116":{"start":{"line":223,"column":8},"end":{"line":225,"column":9}},"117":{"start":{"line":224,"column":10},"end":{"line":224,"column":62}},"118":{"start":{"line":227,"column":8},"end":{"line":227,"column":36}},"119":{"start":{"line":229,"column":8},"end":{"line":229,"column":49}},"120":{"start":{"line":234,"column":2},"end":{"line":234,"column":13}},"121":{"start":{"line":237,"column":0},"end":{"line":259,"column":1}},"122":{"start":{"line":238,"column":2},"end":{"line":258,"column":3}},"123":{"start":{"line":239,"column":4},"end":{"line":244,"column":7}},"124":{"start":{"line":240,"column":6},"end":{"line":242,"column":7}},"125":{"start":{"line":241,"column":8},"end":{"line":241,"column":39}},"126":{"start":{"line":243,"column":6},"end":{"line":243,"column":45}},"127":{"start":{"line":246,"column":4},"end":{"line":246,"column":36}},"128":{"start":{"line":247,"column":4},"end":{"line":247,"column":34}},"129":{"start":{"line":248,"column":4},"end":{"line":257,"column":5}},"130":{"start":{"line":249,"column":6},"end":{"line":249,"column":35}},"131":{"start":{"line":250,"column":6},"end":{"line":250,"column":27}},"132":{"start":{"line":251,"column":6},"end":{"line":256,"column":7}},"133":{"start":{"line":252,"column":8},"end":{"line":252,"column":32}},"134":{"start":{"line":253,"column":8},"end":{"line":253,"column":25}},"135":{"start":{"line":255,"column":8},"end":{"line":255,"column":50}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},{"start":{"line":34,"column":26},"end":{"line":34,"column":41}},{"start":{"line":34,"column":45},"end":{"line":34,"column":60}}]},"3":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":11},"end":{"line":40,"column":11}},{"start":{"line":40,"column":11},"end":{"line":40,"column":11}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":6},"end":{"line":43,"column":6}},{"start":{"line":43,"column":6},"end":{"line":43,"column":6}}]},"5":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":10},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":50}}]},"6":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":6}},{"start":{"line":47,"column":6},"end":{"line":47,"column":6}}]},"7":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":11},"end":{"line":52,"column":11}},{"start":{"line":52,"column":11},"end":{"line":52,"column":11}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"9":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":6}},{"start":{"line":62,"column":6},"end":{"line":62,"column":6}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":10},"end":{"line":74,"column":10}},{"start":{"line":74,"column":10},"end":{"line":74,"column":10}}]},"11":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":8},"end":{"line":80,"column":8}},{"start":{"line":80,"column":8},"end":{"line":80,"column":8}}]},"12":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":10},"end":{"line":82,"column":10}},{"start":{"line":82,"column":10},"end":{"line":82,"column":10}}]},"13":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":14},"end":{"line":82,"column":31}},{"start":{"line":82,"column":35},"end":{"line":82,"column":59}}]},"14":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":93,"column":8}},{"start":{"line":93,"column":8},"end":{"line":93,"column":8}}]},"15":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":10},"end":{"line":98,"column":10}},{"start":{"line":98,"column":10},"end":{"line":98,"column":10}}]},"16":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":17},"end":{"line":100,"column":17}},{"start":{"line":100,"column":17},"end":{"line":100,"column":17}}]},"17":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":17},"end":{"line":102,"column":17}},{"start":{"line":102,"column":17},"end":{"line":102,"column":17}}]},"18":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":17},"end":{"line":104,"column":17}},{"start":{"line":104,"column":17},"end":{"line":104,"column":17}}]},"19":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":17},"end":{"line":106,"column":17}},{"start":{"line":106,"column":17},"end":{"line":106,"column":17}}]},"20":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":10},"end":{"line":110,"column":10}},{"start":{"line":110,"column":10},"end":{"line":110,"column":10}}]},"21":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":12},"end":{"line":114,"column":12}},{"start":{"line":114,"column":12},"end":{"line":114,"column":12}}]},"22":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":117,"column":12}},{"start":{"line":117,"column":12},"end":{"line":117,"column":12}}]},"23":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":12},"end":{"line":121,"column":12}},{"start":{"line":121,"column":12},"end":{"line":121,"column":12}}]},"24":{"line":122,"type":"binary-expr","locations":[{"start":{"line":122,"column":31},"end":{"line":122,"column":44}},{"start":{"line":123,"column":21},"end":{"line":123,"column":40}},{"start":{"line":124,"column":21},"end":{"line":124,"column":31}},{"start":{"line":125,"column":21},"end":{"line":125,"column":35}}]},"25":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":14},"end":{"line":127,"column":14}},{"start":{"line":127,"column":14},"end":{"line":127,"column":14}}]},"26":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":19},"end":{"line":132,"column":19}},{"start":{"line":132,"column":19},"end":{"line":132,"column":19}}]},"27":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":23},"end":{"line":132,"column":38}},{"start":{"line":133,"column":16},"end":{"line":133,"column":46}},{"start":{"line":133,"column":50},"end":{"line":133,"column":82}}]},"28":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":19},"end":{"line":136,"column":19}},{"start":{"line":136,"column":19},"end":{"line":136,"column":19}}]},"29":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":24},"end":{"line":136,"column":39}},{"start":{"line":136,"column":43},"end":{"line":136,"column":64}},{"start":{"line":136,"column":68},"end":{"line":136,"column":92}},{"start":{"line":137,"column":16},"end":{"line":137,"column":31}},{"start":{"line":137,"column":35},"end":{"line":137,"column":75}},{"start":{"line":138,"column":16},"end":{"line":138,"column":58}}]},"30":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":14},"end":{"line":139,"column":14}},{"start":{"line":139,"column":14},"end":{"line":139,"column":14}}]},"31":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":14},"end":{"line":142,"column":14}},{"start":{"line":142,"column":14},"end":{"line":142,"column":14}}]},"32":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":14},"end":{"line":145,"column":14}},{"start":{"line":145,"column":14},"end":{"line":145,"column":14}}]},"33":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":19},"end":{"line":152,"column":19}},{"start":{"line":152,"column":19},"end":{"line":152,"column":19}}]},"34":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":14},"end":{"line":153,"column":14}},{"start":{"line":153,"column":14},"end":{"line":153,"column":14}}]},"35":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":16},"end":{"line":154,"column":16}},{"start":{"line":154,"column":16},"end":{"line":154,"column":16}}]},"36":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":16},"end":{"line":158,"column":16}},{"start":{"line":158,"column":16},"end":{"line":158,"column":16}}]},"37":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":24},"end":{"line":164,"column":34}},{"start":{"line":164,"column":38},"end":{"line":164,"column":52}},{"start":{"line":164,"column":56},"end":{"line":164,"column":69}},{"start":{"line":165,"column":18},"end":{"line":165,"column":37}}]},"38":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":16}},{"start":{"line":166,"column":16},"end":{"line":166,"column":16}}]},"39":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":8}},{"start":{"line":176,"column":8},"end":{"line":176,"column":8}}]},"40":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":19}},{"start":{"line":176,"column":23},"end":{"line":176,"column":37}},{"start":{"line":176,"column":41},"end":{"line":176,"column":55}}]},"41":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":10},"end":{"line":177,"column":10}},{"start":{"line":177,"column":10},"end":{"line":177,"column":10}}]},"42":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":13},"end":{"line":183,"column":13}},{"start":{"line":183,"column":13},"end":{"line":183,"column":13}}]},"43":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":17},"end":{"line":183,"column":29}},{"start":{"line":183,"column":33},"end":{"line":183,"column":50}}]},"44":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":13},"end":{"line":186,"column":13}},{"start":{"line":186,"column":13},"end":{"line":186,"column":13}}]},"45":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":17},"end":{"line":188,"column":36}},{"start":{"line":188,"column":40},"end":{"line":188,"column":51}},{"start":{"line":188,"column":55},"end":{"line":188,"column":67}}]},"46":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":191,"column":8}},{"start":{"line":191,"column":8},"end":{"line":191,"column":8}}]},"47":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":12},"end":{"line":203,"column":12}},{"start":{"line":203,"column":12},"end":{"line":203,"column":12}}]},"48":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":14},"end":{"line":204,"column":14}},{"start":{"line":204,"column":14},"end":{"line":204,"column":14}}]},"49":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":18},"end":{"line":204,"column":24}},{"start":{"line":204,"column":28},"end":{"line":204,"column":38}},{"start":{"line":204,"column":42},"end":{"line":204,"column":60}}]},"50":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":16},"end":{"line":206,"column":16}},{"start":{"line":206,"column":16},"end":{"line":206,"column":16}}]},"51":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":20},"end":{"line":206,"column":32}},{"start":{"line":206,"column":36},"end":{"line":206,"column":62}}]},"52":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":39},"end":{"line":215,"column":63}},{"start":{"line":215,"column":66},"end":{"line":215,"column":72}}]},"53":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":13},"end":{"line":221,"column":13}},{"start":{"line":221,"column":13},"end":{"line":221,"column":13}}]},"54":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":17},"end":{"line":221,"column":49}},{"start":{"line":221,"column":53},"end":{"line":221,"column":108}}]},"55":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":2},"end":{"line":238,"column":2}},{"start":{"line":238,"column":2},"end":{"line":238,"column":2}}]},"56":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":6}},{"start":{"line":240,"column":6},"end":{"line":240,"column":6}}]},"57":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":10},"end":{"line":240,"column":29}},{"start":{"line":240,"column":33},"end":{"line":240,"column":53}}]},"58":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":6},"end":{"line":251,"column":6}},{"start":{"line":251,"column":6},"end":{"line":251,"column":6}}]},"59":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":10},"end":{"line":251,"column":29}},{"start":{"line":251,"column":33},"end":{"line":251,"column":53}}]}},"code":["/*!"," * Module dependencies."," */","","var StrictModeError = require('./error/strict');","var Types = require('./schema/index');","var utils = require('./utils');","","var ALLOWED_GEOWITHIN_GEOJSON_TYPES = ['Polygon', 'MultiPolygon'];","","/**"," * Handles internal casting for queries"," *"," * @param {Schema} schema"," * @param {Object} obj Object to cast"," * @param {Object} options the query options"," * @api private"," */","module.exports = function cast(schema, obj, options) {","  var paths = Object.keys(obj),","      i = paths.length,","      _keys,","      any$conditionals,","      schematype,","      nested,","      path,","      type,","      val;","","  while (i--) {","    path = paths[i];","    val = obj[path];","","    if (path === '$or' || path === '$nor' || path === '$and') {","      var k = val.length;","","      while (k--) {","        val[k] = cast(schema, val[k]);","      }","    } else if (path === '$where') {","      type = typeof val;","","      if (type !== 'string' && type !== 'function') {","        throw new Error('Must have a string or function for $where');","      }","","      if (type === 'function') {","        obj[path] = val.toString();","      }","","      continue;","    } else if (path === '$elemMatch') {","      val = cast(schema, val);","    } else {","      if (!schema) {","        // no casting for Mixed types","        continue;","      }","","      schematype = schema.path(path);","","      if (!schematype) {","        // Handle potential embedded array queries","        var split = path.split('.'),","            j = split.length,","            pathFirstHalf,","            pathLastHalf,","            remainingConds;","","        // Find the part of the var path that is a path of the Schema","        while (j--) {","          pathFirstHalf = split.slice(0, j).join('.');","          schematype = schema.path(pathFirstHalf);","          if (schematype) {","            break;","          }","        }","","        // If a substring of the input path resolves to an actual real path...","        if (schematype) {","          // Apply the casting; similar code for $elemMatch in schema/array.js","          if (schematype.caster && schematype.caster.schema) {","            remainingConds = {};","            pathLastHalf = split.slice(j).join('.');","            remainingConds[pathLastHalf] = val;","            obj[path] = cast(schematype.caster.schema, remainingConds)[pathLastHalf];","          } else {","            obj[path] = val;","          }","          continue;","        }","","        if (utils.isObject(val)) {","          // handle geo schemas that use object notation","          // { loc: { long: Number, lat: Number }","","          var geo = '';","          if (val.$near) {","            geo = '$near';","          } else if (val.$nearSphere) {","            geo = '$nearSphere';","          } else if (val.$within) {","            geo = '$within';","          } else if (val.$geoIntersects) {","            geo = '$geoIntersects';","          } else if (val.$geoWithin) {","            geo = '$geoWithin';","          }","","          if (geo) {","            var numbertype = new Types.Number('__QueryCasting__');","            var value = val[geo];","","            if (val.$maxDistance != null) {","              val.$maxDistance = numbertype.castForQuery(val.$maxDistance);","            }","            if (val.$minDistance != null) {","              val.$minDistance = numbertype.castForQuery(val.$minDistance);","            }","","            if (geo === '$within') {","              var withinType = value.$center","                  || value.$centerSphere","                  || value.$box","                  || value.$polygon;","","              if (!withinType) {","                throw new Error('Bad $within paramater: ' + JSON.stringify(val));","              }","","              value = withinType;","            } else if (geo === '$near' &&","                typeof value.type === 'string' && Array.isArray(value.coordinates)) {","              // geojson; cast the coordinates","              value = value.coordinates;","            } else if ((geo === '$near' || geo === '$nearSphere' || geo === '$geoIntersects') &&","                value.$geometry && typeof value.$geometry.type === 'string' &&","                Array.isArray(value.$geometry.coordinates)) {","              if (value.$maxDistance != null) {","                value.$maxDistance = numbertype.castForQuery(value.$maxDistance);","              }","              if (value.$minDistance != null) {","                value.$minDistance = numbertype.castForQuery(value.$minDistance);","              }","              if (utils.isMongooseObject(value.$geometry)) {","                value.$geometry = value.$geometry.toObject({","                  transform: false,","                  virtuals: false","                });","              }","              value = value.$geometry.coordinates;","            } else if (geo === '$geoWithin') {","              if (value.$geometry) {","                if (utils.isMongooseObject(value.$geometry)) {","                  value.$geometry = value.$geometry.toObject({ virtuals: false });","                }","                var geoWithinType = value.$geometry.type;","                if (ALLOWED_GEOWITHIN_GEOJSON_TYPES.indexOf(geoWithinType) === -1) {","                  throw new Error('Invalid geoJSON type for $geoWithin \"' +","                    geoWithinType + '\", must be \"Polygon\" or \"MultiPolygon\"');","                }","                value = value.$geometry.coordinates;","              } else {","                value = value.$box || value.$polygon || value.$center ||","                  value.$centerSphere;","                if (utils.isMongooseObject(value)) {","                  value = value.toObject({ virtuals: false });","                }","              }","            }","","            _cast(value, numbertype);","          }","        }","","        if (options && options.upsert && options.strict) {","          if (options.strict === 'throw') {","            throw new StrictModeError(path);","          }","          throw new StrictModeError(path, 'Path \"' + path + '\" is not in ' +","            'schema, strict mode is `true`, and upsert is `true`.');","        }","      } else if (val === null || val === undefined) {","        obj[path] = null;","        continue;","      } else if (val.constructor.name === 'Object') {","        any$conditionals = Object.keys(val).some(function(k) {","          return k.charAt(0) === '$' && k !== '$id' && k !== '$ref';","        });","","        if (!any$conditionals) {","          obj[path] = schematype.castForQuery(val);","        } else {","          var ks = Object.keys(val),","              $cond;","","          k = ks.length;","","          while (k--) {","            $cond = ks[k];","            nested = val[$cond];","","            if ($cond === '$not') {","              if (nested && schematype && !schematype.caster) {","                _keys = Object.keys(nested);","                if (_keys.length && _keys[0].charAt(0) === '$') {","                  for (var key in nested) {","                    nested[key] = schematype.castForQuery(key, nested[key]);","                  }","                } else {","                  val[$cond] = schematype.castForQuery($cond, nested);","                }","                continue;","              }","              cast(schematype.caster ? schematype.caster.schema : schema, nested);","            } else {","              val[$cond] = schematype.castForQuery($cond, nested);","            }","          }","        }","      } else if (val.constructor.name === 'Array' && ['Buffer', 'Array'].indexOf(schematype.instance) === -1) {","        var casted = [];","        for (var valIndex = 0; valIndex < val.length; valIndex++) {","          casted.push(schematype.castForQuery(val[valIndex]));","        }","","        obj[path] = { $in: casted };","      } else {","        obj[path] = schematype.castForQuery(val);","      }","    }","  }","","  return obj;","};","","function _cast(val, numbertype) {","  if (Array.isArray(val)) {","    val.forEach(function(item, i) {","      if (Array.isArray(item) || utils.isObject(item)) {","        return _cast(item, numbertype);","      }","      val[i] = numbertype.castForQuery(item);","    });","  } else {","    var nearKeys = Object.keys(val);","    var nearLen = nearKeys.length;","    while (nearLen--) {","      var nkey = nearKeys[nearLen];","      var item = val[nkey];","      if (Array.isArray(item) || utils.isObject(item)) {","        _cast(item, numbertype);","        val[nkey] = item;","      } else {","        val[nkey] = numbertype.castForQuery(item);","      }","    }","  }","}",""],"l":{"5":1,"6":1,"7":1,"9":1,"19":1,"20":0,"30":0,"31":0,"32":0,"34":0,"35":0,"37":0,"38":0,"40":0,"41":0,"43":0,"44":0,"47":0,"48":0,"51":0,"52":0,"53":0,"55":0,"57":0,"60":0,"62":0,"64":0,"71":0,"72":0,"73":0,"74":0,"75":0,"80":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"90":0,"93":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"110":0,"111":0,"112":0,"114":0,"115":0,"117":0,"118":0,"121":0,"122":0,"127":0,"128":0,"131":0,"132":0,"135":0,"136":0,"139":0,"140":0,"142":0,"143":0,"145":0,"146":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"158":0,"159":0,"162":0,"164":0,"166":0,"167":0,"172":0,"176":0,"177":0,"178":0,"180":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"191":0,"192":0,"194":0,"197":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"211":0,"213":0,"215":0,"217":0,"221":0,"222":0,"223":0,"224":0,"227":0,"229":0,"234":0,"237":1,"238":0,"239":0,"240":0,"241":0,"243":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"255":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/helpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/helpers.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"castToNumber","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":27}}},"2":{"name":"castArraysOfNumbers","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":40}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":14},"end":{"line":27,"column":29}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"3":{"start":{"line":16,"column":0},"end":{"line":16,"column":50}},"4":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"5":{"start":{"line":23,"column":2},"end":{"line":23,"column":53}},"6":{"start":{"line":26,"column":0},"end":{"line":34,"column":1}},"7":{"start":{"line":27,"column":2},"end":{"line":33,"column":5}},"8":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"9":{"start":{"line":29,"column":6},"end":{"line":29,"column":35}},"10":{"start":{"line":31,"column":6},"end":{"line":31,"column":42}}},"branchMap":{"1":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]}},"code":["'use strict';","","/*!"," * Module requirements."," */","","var Types = {","  Number: require('../number')","};","","/*!"," * @ignore"," */","","exports.castToNumber = castToNumber;","exports.castArraysOfNumbers = castArraysOfNumbers;","","/*!"," * @ignore"," */","","function castToNumber(val) {","  return Types.Number.prototype.cast.call(this, val);","}","","function castArraysOfNumbers(arr, self) {","  arr.forEach(function(v, i) {","    if (Array.isArray(v)) {","      castArraysOfNumbers(v, self);","    } else {","      arr[i] = castToNumber.call(self, v);","    }","  });","}",""],"l":{"7":1,"15":1,"16":1,"22":1,"23":0,"26":1,"27":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/geospatial.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/operators/geospatial.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"cast$near","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}}},"2":{"name":"cast$geometry","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":34}}},"3":{"name":"cast$within","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":26}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":22},"end":{"line":55,"column":36}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":18},"end":{"line":61,"column":33}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":22},"end":{"line":67,"column":40}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":21},"end":{"line":69,"column":36}}},"8":{"name":"cast$geoIntersects","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":33}}},"9":{"name":"_castMinMaxDistance","line":93,"loc":{"start":{"line":93,"column":0},"end":{"line":93,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":48}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":30}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"6":{"start":{"line":16,"column":0},"end":{"line":31,"column":1}},"7":{"start":{"line":17,"column":2},"end":{"line":17,"column":40}},"8":{"start":{"line":19,"column":2},"end":{"line":22,"column":3}},"9":{"start":{"line":20,"column":4},"end":{"line":20,"column":35}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":15}},"11":{"start":{"line":24,"column":2},"end":{"line":24,"column":33}},"12":{"start":{"line":26,"column":2},"end":{"line":28,"column":3}},"13":{"start":{"line":27,"column":4},"end":{"line":27,"column":36}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":60}},"15":{"start":{"line":33,"column":0},"end":{"line":48,"column":1}},"16":{"start":{"line":34,"column":2},"end":{"line":43,"column":3}},"17":{"start":{"line":38,"column":6},"end":{"line":38,"column":59}},"18":{"start":{"line":39,"column":6},"end":{"line":39,"column":12}},"19":{"start":{"line":42,"column":6},"end":{"line":42,"column":12}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":33}},"21":{"start":{"line":47,"column":2},"end":{"line":47,"column":13}},"22":{"start":{"line":50,"column":0},"end":{"line":81,"column":1}},"23":{"start":{"line":51,"column":2},"end":{"line":51,"column":33}},"24":{"start":{"line":53,"column":2},"end":{"line":78,"column":3}},"25":{"start":{"line":54,"column":4},"end":{"line":54,"column":46}},"26":{"start":{"line":55,"column":4},"end":{"line":64,"column":7}},"27":{"start":{"line":56,"column":6},"end":{"line":60,"column":7}},"28":{"start":{"line":57,"column":8},"end":{"line":58,"column":51}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":33}},"30":{"start":{"line":61,"column":6},"end":{"line":63,"column":9}},"31":{"start":{"line":62,"column":8},"end":{"line":62,"column":44}},"32":{"start":{"line":65,"column":9},"end":{"line":78,"column":3}},"33":{"start":{"line":66,"column":4},"end":{"line":66,"column":53}},"34":{"start":{"line":67,"column":4},"end":{"line":75,"column":7}},"35":{"start":{"line":68,"column":6},"end":{"line":74,"column":7}},"36":{"start":{"line":69,"column":8},"end":{"line":71,"column":11}},"37":{"start":{"line":70,"column":10},"end":{"line":70,"column":47}},"38":{"start":{"line":73,"column":8},"end":{"line":73,"column":53}},"39":{"start":{"line":76,"column":9},"end":{"line":78,"column":3}},"40":{"start":{"line":77,"column":4},"end":{"line":77,"column":29}},"41":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"42":{"start":{"line":83,"column":0},"end":{"line":91,"column":1}},"43":{"start":{"line":84,"column":2},"end":{"line":84,"column":26}},"44":{"start":{"line":85,"column":2},"end":{"line":87,"column":3}},"45":{"start":{"line":86,"column":4},"end":{"line":86,"column":11}},"46":{"start":{"line":89,"column":2},"end":{"line":89,"column":27}},"47":{"start":{"line":90,"column":2},"end":{"line":90,"column":13}},"48":{"start":{"line":93,"column":0},"end":{"line":100,"column":1}},"49":{"start":{"line":94,"column":2},"end":{"line":96,"column":3}},"50":{"start":{"line":95,"column":4},"end":{"line":95,"column":65}},"51":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"52":{"start":{"line":98,"column":4},"end":{"line":98,"column":65}}},"branchMap":{"1":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":2},"end":{"line":26,"column":2}},{"start":{"line":26,"column":2},"end":{"line":26,"column":2}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":9}},{"start":{"line":26,"column":13},"end":{"line":26,"column":26}}]},"4":{"line":34,"type":"switch","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":19}},{"start":{"line":36,"column":4},"end":{"line":36,"column":22}},{"start":{"line":37,"column":4},"end":{"line":39,"column":12}},{"start":{"line":40,"column":4},"end":{"line":42,"column":12}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"6":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":14}},{"start":{"line":53,"column":18},"end":{"line":53,"column":30}}]},"7":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":26},"end":{"line":54,"column":32}},{"start":{"line":54,"column":35},"end":{"line":54,"column":45}}]},"8":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":6}},{"start":{"line":56,"column":6},"end":{"line":56,"column":6}}]},"9":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":9},"end":{"line":65,"column":9}},{"start":{"line":65,"column":9},"end":{"line":65,"column":9}}]},"10":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":13},"end":{"line":65,"column":24}},{"start":{"line":65,"column":28},"end":{"line":65,"column":45}}]},"11":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":25},"end":{"line":66,"column":34}},{"start":{"line":66,"column":37},"end":{"line":66,"column":52}}]},"12":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"13":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":9},"end":{"line":76,"column":9}},{"start":{"line":76,"column":9},"end":{"line":76,"column":9}}]},"14":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"15":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":2},"end":{"line":94,"column":2}},{"start":{"line":94,"column":2},"end":{"line":94,"column":2}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]}},"code":["/*!"," * Module requirements."," */","","var castArraysOfNumbers = require('./helpers').castArraysOfNumbers;","var castToNumber = require('./helpers').castToNumber;","","/*!"," * ignore"," */","","exports.cast$geoIntersects = cast$geoIntersects;","exports.cast$near = cast$near;","exports.cast$within = cast$within;","","function cast$near(val) {","  var SchemaArray = require('../array');","","  if (Array.isArray(val)) {","    castArraysOfNumbers(val, this);","    return val;","  }","","  _castMinMaxDistance(this, val);","","  if (val && val.$geometry) {","    return cast$geometry(val, this);","  }","","  return SchemaArray.prototype.castForQuery.call(this, val);","}","","function cast$geometry(val, self) {","  switch (val.$geometry.type) {","    case 'Polygon':","    case 'LineString':","    case 'Point':","      castArraysOfNumbers(val.$geometry.coordinates, self);","      break;","    default:","      // ignore unknowns","      break;","  }","","  _castMinMaxDistance(this, val);","","  return val;","}","","function cast$within(val) {","  _castMinMaxDistance(this, val);","","  if (val.$box || val.$polygon) {","    var type = val.$box ? '$box' : '$polygon';","    val[type].forEach(function(arr) {","      if (!Array.isArray(arr)) {","        var msg = 'Invalid $within $box argument. '","            + 'Expected an array, received ' + arr;","        throw new TypeError(msg);","      }","      arr.forEach(function(v, i) {","        arr[i] = castToNumber.call(this, v);","      });","    });","  } else if (val.$center || val.$centerSphere) {","    type = val.$center ? '$center' : '$centerSphere';","    val[type].forEach(function(item, i) {","      if (Array.isArray(item)) {","        item.forEach(function(v, j) {","          item[j] = castToNumber.call(this, v);","        });","      } else {","        val[type][i] = castToNumber.call(this, item);","      }","    });","  } else if (val.$geometry) {","    cast$geometry(val, this);","  }","","  return val;","}","","function cast$geoIntersects(val) {","  var geo = val.$geometry;","  if (!geo) {","    return;","  }","","  cast$geometry(val, this);","  return val;","}","","function _castMinMaxDistance(self, val) {","  if (val.$maxDistance) {","    val.$maxDistance = castToNumber.call(self, val.$maxDistance);","  }","  if (val.$minDistance) {","    val.$minDistance = castToNumber.call(self, val.$minDistance);","  }","}",""],"l":{"5":1,"6":1,"12":1,"13":1,"14":1,"16":1,"17":0,"19":0,"20":0,"21":0,"24":0,"26":0,"27":0,"30":0,"33":1,"34":0,"38":0,"39":0,"42":0,"45":0,"47":0,"50":1,"51":0,"53":0,"54":0,"55":0,"56":0,"57":0,"59":0,"61":0,"62":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"73":0,"76":0,"77":0,"80":0,"83":1,"84":0,"85":0,"86":0,"89":0,"90":0,"93":1,"94":0,"95":0,"97":0,"98":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyHooks.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyHooks.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"applyHooks","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}}},"2":{"name":"(anonymous_2)","line":53,"loc":{"start":{"line":53,"column":22},"end":{"line":53,"column":37}}},"3":{"name":"(anonymous_3)","line":61,"loc":{"start":{"line":61,"column":30},"end":{"line":61,"column":45}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":31},"end":{"line":66,"column":46}}},"5":{"name":"(anonymous_5)","line":77,"loc":{"start":{"line":77,"column":29},"end":{"line":77,"column":44}}},"6":{"name":"(anonymous_6)","line":82,"loc":{"start":{"line":82,"column":30},"end":{"line":82,"column":45}}},"7":{"name":"(anonymous_7)","line":101,"loc":{"start":{"line":101,"column":33},"end":{"line":101,"column":52}}},"8":{"name":"wrappedPointCut","line":102,"loc":{"start":{"line":102,"column":13},"end":{"line":102,"column":40}}},"9":{"name":"(anonymous_9)","line":117,"loc":{"start":{"line":117,"column":38},"end":{"line":117,"column":64}}},"10":{"name":"(anonymous_10)","line":118,"loc":{"start":{"line":118,"column":20},"end":{"line":118,"column":36}}},"11":{"name":"(anonymous_11)","line":144,"loc":{"start":{"line":144,"column":12},"end":{"line":144,"column":23}}},"12":{"name":"(anonymous_12)","line":145,"loc":{"start":{"line":145,"column":31},"end":{"line":145,"column":42}}},"13":{"name":"(anonymous_13)","line":149,"loc":{"start":{"line":149,"column":12},"end":{"line":149,"column":28}}},"14":{"name":"(anonymous_14)","line":150,"loc":{"start":{"line":150,"column":31},"end":{"line":150,"column":42}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":55}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"4":{"start":{"line":15,"column":0},"end":{"line":175,"column":1}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":37}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":15}},"7":{"start":{"line":18,"column":2},"end":{"line":18,"column":10}},"8":{"start":{"line":19,"column":2},"end":{"line":19,"column":8}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":8}},"10":{"start":{"line":21,"column":2},"end":{"line":21,"column":15}},"11":{"start":{"line":22,"column":2},"end":{"line":22,"column":11}},"12":{"start":{"line":23,"column":2},"end":{"line":23,"column":14}},"13":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":11}},"15":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"16":{"start":{"line":30,"column":2},"end":{"line":30,"column":11}},"17":{"start":{"line":32,"column":2},"end":{"line":49,"column":3}},"18":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"19":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"20":{"start":{"line":35,"column":6},"end":{"line":35,"column":15}},"21":{"start":{"line":37,"column":4},"end":{"line":37,"column":38}},"22":{"start":{"line":38,"column":4},"end":{"line":38,"column":51}},"23":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"24":{"start":{"line":40,"column":6},"end":{"line":40,"column":45}},"25":{"start":{"line":42,"column":4},"end":{"line":48,"column":5}},"26":{"start":{"line":43,"column":6},"end":{"line":43,"column":39}},"27":{"start":{"line":44,"column":11},"end":{"line":48,"column":5}},"28":{"start":{"line":45,"column":6},"end":{"line":45,"column":34}},"29":{"start":{"line":47,"column":6},"end":{"line":47,"column":38}},"30":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"31":{"start":{"line":53,"column":2},"end":{"line":55,"column":5}},"32":{"start":{"line":54,"column":4},"end":{"line":54,"column":32}},"33":{"start":{"line":56,"column":2},"end":{"line":56,"column":21}},"34":{"start":{"line":59,"column":2},"end":{"line":71,"column":3}},"35":{"start":{"line":60,"column":4},"end":{"line":64,"column":5}},"36":{"start":{"line":61,"column":6},"end":{"line":63,"column":9}},"37":{"start":{"line":62,"column":8},"end":{"line":62,"column":58}},"38":{"start":{"line":65,"column":4},"end":{"line":69,"column":5}},"39":{"start":{"line":66,"column":6},"end":{"line":68,"column":9}},"40":{"start":{"line":67,"column":8},"end":{"line":67,"column":59}},"41":{"start":{"line":70,"column":4},"end":{"line":70,"column":23}},"42":{"start":{"line":72,"column":2},"end":{"line":87,"column":3}},"43":{"start":{"line":74,"column":4},"end":{"line":74,"column":32}},"44":{"start":{"line":75,"column":4},"end":{"line":75,"column":51}},"45":{"start":{"line":76,"column":4},"end":{"line":80,"column":5}},"46":{"start":{"line":77,"column":6},"end":{"line":79,"column":9}},"47":{"start":{"line":78,"column":8},"end":{"line":78,"column":58}},"48":{"start":{"line":81,"column":4},"end":{"line":85,"column":5}},"49":{"start":{"line":82,"column":6},"end":{"line":84,"column":9}},"50":{"start":{"line":83,"column":8},"end":{"line":83,"column":59}},"51":{"start":{"line":86,"column":4},"end":{"line":86,"column":22}},"52":{"start":{"line":89,"column":2},"end":{"line":89,"column":29}},"53":{"start":{"line":90,"column":2},"end":{"line":90,"column":20}},"54":{"start":{"line":91,"column":2},"end":{"line":174,"column":3}},"55":{"start":{"line":92,"column":4},"end":{"line":92,"column":23}},"56":{"start":{"line":94,"column":4},"end":{"line":94,"column":42}},"57":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"58":{"start":{"line":96,"column":6},"end":{"line":96,"column":13}},"59":{"start":{"line":98,"column":4},"end":{"line":100,"column":5}},"60":{"start":{"line":99,"column":6},"end":{"line":99,"column":59}},"61":{"start":{"line":101,"column":4},"end":{"line":157,"column":16}},"62":{"start":{"line":102,"column":6},"end":{"line":156,"column":8}},"63":{"start":{"line":103,"column":8},"end":{"line":103,"column":44}},"64":{"start":{"line":105,"column":8},"end":{"line":105,"column":25}},"65":{"start":{"line":106,"column":8},"end":{"line":106,"column":44}},"66":{"start":{"line":107,"column":8},"end":{"line":107,"column":33}},"67":{"start":{"line":108,"column":8},"end":{"line":108,"column":15}},"68":{"start":{"line":109,"column":8},"end":{"line":109,"column":40}},"69":{"start":{"line":110,"column":8},"end":{"line":110,"column":21}},"70":{"start":{"line":111,"column":8},"end":{"line":115,"column":9}},"71":{"start":{"line":112,"column":10},"end":{"line":112,"column":29}},"72":{"start":{"line":114,"column":10},"end":{"line":114,"column":23}},"73":{"start":{"line":117,"column":8},"end":{"line":138,"column":11}},"74":{"start":{"line":118,"column":10},"end":{"line":135,"column":13}},"75":{"start":{"line":119,"column":12},"end":{"line":129,"column":13}},"76":{"start":{"line":123,"column":14},"end":{"line":125,"column":15}},"77":{"start":{"line":124,"column":16},"end":{"line":124,"column":50}},"78":{"start":{"line":126,"column":14},"end":{"line":126,"column":43}},"79":{"start":{"line":127,"column":14},"end":{"line":127,"column":28}},"80":{"start":{"line":128,"column":14},"end":{"line":128,"column":21}},"81":{"start":{"line":133,"column":12},"end":{"line":133,"column":64}},"82":{"start":{"line":134,"column":12},"end":{"line":134,"column":45}},"83":{"start":{"line":137,"column":10},"end":{"line":137,"column":45}},"84":{"start":{"line":139,"column":8},"end":{"line":154,"column":9}},"85":{"start":{"line":140,"column":10},"end":{"line":142,"column":11}},"86":{"start":{"line":141,"column":12},"end":{"line":141,"column":52}},"87":{"start":{"line":143,"column":10},"end":{"line":153,"column":15}},"88":{"start":{"line":145,"column":14},"end":{"line":147,"column":17}},"89":{"start":{"line":146,"column":16},"end":{"line":146,"column":56}},"90":{"start":{"line":150,"column":14},"end":{"line":152,"column":17}},"91":{"start":{"line":151,"column":16},"end":{"line":151,"column":26}},"92":{"start":{"line":155,"column":8},"end":{"line":155,"column":23}},"93":{"start":{"line":158,"column":4},"end":{"line":158,"column":58}},"94":{"start":{"line":160,"column":4},"end":{"line":160,"column":32}},"95":{"start":{"line":161,"column":4},"end":{"line":161,"column":35}},"96":{"start":{"line":162,"column":4},"end":{"line":166,"column":5}},"97":{"start":{"line":163,"column":6},"end":{"line":163,"column":29}},"98":{"start":{"line":164,"column":6},"end":{"line":164,"column":24}},"99":{"start":{"line":165,"column":6},"end":{"line":165,"column":56}},"100":{"start":{"line":168,"column":4},"end":{"line":168,"column":32}},"101":{"start":{"line":169,"column":4},"end":{"line":173,"column":5}},"102":{"start":{"line":170,"column":6},"end":{"line":170,"column":30}},"103":{"start":{"line":171,"column":6},"end":{"line":171,"column":24}},"104":{"start":{"line":172,"column":6},"end":{"line":172,"column":57}}},"branchMap":{"1":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":10},"end":{"line":16,"column":16}},{"start":{"line":16,"column":20},"end":{"line":16,"column":36}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":8},"end":{"line":34,"column":25}},{"start":{"line":34,"column":29},"end":{"line":34,"column":47}},{"start":{"line":34,"column":51},"end":{"line":34,"column":67}}]},"5":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":34},"end":{"line":38,"column":40}},{"start":{"line":38,"column":43},"end":{"line":38,"column":50}}]},"6":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"7":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"8":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":11},"end":{"line":44,"column":11}},{"start":{"line":44,"column":11},"end":{"line":44,"column":11}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"10":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":17}},{"start":{"line":59,"column":22},"end":{"line":59,"column":43}},{"start":{"line":59,"column":47},"end":{"line":59,"column":72}}]},"11":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"13":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"14":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"15":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"16":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"17":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":4},"end":{"line":98,"column":4}},{"start":{"line":98,"column":4},"end":{"line":98,"column":4}}]},"18":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"19":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":19}},{"start":{"line":111,"column":23},"end":{"line":111,"column":52}}]},"20":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":12},"end":{"line":119,"column":12}},{"start":{"line":119,"column":12},"end":{"line":119,"column":12}}]},"21":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":14},"end":{"line":123,"column":14}},{"start":{"line":123,"column":14},"end":{"line":123,"column":14}}]},"22":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":8},"end":{"line":139,"column":8}},{"start":{"line":139,"column":8},"end":{"line":139,"column":8}}]},"23":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":10},"end":{"line":140,"column":10}},{"start":{"line":140,"column":10},"end":{"line":140,"column":10}}]}},"code":["'use strict';","","var PromiseProvider = require('../../promise_provider');","var VersionError = require('../../error').VersionError;","","module.exports = applyHooks;","","/*!"," * Register hooks for this model"," *"," * @param {Model} model"," * @param {Schema} schema"," */","","function applyHooks(model, schema) {","  var q = schema && schema.callQueue;","  var toWrapEl;","  var len;","  var i;","  var j;","  var pointCut;","  var keys;","  var newName;","  if (!q.length) {","    return;","  }","","  // we are only interested in 'pre' hooks, and group by point-cut","  var toWrap = { post: [] };","  var pair;","","  for (i = 0; i < q.length; ++i) {","    pair = q[i];","    if (pair[0] !== 'pre' && pair[0] !== 'post' && pair[0] !== 'on') {","      continue;","    }","    var args = [].slice.call(pair[1]);","    pointCut = pair[0] === 'on' ? 'post' : args[0];","    if (!(pointCut in toWrap)) {","      toWrap[pointCut] = {post: [], pre: []};","    }","    if (pair[0] === 'post') {","      toWrap[pointCut].post.push(args);","    } else if (pair[0] === 'on') {","      toWrap[pointCut].push(args);","    } else {","      toWrap[pointCut].pre.push(args);","    }","  }","","  // 'post' hooks are simpler","  len = toWrap.post.length;","  toWrap.post.forEach(function(args) {","    model.on.apply(model, args);","  });","  delete toWrap.post;","","  // 'init' should be synchronous on subdocuments","  if (toWrap.init && (model.$isSingleNested || model.$isArraySubdocument)) {","    if (toWrap.init.pre) {","      toWrap.init.pre.forEach(function(args) {","        model.prototype.$pre.apply(model.prototype, args);","      });","    }","    if (toWrap.init.post) {","      toWrap.init.post.forEach(function(args) {","        model.prototype.$post.apply(model.prototype, args);","      });","    }","    delete toWrap.init;","  }","  if (toWrap.set) {","    // Set hooks also need to be sync re: gh-3479","    newName = '$__original_set';","    model.prototype[newName] = model.prototype.set;","    if (toWrap.set.pre) {","      toWrap.set.pre.forEach(function(args) {","        model.prototype.$pre.apply(model.prototype, args);","      });","    }","    if (toWrap.set.post) {","      toWrap.set.post.forEach(function(args) {","        model.prototype.$post.apply(model.prototype, args);","      });","    }","    delete toWrap.set;","  }","","  keys = Object.keys(toWrap);","  len = keys.length;","  for (i = 0; i < len; ++i) {","    pointCut = keys[i];","    // this is so we can wrap everything into a promise;","    newName = ('$__original_' + pointCut);","    if (!model.prototype[pointCut]) {","      return;","    }","    if (!model.prototype[pointCut].$originalFunction) {","      model.prototype[newName] = model.prototype[pointCut];","    }","    model.prototype[pointCut] = (function(_newName) {","      return function wrappedPointCut() {","        var Promise = PromiseProvider.get();","","        var _this = this;","        var args = [].slice.call(arguments);","        var lastArg = args.pop();","        var fn;","        var originalError = new Error();","        var $results;","        if (lastArg && typeof lastArg !== 'function') {","          args.push(lastArg);","        } else {","          fn = lastArg;","        }","","        var promise = new Promise.ES6(function(resolve, reject) {","          args.push(function(error) {","            if (error) {","              // gh-2633: since VersionError is very generic, take the","              // stack trace of the original save() function call rather","              // than the async trace","              if (error instanceof VersionError) {","                error.stack = originalError.stack;","              }","              _this.$__handleReject(error);","              reject(error);","              return;","            }","","            // There may be multiple results and promise libs other than","            // mpromise don't support passing multiple values to `resolve()`","            $results = Array.prototype.slice.call(arguments, 1);","            resolve.apply(promise, $results);","          });","","          _this[_newName].apply(_this, args);","        });","        if (fn) {","          if (this.constructor.$wrapCallback) {","            fn = this.constructor.$wrapCallback(fn);","          }","          return promise.then(","            function() {","              process.nextTick(function() {","                fn.apply(null, [null].concat($results));","              });","            },","            function(error) {","              process.nextTick(function() {","                fn(error);","              });","            });","        }","        return promise;","      };","    })(newName);","    model.prototype[pointCut].$originalFunction = newName;","","    toWrapEl = toWrap[pointCut];","    var _len = toWrapEl.pre.length;","    for (j = 0; j < _len; ++j) {","      args = toWrapEl.pre[j];","      args[0] = newName;","      model.prototype.$pre.apply(model.prototype, args);","    }","","    _len = toWrapEl.post.length;","    for (j = 0; j < _len; ++j) {","      args = toWrapEl.post[j];","      args[0] = newName;","      model.prototype.$post.apply(model.prototype, args);","    }","  }","}",""],"l":{"3":1,"4":1,"6":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"45":0,"47":0,"52":0,"53":0,"54":0,"56":0,"59":0,"60":0,"61":0,"62":0,"65":0,"66":0,"67":0,"70":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"81":0,"82":0,"83":0,"86":0,"89":0,"90":0,"91":0,"92":0,"94":0,"95":0,"96":0,"98":0,"99":0,"101":0,"102":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"114":0,"117":0,"118":0,"119":0,"123":0,"124":0,"126":0,"127":0,"128":0,"133":0,"134":0,"137":0,"139":0,"140":0,"141":0,"143":0,"145":0,"146":0,"150":0,"151":0,"155":0,"158":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":0,"169":0,"170":0,"171":0,"172":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/discriminator.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/discriminator.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"discriminator","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":61}}},"2":{"name":"merge","line":37,"loc":{"start":{"line":37,"column":2},"end":{"line":37,"column":37}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":11},"end":{"line":43,"column":29}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":5,"column":0},"end":{"line":10,"column":2}},"3":{"start":{"line":16,"column":0},"end":{"line":106,"column":2}},"4":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":18,"column":4},"end":{"line":18,"column":66}},"6":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":37}},"8":{"start":{"line":25,"column":2},"end":{"line":29,"column":3}},"9":{"start":{"line":27,"column":4},"end":{"line":28,"column":59}},"10":{"start":{"line":31,"column":2},"end":{"line":31,"column":50}},"11":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"12":{"start":{"line":33,"column":4},"end":{"line":34,"column":55}},"13":{"start":{"line":37,"column":2},"end":{"line":88,"column":3}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":62}},"15":{"start":{"line":40,"column":4},"end":{"line":40,"column":17}},"16":{"start":{"line":41,"column":4},"end":{"line":49,"column":6}},"17":{"start":{"line":44,"column":8},"end":{"line":46,"column":9}},"18":{"start":{"line":45,"column":10},"end":{"line":45,"column":22}},"19":{"start":{"line":47,"column":8},"end":{"line":47,"column":70}},"20":{"start":{"line":50,"column":4},"end":{"line":50,"column":46}},"21":{"start":{"line":51,"column":4},"end":{"line":51,"column":20}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":73}},"23":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"24":{"start":{"line":55,"column":6},"end":{"line":55,"column":64}},"25":{"start":{"line":58,"column":4},"end":{"line":58,"column":39}},"26":{"start":{"line":59,"column":4},"end":{"line":59,"column":43}},"27":{"start":{"line":60,"column":4},"end":{"line":60,"column":33}},"28":{"start":{"line":61,"column":4},"end":{"line":61,"column":31}},"29":{"start":{"line":63,"column":4},"end":{"line":63,"column":43}},"30":{"start":{"line":64,"column":4},"end":{"line":64,"column":74}},"31":{"start":{"line":66,"column":4},"end":{"line":76,"column":5}},"32":{"start":{"line":67,"column":6},"end":{"line":67,"column":25}},"33":{"start":{"line":68,"column":6},"end":{"line":75,"column":7}},"34":{"start":{"line":69,"column":8},"end":{"line":74,"column":9}},"35":{"start":{"line":70,"column":10},"end":{"line":73,"column":19}},"36":{"start":{"line":78,"column":4},"end":{"line":78,"column":53}},"37":{"start":{"line":79,"column":4},"end":{"line":79,"column":47}},"38":{"start":{"line":79,"column":16},"end":{"line":79,"column":47}},"39":{"start":{"line":80,"column":4},"end":{"line":80,"column":53}},"40":{"start":{"line":80,"column":18},"end":{"line":80,"column":53}},"41":{"start":{"line":81,"column":4},"end":{"line":83,"column":5}},"42":{"start":{"line":82,"column":6},"end":{"line":82,"column":31}},"43":{"start":{"line":84,"column":4},"end":{"line":84,"column":27}},"44":{"start":{"line":86,"column":4},"end":{"line":86,"column":109}},"45":{"start":{"line":87,"column":4},"end":{"line":87,"column":38}},"46":{"start":{"line":91,"column":2},"end":{"line":91,"column":30}},"47":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"48":{"start":{"line":94,"column":4},"end":{"line":94,"column":30}},"49":{"start":{"line":97,"column":2},"end":{"line":99,"column":3}},"50":{"start":{"line":98,"column":4},"end":{"line":98,"column":78}},"51":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"52":{"start":{"line":102,"column":4},"end":{"line":102,"column":77}},"53":{"start":{"line":105,"column":2},"end":{"line":105,"column":16}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":14}},{"start":{"line":17,"column":18},"end":{"line":17,"column":41}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":16}},{"start":{"line":21,"column":20},"end":{"line":21,"column":67}}]},"5":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":39}},{"start":{"line":26,"column":6},"end":{"line":26,"column":47}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":32,"column":2}},{"start":{"line":32,"column":2},"end":{"line":32,"column":2}}]},"8":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"9":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"10":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":6}},{"start":{"line":68,"column":6},"end":{"line":68,"column":6}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":8}},{"start":{"line":69,"column":8},"end":{"line":69,"column":8}}]},"12":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"14":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"15":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"16":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"17":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]}},"code":["'use strict';","","var utils = require('../../utils');","","var CUSTOMIZABLE_DISCRIMINATOR_OPTIONS = {","  toJSON: true,","  toObject: true,","  _id: true,","  id: true","};","","/*!"," * ignore"," */","","module.exports = function discriminator(model, name, schema) {","  if (!(schema && schema.instanceOfSchema)) {","    throw new Error('You must pass a valid discriminator Schema');","  }","","  if (model.base && model.base.options.applyPluginsToDiscriminators) {","    model.base._applyPlugins(schema);","  }","","  if (model.schema.discriminatorMapping &&","      !model.schema.discriminatorMapping.isRoot) {","    throw new Error('Discriminator \"' + name +","        '\" can only be a discriminator of the root model');","  }","","  var key = model.schema.options.discriminatorKey;","  if (schema.path(key)) {","    throw new Error('Discriminator \"' + name +","        '\" cannot have field with name \"' + key + '\"');","  }","","  function merge(schema, baseSchema) {","    utils.merge(schema, baseSchema, { retainKeyOrder: true });","","    var obj = {};","    obj[key] = {","      default: name,","      set: function(newName) {","        if (newName === name) {","          return name;","        }","        throw new Error('Can\\'t set discriminator key \"' + key + '\"');","      }","    };","    obj[key][schema.options.typeKey] = String;","    schema.add(obj);","    schema.discriminatorMapping = {key: key, value: name, isRoot: false};","","    if (baseSchema.options.collection) {","      schema.options.collection = baseSchema.options.collection;","    }","","    var toJSON = schema.options.toJSON;","    var toObject = schema.options.toObject;","    var _id = schema.options._id;","    var id = schema.options.id;","","    var keys = Object.keys(schema.options);","    schema.options.discriminatorKey = baseSchema.options.discriminatorKey;","","    for (var i = 0; i < keys.length; ++i) {","      var _key = keys[i];","      if (!CUSTOMIZABLE_DISCRIMINATOR_OPTIONS[_key]) {","        if (!utils.deepEqual(schema.options[_key], baseSchema.options[_key])) {","          throw new Error('Can\\'t customize discriminator option ' + _key +","              ' (can only modify ' +","              Object.keys(CUSTOMIZABLE_DISCRIMINATOR_OPTIONS).join(', ') +","              ')');","        }","      }","    }","","    schema.options = utils.clone(baseSchema.options);","    if (toJSON) schema.options.toJSON = toJSON;","    if (toObject) schema.options.toObject = toObject;","    if (typeof _id !== 'undefined') {","      schema.options._id = _id;","    }","    schema.options.id = id;","","    schema.callQueue = baseSchema.callQueue.concat(schema.callQueue.slice(schema._defaultMiddleware.length));","    schema._requiredpaths = undefined; // reset just in case Schema#requiredPaths() was called on either schema","  }","","  // merges base schema into new discriminator schema and sets new type field.","  merge(schema, model.schema);","","  if (!model.discriminators) {","    model.discriminators = {};","  }","","  if (!model.schema.discriminatorMapping) {","    model.schema.discriminatorMapping = {key: key, value: null, isRoot: true};","  }","","  if (model.discriminators[name]) {","    throw new Error('Discriminator with name \"' + name + '\" already exists');","  }","","  return schema;","};",""],"l":{"3":1,"5":1,"16":1,"17":0,"18":0,"21":0,"22":0,"25":0,"27":0,"31":0,"32":0,"33":0,"37":1,"38":0,"40":0,"41":0,"44":0,"45":0,"47":0,"50":0,"51":0,"52":0,"54":0,"55":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0,"67":0,"68":0,"69":0,"70":0,"78":0,"79":0,"80":0,"81":0,"82":0,"84":0,"86":0,"87":0,"91":0,"93":0,"94":0,"97":0,"98":0,"101":0,"102":0,"105":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/embedded.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/embedded.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":0,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"Embedded","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}}},"2":{"name":"SingleNested","line":28,"loc":{"start":{"line":28,"column":18},"end":{"line":28,"column":61}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":24},"end":{"line":33,"column":35}}},"4":{"name":"(anonymous_4)","line":38,"loc":{"start":{"line":38,"column":25},"end":{"line":38,"column":39}}},"5":{"name":"(anonymous_5)","line":51,"loc":{"start":{"line":51,"column":31},"end":{"line":51,"column":42}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":53},"end":{"line":95,"column":67}}},"7":{"name":"(anonymous_7)","line":124,"loc":{"start":{"line":124,"column":26},"end":{"line":124,"column":51}}},"8":{"name":"(anonymous_8)","line":145,"loc":{"start":{"line":145,"column":34},"end":{"line":145,"column":62}}},"9":{"name":"(anonymous_9)","line":168,"loc":{"start":{"line":168,"column":32},"end":{"line":168,"column":59}}},"10":{"name":"(anonymous_10)","line":170,"loc":{"start":{"line":170,"column":52},"end":{"line":170,"column":68}}},"11":{"name":"(anonymous_11)","line":190,"loc":{"start":{"line":190,"column":36},"end":{"line":190,"column":59}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":50}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":42}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":50}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":57}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":63}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":51}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}},"9":{"start":{"line":27,"column":0},"end":{"line":82,"column":1}},"10":{"start":{"line":28,"column":2},"end":{"line":44,"column":4}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":21}},"12":{"start":{"line":30,"column":4},"end":{"line":30,"column":39}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":26}},"14":{"start":{"line":32,"column":4},"end":{"line":43,"column":5}},"15":{"start":{"line":33,"column":6},"end":{"line":36,"column":9}},"16":{"start":{"line":34,"column":8},"end":{"line":34,"column":34}},"17":{"start":{"line":35,"column":8},"end":{"line":35,"column":46}},"18":{"start":{"line":38,"column":6},"end":{"line":42,"column":9}},"19":{"start":{"line":39,"column":8},"end":{"line":39,"column":26}},"20":{"start":{"line":40,"column":8},"end":{"line":40,"column":33}},"21":{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},"22":{"start":{"line":45,"column":2},"end":{"line":45,"column":61}},"23":{"start":{"line":46,"column":2},"end":{"line":46,"column":43}},"24":{"start":{"line":47,"column":2},"end":{"line":47,"column":46}},"25":{"start":{"line":48,"column":2},"end":{"line":48,"column":28}},"26":{"start":{"line":49,"column":2},"end":{"line":49,"column":35}},"27":{"start":{"line":50,"column":2},"end":{"line":50,"column":39}},"28":{"start":{"line":51,"column":2},"end":{"line":60,"column":4}},"29":{"start":{"line":52,"column":4},"end":{"line":59,"column":7}},"30":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"31":{"start":{"line":64,"column":4},"end":{"line":64,"column":47}},"32":{"start":{"line":68,"column":2},"end":{"line":70,"column":3}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":37}},"34":{"start":{"line":72,"column":2},"end":{"line":74,"column":3}},"35":{"start":{"line":73,"column":4},"end":{"line":73,"column":45}},"36":{"start":{"line":76,"column":2},"end":{"line":76,"column":32}},"37":{"start":{"line":78,"column":2},"end":{"line":78,"column":26}},"38":{"start":{"line":79,"column":2},"end":{"line":79,"column":23}},"39":{"start":{"line":80,"column":2},"end":{"line":80,"column":30}},"40":{"start":{"line":81,"column":2},"end":{"line":81,"column":51}},"41":{"start":{"line":84,"column":0},"end":{"line":84,"column":57}},"42":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"43":{"start":{"line":96,"column":2},"end":{"line":96,"column":57}},"44":{"start":{"line":103,"column":0},"end":{"line":104,"column":75}},"45":{"start":{"line":106,"column":0},"end":{"line":107,"column":76}},"46":{"start":{"line":109,"column":0},"end":{"line":110,"column":32}},"47":{"start":{"line":112,"column":0},"end":{"line":112,"column":68}},"48":{"start":{"line":113,"column":0},"end":{"line":113,"column":68}},"49":{"start":{"line":115,"column":0},"end":{"line":115,"column":58}},"50":{"start":{"line":124,"column":0},"end":{"line":135,"column":2}},"51":{"start":{"line":125,"column":2},"end":{"line":127,"column":3}},"52":{"start":{"line":126,"column":4},"end":{"line":126,"column":15}},"53":{"start":{"line":128,"column":2},"end":{"line":128,"column":77}},"54":{"start":{"line":129,"column":2},"end":{"line":133,"column":3}},"55":{"start":{"line":130,"column":4},"end":{"line":130,"column":21}},"56":{"start":{"line":132,"column":4},"end":{"line":132,"column":37}},"57":{"start":{"line":134,"column":2},"end":{"line":134,"column":16}},"58":{"start":{"line":145,"column":0},"end":{"line":160,"column":2}},"59":{"start":{"line":146,"column":2},"end":{"line":146,"column":14}},"60":{"start":{"line":147,"column":2},"end":{"line":153,"column":3}},"61":{"start":{"line":148,"column":4},"end":{"line":148,"column":54}},"62":{"start":{"line":149,"column":4},"end":{"line":151,"column":5}},"63":{"start":{"line":150,"column":6},"end":{"line":150,"column":52}},"64":{"start":{"line":152,"column":4},"end":{"line":152,"column":35}},"65":{"start":{"line":154,"column":2},"end":{"line":154,"column":21}},"66":{"start":{"line":155,"column":2},"end":{"line":157,"column":3}},"67":{"start":{"line":156,"column":4},"end":{"line":156,"column":15}},"68":{"start":{"line":159,"column":2},"end":{"line":159,"column":30}},"69":{"start":{"line":168,"column":0},"end":{"line":182,"column":2}},"70":{"start":{"line":169,"column":2},"end":{"line":169,"column":32}},"71":{"start":{"line":170,"column":2},"end":{"line":181,"column":12}},"72":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"73":{"start":{"line":172,"column":6},"end":{"line":172,"column":23}},"74":{"start":{"line":174,"column":4},"end":{"line":176,"column":5}},"75":{"start":{"line":175,"column":6},"end":{"line":175,"column":22}},"76":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"77":{"start":{"line":178,"column":6},"end":{"line":178,"column":37}},"78":{"start":{"line":180,"column":4},"end":{"line":180,"column":44}},"79":{"start":{"line":190,"column":0},"end":{"line":199,"column":2}},"80":{"start":{"line":191,"column":2},"end":{"line":191,"column":85}},"81":{"start":{"line":192,"column":2},"end":{"line":194,"column":3}},"82":{"start":{"line":193,"column":4},"end":{"line":193,"column":27}},"83":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"84":{"start":{"line":196,"column":4},"end":{"line":196,"column":11}},"85":{"start":{"line":198,"column":2},"end":{"line":198,"column":30}}},"branchMap":{"1":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"2":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"3":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":9}},{"start":{"line":125,"column":13},"end":{"line":125,"column":32}}]},"4":{"line":128,"type":"cond-expr","locations":[{"start":{"line":128,"column":45},"end":{"line":128,"column":61}},{"start":{"line":128,"column":64},"end":{"line":128,"column":70}}]},"5":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"6":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":4},"end":{"line":149,"column":4}},{"start":{"line":149,"column":4},"end":{"line":149,"column":4}}]},"8":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"9":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"10":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"11":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":4},"end":{"line":177,"column":4}},{"start":{"line":177,"column":4},"end":{"line":177,"column":4}}]},"12":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"13":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]}},"code":["'use strict';","","/*!"," * Module dependencies."," */","","var $exists = require('./operators/exists');","var EventEmitter = require('events').EventEmitter;","var SchemaType = require('../schematype');","var Subdocument = require('../types/subdocument');","var applyHooks = require('../services/model/applyHooks');","var castToNumber = require('./operators/helpers').castToNumber;","var geospatial = require('./operators/geospatial');","","module.exports = Embedded;","","/**"," * Sub-schema schematype constructor"," *"," * @param {Schema} schema"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function Embedded(schema, path, options) {","  var _embedded = function SingleNested(value, path, parent) {","    var _this = this;","    Subdocument.apply(this, arguments);","    this.$parent = parent;","    if (parent) {","      parent.on('save', function() {","        _this.emit('save', _this);","        _this.constructor.emit('save', _this);","      });","","      parent.on('isNew', function(val) {","        _this.isNew = val;","        _this.emit('isNew', val);","        _this.constructor.emit('isNew', val);","      });","    }","  };","  _embedded.prototype = Object.create(Subdocument.prototype);","  _embedded.prototype.$__setSchema(schema);","  _embedded.prototype.constructor = _embedded;","  _embedded.schema = schema;","  _embedded.$isSingleNested = true;","  _embedded.prototype.$basePath = path;","  _embedded.prototype.toBSON = function() {","    return this.toObject({","      transform: false,","      retainKeyOrder: schema.options.retainKeyOrder,","      virtuals: false,","      _skipDepopulateTopLevel: true,","      depopulate: true,","      flattenDecimals: false","    });","  };","","  // apply methods","  for (var i in schema.methods) {","    _embedded.prototype[i] = schema.methods[i];","  }","","  // apply statics","  for (i in schema.statics) {","    _embedded[i] = schema.statics[i];","  }","","  for (i in EventEmitter.prototype) {","    _embedded[i] = EventEmitter.prototype[i];","  }","","  applyHooks(_embedded, schema);","","  this.caster = _embedded;","  this.schema = schema;","  this.$isSingleNested = true;","  SchemaType.call(this, path, options, 'Embedded');","}","","Embedded.prototype = Object.create(SchemaType.prototype);","","/**"," * Special case for when users use a common location schema to represent"," * locations for use with $geoWithin."," * https://docs.mongodb.org/manual/reference/operator/query/geoWithin/"," *"," * @param {Object} val"," * @api private"," */","","Embedded.prototype.$conditionalHandlers.$geoWithin = function(val) {","  return { $geometry: this.castForQuery(val.$geometry) };","};","","/*!"," * ignore"," */","","Embedded.prototype.$conditionalHandlers.$near =","Embedded.prototype.$conditionalHandlers.$nearSphere = geospatial.cast$near;","","Embedded.prototype.$conditionalHandlers.$within =","Embedded.prototype.$conditionalHandlers.$geoWithin = geospatial.cast$within;","","Embedded.prototype.$conditionalHandlers.$geoIntersects =","  geospatial.cast$geoIntersects;","","Embedded.prototype.$conditionalHandlers.$minDistance = castToNumber;","Embedded.prototype.$conditionalHandlers.$maxDistance = castToNumber;","","Embedded.prototype.$conditionalHandlers.$exists = $exists;","","/**"," * Casts contents"," *"," * @param {Object} value"," * @api private"," */","","Embedded.prototype.cast = function(val, doc, init) {","  if (val && val.$isSingleNested) {","    return val;","  }","  var subdoc = new this.caster(void 0, doc ? doc.$__.selected : void 0, doc);","  if (init) {","    subdoc.init(val);","  } else {","    subdoc.set(val, undefined, true);","  }","  return subdoc;","};","","/**"," * Casts contents for query"," *"," * @param {string} [$conditional] optional query operator (like `$eq` or `$in`)"," * @param {any} value"," * @api private"," */","","Embedded.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional);","    }","    return handler.call(this, val);","  }","  val = $conditional;","  if (val == null) {","    return val;","  }","","  return new this.caster(val);","};","","/**"," * Async validation on this single nested doc."," *"," * @api private"," */","","Embedded.prototype.doValidate = function(value, fn, scope) {","  var Constructor = this.caster;","  SchemaType.prototype.doValidate.call(this, value, function(error) {","    if (error) {","      return fn(error);","    }","    if (!value) {","      return fn(null);","    }","    if (!(value instanceof Constructor)) {","      value = new Constructor(value);","    }","    value.validate(fn, {__noPromise: true});","  }, scope);","};","","/**"," * Synchronously validate this single nested doc"," *"," * @api private"," */","","Embedded.prototype.doValidateSync = function(value, scope) {","  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, value, scope);","  if (schemaTypeError) {","    return schemaTypeError;","  }","  if (!value) {","    return;","  }","  return value.validateSync();","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"41":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"63":0,"64":0,"68":0,"69":0,"72":0,"73":0,"76":0,"78":0,"79":0,"80":0,"81":0,"84":1,"95":1,"96":0,"103":1,"106":1,"109":1,"112":1,"113":1,"115":1,"124":1,"125":0,"126":0,"128":0,"129":0,"130":0,"132":0,"134":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"152":0,"154":0,"155":0,"156":0,"159":0,"168":1,"169":0,"170":0,"171":0,"172":0,"174":0,"175":0,"177":0,"178":0,"180":0,"190":1,"191":0,"192":0,"193":0,"195":0,"196":0,"198":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/decimal128.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/schema/decimal128.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"Decimal128","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"2":{"name":"checkRequired","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":72}}},"3":{"name":"(anonymous_3)","line":65,"loc":{"start":{"line":65,"column":28},"end":{"line":65,"column":55}}},"4":{"name":"handleSingle","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":27}}},"5":{"name":"(anonymous_5)","line":150,"loc":{"start":{"line":150,"column":36},"end":{"line":150,"column":64}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":42}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":37}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":52}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":32}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":13}},"6":{"start":{"line":22,"column":0},"end":{"line":24,"column":1}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":52}},"8":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":59}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":46}},"11":{"start":{"line":49,"column":0},"end":{"line":54,"column":2}},"12":{"start":{"line":50,"column":2},"end":{"line":52,"column":3}},"13":{"start":{"line":51,"column":4},"end":{"line":51,"column":19}},"14":{"start":{"line":53,"column":2},"end":{"line":53,"column":41}},"15":{"start":{"line":65,"column":0},"end":{"line":124,"column":2}},"16":{"start":{"line":66,"column":2},"end":{"line":105,"column":3}},"17":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"18":{"start":{"line":70,"column":6},"end":{"line":70,"column":19}},"19":{"start":{"line":74,"column":4},"end":{"line":74,"column":54}},"20":{"start":{"line":76,"column":4},"end":{"line":79,"column":5}},"21":{"start":{"line":77,"column":6},"end":{"line":77,"column":36}},"22":{"start":{"line":78,"column":6},"end":{"line":78,"column":19}},"23":{"start":{"line":82,"column":4},"end":{"line":86,"column":5}},"24":{"start":{"line":83,"column":6},"end":{"line":83,"column":19}},"25":{"start":{"line":84,"column":11},"end":{"line":86,"column":5}},"26":{"start":{"line":85,"column":6},"end":{"line":85,"column":58}},"27":{"start":{"line":91,"column":4},"end":{"line":91,"column":42}},"28":{"start":{"line":92,"column":4},"end":{"line":92,"column":62}},"29":{"start":{"line":93,"column":4},"end":{"line":93,"column":42}},"30":{"start":{"line":94,"column":4},"end":{"line":94,"column":20}},"31":{"start":{"line":95,"column":4},"end":{"line":102,"column":5}},"32":{"start":{"line":100,"column":6},"end":{"line":100,"column":41}},"33":{"start":{"line":101,"column":6},"end":{"line":101,"column":34}},"34":{"start":{"line":104,"column":4},"end":{"line":104,"column":15}},"35":{"start":{"line":107,"column":2},"end":{"line":109,"column":3}},"36":{"start":{"line":108,"column":4},"end":{"line":108,"column":17}},"37":{"start":{"line":111,"column":2},"end":{"line":113,"column":3}},"38":{"start":{"line":112,"column":4},"end":{"line":112,"column":17}},"39":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"40":{"start":{"line":116,"column":4},"end":{"line":116,"column":44}},"41":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"42":{"start":{"line":120,"column":4},"end":{"line":120,"column":37}},"43":{"start":{"line":123,"column":2},"end":{"line":123,"column":54}},"44":{"start":{"line":130,"column":0},"end":{"line":132,"column":1}},"45":{"start":{"line":131,"column":2},"end":{"line":131,"column":24}},"46":{"start":{"line":134,"column":0},"end":{"line":140,"column":7}},"47":{"start":{"line":150,"column":0},"end":{"line":160,"column":2}},"48":{"start":{"line":151,"column":2},"end":{"line":151,"column":14}},"49":{"start":{"line":152,"column":2},"end":{"line":158,"column":3}},"50":{"start":{"line":153,"column":4},"end":{"line":153,"column":54}},"51":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"52":{"start":{"line":155,"column":6},"end":{"line":155,"column":72}},"53":{"start":{"line":157,"column":4},"end":{"line":157,"column":35}},"54":{"start":{"line":159,"column":2},"end":{"line":159,"column":33}},"55":{"start":{"line":166,"column":0},"end":{"line":166,"column":28}}},"branchMap":{"1":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"4":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":22}},{"start":{"line":69,"column":26},"end":{"line":69,"column":45}}]},"5":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":4},"end":{"line":74,"column":12}},{"start":{"line":74,"column":17},"end":{"line":74,"column":52}}]},"6":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":11},"end":{"line":84,"column":11}},{"start":{"line":84,"column":11},"end":{"line":84,"column":11}}]},"9":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":15},"end":{"line":84,"column":37}},{"start":{"line":84,"column":41},"end":{"line":84,"column":63}}]},"10":{"line":92,"type":"cond-expr","locations":[{"start":{"line":92,"column":36},"end":{"line":92,"column":55}},{"start":{"line":92,"column":58},"end":{"line":92,"column":61}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":8},"end":{"line":95,"column":26}},{"start":{"line":96,"column":8},"end":{"line":96,"column":32}},{"start":{"line":97,"column":8},"end":{"line":97,"column":40}},{"start":{"line":98,"column":8},"end":{"line":98,"column":48}},{"start":{"line":99,"column":8},"end":{"line":99,"column":53}}]},"13":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"14":{"line":107,"type":"binary-expr","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":20}},{"start":{"line":107,"column":24},"end":{"line":107,"column":43}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"16":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"17":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"18":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":2},"end":{"line":152,"column":2}},{"start":{"line":152,"column":2},"end":{"line":152,"column":2}}]},"19":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":154,"column":4}},{"start":{"line":154,"column":4},"end":{"line":154,"column":4}}]}},"code":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var SchemaType = require('../schematype');","var CastError = SchemaType.CastError;","var Decimal128Type = require('../types/decimal128');","var utils = require('../utils');","var Document;","","/**"," * Decimal128 SchemaType constructor."," *"," * @param {String} key"," * @param {Object} options"," * @inherits SchemaType"," * @api public"," */","","function Decimal128(key, options) {","  SchemaType.call(this, key, options, 'Decimal128');","}","","/**"," * This schema type's name, to defend against minifiers that mangle"," * function names."," *"," * @api public"," */","Decimal128.schemaName = 'Decimal128';","","/*!"," * Inherits from SchemaType."," */","Decimal128.prototype = Object.create(SchemaType.prototype);","Decimal128.prototype.constructor = Decimal128;","","/**"," * Check if the given value satisfies a required validator."," *"," * @param {Any} value"," * @param {Document} doc"," * @return {Boolean}"," * @api public"," */","","Decimal128.prototype.checkRequired = function checkRequired(value, doc) {","  if (SchemaType._isRef(this, value, doc, true)) {","    return !!value;","  }","  return value instanceof Decimal128Type;","};","","/**"," * Casts to Decimal128"," *"," * @param {Object} value"," * @param {Object} doc"," * @param {Boolean} init whether this is an initialization cast"," * @api private"," */","","Decimal128.prototype.cast = function(value, doc, init) {","  if (SchemaType._isRef(this, value, doc, init)) {","    // wait! we may need to cast this to a document","","    if (value === null || value === undefined) {","      return value;","    }","","    // lazy load","    Document || (Document = require('./../document'));","","    if (value instanceof Document) {","      value.$__.wasPopulated = true;","      return value;","    }","","    // setting a populated path","    if (value instanceof Decimal128Type) {","      return value;","    } else if (Buffer.isBuffer(value) || !utils.isObject(value)) {","      throw new CastError('Decimal128', value, this.path);","    }","","    // Handle the case where user directly sets a populated","    // path to a plain object; cast to the Model used in","    // the population query.","    var path = doc.$__fullPath(this.path);","    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;","    var pop = owner.populated(path, true);","    var ret = value;","    if (!doc.$__.populated ||","        !doc.$__.populated[path] ||","        !doc.$__.populated[path].options ||","        !doc.$__.populated[path].options.options ||","        !doc.$__.populated[path].options.options.lean) {","      ret = new pop.options.model(value);","      ret.$__.wasPopulated = true;","    }","","    return ret;","  }","","  if (value === null || value === undefined) {","    return value;","  }","","  if (value instanceof Decimal128Type) {","    return value;","  }","","  if (typeof value === 'string') {","    return Decimal128Type.fromString(value);","  }","","  if (Buffer.isBuffer(value)) {","    return new Decimal128Type(value);","  }","","  throw new CastError('Decimal128', value, this.path);","};","","/*!"," * ignore"," */","","function handleSingle(val) {","  return this.cast(val);","}","","Decimal128.prototype.$conditionalHandlers =","    utils.options(SchemaType.prototype.$conditionalHandlers, {","      $gt: handleSingle,","      $gte: handleSingle,","      $lt: handleSingle,","      $lte: handleSingle","    });","","/**"," * Casts contents for queries."," *"," * @param {String} $conditional"," * @param {any} [val]"," * @api private"," */","","Decimal128.prototype.castForQuery = function($conditional, val) {","  var handler;","  if (arguments.length === 2) {","    handler = this.$conditionalHandlers[$conditional];","    if (!handler) {","      throw new Error('Can\\'t use ' + $conditional + ' with ObjectId.');","    }","    return handler.call(this, val);","  }","  return this.cast($conditional);","};","","/*!"," * Module exports."," */","","module.exports = Decimal128;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"22":1,"23":0,"32":1,"37":1,"38":1,"49":1,"50":0,"51":0,"53":0,"65":1,"66":0,"69":0,"70":0,"74":0,"76":0,"77":0,"78":0,"82":0,"83":0,"84":0,"85":0,"91":0,"92":0,"93":0,"94":0,"95":0,"100":0,"101":0,"104":0,"107":0,"108":0,"111":0,"112":0,"115":0,"116":0,"119":0,"120":0,"123":0,"130":1,"131":0,"134":1,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"159":0,"166":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/connectionstate.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/connectionstate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":60}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":34}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":28}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":30}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":36}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":34}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":25}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":22}},"10":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}},"11":{"start":{"line":18,"column":0},"end":{"line":18,"column":26}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":25}},"13":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}},"14":{"start":{"line":22,"column":0},"end":{"line":22,"column":25}},"15":{"start":{"line":23,"column":0},"end":{"line":23,"column":22}},"16":{"start":{"line":24,"column":0},"end":{"line":24,"column":23}},"17":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"18":{"start":{"line":26,"column":0},"end":{"line":26,"column":25}},"19":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"branchMap":{},"code":["","/*!"," * Connection states"," */","","var STATES = module.exports = exports = Object.create(null);","","var disconnected = 'disconnected';","var connected = 'connected';","var connecting = 'connecting';","var disconnecting = 'disconnecting';","var unauthorized = 'unauthorized';","var uninitialized = 'uninitialized';","","STATES[0] = disconnected;","STATES[1] = connected;","STATES[2] = connecting;","STATES[3] = disconnecting;","STATES[4] = unauthorized;","STATES[99] = uninitialized;","","STATES[disconnected] = 0;","STATES[connected] = 1;","STATES[connecting] = 2;","STATES[disconnecting] = 3;","STATES[unauthorized] = 4;","STATES[uninitialized] = 99;",""],"l":{"6":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/query.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/query.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":1,"44":1,"45":1,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":1,"89":0,"90":1,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":0,"129":1,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":1,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":1,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":1,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":1,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":1,"303":0,"304":0,"305":0,"306":1,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":1,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":1,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":1,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":1,"352":0,"353":0,"354":0,"355":0,"356":0,"357":1,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":1,"393":0,"394":0,"395":1,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":1,"416":0,"417":1,"418":0,"419":0,"420":0,"421":1,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":1,"502":0,"503":0,"504":0,"505":0,"506":0,"507":1,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":1,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":1,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":1,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":1,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":1,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":1,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":1,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":1,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":1,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":1,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":1,"779":0,"780":1,"781":0,"782":1,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":1,"791":0,"792":0,"793":0,"794":1,"795":0,"796":0,"797":0,"798":1,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":1,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":1,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":1,"841":0,"842":0,"843":1,"844":0,"845":0,"846":0,"847":1,"848":1,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":1,"859":1,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":1,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":1,"904":0,"905":0,"906":0,"907":1,"908":0,"909":0,"910":0,"911":0,"912":1,"913":1,"914":0,"915":0,"916":0,"917":0,"918":0,"919":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0,0],"94":[0,0],"95":[0,0,0],"96":[0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0,0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0,0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0,0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0,0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0],"197":[0,0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0,0],"219":[0,0],"220":[0,0],"221":[0,0,0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0},"fnMap":{"1":{"name":"Query","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":55}}},"2":{"name":"toConstructor","line":164,"loc":{"start":{"line":164,"column":32},"end":{"line":164,"column":57}}},"3":{"name":"(anonymous_3)","line":168,"loc":{"start":{"line":168,"column":20},"end":{"line":168,"column":48}}},"4":{"name":"read","line":833,"loc":{"start":{"line":833,"column":23},"end":{"line":833,"column":49}}},"5":{"name":"(anonymous_5)","line":877,"loc":{"start":{"line":877,"column":29},"end":{"line":877,"column":58}}},"6":{"name":"(anonymous_6)","line":919,"loc":{"start":{"line":919,"column":27},"end":{"line":919,"column":38}}},"7":{"name":"(anonymous_7)","line":936,"loc":{"start":{"line":936,"column":28},"end":{"line":936,"column":39}}},"8":{"name":"(anonymous_8)","line":957,"loc":{"start":{"line":957,"column":33},"end":{"line":957,"column":44}}},"9":{"name":"(anonymous_9)","line":1025,"loc":{"start":{"line":1025,"column":34},"end":{"line":1025,"column":50}}},"10":{"name":"(anonymous_10)","line":1069,"loc":{"start":{"line":1069,"column":23},"end":{"line":1069,"column":35}}},"11":{"name":"(anonymous_11)","line":1083,"loc":{"start":{"line":1083,"column":34},"end":{"line":1083,"column":46}}},"12":{"name":"(anonymous_12)","line":1097,"loc":{"start":{"line":1097,"column":24},"end":{"line":1097,"column":43}}},"13":{"name":"(anonymous_13)","line":1110,"loc":{"start":{"line":1110,"column":11},"end":{"line":1110,"column":31}}},"14":{"name":"(anonymous_14)","line":1127,"loc":{"start":{"line":1127,"column":36},"end":{"line":1127,"column":56}}},"15":{"name":"(anonymous_15)","line":1153,"loc":{"start":{"line":1153,"column":23},"end":{"line":1153,"column":54}}},"16":{"name":"(anonymous_16)","line":1193,"loc":{"start":{"line":1193,"column":24},"end":{"line":1193,"column":41}}},"17":{"name":"completeMany","line":1246,"loc":{"start":{"line":1246,"column":0},"end":{"line":1246,"column":58}}},"18":{"name":"init","line":1253,"loc":{"start":{"line":1253,"column":2},"end":{"line":1253,"column":21}}},"19":{"name":"(anonymous_19)","line":1272,"loc":{"start":{"line":1272,"column":28},"end":{"line":1272,"column":44}}},"20":{"name":"(anonymous_20)","line":1288,"loc":{"start":{"line":1288,"column":27},"end":{"line":1288,"column":46}}},"21":{"name":"(anonymous_21)","line":1301,"loc":{"start":{"line":1301,"column":37},"end":{"line":1301,"column":56}}},"22":{"name":"(anonymous_22)","line":1317,"loc":{"start":{"line":1317,"column":35},"end":{"line":1317,"column":54}}},"23":{"name":"(anonymous_23)","line":1357,"loc":{"start":{"line":1357,"column":26},"end":{"line":1357,"column":78}}},"24":{"name":"(anonymous_24)","line":1419,"loc":{"start":{"line":1419,"column":25},"end":{"line":1419,"column":44}}},"25":{"name":"(anonymous_25)","line":1423,"loc":{"start":{"line":1423,"column":21},"end":{"line":1423,"column":32}}},"26":{"name":"(anonymous_26)","line":1460,"loc":{"start":{"line":1460,"column":24},"end":{"line":1460,"column":55}}},"27":{"name":"(anonymous_27)","line":1502,"loc":{"start":{"line":1502,"column":27},"end":{"line":1502,"column":65}}},"28":{"name":"(anonymous_28)","line":1560,"loc":{"start":{"line":1560,"column":23},"end":{"line":1560,"column":37}}},"29":{"name":"(anonymous_29)","line":1603,"loc":{"start":{"line":1603,"column":25},"end":{"line":1603,"column":50}}},"30":{"name":"(anonymous_30)","line":1639,"loc":{"start":{"line":1639,"column":28},"end":{"line":1639,"column":53}}},"31":{"name":"(anonymous_31)","line":1675,"loc":{"start":{"line":1675,"column":29},"end":{"line":1675,"column":54}}},"32":{"name":"completeOne","line":1705,"loc":{"start":{"line":1705,"column":0},"end":{"line":1705,"column":70}}},"33":{"name":"(anonymous_33)","line":1711,"loc":{"start":{"line":1711,"column":25},"end":{"line":1711,"column":39}}},"34":{"name":"prepareDiscriminatorCriteria","line":1731,"loc":{"start":{"line":1731,"column":0},"end":{"line":1731,"column":45}}},"35":{"name":"(anonymous_35)","line":1791,"loc":{"start":{"line":1791,"column":35},"end":{"line":1791,"column":78}}},"36":{"name":"(anonymous_36)","line":1857,"loc":{"start":{"line":1857,"column":36},"end":{"line":1857,"column":55}}},"37":{"name":"(anonymous_37)","line":1901,"loc":{"start":{"line":1901,"column":35},"end":{"line":1901,"column":75}}},"38":{"name":"(anonymous_38)","line":1943,"loc":{"start":{"line":1943,"column":36},"end":{"line":1943,"column":55}}},"39":{"name":"decorateResult","line":1951,"loc":{"start":{"line":1951,"column":0},"end":{"line":1951,"column":29}}},"40":{"name":"(anonymous_40)","line":1966,"loc":{"start":{"line":1966,"column":33},"end":{"line":1966,"column":58}}},"41":{"name":"(anonymous_41)","line":2043,"loc":{"start":{"line":2043,"column":11},"end":{"line":2043,"column":35}}},"42":{"name":"(anonymous_42)","line":2068,"loc":{"start":{"line":2068,"column":35},"end":{"line":2068,"column":54}}},"43":{"name":"(anonymous_43)","line":2081,"loc":{"start":{"line":2081,"column":20},"end":{"line":2081,"column":36}}},"44":{"name":"(anonymous_44)","line":2085,"loc":{"start":{"line":2085,"column":79},"end":{"line":2085,"column":100}}},"45":{"name":"(anonymous_45)","line":2096,"loc":{"start":{"line":2096,"column":76},"end":{"line":2096,"column":97}}},"46":{"name":"_completeOneLean","line":2108,"loc":{"start":{"line":2108,"column":0},"end":{"line":2108,"column":52}}},"47":{"name":"(anonymous_47)","line":2126,"loc":{"start":{"line":2126,"column":31},"end":{"line":2126,"column":45}}},"48":{"name":"convertSortToArray","line":2142,"loc":{"start":{"line":2142,"column":0},"end":{"line":2142,"column":34}}},"49":{"name":"(anonymous_49)","line":2168,"loc":{"start":{"line":2168,"column":30},"end":{"line":2168,"column":49}}},"50":{"name":"(anonymous_50)","line":2185,"loc":{"start":{"line":2185,"column":20},"end":{"line":2185,"column":34}}},"51":{"name":"(anonymous_51)","line":2195,"loc":{"start":{"line":2195,"column":23},"end":{"line":2195,"column":34}}},"52":{"name":"(anonymous_52)","line":2213,"loc":{"start":{"line":2213,"column":30},"end":{"line":2213,"column":49}}},"53":{"name":"(anonymous_53)","line":2230,"loc":{"start":{"line":2230,"column":20},"end":{"line":2230,"column":34}}},"54":{"name":"(anonymous_54)","line":2240,"loc":{"start":{"line":2240,"column":23},"end":{"line":2240,"column":34}}},"55":{"name":"(anonymous_55)","line":2258,"loc":{"start":{"line":2258,"column":29},"end":{"line":2258,"column":48}}},"56":{"name":"(anonymous_56)","line":2275,"loc":{"start":{"line":2275,"column":20},"end":{"line":2275,"column":34}}},"57":{"name":"(anonymous_57)","line":2285,"loc":{"start":{"line":2285,"column":23},"end":{"line":2285,"column":34}}},"58":{"name":"(anonymous_58)","line":2303,"loc":{"start":{"line":2303,"column":30},"end":{"line":2303,"column":49}}},"59":{"name":"(anonymous_59)","line":2320,"loc":{"start":{"line":2320,"column":20},"end":{"line":2320,"column":34}}},"60":{"name":"(anonymous_60)","line":2330,"loc":{"start":{"line":2330,"column":23},"end":{"line":2330,"column":34}}},"61":{"name":"(anonymous_61)","line":2428,"loc":{"start":{"line":2428,"column":25},"end":{"line":2428,"column":70}}},"62":{"name":"(anonymous_62)","line":2476,"loc":{"start":{"line":2476,"column":29},"end":{"line":2476,"column":74}}},"63":{"name":"(anonymous_63)","line":2523,"loc":{"start":{"line":2523,"column":28},"end":{"line":2523,"column":73}}},"64":{"name":"(anonymous_64)","line":2570,"loc":{"start":{"line":2570,"column":29},"end":{"line":2570,"column":74}}},"65":{"name":"_update","line":2603,"loc":{"start":{"line":2603,"column":0},"end":{"line":2603,"column":64}}},"66":{"name":"(anonymous_66)","line":2611,"loc":{"start":{"line":2611,"column":17},"end":{"line":2611,"column":41}}},"67":{"name":"exec","line":2714,"loc":{"start":{"line":2714,"column":23},"end":{"line":2714,"column":51}}},"68":{"name":"(anonymous_68)","line":2726,"loc":{"start":{"line":2726,"column":32},"end":{"line":2726,"column":58}}},"69":{"name":"(anonymous_69)","line":2732,"loc":{"start":{"line":2732,"column":32},"end":{"line":2732,"column":53}}},"70":{"name":"(anonymous_70)","line":2744,"loc":{"start":{"line":2744,"column":6},"end":{"line":2744,"column":17}}},"71":{"name":"(anonymous_71)","line":2748,"loc":{"start":{"line":2748,"column":6},"end":{"line":2748,"column":22}}},"72":{"name":"(anonymous_72)","line":2751,"loc":{"start":{"line":2751,"column":12},"end":{"line":2751,"column":28}}},"73":{"name":"(anonymous_73)","line":2754,"loc":{"start":{"line":2754,"column":21},"end":{"line":2754,"column":32}}},"74":{"name":"(anonymous_74)","line":2773,"loc":{"start":{"line":2773,"column":23},"end":{"line":2773,"column":49}}},"75":{"name":"(anonymous_75)","line":2787,"loc":{"start":{"line":2787,"column":24},"end":{"line":2787,"column":41}}},"76":{"name":"_castUpdate","line":2799,"loc":{"start":{"line":2799,"column":30},"end":{"line":2799,"column":67}}},"77":{"name":"castQuery","line":2819,"loc":{"start":{"line":2819,"column":0},"end":{"line":2819,"column":26}}},"78":{"name":"castDoc","line":2832,"loc":{"start":{"line":2832,"column":0},"end":{"line":2832,"column":35}}},"79":{"name":"(anonymous_79)","line":2877,"loc":{"start":{"line":2877,"column":27},"end":{"line":2877,"column":38}}},"80":{"name":"(anonymous_80)","line":2915,"loc":{"start":{"line":2915,"column":23},"end":{"line":2915,"column":44}}},"81":{"name":"_castFields","line":2944,"loc":{"start":{"line":2944,"column":30},"end":{"line":2944,"column":59}}},"82":{"name":"applyPaths","line":2992,"loc":{"start":{"line":2992,"column":30},"end":{"line":2992,"column":52}}},"83":{"name":"stream","line":3032,"loc":{"start":{"line":3032,"column":25},"end":{"line":3032,"column":47}}},"84":{"name":"cursor","line":3084,"loc":{"start":{"line":3084,"column":25},"end":{"line":3084,"column":47}}},"85":{"name":"(anonymous_85)","line":3135,"loc":{"start":{"line":3135,"column":27},"end":{"line":3135,"column":47}}},"86":{"name":"(anonymous_86)","line":3266,"loc":{"start":{"line":3266,"column":23},"end":{"line":3266,"column":34}}},"87":{"name":"(anonymous_87)","line":3336,"loc":{"start":{"line":3336,"column":29},"end":{"line":3336,"column":40}}},"88":{"name":"(anonymous_88)","line":3388,"loc":{"start":{"line":3388,"column":22},"end":{"line":3388,"column":39}}},"89":{"name":"(anonymous_89)","line":3458,"loc":{"start":{"line":3458,"column":31},"end":{"line":3458,"column":42}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":43}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":29}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":56}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":51}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":68}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":62}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"13":{"start":{"line":35,"column":0},"end":{"line":97,"column":1}},"14":{"start":{"line":37,"column":2},"end":{"line":39,"column":3}},"15":{"start":{"line":38,"column":4},"end":{"line":38,"column":31}},"16":{"start":{"line":43,"column":2},"end":{"line":49,"column":3}},"17":{"start":{"line":44,"column":4},"end":{"line":44,"column":36}},"18":{"start":{"line":45,"column":4},"end":{"line":48,"column":5}},"19":{"start":{"line":46,"column":6},"end":{"line":46,"column":22}},"20":{"start":{"line":47,"column":6},"end":{"line":47,"column":44}},"21":{"start":{"line":51,"column":2},"end":{"line":53,"column":3}},"22":{"start":{"line":52,"column":4},"end":{"line":52,"column":41}},"23":{"start":{"line":55,"column":2},"end":{"line":58,"column":3}},"24":{"start":{"line":56,"column":4},"end":{"line":56,"column":23}},"25":{"start":{"line":57,"column":4},"end":{"line":57,"column":31}},"26":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"27":{"start":{"line":63,"column":4},"end":{"line":63,"column":16}},"28":{"start":{"line":67,"column":2},"end":{"line":67,"column":54}},"29":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"30":{"start":{"line":70,"column":4},"end":{"line":70,"column":26}},"31":{"start":{"line":73,"column":2},"end":{"line":96,"column":3}},"32":{"start":{"line":74,"column":4},"end":{"line":77,"column":6}},"33":{"start":{"line":78,"column":4},"end":{"line":79,"column":53}},"34":{"start":{"line":80,"column":4},"end":{"line":81,"column":58}},"35":{"start":{"line":82,"column":4},"end":{"line":83,"column":52}},"36":{"start":{"line":84,"column":4},"end":{"line":85,"column":55}},"37":{"start":{"line":86,"column":4},"end":{"line":87,"column":64}},"38":{"start":{"line":88,"column":4},"end":{"line":89,"column":64}},"39":{"start":{"line":90,"column":4},"end":{"line":91,"column":58}},"40":{"start":{"line":92,"column":4},"end":{"line":93,"column":58}},"41":{"start":{"line":94,"column":4},"end":{"line":95,"column":57}},"42":{"start":{"line":103,"column":0},"end":{"line":103,"column":29}},"43":{"start":{"line":104,"column":0},"end":{"line":104,"column":36}},"44":{"start":{"line":105,"column":0},"end":{"line":105,"column":30}},"45":{"start":{"line":122,"column":0},"end":{"line":122,"column":43}},"46":{"start":{"line":164,"column":0},"end":{"line":195,"column":2}},"47":{"start":{"line":165,"column":2},"end":{"line":165,"column":25}},"48":{"start":{"line":166,"column":2},"end":{"line":166,"column":37}},"49":{"start":{"line":168,"column":2},"end":{"line":174,"column":4}},"50":{"start":{"line":169,"column":4},"end":{"line":171,"column":5}},"51":{"start":{"line":170,"column":6},"end":{"line":170,"column":48}},"52":{"start":{"line":172,"column":4},"end":{"line":172,"column":60}},"53":{"start":{"line":173,"column":4},"end":{"line":173,"column":61}},"54":{"start":{"line":176,"column":2},"end":{"line":176,"column":36}},"55":{"start":{"line":179,"column":2},"end":{"line":179,"column":32}},"56":{"start":{"line":181,"column":2},"end":{"line":181,"column":17}},"57":{"start":{"line":183,"column":2},"end":{"line":183,"column":29}},"58":{"start":{"line":185,"column":2},"end":{"line":185,"column":17}},"59":{"start":{"line":186,"column":2},"end":{"line":186,"column":74}},"60":{"start":{"line":187,"column":2},"end":{"line":187,"column":40}},"61":{"start":{"line":188,"column":2},"end":{"line":188,"column":40}},"62":{"start":{"line":189,"column":2},"end":{"line":189,"column":23}},"63":{"start":{"line":190,"column":2},"end":{"line":190,"column":31}},"64":{"start":{"line":191,"column":2},"end":{"line":191,"column":35}},"65":{"start":{"line":192,"column":2},"end":{"line":192,"column":45}},"66":{"start":{"line":194,"column":2},"end":{"line":194,"column":21}},"67":{"start":{"line":833,"column":0},"end":{"line":837,"column":2}},"68":{"start":{"line":835,"column":2},"end":{"line":835,"column":49}},"69":{"start":{"line":836,"column":2},"end":{"line":836,"column":42}},"70":{"start":{"line":877,"column":0},"end":{"line":904,"column":2}},"71":{"start":{"line":879,"column":2},"end":{"line":888,"column":3}},"72":{"start":{"line":881,"column":4},"end":{"line":881,"column":68}},"73":{"start":{"line":882,"column":4},"end":{"line":882,"column":33}},"74":{"start":{"line":884,"column":4},"end":{"line":886,"column":5}},"75":{"start":{"line":885,"column":6},"end":{"line":885,"column":43}},"76":{"start":{"line":887,"column":4},"end":{"line":887,"column":16}},"77":{"start":{"line":890,"column":2},"end":{"line":892,"column":3}},"78":{"start":{"line":891,"column":4},"end":{"line":891,"column":16}},"79":{"start":{"line":894,"column":2},"end":{"line":901,"column":3}},"80":{"start":{"line":895,"column":4},"end":{"line":895,"column":36}},"81":{"start":{"line":896,"column":4},"end":{"line":896,"column":28}},"82":{"start":{"line":897,"column":4},"end":{"line":897,"column":39}},"83":{"start":{"line":898,"column":4},"end":{"line":900,"column":5}},"84":{"start":{"line":899,"column":6},"end":{"line":899,"column":33}},"85":{"start":{"line":903,"column":2},"end":{"line":903,"column":51}},"86":{"start":{"line":919,"column":0},"end":{"line":921,"column":2}},"87":{"start":{"line":920,"column":2},"end":{"line":920,"column":26}},"88":{"start":{"line":936,"column":0},"end":{"line":938,"column":2}},"89":{"start":{"line":937,"column":2},"end":{"line":937,"column":22}},"90":{"start":{"line":957,"column":0},"end":{"line":997,"column":2}},"91":{"start":{"line":958,"column":2},"end":{"line":962,"column":5}},"92":{"start":{"line":963,"column":2},"end":{"line":963,"column":32}},"93":{"start":{"line":964,"column":2},"end":{"line":964,"column":21}},"94":{"start":{"line":965,"column":2},"end":{"line":965,"column":15}},"95":{"start":{"line":967,"column":2},"end":{"line":994,"column":3}},"96":{"start":{"line":968,"column":4},"end":{"line":968,"column":20}},"97":{"start":{"line":970,"column":4},"end":{"line":973,"column":5}},"98":{"start":{"line":971,"column":6},"end":{"line":971,"column":27}},"99":{"start":{"line":972,"column":6},"end":{"line":972,"column":15}},"100":{"start":{"line":975,"column":4},"end":{"line":993,"column":5}},"101":{"start":{"line":977,"column":6},"end":{"line":983,"column":7}},"102":{"start":{"line":978,"column":8},"end":{"line":982,"column":9}},"103":{"start":{"line":979,"column":10},"end":{"line":979,"column":33}},"104":{"start":{"line":981,"column":10},"end":{"line":981,"column":24}},"105":{"start":{"line":984,"column":6},"end":{"line":984,"column":32}},"106":{"start":{"line":985,"column":6},"end":{"line":985,"column":23}},"107":{"start":{"line":986,"column":6},"end":{"line":986,"column":50}},"108":{"start":{"line":986,"column":33},"end":{"line":986,"column":50}},"109":{"start":{"line":987,"column":11},"end":{"line":993,"column":5}},"110":{"start":{"line":988,"column":6},"end":{"line":990,"column":7}},"111":{"start":{"line":989,"column":8},"end":{"line":989,"column":29}},"112":{"start":{"line":992,"column":6},"end":{"line":992,"column":27}},"113":{"start":{"line":996,"column":2},"end":{"line":996,"column":13}},"114":{"start":{"line":1025,"column":0},"end":{"line":1045,"column":2}},"115":{"start":{"line":1026,"column":2},"end":{"line":1026,"column":54}},"116":{"start":{"line":1028,"column":2},"end":{"line":1028,"column":26}},"117":{"start":{"line":1029,"column":2},"end":{"line":1029,"column":32}},"118":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":30}},"119":{"start":{"line":1032,"column":2},"end":{"line":1034,"column":3}},"120":{"start":{"line":1033,"column":4},"end":{"line":1033,"column":19}},"121":{"start":{"line":1036,"column":2},"end":{"line":1038,"column":3}},"122":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":45}},"123":{"start":{"line":1040,"column":2},"end":{"line":1042,"column":3}},"124":{"start":{"line":1041,"column":4},"end":{"line":1041,"column":55}},"125":{"start":{"line":1044,"column":2},"end":{"line":1044,"column":17}},"126":{"start":{"line":1069,"column":0},"end":{"line":1072,"column":2}},"127":{"start":{"line":1070,"column":2},"end":{"line":1070,"column":61}},"128":{"start":{"line":1071,"column":2},"end":{"line":1071,"column":14}},"129":{"start":{"line":1083,"column":0},"end":{"line":1088,"column":2}},"130":{"start":{"line":1084,"column":2},"end":{"line":1086,"column":3}},"131":{"start":{"line":1085,"column":4},"end":{"line":1085,"column":30}},"132":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":31}},"133":{"start":{"line":1097,"column":0},"end":{"line":1136,"column":2}},"134":{"start":{"line":1098,"column":2},"end":{"line":1101,"column":3}},"135":{"start":{"line":1099,"column":4},"end":{"line":1099,"column":30}},"136":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":16}},"137":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":21}},"138":{"start":{"line":1104,"column":2},"end":{"line":1104,"column":48}},"139":{"start":{"line":1106,"column":2},"end":{"line":1106,"column":37}},"140":{"start":{"line":1107,"column":2},"end":{"line":1107,"column":38}},"141":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":19}},"142":{"start":{"line":1110,"column":2},"end":{"line":1133,"column":4}},"143":{"start":{"line":1111,"column":4},"end":{"line":1113,"column":5}},"144":{"start":{"line":1112,"column":6},"end":{"line":1112,"column":27}},"145":{"start":{"line":1115,"column":4},"end":{"line":1117,"column":5}},"146":{"start":{"line":1116,"column":6},"end":{"line":1116,"column":34}},"147":{"start":{"line":1119,"column":4},"end":{"line":1123,"column":5}},"148":{"start":{"line":1120,"column":6},"end":{"line":1122,"column":68}},"149":{"start":{"line":1125,"column":4},"end":{"line":1125,"column":65}},"150":{"start":{"line":1126,"column":4},"end":{"line":1126,"column":27}},"151":{"start":{"line":1127,"column":4},"end":{"line":1132,"column":7}},"152":{"start":{"line":1128,"column":6},"end":{"line":1128,"column":36}},"153":{"start":{"line":1128,"column":15},"end":{"line":1128,"column":36}},"154":{"start":{"line":1129,"column":6},"end":{"line":1131,"column":67}},"155":{"start":{"line":1135,"column":2},"end":{"line":1135,"column":44}},"156":{"start":{"line":1153,"column":0},"end":{"line":1182,"column":2}},"157":{"start":{"line":1154,"column":2},"end":{"line":1157,"column":3}},"158":{"start":{"line":1155,"column":4},"end":{"line":1155,"column":26}},"159":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":20}},"160":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":42}},"161":{"start":{"line":1161,"column":2},"end":{"line":1163,"column":3}},"162":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":27}},"163":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":37}},"164":{"start":{"line":1167,"column":2},"end":{"line":1172,"column":3}},"165":{"start":{"line":1168,"column":4},"end":{"line":1168,"column":26}},"166":{"start":{"line":1169,"column":4},"end":{"line":1169,"column":27}},"167":{"start":{"line":1171,"column":4},"end":{"line":1171,"column":26}},"168":{"start":{"line":1175,"column":2},"end":{"line":1177,"column":3}},"169":{"start":{"line":1176,"column":4},"end":{"line":1176,"column":38}},"170":{"start":{"line":1179,"column":2},"end":{"line":1179,"column":23}},"171":{"start":{"line":1181,"column":2},"end":{"line":1181,"column":14}},"172":{"start":{"line":1193,"column":0},"end":{"line":1233,"column":2}},"173":{"start":{"line":1194,"column":2},"end":{"line":1196,"column":3}},"174":{"start":{"line":1195,"column":4},"end":{"line":1195,"column":16}},"175":{"start":{"line":1198,"column":2},"end":{"line":1198,"column":78}},"176":{"start":{"line":1200,"column":2},"end":{"line":1227,"column":3}},"177":{"start":{"line":1203,"column":4},"end":{"line":1205,"column":5}},"178":{"start":{"line":1204,"column":6},"end":{"line":1204,"column":62}},"179":{"start":{"line":1207,"column":4},"end":{"line":1210,"column":5}},"180":{"start":{"line":1208,"column":6},"end":{"line":1208,"column":42}},"181":{"start":{"line":1209,"column":6},"end":{"line":1209,"column":54}},"182":{"start":{"line":1212,"column":4},"end":{"line":1215,"column":5}},"183":{"start":{"line":1213,"column":6},"end":{"line":1213,"column":42}},"184":{"start":{"line":1214,"column":6},"end":{"line":1214,"column":54}},"185":{"start":{"line":1217,"column":4},"end":{"line":1220,"column":5}},"186":{"start":{"line":1218,"column":6},"end":{"line":1218,"column":42}},"187":{"start":{"line":1219,"column":6},"end":{"line":1219,"column":53}},"188":{"start":{"line":1222,"column":4},"end":{"line":1224,"column":5}},"189":{"start":{"line":1223,"column":6},"end":{"line":1223,"column":40}},"190":{"start":{"line":1226,"column":4},"end":{"line":1226,"column":16}},"191":{"start":{"line":1230,"column":2},"end":{"line":1230,"column":46}},"192":{"start":{"line":1232,"column":2},"end":{"line":1232,"column":14}},"193":{"start":{"line":1246,"column":0},"end":{"line":1261,"column":1}},"194":{"start":{"line":1247,"column":2},"end":{"line":1247,"column":15}},"195":{"start":{"line":1248,"column":2},"end":{"line":1248,"column":26}},"196":{"start":{"line":1249,"column":2},"end":{"line":1249,"column":18}},"197":{"start":{"line":1250,"column":2},"end":{"line":1252,"column":18}},"198":{"start":{"line":1253,"column":2},"end":{"line":1256,"column":3}},"199":{"start":{"line":1254,"column":4},"end":{"line":1254,"column":34}},"200":{"start":{"line":1254,"column":13},"end":{"line":1254,"column":34}},"201":{"start":{"line":1255,"column":4},"end":{"line":1255,"column":35}},"202":{"start":{"line":1257,"column":2},"end":{"line":1260,"column":3}},"203":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":57}},"204":{"start":{"line":1259,"column":4},"end":{"line":1259,"column":37}},"205":{"start":{"line":1272,"column":0},"end":{"line":1278,"column":2}},"206":{"start":{"line":1273,"column":2},"end":{"line":1275,"column":3}},"207":{"start":{"line":1274,"column":4},"end":{"line":1274,"column":22}},"208":{"start":{"line":1276,"column":2},"end":{"line":1276,"column":33}},"209":{"start":{"line":1277,"column":2},"end":{"line":1277,"column":14}},"210":{"start":{"line":1288,"column":0},"end":{"line":1326,"column":2}},"211":{"start":{"line":1289,"column":2},"end":{"line":1291,"column":3}},"212":{"start":{"line":1290,"column":4},"end":{"line":1290,"column":37}},"213":{"start":{"line":1293,"column":2},"end":{"line":1293,"column":21}},"214":{"start":{"line":1294,"column":2},"end":{"line":1294,"column":48}},"215":{"start":{"line":1296,"column":2},"end":{"line":1296,"column":38}},"216":{"start":{"line":1297,"column":2},"end":{"line":1297,"column":41}},"217":{"start":{"line":1298,"column":2},"end":{"line":1298,"column":19}},"218":{"start":{"line":1301,"column":2},"end":{"line":1325,"column":5}},"219":{"start":{"line":1302,"column":4},"end":{"line":1304,"column":5}},"220":{"start":{"line":1303,"column":6},"end":{"line":1303,"column":27}},"221":{"start":{"line":1305,"column":4},"end":{"line":1307,"column":5}},"222":{"start":{"line":1306,"column":6},"end":{"line":1306,"column":34}},"223":{"start":{"line":1309,"column":4},"end":{"line":1313,"column":5}},"224":{"start":{"line":1310,"column":6},"end":{"line":1312,"column":80}},"225":{"start":{"line":1315,"column":4},"end":{"line":1315,"column":65}},"226":{"start":{"line":1316,"column":4},"end":{"line":1316,"column":27}},"227":{"start":{"line":1317,"column":4},"end":{"line":1324,"column":7}},"228":{"start":{"line":1318,"column":6},"end":{"line":1320,"column":7}},"229":{"start":{"line":1319,"column":8},"end":{"line":1319,"column":29}},"230":{"start":{"line":1321,"column":6},"end":{"line":1323,"column":79}},"231":{"start":{"line":1357,"column":0},"end":{"line":1409,"column":2}},"232":{"start":{"line":1358,"column":2},"end":{"line":1370,"column":3}},"233":{"start":{"line":1359,"column":4},"end":{"line":1359,"column":26}},"234":{"start":{"line":1360,"column":4},"end":{"line":1360,"column":22}},"235":{"start":{"line":1361,"column":4},"end":{"line":1361,"column":22}},"236":{"start":{"line":1362,"column":4},"end":{"line":1362,"column":19}},"237":{"start":{"line":1363,"column":9},"end":{"line":1370,"column":3}},"238":{"start":{"line":1364,"column":4},"end":{"line":1364,"column":26}},"239":{"start":{"line":1365,"column":4},"end":{"line":1365,"column":19}},"240":{"start":{"line":1366,"column":4},"end":{"line":1366,"column":22}},"241":{"start":{"line":1367,"column":9},"end":{"line":1370,"column":3}},"242":{"start":{"line":1368,"column":4},"end":{"line":1368,"column":23}},"243":{"start":{"line":1369,"column":4},"end":{"line":1369,"column":19}},"244":{"start":{"line":1373,"column":2},"end":{"line":1373,"column":42}},"245":{"start":{"line":1375,"column":2},"end":{"line":1375,"column":22}},"246":{"start":{"line":1377,"column":2},"end":{"line":1379,"column":3}},"247":{"start":{"line":1378,"column":4},"end":{"line":1378,"column":29}},"248":{"start":{"line":1381,"column":2},"end":{"line":1383,"column":3}},"249":{"start":{"line":1382,"column":4},"end":{"line":1382,"column":28}},"250":{"start":{"line":1385,"column":2},"end":{"line":1390,"column":3}},"251":{"start":{"line":1386,"column":4},"end":{"line":1386,"column":27}},"252":{"start":{"line":1387,"column":9},"end":{"line":1390,"column":3}},"253":{"start":{"line":1388,"column":4},"end":{"line":1389,"column":32}},"254":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":37}},"255":{"start":{"line":1394,"column":2},"end":{"line":1399,"column":3}},"256":{"start":{"line":1395,"column":4},"end":{"line":1395,"column":26}},"257":{"start":{"line":1396,"column":4},"end":{"line":1396,"column":27}},"258":{"start":{"line":1398,"column":4},"end":{"line":1398,"column":26}},"259":{"start":{"line":1401,"column":2},"end":{"line":1404,"column":3}},"260":{"start":{"line":1403,"column":4},"end":{"line":1403,"column":41}},"261":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":26}},"262":{"start":{"line":1408,"column":2},"end":{"line":1408,"column":14}},"263":{"start":{"line":1419,"column":0},"end":{"line":1433,"column":2}},"264":{"start":{"line":1420,"column":2},"end":{"line":1427,"column":3}},"265":{"start":{"line":1421,"column":4},"end":{"line":1421,"column":26}},"266":{"start":{"line":1423,"column":4},"end":{"line":1425,"column":7}},"267":{"start":{"line":1424,"column":6},"end":{"line":1424,"column":20}},"268":{"start":{"line":1426,"column":4},"end":{"line":1426,"column":16}},"269":{"start":{"line":1429,"column":2},"end":{"line":1429,"column":31}},"270":{"start":{"line":1430,"column":2},"end":{"line":1430,"column":39}},"271":{"start":{"line":1432,"column":2},"end":{"line":1432,"column":63}},"272":{"start":{"line":1460,"column":0},"end":{"line":1478,"column":2}},"273":{"start":{"line":1461,"column":2},"end":{"line":1464,"column":3}},"274":{"start":{"line":1462,"column":4},"end":{"line":1462,"column":26}},"275":{"start":{"line":1463,"column":4},"end":{"line":1463,"column":27}},"276":{"start":{"line":1466,"column":2},"end":{"line":1468,"column":3}},"277":{"start":{"line":1467,"column":4},"end":{"line":1467,"column":27}},"278":{"start":{"line":1470,"column":2},"end":{"line":1470,"column":20}},"279":{"start":{"line":1471,"column":2},"end":{"line":1473,"column":3}},"280":{"start":{"line":1472,"column":4},"end":{"line":1472,"column":16}},"281":{"start":{"line":1475,"column":2},"end":{"line":1475,"column":24}},"282":{"start":{"line":1477,"column":2},"end":{"line":1477,"column":14}},"283":{"start":{"line":1502,"column":0},"end":{"line":1531,"column":2}},"284":{"start":{"line":1503,"column":2},"end":{"line":1512,"column":3}},"285":{"start":{"line":1504,"column":4},"end":{"line":1511,"column":5}},"286":{"start":{"line":1505,"column":6},"end":{"line":1505,"column":28}},"287":{"start":{"line":1506,"column":6},"end":{"line":1506,"column":29}},"288":{"start":{"line":1507,"column":11},"end":{"line":1511,"column":5}},"289":{"start":{"line":1508,"column":6},"end":{"line":1508,"column":23}},"290":{"start":{"line":1509,"column":6},"end":{"line":1509,"column":24}},"291":{"start":{"line":1510,"column":6},"end":{"line":1510,"column":29}},"292":{"start":{"line":1514,"column":2},"end":{"line":1514,"column":42}},"293":{"start":{"line":1516,"column":2},"end":{"line":1518,"column":3}},"294":{"start":{"line":1517,"column":4},"end":{"line":1517,"column":27}},"295":{"start":{"line":1520,"column":2},"end":{"line":1528,"column":3}},"296":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":26}},"297":{"start":{"line":1523,"column":4},"end":{"line":1525,"column":5}},"298":{"start":{"line":1524,"column":6},"end":{"line":1524,"column":16}},"299":{"start":{"line":1526,"column":4},"end":{"line":1526,"column":18}},"300":{"start":{"line":1527,"column":4},"end":{"line":1527,"column":16}},"301":{"start":{"line":1530,"column":2},"end":{"line":1530,"column":61}},"302":{"start":{"line":1560,"column":0},"end":{"line":1566,"column":2}},"303":{"start":{"line":1561,"column":2},"end":{"line":1563,"column":3}},"304":{"start":{"line":1562,"column":4},"end":{"line":1562,"column":52}},"305":{"start":{"line":1565,"column":2},"end":{"line":1565,"column":41}},"306":{"start":{"line":1603,"column":0},"end":{"line":1619,"column":2}},"307":{"start":{"line":1604,"column":2},"end":{"line":1607,"column":3}},"308":{"start":{"line":1605,"column":4},"end":{"line":1605,"column":20}},"309":{"start":{"line":1606,"column":4},"end":{"line":1606,"column":16}},"310":{"start":{"line":1609,"column":2},"end":{"line":1609,"column":42}},"311":{"start":{"line":1611,"column":2},"end":{"line":1616,"column":3}},"312":{"start":{"line":1612,"column":4},"end":{"line":1612,"column":26}},"313":{"start":{"line":1614,"column":4},"end":{"line":1614,"column":62}},"314":{"start":{"line":1614,"column":12},"end":{"line":1614,"column":62}},"315":{"start":{"line":1615,"column":4},"end":{"line":1615,"column":16}},"316":{"start":{"line":1618,"column":2},"end":{"line":1618,"column":54}},"317":{"start":{"line":1639,"column":0},"end":{"line":1655,"column":2}},"318":{"start":{"line":1640,"column":2},"end":{"line":1643,"column":3}},"319":{"start":{"line":1641,"column":4},"end":{"line":1641,"column":20}},"320":{"start":{"line":1642,"column":4},"end":{"line":1642,"column":16}},"321":{"start":{"line":1645,"column":2},"end":{"line":1645,"column":42}},"322":{"start":{"line":1647,"column":2},"end":{"line":1652,"column":3}},"323":{"start":{"line":1648,"column":4},"end":{"line":1648,"column":26}},"324":{"start":{"line":1650,"column":4},"end":{"line":1650,"column":62}},"325":{"start":{"line":1650,"column":12},"end":{"line":1650,"column":62}},"326":{"start":{"line":1651,"column":4},"end":{"line":1651,"column":16}},"327":{"start":{"line":1654,"column":2},"end":{"line":1654,"column":57}},"328":{"start":{"line":1675,"column":0},"end":{"line":1691,"column":2}},"329":{"start":{"line":1676,"column":2},"end":{"line":1679,"column":3}},"330":{"start":{"line":1677,"column":4},"end":{"line":1677,"column":20}},"331":{"start":{"line":1678,"column":4},"end":{"line":1678,"column":16}},"332":{"start":{"line":1681,"column":2},"end":{"line":1681,"column":42}},"333":{"start":{"line":1683,"column":2},"end":{"line":1688,"column":3}},"334":{"start":{"line":1684,"column":4},"end":{"line":1684,"column":26}},"335":{"start":{"line":1686,"column":4},"end":{"line":1686,"column":62}},"336":{"start":{"line":1686,"column":12},"end":{"line":1686,"column":62}},"337":{"start":{"line":1687,"column":4},"end":{"line":1687,"column":16}},"338":{"start":{"line":1690,"column":2},"end":{"line":1690,"column":58}},"339":{"start":{"line":1705,"column":0},"end":{"line":1725,"column":1}},"340":{"start":{"line":1706,"column":2},"end":{"line":1708,"column":18}},"341":{"start":{"line":1710,"column":2},"end":{"line":1710,"column":55}},"342":{"start":{"line":1711,"column":2},"end":{"line":1724,"column":5}},"343":{"start":{"line":1712,"column":4},"end":{"line":1714,"column":5}},"344":{"start":{"line":1713,"column":6},"end":{"line":1713,"column":27}},"345":{"start":{"line":1716,"column":4},"end":{"line":1719,"column":5}},"346":{"start":{"line":1717,"column":6},"end":{"line":1717,"column":25}},"347":{"start":{"line":1718,"column":6},"end":{"line":1718,"column":33}},"348":{"start":{"line":1720,"column":4},"end":{"line":1722,"column":5}},"349":{"start":{"line":1721,"column":6},"end":{"line":1721,"column":57}},"350":{"start":{"line":1723,"column":4},"end":{"line":1723,"column":27}},"351":{"start":{"line":1731,"column":0},"end":{"line":1741,"column":1}},"352":{"start":{"line":1732,"column":2},"end":{"line":1734,"column":3}},"353":{"start":{"line":1733,"column":4},"end":{"line":1733,"column":11}},"354":{"start":{"line":1736,"column":2},"end":{"line":1736,"column":34}},"355":{"start":{"line":1738,"column":2},"end":{"line":1740,"column":3}},"356":{"start":{"line":1739,"column":4},"end":{"line":1739,"column":91}},"357":{"start":{"line":1791,"column":0},"end":{"line":1848,"column":2}},"358":{"start":{"line":1792,"column":2},"end":{"line":1792,"column":31}},"359":{"start":{"line":1793,"column":2},"end":{"line":1793,"column":19}},"360":{"start":{"line":1795,"column":2},"end":{"line":1818,"column":3}},"361":{"start":{"line":1797,"column":6},"end":{"line":1800,"column":7}},"362":{"start":{"line":1798,"column":8},"end":{"line":1798,"column":27}},"363":{"start":{"line":1799,"column":8},"end":{"line":1799,"column":21}},"364":{"start":{"line":1801,"column":6},"end":{"line":1801,"column":12}},"365":{"start":{"line":1803,"column":6},"end":{"line":1807,"column":7}},"366":{"start":{"line":1804,"column":8},"end":{"line":1804,"column":23}},"367":{"start":{"line":1805,"column":8},"end":{"line":1805,"column":23}},"368":{"start":{"line":1806,"column":8},"end":{"line":1806,"column":29}},"369":{"start":{"line":1808,"column":6},"end":{"line":1808,"column":26}},"370":{"start":{"line":1809,"column":6},"end":{"line":1809,"column":12}},"371":{"start":{"line":1811,"column":6},"end":{"line":1817,"column":7}},"372":{"start":{"line":1812,"column":8},"end":{"line":1812,"column":28}},"373":{"start":{"line":1813,"column":8},"end":{"line":1813,"column":45}},"374":{"start":{"line":1815,"column":8},"end":{"line":1815,"column":23}},"375":{"start":{"line":1816,"column":8},"end":{"line":1816,"column":39}},"376":{"start":{"line":1820,"column":2},"end":{"line":1822,"column":3}},"377":{"start":{"line":1821,"column":4},"end":{"line":1821,"column":25}},"378":{"start":{"line":1825,"column":2},"end":{"line":1827,"column":3}},"379":{"start":{"line":1826,"column":4},"end":{"line":1826,"column":27}},"380":{"start":{"line":1829,"column":2},"end":{"line":1841,"column":3}},"381":{"start":{"line":1830,"column":4},"end":{"line":1830,"column":61}},"382":{"start":{"line":1831,"column":4},"end":{"line":1834,"column":5}},"383":{"start":{"line":1832,"column":6},"end":{"line":1832,"column":38}},"384":{"start":{"line":1833,"column":6},"end":{"line":1833,"column":32}},"385":{"start":{"line":1835,"column":4},"end":{"line":1838,"column":5}},"386":{"start":{"line":1836,"column":6},"end":{"line":1836,"column":34}},"387":{"start":{"line":1837,"column":6},"end":{"line":1837,"column":28}},"388":{"start":{"line":1840,"column":4},"end":{"line":1840,"column":29}},"389":{"start":{"line":1843,"column":2},"end":{"line":1845,"column":3}},"390":{"start":{"line":1844,"column":4},"end":{"line":1844,"column":16}},"391":{"start":{"line":1847,"column":2},"end":{"line":1847,"column":42}},"392":{"start":{"line":1857,"column":0},"end":{"line":1860,"column":2}},"393":{"start":{"line":1858,"column":2},"end":{"line":1858,"column":42}},"394":{"start":{"line":1859,"column":2},"end":{"line":1859,"column":14}},"395":{"start":{"line":1901,"column":0},"end":{"line":1934,"column":2}},"396":{"start":{"line":1902,"column":2},"end":{"line":1902,"column":31}},"397":{"start":{"line":1903,"column":2},"end":{"line":1903,"column":19}},"398":{"start":{"line":1905,"column":2},"end":{"line":1919,"column":3}},"399":{"start":{"line":1907,"column":6},"end":{"line":1910,"column":7}},"400":{"start":{"line":1908,"column":8},"end":{"line":1908,"column":27}},"401":{"start":{"line":1909,"column":8},"end":{"line":1909,"column":21}},"402":{"start":{"line":1911,"column":6},"end":{"line":1911,"column":12}},"403":{"start":{"line":1913,"column":6},"end":{"line":1917,"column":7}},"404":{"start":{"line":1914,"column":8},"end":{"line":1914,"column":30}},"405":{"start":{"line":1915,"column":8},"end":{"line":1915,"column":31}},"406":{"start":{"line":1916,"column":8},"end":{"line":1916,"column":28}},"407":{"start":{"line":1918,"column":6},"end":{"line":1918,"column":12}},"408":{"start":{"line":1921,"column":2},"end":{"line":1923,"column":3}},"409":{"start":{"line":1922,"column":4},"end":{"line":1922,"column":27}},"410":{"start":{"line":1925,"column":2},"end":{"line":1925,"column":38}},"411":{"start":{"line":1927,"column":2},"end":{"line":1929,"column":3}},"412":{"start":{"line":1928,"column":4},"end":{"line":1928,"column":16}},"413":{"start":{"line":1931,"column":2},"end":{"line":1931,"column":35}},"414":{"start":{"line":1933,"column":2},"end":{"line":1933,"column":14}},"415":{"start":{"line":1943,"column":0},"end":{"line":1945,"column":2}},"416":{"start":{"line":1944,"column":2},"end":{"line":1944,"column":51}},"417":{"start":{"line":1951,"column":0},"end":{"line":1956,"column":1}},"418":{"start":{"line":1952,"column":2},"end":{"line":1954,"column":3}},"419":{"start":{"line":1953,"column":4},"end":{"line":1953,"column":29}},"420":{"start":{"line":1955,"column":2},"end":{"line":1955,"column":13}},"421":{"start":{"line":1966,"column":0},"end":{"line":2102,"column":2}},"422":{"start":{"line":1967,"column":2},"end":{"line":1969,"column":3}},"423":{"start":{"line":1968,"column":4},"end":{"line":1968,"column":59}},"424":{"start":{"line":1971,"column":2},"end":{"line":1971,"column":25}},"425":{"start":{"line":1972,"column":2},"end":{"line":1972,"column":28}},"426":{"start":{"line":1973,"column":2},"end":{"line":1973,"column":19}},"427":{"start":{"line":1974,"column":2},"end":{"line":1974,"column":18}},"428":{"start":{"line":1975,"column":2},"end":{"line":1975,"column":16}},"429":{"start":{"line":1976,"column":2},"end":{"line":1976,"column":13}},"430":{"start":{"line":1977,"column":2},"end":{"line":1977,"column":11}},"431":{"start":{"line":1978,"column":2},"end":{"line":1978,"column":17}},"432":{"start":{"line":1980,"column":2},"end":{"line":1980,"column":32}},"433":{"start":{"line":1981,"column":2},"end":{"line":1983,"column":3}},"434":{"start":{"line":1982,"column":4},"end":{"line":1982,"column":33}},"435":{"start":{"line":1985,"column":2},"end":{"line":1985,"column":37}},"436":{"start":{"line":1987,"column":2},"end":{"line":1989,"column":3}},"437":{"start":{"line":1988,"column":4},"end":{"line":1988,"column":47}},"438":{"start":{"line":1991,"column":2},"end":{"line":2027,"column":3}},"439":{"start":{"line":1992,"column":4},"end":{"line":1992,"column":23}},"440":{"start":{"line":1994,"column":4},"end":{"line":1996,"column":5}},"441":{"start":{"line":1995,"column":6},"end":{"line":1995,"column":23}},"442":{"start":{"line":1997,"column":4},"end":{"line":1999,"column":5}},"443":{"start":{"line":1998,"column":6},"end":{"line":1998,"column":26}},"444":{"start":{"line":2000,"column":4},"end":{"line":2002,"column":5}},"445":{"start":{"line":2001,"column":6},"end":{"line":2001,"column":26}},"446":{"start":{"line":2004,"column":4},"end":{"line":2004,"column":46}},"447":{"start":{"line":2005,"column":4},"end":{"line":2005,"column":67}},"448":{"start":{"line":2006,"column":4},"end":{"line":2024,"column":5}},"449":{"start":{"line":2007,"column":6},"end":{"line":2014,"column":7}},"450":{"start":{"line":2009,"column":8},"end":{"line":2009,"column":43}},"451":{"start":{"line":2010,"column":8},"end":{"line":2010,"column":23}},"452":{"start":{"line":2011,"column":8},"end":{"line":2011,"column":32}},"453":{"start":{"line":2013,"column":8},"end":{"line":2013,"column":38}},"454":{"start":{"line":2015,"column":11},"end":{"line":2024,"column":5}},"455":{"start":{"line":2016,"column":6},"end":{"line":2016,"column":33}},"456":{"start":{"line":2021,"column":6},"end":{"line":2023,"column":7}},"457":{"start":{"line":2022,"column":8},"end":{"line":2022,"column":30}},"458":{"start":{"line":2026,"column":4},"end":{"line":2026,"column":65}},"459":{"start":{"line":2029,"column":2},"end":{"line":2029,"column":21}},"460":{"start":{"line":2031,"column":2},"end":{"line":2031,"column":38}},"461":{"start":{"line":2033,"column":2},"end":{"line":2039,"column":3}},"462":{"start":{"line":2034,"column":4},"end":{"line":2034,"column":39}},"463":{"start":{"line":2035,"column":4},"end":{"line":2035,"column":43}},"464":{"start":{"line":2036,"column":4},"end":{"line":2038,"column":5}},"465":{"start":{"line":2037,"column":6},"end":{"line":2037,"column":35}},"466":{"start":{"line":2041,"column":2},"end":{"line":2041,"column":42}},"467":{"start":{"line":2041,"column":17},"end":{"line":2041,"column":42}},"468":{"start":{"line":2043,"column":2},"end":{"line":2078,"column":4}},"469":{"start":{"line":2044,"column":4},"end":{"line":2046,"column":5}},"470":{"start":{"line":2045,"column":6},"end":{"line":2045,"column":27}},"471":{"start":{"line":2048,"column":4},"end":{"line":2057,"column":5}},"472":{"start":{"line":2049,"column":6},"end":{"line":2051,"column":7}},"473":{"start":{"line":2050,"column":8},"end":{"line":2050,"column":35}},"474":{"start":{"line":2053,"column":6},"end":{"line":2055,"column":7}},"475":{"start":{"line":2054,"column":8},"end":{"line":2054,"column":57}},"476":{"start":{"line":2056,"column":6},"end":{"line":2056,"column":34}},"477":{"start":{"line":2059,"column":4},"end":{"line":2064,"column":5}},"478":{"start":{"line":2060,"column":6},"end":{"line":2062,"column":7}},"479":{"start":{"line":2061,"column":8},"end":{"line":2061,"column":58}},"480":{"start":{"line":2063,"column":6},"end":{"line":2063,"column":78}},"481":{"start":{"line":2066,"column":4},"end":{"line":2066,"column":65}},"482":{"start":{"line":2067,"column":4},"end":{"line":2067,"column":27}},"483":{"start":{"line":2068,"column":4},"end":{"line":2077,"column":7}},"484":{"start":{"line":2069,"column":6},"end":{"line":2071,"column":7}},"485":{"start":{"line":2070,"column":8},"end":{"line":2070,"column":29}},"486":{"start":{"line":2073,"column":6},"end":{"line":2075,"column":7}},"487":{"start":{"line":2074,"column":8},"end":{"line":2074,"column":58}},"488":{"start":{"line":2076,"column":6},"end":{"line":2076,"column":77}},"489":{"start":{"line":2080,"column":2},"end":{"line":2099,"column":3}},"490":{"start":{"line":2081,"column":4},"end":{"line":2088,"column":6}},"491":{"start":{"line":2082,"column":6},"end":{"line":2084,"column":7}},"492":{"start":{"line":2083,"column":8},"end":{"line":2083,"column":31}},"493":{"start":{"line":2085,"column":6},"end":{"line":2087,"column":10}},"494":{"start":{"line":2086,"column":8},"end":{"line":2086,"column":53}},"495":{"start":{"line":2090,"column":4},"end":{"line":2094,"column":5}},"496":{"start":{"line":2091,"column":6},"end":{"line":2091,"column":28}},"497":{"start":{"line":2093,"column":6},"end":{"line":2093,"column":22}},"498":{"start":{"line":2096,"column":4},"end":{"line":2098,"column":8}},"499":{"start":{"line":2097,"column":6},"end":{"line":2097,"column":51}},"500":{"start":{"line":2101,"column":2},"end":{"line":2101,"column":14}},"501":{"start":{"line":2108,"column":0},"end":{"line":2116,"column":1}},"502":{"start":{"line":2109,"column":2},"end":{"line":2111,"column":3}},"503":{"start":{"line":2110,"column":4},"end":{"line":2110,"column":31}},"504":{"start":{"line":2112,"column":2},"end":{"line":2114,"column":3}},"505":{"start":{"line":2113,"column":4},"end":{"line":2113,"column":52}},"506":{"start":{"line":2115,"column":2},"end":{"line":2115,"column":29}},"507":{"start":{"line":2126,"column":0},"end":{"line":2135,"column":2}},"508":{"start":{"line":2127,"column":2},"end":{"line":2127,"column":39}},"509":{"start":{"line":2127,"column":21},"end":{"line":2127,"column":39}},"510":{"start":{"line":2128,"column":2},"end":{"line":2134,"column":3}},"511":{"start":{"line":2129,"column":4},"end":{"line":2131,"column":5}},"512":{"start":{"line":2130,"column":6},"end":{"line":2130,"column":50}},"513":{"start":{"line":2133,"column":4},"end":{"line":2133,"column":40}},"514":{"start":{"line":2142,"column":0},"end":{"line":2159,"column":1}},"515":{"start":{"line":2143,"column":2},"end":{"line":2145,"column":3}},"516":{"start":{"line":2144,"column":4},"end":{"line":2144,"column":11}},"517":{"start":{"line":2146,"column":2},"end":{"line":2148,"column":3}},"518":{"start":{"line":2147,"column":4},"end":{"line":2147,"column":11}},"519":{"start":{"line":2150,"column":2},"end":{"line":2150,"column":16}},"520":{"start":{"line":2152,"column":2},"end":{"line":2156,"column":3}},"521":{"start":{"line":2153,"column":4},"end":{"line":2155,"column":5}},"522":{"start":{"line":2154,"column":6},"end":{"line":2154,"column":39}},"523":{"start":{"line":2158,"column":2},"end":{"line":2158,"column":19}},"524":{"start":{"line":2168,"column":0},"end":{"line":2204,"column":2}},"525":{"start":{"line":2169,"column":2},"end":{"line":2169,"column":33}},"526":{"start":{"line":2170,"column":2},"end":{"line":2170,"column":17}},"527":{"start":{"line":2171,"column":2},"end":{"line":2171,"column":12}},"528":{"start":{"line":2173,"column":2},"end":{"line":2173,"column":37}},"529":{"start":{"line":2174,"column":2},"end":{"line":2174,"column":31}},"530":{"start":{"line":2175,"column":2},"end":{"line":2175,"column":29}},"531":{"start":{"line":2177,"column":2},"end":{"line":2180,"column":3}},"532":{"start":{"line":2178,"column":4},"end":{"line":2178,"column":30}},"533":{"start":{"line":2179,"column":4},"end":{"line":2179,"column":16}},"534":{"start":{"line":2182,"column":2},"end":{"line":2200,"column":3}},"535":{"start":{"line":2183,"column":4},"end":{"line":2183,"column":17}},"536":{"start":{"line":2184,"column":4},"end":{"line":2184,"column":68}},"537":{"start":{"line":2185,"column":4},"end":{"line":2191,"column":6}},"538":{"start":{"line":2186,"column":6},"end":{"line":2188,"column":7}},"539":{"start":{"line":2187,"column":8},"end":{"line":2187,"column":29}},"540":{"start":{"line":2190,"column":6},"end":{"line":2190,"column":79}},"541":{"start":{"line":2192,"column":4},"end":{"line":2198,"column":5}},"542":{"start":{"line":2193,"column":6},"end":{"line":2193,"column":28}},"543":{"start":{"line":2195,"column":6},"end":{"line":2197,"column":9}},"544":{"start":{"line":2196,"column":8},"end":{"line":2196,"column":22}},"545":{"start":{"line":2199,"column":4},"end":{"line":2199,"column":16}},"546":{"start":{"line":2202,"column":2},"end":{"line":2202,"column":74}},"547":{"start":{"line":2203,"column":2},"end":{"line":2203,"column":14}},"548":{"start":{"line":2213,"column":0},"end":{"line":2249,"column":2}},"549":{"start":{"line":2214,"column":2},"end":{"line":2214,"column":33}},"550":{"start":{"line":2215,"column":2},"end":{"line":2215,"column":17}},"551":{"start":{"line":2216,"column":2},"end":{"line":2216,"column":12}},"552":{"start":{"line":2218,"column":2},"end":{"line":2218,"column":37}},"553":{"start":{"line":2219,"column":2},"end":{"line":2219,"column":31}},"554":{"start":{"line":2220,"column":2},"end":{"line":2220,"column":29}},"555":{"start":{"line":2222,"column":2},"end":{"line":2225,"column":3}},"556":{"start":{"line":2223,"column":4},"end":{"line":2223,"column":30}},"557":{"start":{"line":2224,"column":4},"end":{"line":2224,"column":16}},"558":{"start":{"line":2227,"column":2},"end":{"line":2245,"column":3}},"559":{"start":{"line":2228,"column":4},"end":{"line":2228,"column":17}},"560":{"start":{"line":2229,"column":4},"end":{"line":2229,"column":68}},"561":{"start":{"line":2230,"column":4},"end":{"line":2236,"column":6}},"562":{"start":{"line":2231,"column":6},"end":{"line":2233,"column":7}},"563":{"start":{"line":2232,"column":8},"end":{"line":2232,"column":29}},"564":{"start":{"line":2235,"column":6},"end":{"line":2235,"column":83}},"565":{"start":{"line":2237,"column":4},"end":{"line":2243,"column":5}},"566":{"start":{"line":2238,"column":6},"end":{"line":2238,"column":28}},"567":{"start":{"line":2240,"column":6},"end":{"line":2242,"column":9}},"568":{"start":{"line":2241,"column":8},"end":{"line":2241,"column":22}},"569":{"start":{"line":2244,"column":4},"end":{"line":2244,"column":16}},"570":{"start":{"line":2247,"column":2},"end":{"line":2247,"column":78}},"571":{"start":{"line":2248,"column":2},"end":{"line":2248,"column":14}},"572":{"start":{"line":2258,"column":0},"end":{"line":2294,"column":2}},"573":{"start":{"line":2259,"column":2},"end":{"line":2259,"column":33}},"574":{"start":{"line":2260,"column":2},"end":{"line":2260,"column":17}},"575":{"start":{"line":2261,"column":2},"end":{"line":2261,"column":12}},"576":{"start":{"line":2263,"column":2},"end":{"line":2263,"column":37}},"577":{"start":{"line":2264,"column":2},"end":{"line":2264,"column":31}},"578":{"start":{"line":2265,"column":2},"end":{"line":2265,"column":29}},"579":{"start":{"line":2267,"column":2},"end":{"line":2270,"column":3}},"580":{"start":{"line":2268,"column":4},"end":{"line":2268,"column":30}},"581":{"start":{"line":2269,"column":4},"end":{"line":2269,"column":16}},"582":{"start":{"line":2272,"column":2},"end":{"line":2290,"column":3}},"583":{"start":{"line":2273,"column":4},"end":{"line":2273,"column":17}},"584":{"start":{"line":2274,"column":4},"end":{"line":2274,"column":68}},"585":{"start":{"line":2275,"column":4},"end":{"line":2281,"column":6}},"586":{"start":{"line":2276,"column":6},"end":{"line":2278,"column":7}},"587":{"start":{"line":2277,"column":8},"end":{"line":2277,"column":29}},"588":{"start":{"line":2280,"column":6},"end":{"line":2280,"column":82}},"589":{"start":{"line":2282,"column":4},"end":{"line":2288,"column":5}},"590":{"start":{"line":2283,"column":6},"end":{"line":2283,"column":28}},"591":{"start":{"line":2285,"column":6},"end":{"line":2287,"column":9}},"592":{"start":{"line":2286,"column":8},"end":{"line":2286,"column":22}},"593":{"start":{"line":2289,"column":4},"end":{"line":2289,"column":16}},"594":{"start":{"line":2292,"column":2},"end":{"line":2292,"column":77}},"595":{"start":{"line":2293,"column":2},"end":{"line":2293,"column":14}},"596":{"start":{"line":2303,"column":0},"end":{"line":2339,"column":2}},"597":{"start":{"line":2304,"column":2},"end":{"line":2304,"column":33}},"598":{"start":{"line":2305,"column":2},"end":{"line":2305,"column":17}},"599":{"start":{"line":2306,"column":2},"end":{"line":2306,"column":12}},"600":{"start":{"line":2308,"column":2},"end":{"line":2308,"column":37}},"601":{"start":{"line":2309,"column":2},"end":{"line":2309,"column":31}},"602":{"start":{"line":2310,"column":2},"end":{"line":2310,"column":29}},"603":{"start":{"line":2312,"column":2},"end":{"line":2315,"column":3}},"604":{"start":{"line":2313,"column":4},"end":{"line":2313,"column":30}},"605":{"start":{"line":2314,"column":4},"end":{"line":2314,"column":16}},"606":{"start":{"line":2317,"column":2},"end":{"line":2335,"column":3}},"607":{"start":{"line":2318,"column":4},"end":{"line":2318,"column":17}},"608":{"start":{"line":2319,"column":4},"end":{"line":2319,"column":68}},"609":{"start":{"line":2320,"column":4},"end":{"line":2326,"column":6}},"610":{"start":{"line":2321,"column":6},"end":{"line":2323,"column":7}},"611":{"start":{"line":2322,"column":8},"end":{"line":2322,"column":29}},"612":{"start":{"line":2325,"column":6},"end":{"line":2325,"column":83}},"613":{"start":{"line":2327,"column":4},"end":{"line":2333,"column":5}},"614":{"start":{"line":2328,"column":6},"end":{"line":2328,"column":28}},"615":{"start":{"line":2330,"column":6},"end":{"line":2332,"column":9}},"616":{"start":{"line":2331,"column":8},"end":{"line":2331,"column":22}},"617":{"start":{"line":2334,"column":4},"end":{"line":2334,"column":16}},"618":{"start":{"line":2337,"column":2},"end":{"line":2337,"column":78}},"619":{"start":{"line":2338,"column":2},"end":{"line":2338,"column":14}},"620":{"start":{"line":2428,"column":0},"end":{"line":2454,"column":2}},"621":{"start":{"line":2429,"column":2},"end":{"line":2451,"column":3}},"622":{"start":{"line":2431,"column":4},"end":{"line":2431,"column":23}},"623":{"start":{"line":2432,"column":4},"end":{"line":2432,"column":19}},"624":{"start":{"line":2433,"column":9},"end":{"line":2451,"column":3}},"625":{"start":{"line":2435,"column":4},"end":{"line":2435,"column":19}},"626":{"start":{"line":2436,"column":4},"end":{"line":2436,"column":21}},"627":{"start":{"line":2437,"column":4},"end":{"line":2437,"column":20}},"628":{"start":{"line":2438,"column":4},"end":{"line":2438,"column":19}},"629":{"start":{"line":2439,"column":9},"end":{"line":2451,"column":3}},"630":{"start":{"line":2441,"column":4},"end":{"line":2441,"column":26}},"631":{"start":{"line":2442,"column":4},"end":{"line":2442,"column":27}},"632":{"start":{"line":2443,"column":4},"end":{"line":2443,"column":20}},"633":{"start":{"line":2444,"column":4},"end":{"line":2444,"column":24}},"634":{"start":{"line":2445,"column":9},"end":{"line":2451,"column":3}},"635":{"start":{"line":2447,"column":4},"end":{"line":2447,"column":21}},"636":{"start":{"line":2448,"column":4},"end":{"line":2448,"column":27}},"637":{"start":{"line":2449,"column":4},"end":{"line":2449,"column":24}},"638":{"start":{"line":2450,"column":4},"end":{"line":2450,"column":25}},"639":{"start":{"line":2453,"column":2},"end":{"line":2453,"column":69}},"640":{"start":{"line":2476,"column":0},"end":{"line":2502,"column":2}},"641":{"start":{"line":2477,"column":2},"end":{"line":2499,"column":3}},"642":{"start":{"line":2479,"column":4},"end":{"line":2479,"column":23}},"643":{"start":{"line":2480,"column":4},"end":{"line":2480,"column":19}},"644":{"start":{"line":2481,"column":9},"end":{"line":2499,"column":3}},"645":{"start":{"line":2483,"column":4},"end":{"line":2483,"column":19}},"646":{"start":{"line":2484,"column":4},"end":{"line":2484,"column":21}},"647":{"start":{"line":2485,"column":4},"end":{"line":2485,"column":20}},"648":{"start":{"line":2486,"column":4},"end":{"line":2486,"column":19}},"649":{"start":{"line":2487,"column":9},"end":{"line":2499,"column":3}},"650":{"start":{"line":2489,"column":4},"end":{"line":2489,"column":26}},"651":{"start":{"line":2490,"column":4},"end":{"line":2490,"column":27}},"652":{"start":{"line":2491,"column":4},"end":{"line":2491,"column":20}},"653":{"start":{"line":2492,"column":4},"end":{"line":2492,"column":24}},"654":{"start":{"line":2493,"column":9},"end":{"line":2499,"column":3}},"655":{"start":{"line":2495,"column":4},"end":{"line":2495,"column":21}},"656":{"start":{"line":2496,"column":4},"end":{"line":2496,"column":27}},"657":{"start":{"line":2497,"column":4},"end":{"line":2497,"column":24}},"658":{"start":{"line":2498,"column":4},"end":{"line":2498,"column":25}},"659":{"start":{"line":2501,"column":2},"end":{"line":2501,"column":73}},"660":{"start":{"line":2523,"column":0},"end":{"line":2549,"column":2}},"661":{"start":{"line":2524,"column":2},"end":{"line":2546,"column":3}},"662":{"start":{"line":2526,"column":4},"end":{"line":2526,"column":23}},"663":{"start":{"line":2527,"column":4},"end":{"line":2527,"column":19}},"664":{"start":{"line":2528,"column":9},"end":{"line":2546,"column":3}},"665":{"start":{"line":2530,"column":4},"end":{"line":2530,"column":19}},"666":{"start":{"line":2531,"column":4},"end":{"line":2531,"column":21}},"667":{"start":{"line":2532,"column":4},"end":{"line":2532,"column":20}},"668":{"start":{"line":2533,"column":4},"end":{"line":2533,"column":19}},"669":{"start":{"line":2534,"column":9},"end":{"line":2546,"column":3}},"670":{"start":{"line":2536,"column":4},"end":{"line":2536,"column":26}},"671":{"start":{"line":2537,"column":4},"end":{"line":2537,"column":27}},"672":{"start":{"line":2538,"column":4},"end":{"line":2538,"column":20}},"673":{"start":{"line":2539,"column":4},"end":{"line":2539,"column":24}},"674":{"start":{"line":2540,"column":9},"end":{"line":2546,"column":3}},"675":{"start":{"line":2542,"column":4},"end":{"line":2542,"column":21}},"676":{"start":{"line":2543,"column":4},"end":{"line":2543,"column":27}},"677":{"start":{"line":2544,"column":4},"end":{"line":2544,"column":24}},"678":{"start":{"line":2545,"column":4},"end":{"line":2545,"column":25}},"679":{"start":{"line":2548,"column":2},"end":{"line":2548,"column":72}},"680":{"start":{"line":2570,"column":0},"end":{"line":2597,"column":2}},"681":{"start":{"line":2571,"column":2},"end":{"line":2593,"column":3}},"682":{"start":{"line":2573,"column":4},"end":{"line":2573,"column":23}},"683":{"start":{"line":2574,"column":4},"end":{"line":2574,"column":19}},"684":{"start":{"line":2575,"column":9},"end":{"line":2593,"column":3}},"685":{"start":{"line":2577,"column":4},"end":{"line":2577,"column":19}},"686":{"start":{"line":2578,"column":4},"end":{"line":2578,"column":21}},"687":{"start":{"line":2579,"column":4},"end":{"line":2579,"column":20}},"688":{"start":{"line":2580,"column":4},"end":{"line":2580,"column":19}},"689":{"start":{"line":2581,"column":9},"end":{"line":2593,"column":3}},"690":{"start":{"line":2583,"column":4},"end":{"line":2583,"column":26}},"691":{"start":{"line":2584,"column":4},"end":{"line":2584,"column":27}},"692":{"start":{"line":2585,"column":4},"end":{"line":2585,"column":20}},"693":{"start":{"line":2586,"column":4},"end":{"line":2586,"column":24}},"694":{"start":{"line":2587,"column":9},"end":{"line":2593,"column":3}},"695":{"start":{"line":2589,"column":4},"end":{"line":2589,"column":21}},"696":{"start":{"line":2590,"column":4},"end":{"line":2590,"column":27}},"697":{"start":{"line":2591,"column":4},"end":{"line":2591,"column":24}},"698":{"start":{"line":2592,"column":4},"end":{"line":2592,"column":25}},"699":{"start":{"line":2595,"column":2},"end":{"line":2595,"column":39}},"700":{"start":{"line":2596,"column":2},"end":{"line":2596,"column":73}},"701":{"start":{"line":2603,"column":0},"end":{"line":2695,"column":1}},"702":{"start":{"line":2605,"column":2},"end":{"line":2605,"column":16}},"703":{"start":{"line":2606,"column":2},"end":{"line":2606,"column":42}},"704":{"start":{"line":2608,"column":2},"end":{"line":2608,"column":23}},"705":{"start":{"line":2609,"column":2},"end":{"line":2617,"column":3}},"706":{"start":{"line":2610,"column":4},"end":{"line":2616,"column":5}},"707":{"start":{"line":2611,"column":6},"end":{"line":2613,"column":8}},"708":{"start":{"line":2612,"column":8},"end":{"line":2612,"column":75}},"709":{"start":{"line":2615,"column":6},"end":{"line":2615,"column":54}},"710":{"start":{"line":2620,"column":2},"end":{"line":2624,"column":3}},"711":{"start":{"line":2621,"column":4},"end":{"line":2623,"column":5}},"712":{"start":{"line":2622,"column":6},"end":{"line":2622,"column":53}},"713":{"start":{"line":2631,"column":2},"end":{"line":2633,"column":3}},"714":{"start":{"line":2632,"column":4},"end":{"line":2632,"column":33}},"715":{"start":{"line":2635,"column":2},"end":{"line":2637,"column":3}},"716":{"start":{"line":2636,"column":4},"end":{"line":2636,"column":28}},"717":{"start":{"line":2640,"column":2},"end":{"line":2640,"column":37}},"718":{"start":{"line":2641,"column":2},"end":{"line":2649,"column":3}},"719":{"start":{"line":2642,"column":4},"end":{"line":2642,"column":35}},"720":{"start":{"line":2643,"column":4},"end":{"line":2648,"column":5}},"721":{"start":{"line":2644,"column":6},"end":{"line":2644,"column":28}},"722":{"start":{"line":2645,"column":6},"end":{"line":2645,"column":19}},"723":{"start":{"line":2646,"column":11},"end":{"line":2648,"column":5}},"724":{"start":{"line":2647,"column":6},"end":{"line":2647,"column":24}},"725":{"start":{"line":2652,"column":2},"end":{"line":2652,"column":16}},"726":{"start":{"line":2653,"column":2},"end":{"line":2668,"column":3}},"727":{"start":{"line":2654,"column":4},"end":{"line":2654,"column":42}},"728":{"start":{"line":2655,"column":4},"end":{"line":2657,"column":5}},"729":{"start":{"line":2656,"column":6},"end":{"line":2656,"column":31}},"730":{"start":{"line":2658,"column":4},"end":{"line":2659,"column":61}},"731":{"start":{"line":2661,"column":4},"end":{"line":2661,"column":35}},"732":{"start":{"line":2662,"column":4},"end":{"line":2667,"column":5}},"733":{"start":{"line":2663,"column":6},"end":{"line":2663,"column":20}},"734":{"start":{"line":2664,"column":6},"end":{"line":2664,"column":19}},"735":{"start":{"line":2665,"column":11},"end":{"line":2667,"column":5}},"736":{"start":{"line":2666,"column":6},"end":{"line":2666,"column":16}},"737":{"start":{"line":2670,"column":2},"end":{"line":2670,"column":75}},"738":{"start":{"line":2671,"column":2},"end":{"line":2676,"column":3}},"739":{"start":{"line":2673,"column":4},"end":{"line":2673,"column":18}},"740":{"start":{"line":2674,"column":4},"end":{"line":2674,"column":31}},"741":{"start":{"line":2675,"column":4},"end":{"line":2675,"column":17}},"742":{"start":{"line":2678,"column":2},"end":{"line":2680,"column":3}},"743":{"start":{"line":2679,"column":4},"end":{"line":2679,"column":30}},"744":{"start":{"line":2682,"column":2},"end":{"line":2684,"column":3}},"745":{"start":{"line":2683,"column":4},"end":{"line":2683,"column":30}},"746":{"start":{"line":2687,"column":2},"end":{"line":2692,"column":3}},"747":{"start":{"line":2688,"column":4},"end":{"line":2690,"column":5}},"748":{"start":{"line":2689,"column":6},"end":{"line":2689,"column":41}},"749":{"start":{"line":2691,"column":4},"end":{"line":2691,"column":37}},"750":{"start":{"line":2694,"column":2},"end":{"line":2694,"column":79}},"751":{"start":{"line":2714,"column":0},"end":{"line":2761,"column":2}},"752":{"start":{"line":2715,"column":2},"end":{"line":2715,"column":38}},"753":{"start":{"line":2716,"column":2},"end":{"line":2716,"column":19}},"754":{"start":{"line":2718,"column":2},"end":{"line":2723,"column":3}},"755":{"start":{"line":2719,"column":4},"end":{"line":2719,"column":18}},"756":{"start":{"line":2720,"column":4},"end":{"line":2720,"column":14}},"757":{"start":{"line":2721,"column":9},"end":{"line":2723,"column":3}},"758":{"start":{"line":2722,"column":4},"end":{"line":2722,"column":17}},"759":{"start":{"line":2725,"column":2},"end":{"line":2725,"column":15}},"760":{"start":{"line":2726,"column":2},"end":{"line":2740,"column":5}},"761":{"start":{"line":2727,"column":4},"end":{"line":2730,"column":5}},"762":{"start":{"line":2728,"column":6},"end":{"line":2728,"column":16}},"763":{"start":{"line":2729,"column":6},"end":{"line":2729,"column":13}},"764":{"start":{"line":2732,"column":4},"end":{"line":2739,"column":7}},"765":{"start":{"line":2733,"column":6},"end":{"line":2736,"column":7}},"766":{"start":{"line":2734,"column":8},"end":{"line":2734,"column":22}},"767":{"start":{"line":2735,"column":8},"end":{"line":2735,"column":15}},"768":{"start":{"line":2737,"column":6},"end":{"line":2737,"column":27}},"769":{"start":{"line":2738,"column":6},"end":{"line":2738,"column":19}},"770":{"start":{"line":2742,"column":2},"end":{"line":2758,"column":3}},"771":{"start":{"line":2743,"column":4},"end":{"line":2757,"column":9}},"772":{"start":{"line":2745,"column":8},"end":{"line":2745,"column":39}},"773":{"start":{"line":2746,"column":8},"end":{"line":2746,"column":20}},"774":{"start":{"line":2749,"column":8},"end":{"line":2749,"column":24}},"775":{"start":{"line":2754,"column":8},"end":{"line":2756,"column":11}},"776":{"start":{"line":2755,"column":10},"end":{"line":2755,"column":43}},"777":{"start":{"line":2760,"column":2},"end":{"line":2760,"column":17}},"778":{"start":{"line":2773,"column":0},"end":{"line":2775,"column":2}},"779":{"start":{"line":2774,"column":2},"end":{"line":2774,"column":43}},"780":{"start":{"line":2787,"column":0},"end":{"line":2789,"column":2}},"781":{"start":{"line":2788,"column":2},"end":{"line":2788,"column":40}},"782":{"start":{"line":2799,"column":0},"end":{"line":2812,"column":2}},"783":{"start":{"line":2800,"column":2},"end":{"line":2800,"column":13}},"784":{"start":{"line":2801,"column":2},"end":{"line":2807,"column":3}},"785":{"start":{"line":2802,"column":4},"end":{"line":2802,"column":42}},"786":{"start":{"line":2803,"column":9},"end":{"line":2807,"column":3}},"787":{"start":{"line":2804,"column":4},"end":{"line":2804,"column":40}},"788":{"start":{"line":2806,"column":4},"end":{"line":2806,"column":18}},"789":{"start":{"line":2808,"column":2},"end":{"line":2811,"column":5}},"790":{"start":{"line":2819,"column":0},"end":{"line":2825,"column":1}},"791":{"start":{"line":2820,"column":2},"end":{"line":2824,"column":3}},"792":{"start":{"line":2821,"column":4},"end":{"line":2821,"column":35}},"793":{"start":{"line":2823,"column":4},"end":{"line":2823,"column":15}},"794":{"start":{"line":2832,"column":0},"end":{"line":2838,"column":1}},"795":{"start":{"line":2833,"column":2},"end":{"line":2837,"column":3}},"796":{"start":{"line":2834,"column":4},"end":{"line":2834,"column":55}},"797":{"start":{"line":2836,"column":4},"end":{"line":2836,"column":15}},"798":{"start":{"line":2877,"column":0},"end":{"line":2900,"column":2}},"799":{"start":{"line":2878,"column":2},"end":{"line":2880,"column":3}},"800":{"start":{"line":2879,"column":4},"end":{"line":2879,"column":16}},"801":{"start":{"line":2882,"column":2},"end":{"line":2882,"column":50}},"802":{"start":{"line":2883,"column":2},"end":{"line":2883,"column":35}},"803":{"start":{"line":2885,"column":2},"end":{"line":2887,"column":3}},"804":{"start":{"line":2886,"column":4},"end":{"line":2886,"column":23}},"805":{"start":{"line":2889,"column":2},"end":{"line":2889,"column":26}},"806":{"start":{"line":2891,"column":2},"end":{"line":2897,"column":3}},"807":{"start":{"line":2892,"column":4},"end":{"line":2892,"column":27}},"808":{"start":{"line":2893,"column":4},"end":{"line":2895,"column":5}},"809":{"start":{"line":2894,"column":6},"end":{"line":2894,"column":67}},"810":{"start":{"line":2896,"column":4},"end":{"line":2896,"column":30}},"811":{"start":{"line":2899,"column":2},"end":{"line":2899,"column":14}},"812":{"start":{"line":2915,"column":0},"end":{"line":2931,"column":2}},"813":{"start":{"line":2916,"column":2},"end":{"line":2916,"column":34}},"814":{"start":{"line":2918,"column":2},"end":{"line":2930,"column":3}},"815":{"start":{"line":2919,"column":4},"end":{"line":2923,"column":7}},"816":{"start":{"line":2926,"column":4},"end":{"line":2928,"column":5}},"817":{"start":{"line":2927,"column":6},"end":{"line":2927,"column":26}},"818":{"start":{"line":2929,"column":4},"end":{"line":2929,"column":14}},"819":{"start":{"line":2944,"column":0},"end":{"line":2985,"column":2}},"820":{"start":{"line":2945,"column":2},"end":{"line":2950,"column":8}},"821":{"start":{"line":2952,"column":2},"end":{"line":2966,"column":3}},"822":{"start":{"line":2953,"column":4},"end":{"line":2953,"column":31}},"823":{"start":{"line":2954,"column":4},"end":{"line":2954,"column":23}},"824":{"start":{"line":2955,"column":4},"end":{"line":2955,"column":20}},"825":{"start":{"line":2958,"column":4},"end":{"line":2965,"column":5}},"826":{"start":{"line":2959,"column":6},"end":{"line":2959,"column":20}},"827":{"start":{"line":2960,"column":6},"end":{"line":2964,"column":7}},"828":{"start":{"line":2961,"column":8},"end":{"line":2961,"column":36}},"829":{"start":{"line":2962,"column":8},"end":{"line":2962,"column":36}},"830":{"start":{"line":2963,"column":8},"end":{"line":2963,"column":32}},"831":{"start":{"line":2968,"column":2},"end":{"line":2982,"column":3}},"832":{"start":{"line":2970,"column":4},"end":{"line":2974,"column":5}},"833":{"start":{"line":2971,"column":6},"end":{"line":2971,"column":44}},"834":{"start":{"line":2973,"column":6},"end":{"line":2973,"column":17}},"835":{"start":{"line":2977,"column":4},"end":{"line":2977,"column":29}},"836":{"start":{"line":2978,"column":4},"end":{"line":2981,"column":5}},"837":{"start":{"line":2979,"column":6},"end":{"line":2979,"column":29}},"838":{"start":{"line":2980,"column":6},"end":{"line":2980,"column":29}},"839":{"start":{"line":2984,"column":2},"end":{"line":2984,"column":16}},"840":{"start":{"line":2992,"column":0},"end":{"line":2995,"column":2}},"841":{"start":{"line":2993,"column":2},"end":{"line":2993,"column":36}},"842":{"start":{"line":2994,"column":2},"end":{"line":2994,"column":54}},"843":{"start":{"line":3032,"column":0},"end":{"line":3036,"column":2}},"844":{"start":{"line":3033,"column":2},"end":{"line":3033,"column":21}},"845":{"start":{"line":3034,"column":2},"end":{"line":3034,"column":48}},"846":{"start":{"line":3035,"column":2},"end":{"line":3035,"column":37}},"847":{"start":{"line":3037,"column":0},"end":{"line":3039,"column":42}},"848":{"start":{"line":3084,"column":0},"end":{"line":3099,"column":2}},"849":{"start":{"line":3085,"column":2},"end":{"line":3085,"column":21}},"850":{"start":{"line":3086,"column":2},"end":{"line":3086,"column":48}},"851":{"start":{"line":3087,"column":2},"end":{"line":3087,"column":53}},"852":{"start":{"line":3088,"column":2},"end":{"line":3090,"column":3}},"853":{"start":{"line":3089,"column":4},"end":{"line":3089,"column":26}},"854":{"start":{"line":3092,"column":2},"end":{"line":3096,"column":3}},"855":{"start":{"line":3093,"column":4},"end":{"line":3093,"column":26}},"856":{"start":{"line":3095,"column":4},"end":{"line":3095,"column":65}},"857":{"start":{"line":3098,"column":2},"end":{"line":3098,"column":45}},"858":{"start":{"line":3112,"column":0},"end":{"line":3112,"column":45}},"859":{"start":{"line":3135,"column":0},"end":{"line":3159,"column":2}},"860":{"start":{"line":3138,"column":2},"end":{"line":3141,"column":3}},"861":{"start":{"line":3139,"column":4},"end":{"line":3139,"column":15}},"862":{"start":{"line":3140,"column":4},"end":{"line":3140,"column":15}},"863":{"start":{"line":3143,"column":2},"end":{"line":3145,"column":3}},"864":{"start":{"line":3144,"column":4},"end":{"line":3144,"column":15}},"865":{"start":{"line":3147,"column":2},"end":{"line":3156,"column":3}},"866":{"start":{"line":3148,"column":4},"end":{"line":3155,"column":5}},"867":{"start":{"line":3149,"column":6},"end":{"line":3154,"column":7}},"868":{"start":{"line":3151,"column":8},"end":{"line":3151,"column":40}},"869":{"start":{"line":3153,"column":8},"end":{"line":3153,"column":38}},"870":{"start":{"line":3158,"column":2},"end":{"line":3158,"column":45}},"871":{"start":{"line":3266,"column":0},"end":{"line":3314,"column":2}},"872":{"start":{"line":3267,"column":2},"end":{"line":3267,"column":18}},"873":{"start":{"line":3268,"column":2},"end":{"line":3268,"column":48}},"874":{"start":{"line":3272,"column":2},"end":{"line":3311,"column":3}},"875":{"start":{"line":3273,"column":4},"end":{"line":3285,"column":5}},"876":{"start":{"line":3274,"column":6},"end":{"line":3274,"column":61}},"877":{"start":{"line":3275,"column":11},"end":{"line":3285,"column":5}},"878":{"start":{"line":3277,"column":6},"end":{"line":3277,"column":32}},"879":{"start":{"line":3278,"column":11},"end":{"line":3285,"column":5}},"880":{"start":{"line":3279,"column":6},"end":{"line":3281,"column":7}},"881":{"start":{"line":3280,"column":8},"end":{"line":3280,"column":40}},"882":{"start":{"line":3282,"column":6},"end":{"line":3282,"column":32}},"883":{"start":{"line":3284,"column":6},"end":{"line":3284,"column":46}},"884":{"start":{"line":3286,"column":9},"end":{"line":3311,"column":3}},"885":{"start":{"line":3287,"column":4},"end":{"line":3300,"column":5}},"886":{"start":{"line":3288,"column":6},"end":{"line":3288,"column":77}},"887":{"start":{"line":3289,"column":11},"end":{"line":3300,"column":5}},"888":{"start":{"line":3290,"column":6},"end":{"line":3290,"column":32}},"889":{"start":{"line":3291,"column":6},"end":{"line":3291,"column":61}},"890":{"start":{"line":3292,"column":11},"end":{"line":3300,"column":5}},"891":{"start":{"line":3293,"column":6},"end":{"line":3293,"column":32}},"892":{"start":{"line":3294,"column":6},"end":{"line":3296,"column":7}},"893":{"start":{"line":3295,"column":8},"end":{"line":3295,"column":40}},"894":{"start":{"line":3297,"column":6},"end":{"line":3297,"column":32}},"895":{"start":{"line":3299,"column":6},"end":{"line":3299,"column":46}},"896":{"start":{"line":3301,"column":9},"end":{"line":3311,"column":3}},"897":{"start":{"line":3302,"column":4},"end":{"line":3308,"column":5}},"898":{"start":{"line":3304,"column":6},"end":{"line":3304,"column":32}},"899":{"start":{"line":3305,"column":6},"end":{"line":3305,"column":77}},"900":{"start":{"line":3307,"column":6},"end":{"line":3307,"column":46}},"901":{"start":{"line":3310,"column":4},"end":{"line":3310,"column":44}},"902":{"start":{"line":3313,"column":2},"end":{"line":3313,"column":45}},"903":{"start":{"line":3336,"column":0},"end":{"line":3340,"column":2}},"904":{"start":{"line":3337,"column":2},"end":{"line":3337,"column":42}},"905":{"start":{"line":3338,"column":2},"end":{"line":3338,"column":35}},"906":{"start":{"line":3339,"column":2},"end":{"line":3339,"column":14}},"907":{"start":{"line":3388,"column":0},"end":{"line":3394,"column":2}},"908":{"start":{"line":3389,"column":2},"end":{"line":3392,"column":3}},"909":{"start":{"line":3390,"column":4},"end":{"line":3390,"column":15}},"910":{"start":{"line":3391,"column":4},"end":{"line":3391,"column":15}},"911":{"start":{"line":3393,"column":2},"end":{"line":3393,"column":43}},"912":{"start":{"line":3437,"column":0},"end":{"line":3437,"column":43}},"913":{"start":{"line":3458,"column":0},"end":{"line":3468,"column":2}},"914":{"start":{"line":3459,"column":2},"end":{"line":3461,"column":3}},"915":{"start":{"line":3460,"column":4},"end":{"line":3460,"column":34}},"916":{"start":{"line":3463,"column":2},"end":{"line":3465,"column":3}},"917":{"start":{"line":3464,"column":4},"end":{"line":3464,"column":34}},"918":{"start":{"line":3467,"column":2},"end":{"line":3467,"column":43}},"919":{"start":{"line":3510,"column":0},"end":{"line":3510,"column":23}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"4":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":2},"end":{"line":55,"column":2}},{"start":{"line":55,"column":2},"end":{"line":55,"column":2}}]},"5":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"6":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":16}},{"start":{"line":62,"column":20},"end":{"line":62,"column":41}}]},"7":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"8":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"9":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":4},"end":{"line":169,"column":4}},{"start":{"line":169,"column":4},"end":{"line":169,"column":4}}]},"10":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":31},"end":{"line":173,"column":38}},{"start":{"line":173,"column":42},"end":{"line":173,"column":46}}]},"11":{"line":879,"type":"if","locations":[{"start":{"line":879,"column":2},"end":{"line":879,"column":2}},{"start":{"line":879,"column":2},"end":{"line":879,"column":2}}]},"12":{"line":881,"type":"binary-expr","locations":[{"start":{"line":881,"column":29},"end":{"line":881,"column":36}},{"start":{"line":881,"column":40},"end":{"line":881,"column":60}},{"start":{"line":881,"column":65},"end":{"line":881,"column":67}}]},"13":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":19},"end":{"line":882,"column":26}},{"start":{"line":882,"column":30},"end":{"line":882,"column":32}}]},"14":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":4},"end":{"line":884,"column":4}},{"start":{"line":884,"column":4},"end":{"line":884,"column":4}}]},"15":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":2},"end":{"line":890,"column":2}},{"start":{"line":890,"column":2},"end":{"line":890,"column":2}}]},"16":{"line":890,"type":"binary-expr","locations":[{"start":{"line":890,"column":8},"end":{"line":890,"column":15}},{"start":{"line":890,"column":19},"end":{"line":890,"column":56}}]},"17":{"line":894,"type":"if","locations":[{"start":{"line":894,"column":2},"end":{"line":894,"column":2}},{"start":{"line":894,"column":2},"end":{"line":894,"column":2}}]},"18":{"line":894,"type":"binary-expr","locations":[{"start":{"line":894,"column":6},"end":{"line":894,"column":13}},{"start":{"line":894,"column":17},"end":{"line":894,"column":48}}]},"19":{"line":970,"type":"if","locations":[{"start":{"line":970,"column":4},"end":{"line":970,"column":4}},{"start":{"line":970,"column":4},"end":{"line":970,"column":4}}]},"20":{"line":975,"type":"if","locations":[{"start":{"line":975,"column":4},"end":{"line":975,"column":4}},{"start":{"line":975,"column":4},"end":{"line":975,"column":4}}]},"21":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":6},"end":{"line":977,"column":6}},{"start":{"line":977,"column":6},"end":{"line":977,"column":6}}]},"22":{"line":978,"type":"if","locations":[{"start":{"line":978,"column":8},"end":{"line":978,"column":8}},{"start":{"line":978,"column":8},"end":{"line":978,"column":8}}]},"23":{"line":986,"type":"if","locations":[{"start":{"line":986,"column":6},"end":{"line":986,"column":6}},{"start":{"line":986,"column":6},"end":{"line":986,"column":6}}]},"24":{"line":987,"type":"if","locations":[{"start":{"line":987,"column":11},"end":{"line":987,"column":11}},{"start":{"line":987,"column":11},"end":{"line":987,"column":11}}]},"25":{"line":988,"type":"if","locations":[{"start":{"line":988,"column":6},"end":{"line":988,"column":6}},{"start":{"line":988,"column":6},"end":{"line":988,"column":6}}]},"26":{"line":1030,"type":"binary-expr","locations":[{"start":{"line":1030,"column":10},"end":{"line":1030,"column":15}},{"start":{"line":1030,"column":19},"end":{"line":1030,"column":29}}]},"27":{"line":1032,"type":"if","locations":[{"start":{"line":1032,"column":2},"end":{"line":1032,"column":2}},{"start":{"line":1032,"column":2},"end":{"line":1032,"column":2}}]},"28":{"line":1036,"type":"if","locations":[{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}},{"start":{"line":1036,"column":2},"end":{"line":1036,"column":2}}]},"29":{"line":1036,"type":"binary-expr","locations":[{"start":{"line":1036,"column":6},"end":{"line":1036,"column":26}},{"start":{"line":1036,"column":30},"end":{"line":1036,"column":55}}]},"30":{"line":1040,"type":"if","locations":[{"start":{"line":1040,"column":2},"end":{"line":1040,"column":2}},{"start":{"line":1040,"column":2},"end":{"line":1040,"column":2}}]},"31":{"line":1040,"type":"binary-expr","locations":[{"start":{"line":1040,"column":6},"end":{"line":1040,"column":36}},{"start":{"line":1040,"column":40},"end":{"line":1040,"column":65}}]},"32":{"line":1070,"type":"cond-expr","locations":[{"start":{"line":1070,"column":50},"end":{"line":1070,"column":53}},{"start":{"line":1070,"column":56},"end":{"line":1070,"column":60}}]},"33":{"line":1084,"type":"if","locations":[{"start":{"line":1084,"column":2},"end":{"line":1084,"column":2}},{"start":{"line":1084,"column":2},"end":{"line":1084,"column":2}}]},"34":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":2},"end":{"line":1098,"column":2}},{"start":{"line":1098,"column":2},"end":{"line":1098,"column":2}}]},"35":{"line":1111,"type":"if","locations":[{"start":{"line":1111,"column":4},"end":{"line":1111,"column":4}},{"start":{"line":1111,"column":4},"end":{"line":1111,"column":4}}]},"36":{"line":1115,"type":"if","locations":[{"start":{"line":1115,"column":4},"end":{"line":1115,"column":4}},{"start":{"line":1115,"column":4},"end":{"line":1115,"column":4}}]},"37":{"line":1119,"type":"if","locations":[{"start":{"line":1119,"column":4},"end":{"line":1119,"column":4}},{"start":{"line":1119,"column":4},"end":{"line":1119,"column":4}}]},"38":{"line":1120,"type":"cond-expr","locations":[{"start":{"line":1121,"column":12},"end":{"line":1121,"column":32}},{"start":{"line":1122,"column":12},"end":{"line":1122,"column":67}}]},"39":{"line":1128,"type":"if","locations":[{"start":{"line":1128,"column":6},"end":{"line":1128,"column":6}},{"start":{"line":1128,"column":6},"end":{"line":1128,"column":6}}]},"40":{"line":1129,"type":"cond-expr","locations":[{"start":{"line":1130,"column":12},"end":{"line":1130,"column":32}},{"start":{"line":1131,"column":12},"end":{"line":1131,"column":66}}]},"41":{"line":1154,"type":"if","locations":[{"start":{"line":1154,"column":2},"end":{"line":1154,"column":2}},{"start":{"line":1154,"column":2},"end":{"line":1154,"column":2}}]},"42":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}},{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}}]},"43":{"line":1175,"type":"if","locations":[{"start":{"line":1175,"column":2},"end":{"line":1175,"column":2}},{"start":{"line":1175,"column":2},"end":{"line":1175,"column":2}}]},"44":{"line":1194,"type":"if","locations":[{"start":{"line":1194,"column":2},"end":{"line":1194,"column":2}},{"start":{"line":1194,"column":2},"end":{"line":1194,"column":2}}]},"45":{"line":1200,"type":"if","locations":[{"start":{"line":1200,"column":2},"end":{"line":1200,"column":2}},{"start":{"line":1200,"column":2},"end":{"line":1200,"column":2}}]},"46":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":4},"end":{"line":1203,"column":4}},{"start":{"line":1203,"column":4},"end":{"line":1203,"column":4}}]},"47":{"line":1207,"type":"if","locations":[{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}},{"start":{"line":1207,"column":4},"end":{"line":1207,"column":4}}]},"48":{"line":1208,"type":"binary-expr","locations":[{"start":{"line":1208,"column":6},"end":{"line":1208,"column":18}},{"start":{"line":1208,"column":23},"end":{"line":1208,"column":40}}]},"49":{"line":1212,"type":"if","locations":[{"start":{"line":1212,"column":4},"end":{"line":1212,"column":4}},{"start":{"line":1212,"column":4},"end":{"line":1212,"column":4}}]},"50":{"line":1213,"type":"binary-expr","locations":[{"start":{"line":1213,"column":6},"end":{"line":1213,"column":18}},{"start":{"line":1213,"column":23},"end":{"line":1213,"column":40}}]},"51":{"line":1217,"type":"if","locations":[{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}},{"start":{"line":1217,"column":4},"end":{"line":1217,"column":4}}]},"52":{"line":1218,"type":"binary-expr","locations":[{"start":{"line":1218,"column":6},"end":{"line":1218,"column":18}},{"start":{"line":1218,"column":23},"end":{"line":1218,"column":40}}]},"53":{"line":1222,"type":"if","locations":[{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}},{"start":{"line":1222,"column":4},"end":{"line":1222,"column":4}}]},"54":{"line":1250,"type":"cond-expr","locations":[{"start":{"line":1251,"column":2},"end":{"line":1251,"column":18}},{"start":{"line":1252,"column":8},"end":{"line":1252,"column":17}}]},"55":{"line":1254,"type":"if","locations":[{"start":{"line":1254,"column":4},"end":{"line":1254,"column":4}},{"start":{"line":1254,"column":4},"end":{"line":1254,"column":4}}]},"56":{"line":1255,"type":"binary-expr","locations":[{"start":{"line":1255,"column":4},"end":{"line":1255,"column":11}},{"start":{"line":1255,"column":15},"end":{"line":1255,"column":34}}]},"57":{"line":1273,"type":"if","locations":[{"start":{"line":1273,"column":2},"end":{"line":1273,"column":2}},{"start":{"line":1273,"column":2},"end":{"line":1273,"column":2}}]},"58":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}},{"start":{"line":1289,"column":2},"end":{"line":1289,"column":2}}]},"59":{"line":1302,"type":"if","locations":[{"start":{"line":1302,"column":4},"end":{"line":1302,"column":4}},{"start":{"line":1302,"column":4},"end":{"line":1302,"column":4}}]},"60":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}},{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}}]},"61":{"line":1309,"type":"if","locations":[{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}},{"start":{"line":1309,"column":4},"end":{"line":1309,"column":4}}]},"62":{"line":1310,"type":"cond-expr","locations":[{"start":{"line":1311,"column":12},"end":{"line":1311,"column":31}},{"start":{"line":1312,"column":12},"end":{"line":1312,"column":79}}]},"63":{"line":1318,"type":"if","locations":[{"start":{"line":1318,"column":6},"end":{"line":1318,"column":6}},{"start":{"line":1318,"column":6},"end":{"line":1318,"column":6}}]},"64":{"line":1321,"type":"cond-expr","locations":[{"start":{"line":1322,"column":12},"end":{"line":1322,"column":31}},{"start":{"line":1323,"column":12},"end":{"line":1323,"column":78}}]},"65":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}},{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}}]},"66":{"line":1363,"type":"if","locations":[{"start":{"line":1363,"column":9},"end":{"line":1363,"column":9}},{"start":{"line":1363,"column":9},"end":{"line":1363,"column":9}}]},"67":{"line":1367,"type":"if","locations":[{"start":{"line":1367,"column":9},"end":{"line":1367,"column":9}},{"start":{"line":1367,"column":9},"end":{"line":1367,"column":9}}]},"68":{"line":1377,"type":"if","locations":[{"start":{"line":1377,"column":2},"end":{"line":1377,"column":2}},{"start":{"line":1377,"column":2},"end":{"line":1377,"column":2}}]},"69":{"line":1381,"type":"if","locations":[{"start":{"line":1381,"column":2},"end":{"line":1381,"column":2}},{"start":{"line":1381,"column":2},"end":{"line":1381,"column":2}}]},"70":{"line":1385,"type":"if","locations":[{"start":{"line":1385,"column":2},"end":{"line":1385,"column":2}},{"start":{"line":1385,"column":2},"end":{"line":1385,"column":2}}]},"71":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":9},"end":{"line":1387,"column":9}},{"start":{"line":1387,"column":9},"end":{"line":1387,"column":9}}]},"72":{"line":1401,"type":"if","locations":[{"start":{"line":1401,"column":2},"end":{"line":1401,"column":2}},{"start":{"line":1401,"column":2},"end":{"line":1401,"column":2}}]},"73":{"line":1461,"type":"if","locations":[{"start":{"line":1461,"column":2},"end":{"line":1461,"column":2}},{"start":{"line":1461,"column":2},"end":{"line":1461,"column":2}}]},"74":{"line":1466,"type":"if","locations":[{"start":{"line":1466,"column":2},"end":{"line":1466,"column":2}},{"start":{"line":1466,"column":2},"end":{"line":1466,"column":2}}]},"75":{"line":1471,"type":"if","locations":[{"start":{"line":1471,"column":2},"end":{"line":1471,"column":2}},{"start":{"line":1471,"column":2},"end":{"line":1471,"column":2}}]},"76":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":2},"end":{"line":1503,"column":2}},{"start":{"line":1503,"column":2},"end":{"line":1503,"column":2}}]},"77":{"line":1504,"type":"if","locations":[{"start":{"line":1504,"column":4},"end":{"line":1504,"column":4}},{"start":{"line":1504,"column":4},"end":{"line":1504,"column":4}}]},"78":{"line":1507,"type":"if","locations":[{"start":{"line":1507,"column":11},"end":{"line":1507,"column":11}},{"start":{"line":1507,"column":11},"end":{"line":1507,"column":11}}]},"79":{"line":1516,"type":"if","locations":[{"start":{"line":1516,"column":2},"end":{"line":1516,"column":2}},{"start":{"line":1516,"column":2},"end":{"line":1516,"column":2}}]},"80":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}},{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}}]},"81":{"line":1561,"type":"if","locations":[{"start":{"line":1561,"column":2},"end":{"line":1561,"column":2}},{"start":{"line":1561,"column":2},"end":{"line":1561,"column":2}}]},"82":{"line":1604,"type":"if","locations":[{"start":{"line":1604,"column":2},"end":{"line":1604,"column":2}},{"start":{"line":1604,"column":2},"end":{"line":1604,"column":2}}]},"83":{"line":1614,"type":"if","locations":[{"start":{"line":1614,"column":4},"end":{"line":1614,"column":4}},{"start":{"line":1614,"column":4},"end":{"line":1614,"column":4}}]},"84":{"line":1640,"type":"if","locations":[{"start":{"line":1640,"column":2},"end":{"line":1640,"column":2}},{"start":{"line":1640,"column":2},"end":{"line":1640,"column":2}}]},"85":{"line":1650,"type":"if","locations":[{"start":{"line":1650,"column":4},"end":{"line":1650,"column":4}},{"start":{"line":1650,"column":4},"end":{"line":1650,"column":4}}]},"86":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}},{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}}]},"87":{"line":1686,"type":"if","locations":[{"start":{"line":1686,"column":4},"end":{"line":1686,"column":4}},{"start":{"line":1686,"column":4},"end":{"line":1686,"column":4}}]},"88":{"line":1706,"type":"cond-expr","locations":[{"start":{"line":1707,"column":2},"end":{"line":1707,"column":18}},{"start":{"line":1708,"column":8},"end":{"line":1708,"column":17}}]},"89":{"line":1712,"type":"if","locations":[{"start":{"line":1712,"column":4},"end":{"line":1712,"column":4}},{"start":{"line":1712,"column":4},"end":{"line":1712,"column":4}}]},"90":{"line":1716,"type":"if","locations":[{"start":{"line":1716,"column":4},"end":{"line":1716,"column":4}},{"start":{"line":1716,"column":4},"end":{"line":1716,"column":4}}]},"91":{"line":1720,"type":"if","locations":[{"start":{"line":1720,"column":4},"end":{"line":1720,"column":4}},{"start":{"line":1720,"column":4},"end":{"line":1720,"column":4}}]},"92":{"line":1732,"type":"if","locations":[{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}},{"start":{"line":1732,"column":2},"end":{"line":1732,"column":2}}]},"93":{"line":1732,"type":"binary-expr","locations":[{"start":{"line":1732,"column":6},"end":{"line":1732,"column":12}},{"start":{"line":1732,"column":16},"end":{"line":1732,"column":28}},{"start":{"line":1732,"column":32},"end":{"line":1732,"column":51}}]},"94":{"line":1738,"type":"if","locations":[{"start":{"line":1738,"column":2},"end":{"line":1738,"column":2}},{"start":{"line":1738,"column":2},"end":{"line":1738,"column":2}}]},"95":{"line":1738,"type":"binary-expr","locations":[{"start":{"line":1738,"column":6},"end":{"line":1738,"column":12}},{"start":{"line":1738,"column":16},"end":{"line":1738,"column":43}},{"start":{"line":1738,"column":47},"end":{"line":1738,"column":82}}]},"96":{"line":1795,"type":"switch","locations":[{"start":{"line":1796,"column":4},"end":{"line":1801,"column":12}},{"start":{"line":1802,"column":4},"end":{"line":1809,"column":12}},{"start":{"line":1810,"column":4},"end":{"line":1817,"column":7}}]},"97":{"line":1797,"type":"if","locations":[{"start":{"line":1797,"column":6},"end":{"line":1797,"column":6}},{"start":{"line":1797,"column":6},"end":{"line":1797,"column":6}}]},"98":{"line":1803,"type":"if","locations":[{"start":{"line":1803,"column":6},"end":{"line":1803,"column":6}},{"start":{"line":1803,"column":6},"end":{"line":1803,"column":6}}]},"99":{"line":1811,"type":"if","locations":[{"start":{"line":1811,"column":6},"end":{"line":1811,"column":6}},{"start":{"line":1811,"column":6},"end":{"line":1811,"column":6}}]},"100":{"line":1820,"type":"if","locations":[{"start":{"line":1820,"column":2},"end":{"line":1820,"column":2}},{"start":{"line":1820,"column":2},"end":{"line":1820,"column":2}}]},"101":{"line":1825,"type":"if","locations":[{"start":{"line":1825,"column":2},"end":{"line":1825,"column":2}},{"start":{"line":1825,"column":2},"end":{"line":1825,"column":2}}]},"102":{"line":1829,"type":"if","locations":[{"start":{"line":1829,"column":2},"end":{"line":1829,"column":2}},{"start":{"line":1829,"column":2},"end":{"line":1829,"column":2}}]},"103":{"line":1831,"type":"if","locations":[{"start":{"line":1831,"column":4},"end":{"line":1831,"column":4}},{"start":{"line":1831,"column":4},"end":{"line":1831,"column":4}}]},"104":{"line":1835,"type":"if","locations":[{"start":{"line":1835,"column":4},"end":{"line":1835,"column":4}},{"start":{"line":1835,"column":4},"end":{"line":1835,"column":4}}]},"105":{"line":1843,"type":"if","locations":[{"start":{"line":1843,"column":2},"end":{"line":1843,"column":2}},{"start":{"line":1843,"column":2},"end":{"line":1843,"column":2}}]},"106":{"line":1905,"type":"switch","locations":[{"start":{"line":1906,"column":4},"end":{"line":1911,"column":12}},{"start":{"line":1912,"column":4},"end":{"line":1918,"column":12}}]},"107":{"line":1907,"type":"if","locations":[{"start":{"line":1907,"column":6},"end":{"line":1907,"column":6}},{"start":{"line":1907,"column":6},"end":{"line":1907,"column":6}}]},"108":{"line":1913,"type":"if","locations":[{"start":{"line":1913,"column":6},"end":{"line":1913,"column":6}},{"start":{"line":1913,"column":6},"end":{"line":1913,"column":6}}]},"109":{"line":1921,"type":"if","locations":[{"start":{"line":1921,"column":2},"end":{"line":1921,"column":2}},{"start":{"line":1921,"column":2},"end":{"line":1921,"column":2}}]},"110":{"line":1925,"type":"binary-expr","locations":[{"start":{"line":1925,"column":2},"end":{"line":1925,"column":9}},{"start":{"line":1925,"column":13},"end":{"line":1925,"column":37}}]},"111":{"line":1927,"type":"if","locations":[{"start":{"line":1927,"column":2},"end":{"line":1927,"column":2}},{"start":{"line":1927,"column":2},"end":{"line":1927,"column":2}}]},"112":{"line":1952,"type":"if","locations":[{"start":{"line":1952,"column":2},"end":{"line":1952,"column":2}},{"start":{"line":1952,"column":2},"end":{"line":1952,"column":2}}]},"113":{"line":1967,"type":"if","locations":[{"start":{"line":1967,"column":2},"end":{"line":1967,"column":2}},{"start":{"line":1967,"column":2},"end":{"line":1967,"column":2}}]},"114":{"line":1981,"type":"if","locations":[{"start":{"line":1981,"column":2},"end":{"line":1981,"column":2}},{"start":{"line":1981,"column":2},"end":{"line":1981,"column":2}}]},"115":{"line":1987,"type":"if","locations":[{"start":{"line":1987,"column":2},"end":{"line":1987,"column":2}},{"start":{"line":1987,"column":2},"end":{"line":1987,"column":2}}]},"116":{"line":1991,"type":"if","locations":[{"start":{"line":1991,"column":2},"end":{"line":1991,"column":2}},{"start":{"line":1991,"column":2},"end":{"line":1991,"column":2}}]},"117":{"line":1994,"type":"if","locations":[{"start":{"line":1994,"column":4},"end":{"line":1994,"column":4}},{"start":{"line":1994,"column":4},"end":{"line":1994,"column":4}}]},"118":{"line":1997,"type":"if","locations":[{"start":{"line":1997,"column":4},"end":{"line":1997,"column":4}},{"start":{"line":1997,"column":4},"end":{"line":1997,"column":4}}]},"119":{"line":2000,"type":"if","locations":[{"start":{"line":2000,"column":4},"end":{"line":2000,"column":4}},{"start":{"line":2000,"column":4},"end":{"line":2000,"column":4}}]},"120":{"line":2000,"type":"binary-expr","locations":[{"start":{"line":2000,"column":8},"end":{"line":2000,"column":19}},{"start":{"line":2000,"column":23},"end":{"line":2000,"column":34}}]},"121":{"line":2006,"type":"if","locations":[{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}},{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}}]},"122":{"line":2007,"type":"if","locations":[{"start":{"line":2007,"column":6},"end":{"line":2007,"column":6}},{"start":{"line":2007,"column":6},"end":{"line":2007,"column":6}}]},"123":{"line":2015,"type":"if","locations":[{"start":{"line":2015,"column":11},"end":{"line":2015,"column":11}},{"start":{"line":2015,"column":11},"end":{"line":2015,"column":11}}]},"124":{"line":2021,"type":"if","locations":[{"start":{"line":2021,"column":6},"end":{"line":2021,"column":6}},{"start":{"line":2021,"column":6},"end":{"line":2021,"column":6}}]},"125":{"line":2021,"type":"binary-expr","locations":[{"start":{"line":2021,"column":10},"end":{"line":2021,"column":24}},{"start":{"line":2021,"column":28},"end":{"line":2021,"column":68}}]},"126":{"line":2033,"type":"if","locations":[{"start":{"line":2033,"column":2},"end":{"line":2033,"column":2}},{"start":{"line":2033,"column":2},"end":{"line":2033,"column":2}}]},"127":{"line":2036,"type":"if","locations":[{"start":{"line":2036,"column":4},"end":{"line":2036,"column":4}},{"start":{"line":2036,"column":4},"end":{"line":2036,"column":4}}]},"128":{"line":2041,"type":"if","locations":[{"start":{"line":2041,"column":2},"end":{"line":2041,"column":2}},{"start":{"line":2041,"column":2},"end":{"line":2041,"column":2}}]},"129":{"line":2044,"type":"if","locations":[{"start":{"line":2044,"column":4},"end":{"line":2044,"column":4}},{"start":{"line":2044,"column":4},"end":{"line":2044,"column":4}}]},"130":{"line":2048,"type":"if","locations":[{"start":{"line":2048,"column":4},"end":{"line":2048,"column":4}},{"start":{"line":2048,"column":4},"end":{"line":2048,"column":4}}]},"131":{"line":2048,"type":"binary-expr","locations":[{"start":{"line":2048,"column":8},"end":{"line":2048,"column":12}},{"start":{"line":2048,"column":17},"end":{"line":2048,"column":36}},{"start":{"line":2048,"column":40},"end":{"line":2048,"column":69}}]},"132":{"line":2049,"type":"if","locations":[{"start":{"line":2049,"column":6},"end":{"line":2049,"column":6}},{"start":{"line":2049,"column":6},"end":{"line":2049,"column":6}}]},"133":{"line":2053,"type":"if","locations":[{"start":{"line":2053,"column":6},"end":{"line":2053,"column":6}},{"start":{"line":2053,"column":6},"end":{"line":2053,"column":6}}]},"134":{"line":2059,"type":"if","locations":[{"start":{"line":2059,"column":4},"end":{"line":2059,"column":4}},{"start":{"line":2059,"column":4},"end":{"line":2059,"column":4}}]},"135":{"line":2060,"type":"if","locations":[{"start":{"line":2060,"column":6},"end":{"line":2060,"column":6}},{"start":{"line":2060,"column":6},"end":{"line":2060,"column":6}}]},"136":{"line":2069,"type":"if","locations":[{"start":{"line":2069,"column":6},"end":{"line":2069,"column":6}},{"start":{"line":2069,"column":6},"end":{"line":2069,"column":6}}]},"137":{"line":2073,"type":"if","locations":[{"start":{"line":2073,"column":6},"end":{"line":2073,"column":6}},{"start":{"line":2073,"column":6},"end":{"line":2073,"column":6}}]},"138":{"line":2080,"type":"if","locations":[{"start":{"line":2080,"column":2},"end":{"line":2080,"column":2}},{"start":{"line":2080,"column":2},"end":{"line":2080,"column":2}}]},"139":{"line":2080,"type":"binary-expr","locations":[{"start":{"line":2080,"column":6},"end":{"line":2080,"column":24}},{"start":{"line":2080,"column":28},"end":{"line":2080,"column":38}}]},"140":{"line":2082,"type":"if","locations":[{"start":{"line":2082,"column":6},"end":{"line":2082,"column":6}},{"start":{"line":2082,"column":6},"end":{"line":2082,"column":6}}]},"141":{"line":2086,"type":"cond-expr","locations":[{"start":{"line":2086,"column":31},"end":{"line":2086,"column":40}},{"start":{"line":2086,"column":43},"end":{"line":2086,"column":46}}]},"142":{"line":2097,"type":"cond-expr","locations":[{"start":{"line":2097,"column":29},"end":{"line":2097,"column":38}},{"start":{"line":2097,"column":41},"end":{"line":2097,"column":44}}]},"143":{"line":2109,"type":"if","locations":[{"start":{"line":2109,"column":2},"end":{"line":2109,"column":2}},{"start":{"line":2109,"column":2},"end":{"line":2109,"column":2}}]},"144":{"line":2112,"type":"if","locations":[{"start":{"line":2112,"column":2},"end":{"line":2112,"column":2}},{"start":{"line":2112,"column":2},"end":{"line":2112,"column":2}}]},"145":{"line":2127,"type":"if","locations":[{"start":{"line":2127,"column":2},"end":{"line":2127,"column":2}},{"start":{"line":2127,"column":2},"end":{"line":2127,"column":2}}]},"146":{"line":2128,"type":"if","locations":[{"start":{"line":2128,"column":2},"end":{"line":2128,"column":2}},{"start":{"line":2128,"column":2},"end":{"line":2128,"column":2}}]},"147":{"line":2129,"type":"if","locations":[{"start":{"line":2129,"column":4},"end":{"line":2129,"column":4}},{"start":{"line":2129,"column":4},"end":{"line":2129,"column":4}}]},"148":{"line":2143,"type":"if","locations":[{"start":{"line":2143,"column":2},"end":{"line":2143,"column":2}},{"start":{"line":2143,"column":2},"end":{"line":2143,"column":2}}]},"149":{"line":2146,"type":"if","locations":[{"start":{"line":2146,"column":2},"end":{"line":2146,"column":2}},{"start":{"line":2146,"column":2},"end":{"line":2146,"column":2}}]},"150":{"line":2153,"type":"if","locations":[{"start":{"line":2153,"column":4},"end":{"line":2153,"column":4}},{"start":{"line":2153,"column":4},"end":{"line":2153,"column":4}}]},"151":{"line":2177,"type":"if","locations":[{"start":{"line":2177,"column":2},"end":{"line":2177,"column":2}},{"start":{"line":2177,"column":2},"end":{"line":2177,"column":2}}]},"152":{"line":2182,"type":"if","locations":[{"start":{"line":2182,"column":2},"end":{"line":2182,"column":2}},{"start":{"line":2182,"column":2},"end":{"line":2182,"column":2}}]},"153":{"line":2186,"type":"if","locations":[{"start":{"line":2186,"column":6},"end":{"line":2186,"column":6}},{"start":{"line":2186,"column":6},"end":{"line":2186,"column":6}}]},"154":{"line":2222,"type":"if","locations":[{"start":{"line":2222,"column":2},"end":{"line":2222,"column":2}},{"start":{"line":2222,"column":2},"end":{"line":2222,"column":2}}]},"155":{"line":2227,"type":"if","locations":[{"start":{"line":2227,"column":2},"end":{"line":2227,"column":2}},{"start":{"line":2227,"column":2},"end":{"line":2227,"column":2}}]},"156":{"line":2231,"type":"if","locations":[{"start":{"line":2231,"column":6},"end":{"line":2231,"column":6}},{"start":{"line":2231,"column":6},"end":{"line":2231,"column":6}}]},"157":{"line":2267,"type":"if","locations":[{"start":{"line":2267,"column":2},"end":{"line":2267,"column":2}},{"start":{"line":2267,"column":2},"end":{"line":2267,"column":2}}]},"158":{"line":2272,"type":"if","locations":[{"start":{"line":2272,"column":2},"end":{"line":2272,"column":2}},{"start":{"line":2272,"column":2},"end":{"line":2272,"column":2}}]},"159":{"line":2276,"type":"if","locations":[{"start":{"line":2276,"column":6},"end":{"line":2276,"column":6}},{"start":{"line":2276,"column":6},"end":{"line":2276,"column":6}}]},"160":{"line":2312,"type":"if","locations":[{"start":{"line":2312,"column":2},"end":{"line":2312,"column":2}},{"start":{"line":2312,"column":2},"end":{"line":2312,"column":2}}]},"161":{"line":2317,"type":"if","locations":[{"start":{"line":2317,"column":2},"end":{"line":2317,"column":2}},{"start":{"line":2317,"column":2},"end":{"line":2317,"column":2}}]},"162":{"line":2321,"type":"if","locations":[{"start":{"line":2321,"column":6},"end":{"line":2321,"column":6}},{"start":{"line":2321,"column":6},"end":{"line":2321,"column":6}}]},"163":{"line":2429,"type":"if","locations":[{"start":{"line":2429,"column":2},"end":{"line":2429,"column":2}},{"start":{"line":2429,"column":2},"end":{"line":2429,"column":2}}]},"164":{"line":2433,"type":"if","locations":[{"start":{"line":2433,"column":9},"end":{"line":2433,"column":9}},{"start":{"line":2433,"column":9},"end":{"line":2433,"column":9}}]},"165":{"line":2439,"type":"if","locations":[{"start":{"line":2439,"column":9},"end":{"line":2439,"column":9}},{"start":{"line":2439,"column":9},"end":{"line":2439,"column":9}}]},"166":{"line":2445,"type":"if","locations":[{"start":{"line":2445,"column":9},"end":{"line":2445,"column":9}},{"start":{"line":2445,"column":9},"end":{"line":2445,"column":9}}]},"167":{"line":2445,"type":"binary-expr","locations":[{"start":{"line":2445,"column":13},"end":{"line":2445,"column":43}},{"start":{"line":2445,"column":47},"end":{"line":2445,"column":51}},{"start":{"line":2445,"column":55},"end":{"line":2445,"column":63}},{"start":{"line":2445,"column":67},"end":{"line":2445,"column":76}}]},"168":{"line":2477,"type":"if","locations":[{"start":{"line":2477,"column":2},"end":{"line":2477,"column":2}},{"start":{"line":2477,"column":2},"end":{"line":2477,"column":2}}]},"169":{"line":2481,"type":"if","locations":[{"start":{"line":2481,"column":9},"end":{"line":2481,"column":9}},{"start":{"line":2481,"column":9},"end":{"line":2481,"column":9}}]},"170":{"line":2487,"type":"if","locations":[{"start":{"line":2487,"column":9},"end":{"line":2487,"column":9}},{"start":{"line":2487,"column":9},"end":{"line":2487,"column":9}}]},"171":{"line":2493,"type":"if","locations":[{"start":{"line":2493,"column":9},"end":{"line":2493,"column":9}},{"start":{"line":2493,"column":9},"end":{"line":2493,"column":9}}]},"172":{"line":2493,"type":"binary-expr","locations":[{"start":{"line":2493,"column":13},"end":{"line":2493,"column":43}},{"start":{"line":2493,"column":47},"end":{"line":2493,"column":51}},{"start":{"line":2493,"column":55},"end":{"line":2493,"column":63}},{"start":{"line":2493,"column":67},"end":{"line":2493,"column":76}}]},"173":{"line":2524,"type":"if","locations":[{"start":{"line":2524,"column":2},"end":{"line":2524,"column":2}},{"start":{"line":2524,"column":2},"end":{"line":2524,"column":2}}]},"174":{"line":2528,"type":"if","locations":[{"start":{"line":2528,"column":9},"end":{"line":2528,"column":9}},{"start":{"line":2528,"column":9},"end":{"line":2528,"column":9}}]},"175":{"line":2534,"type":"if","locations":[{"start":{"line":2534,"column":9},"end":{"line":2534,"column":9}},{"start":{"line":2534,"column":9},"end":{"line":2534,"column":9}}]},"176":{"line":2540,"type":"if","locations":[{"start":{"line":2540,"column":9},"end":{"line":2540,"column":9}},{"start":{"line":2540,"column":9},"end":{"line":2540,"column":9}}]},"177":{"line":2540,"type":"binary-expr","locations":[{"start":{"line":2540,"column":13},"end":{"line":2540,"column":43}},{"start":{"line":2540,"column":47},"end":{"line":2540,"column":51}},{"start":{"line":2540,"column":55},"end":{"line":2540,"column":63}},{"start":{"line":2540,"column":67},"end":{"line":2540,"column":76}}]},"178":{"line":2571,"type":"if","locations":[{"start":{"line":2571,"column":2},"end":{"line":2571,"column":2}},{"start":{"line":2571,"column":2},"end":{"line":2571,"column":2}}]},"179":{"line":2575,"type":"if","locations":[{"start":{"line":2575,"column":9},"end":{"line":2575,"column":9}},{"start":{"line":2575,"column":9},"end":{"line":2575,"column":9}}]},"180":{"line":2581,"type":"if","locations":[{"start":{"line":2581,"column":9},"end":{"line":2581,"column":9}},{"start":{"line":2581,"column":9},"end":{"line":2581,"column":9}}]},"181":{"line":2587,"type":"if","locations":[{"start":{"line":2587,"column":9},"end":{"line":2587,"column":9}},{"start":{"line":2587,"column":9},"end":{"line":2587,"column":9}}]},"182":{"line":2587,"type":"binary-expr","locations":[{"start":{"line":2587,"column":13},"end":{"line":2587,"column":43}},{"start":{"line":2587,"column":47},"end":{"line":2587,"column":51}},{"start":{"line":2587,"column":55},"end":{"line":2587,"column":63}},{"start":{"line":2587,"column":67},"end":{"line":2587,"column":76}}]},"183":{"line":2609,"type":"if","locations":[{"start":{"line":2609,"column":2},"end":{"line":2609,"column":2}},{"start":{"line":2609,"column":2},"end":{"line":2609,"column":2}}]},"184":{"line":2610,"type":"if","locations":[{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}},{"start":{"line":2610,"column":4},"end":{"line":2610,"column":4}}]},"185":{"line":2612,"type":"cond-expr","locations":[{"start":{"line":2612,"column":30},"end":{"line":2612,"column":43}},{"start":{"line":2612,"column":46},"end":{"line":2612,"column":73}}]},"186":{"line":2620,"type":"if","locations":[{"start":{"line":2620,"column":2},"end":{"line":2620,"column":2}},{"start":{"line":2620,"column":2},"end":{"line":2620,"column":2}}]},"187":{"line":2621,"type":"if","locations":[{"start":{"line":2621,"column":4},"end":{"line":2621,"column":4}},{"start":{"line":2621,"column":4},"end":{"line":2621,"column":4}}]},"188":{"line":2631,"type":"if","locations":[{"start":{"line":2631,"column":2},"end":{"line":2631,"column":2}},{"start":{"line":2631,"column":2},"end":{"line":2631,"column":2}}]},"189":{"line":2631,"type":"binary-expr","locations":[{"start":{"line":2631,"column":6},"end":{"line":2631,"column":10}},{"start":{"line":2631,"column":14},"end":{"line":2631,"column":27}}]},"190":{"line":2635,"type":"if","locations":[{"start":{"line":2635,"column":2},"end":{"line":2635,"column":2}},{"start":{"line":2635,"column":2},"end":{"line":2635,"column":2}}]},"191":{"line":2641,"type":"if","locations":[{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}},{"start":{"line":2641,"column":2},"end":{"line":2641,"column":2}}]},"192":{"line":2643,"type":"if","locations":[{"start":{"line":2643,"column":4},"end":{"line":2643,"column":4}},{"start":{"line":2643,"column":4},"end":{"line":2643,"column":4}}]},"193":{"line":2646,"type":"if","locations":[{"start":{"line":2646,"column":11},"end":{"line":2646,"column":11}},{"start":{"line":2646,"column":11},"end":{"line":2646,"column":11}}]},"194":{"line":2646,"type":"binary-expr","locations":[{"start":{"line":2646,"column":15},"end":{"line":2646,"column":23}},{"start":{"line":2646,"column":27},"end":{"line":2646,"column":54}}]},"195":{"line":2655,"type":"if","locations":[{"start":{"line":2655,"column":4},"end":{"line":2655,"column":4}},{"start":{"line":2655,"column":4},"end":{"line":2655,"column":4}}]},"196":{"line":2655,"type":"binary-expr","locations":[{"start":{"line":2655,"column":8},"end":{"line":2655,"column":15}},{"start":{"line":2655,"column":19},"end":{"line":2655,"column":35}}]},"197":{"line":2659,"type":"binary-expr","locations":[{"start":{"line":2659,"column":7},"end":{"line":2659,"column":14}},{"start":{"line":2659,"column":18},"end":{"line":2659,"column":35}},{"start":{"line":2659,"column":40},"end":{"line":2659,"column":59}}]},"198":{"line":2662,"type":"if","locations":[{"start":{"line":2662,"column":4},"end":{"line":2662,"column":4}},{"start":{"line":2662,"column":4},"end":{"line":2662,"column":4}}]},"199":{"line":2665,"type":"if","locations":[{"start":{"line":2665,"column":11},"end":{"line":2665,"column":11}},{"start":{"line":2665,"column":11},"end":{"line":2665,"column":11}}]},"200":{"line":2665,"type":"binary-expr","locations":[{"start":{"line":2665,"column":15},"end":{"line":2665,"column":23}},{"start":{"line":2665,"column":27},"end":{"line":2665,"column":54}}]},"201":{"line":2671,"type":"if","locations":[{"start":{"line":2671,"column":2},"end":{"line":2671,"column":2}},{"start":{"line":2671,"column":2},"end":{"line":2671,"column":2}}]},"202":{"line":2674,"type":"binary-expr","locations":[{"start":{"line":2674,"column":4},"end":{"line":2674,"column":12}},{"start":{"line":2674,"column":16},"end":{"line":2674,"column":30}}]},"203":{"line":2678,"type":"if","locations":[{"start":{"line":2678,"column":2},"end":{"line":2678,"column":2}},{"start":{"line":2678,"column":2},"end":{"line":2678,"column":2}}]},"204":{"line":2682,"type":"if","locations":[{"start":{"line":2682,"column":2},"end":{"line":2682,"column":2}},{"start":{"line":2682,"column":2},"end":{"line":2682,"column":2}}]},"205":{"line":2687,"type":"if","locations":[{"start":{"line":2687,"column":2},"end":{"line":2687,"column":2}},{"start":{"line":2687,"column":2},"end":{"line":2687,"column":2}}]},"206":{"line":2688,"type":"if","locations":[{"start":{"line":2688,"column":4},"end":{"line":2688,"column":4}},{"start":{"line":2688,"column":4},"end":{"line":2688,"column":4}}]},"207":{"line":2718,"type":"if","locations":[{"start":{"line":2718,"column":2},"end":{"line":2718,"column":2}},{"start":{"line":2718,"column":2},"end":{"line":2718,"column":2}}]},"208":{"line":2721,"type":"if","locations":[{"start":{"line":2721,"column":9},"end":{"line":2721,"column":9}},{"start":{"line":2721,"column":9},"end":{"line":2721,"column":9}}]},"209":{"line":2727,"type":"if","locations":[{"start":{"line":2727,"column":4},"end":{"line":2727,"column":4}},{"start":{"line":2727,"column":4},"end":{"line":2727,"column":4}}]},"210":{"line":2733,"type":"if","locations":[{"start":{"line":2733,"column":6},"end":{"line":2733,"column":6}},{"start":{"line":2733,"column":6},"end":{"line":2733,"column":6}}]},"211":{"line":2742,"type":"if","locations":[{"start":{"line":2742,"column":2},"end":{"line":2742,"column":2}},{"start":{"line":2742,"column":2},"end":{"line":2742,"column":2}}]},"212":{"line":2801,"type":"if","locations":[{"start":{"line":2801,"column":2},"end":{"line":2801,"column":2}},{"start":{"line":2801,"column":2},"end":{"line":2801,"column":2}}]},"213":{"line":2803,"type":"if","locations":[{"start":{"line":2803,"column":9},"end":{"line":2803,"column":9}},{"start":{"line":2803,"column":9},"end":{"line":2803,"column":9}}]},"214":{"line":2803,"type":"binary-expr","locations":[{"start":{"line":2803,"column":13},"end":{"line":2803,"column":24}},{"start":{"line":2803,"column":28},"end":{"line":2803,"column":47}}]},"215":{"line":2878,"type":"if","locations":[{"start":{"line":2878,"column":2},"end":{"line":2878,"column":2}},{"start":{"line":2878,"column":2},"end":{"line":2878,"column":2}}]},"216":{"line":2885,"type":"if","locations":[{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}},{"start":{"line":2885,"column":2},"end":{"line":2885,"column":2}}]},"217":{"line":2893,"type":"if","locations":[{"start":{"line":2893,"column":4},"end":{"line":2893,"column":4}},{"start":{"line":2893,"column":4},"end":{"line":2893,"column":4}}]},"218":{"line":2893,"type":"binary-expr","locations":[{"start":{"line":2893,"column":8},"end":{"line":2893,"column":17}},{"start":{"line":2893,"column":21},"end":{"line":2893,"column":39}},{"start":{"line":2893,"column":43},"end":{"line":2893,"column":58}}]},"219":{"line":2916,"type":"binary-expr","locations":[{"start":{"line":2916,"column":2},"end":{"line":2916,"column":5}},{"start":{"line":2916,"column":10},"end":{"line":2916,"column":32}}]},"220":{"line":2920,"type":"binary-expr","locations":[{"start":{"line":2920,"column":14},"end":{"line":2920,"column":26}},{"start":{"line":2920,"column":30},"end":{"line":2920,"column":49}}]},"221":{"line":2921,"type":"binary-expr","locations":[{"start":{"line":2921,"column":15},"end":{"line":2921,"column":27}},{"start":{"line":2921,"column":31},"end":{"line":2921,"column":50}},{"start":{"line":2922,"column":9},"end":{"line":2922,"column":29}},{"start":{"line":2922,"column":33},"end":{"line":2922,"column":60}}]},"222":{"line":2926,"type":"if","locations":[{"start":{"line":2926,"column":4},"end":{"line":2926,"column":4}},{"start":{"line":2926,"column":4},"end":{"line":2926,"column":4}}]},"223":{"line":2952,"type":"if","locations":[{"start":{"line":2952,"column":2},"end":{"line":2952,"column":2}},{"start":{"line":2952,"column":2},"end":{"line":2952,"column":2}}]},"224":{"line":2960,"type":"if","locations":[{"start":{"line":2960,"column":6},"end":{"line":2960,"column":6}},{"start":{"line":2960,"column":6},"end":{"line":2960,"column":6}}]},"225":{"line":2961,"type":"binary-expr","locations":[{"start":{"line":2961,"column":8},"end":{"line":2961,"column":16}},{"start":{"line":2961,"column":21},"end":{"line":2961,"column":34}}]},"226":{"line":2968,"type":"if","locations":[{"start":{"line":2968,"column":2},"end":{"line":2968,"column":2}},{"start":{"line":2968,"column":2},"end":{"line":2968,"column":2}}]},"227":{"line":2993,"type":"binary-expr","locations":[{"start":{"line":2993,"column":17},"end":{"line":2993,"column":29}},{"start":{"line":2993,"column":33},"end":{"line":2993,"column":35}}]},"228":{"line":3088,"type":"if","locations":[{"start":{"line":3088,"column":2},"end":{"line":3088,"column":2}},{"start":{"line":3088,"column":2},"end":{"line":3088,"column":2}}]},"229":{"line":3138,"type":"if","locations":[{"start":{"line":3138,"column":2},"end":{"line":3138,"column":2}},{"start":{"line":3138,"column":2},"end":{"line":3138,"column":2}}]},"230":{"line":3138,"type":"binary-expr","locations":[{"start":{"line":3138,"column":6},"end":{"line":3138,"column":9}},{"start":{"line":3138,"column":13},"end":{"line":3138,"column":46}}]},"231":{"line":3143,"type":"if","locations":[{"start":{"line":3143,"column":2},"end":{"line":3143,"column":2}},{"start":{"line":3143,"column":2},"end":{"line":3143,"column":2}}]},"232":{"line":3147,"type":"if","locations":[{"start":{"line":3147,"column":2},"end":{"line":3147,"column":2}},{"start":{"line":3147,"column":2},"end":{"line":3147,"column":2}}]},"233":{"line":3147,"type":"binary-expr","locations":[{"start":{"line":3147,"column":6},"end":{"line":3147,"column":10}},{"start":{"line":3147,"column":14},"end":{"line":3147,"column":38}}]},"234":{"line":3149,"type":"if","locations":[{"start":{"line":3149,"column":6},"end":{"line":3149,"column":6}},{"start":{"line":3149,"column":6},"end":{"line":3149,"column":6}}]},"235":{"line":3272,"type":"if","locations":[{"start":{"line":3272,"column":2},"end":{"line":3272,"column":2}},{"start":{"line":3272,"column":2},"end":{"line":3272,"column":2}}]},"236":{"line":3273,"type":"if","locations":[{"start":{"line":3273,"column":4},"end":{"line":3273,"column":4}},{"start":{"line":3273,"column":4},"end":{"line":3273,"column":4}}]},"237":{"line":3275,"type":"if","locations":[{"start":{"line":3275,"column":11},"end":{"line":3275,"column":11}},{"start":{"line":3275,"column":11},"end":{"line":3275,"column":11}}]},"238":{"line":3278,"type":"if","locations":[{"start":{"line":3278,"column":11},"end":{"line":3278,"column":11}},{"start":{"line":3278,"column":11},"end":{"line":3278,"column":11}}]},"239":{"line":3279,"type":"if","locations":[{"start":{"line":3279,"column":6},"end":{"line":3279,"column":6}},{"start":{"line":3279,"column":6},"end":{"line":3279,"column":6}}]},"240":{"line":3286,"type":"if","locations":[{"start":{"line":3286,"column":9},"end":{"line":3286,"column":9}},{"start":{"line":3286,"column":9},"end":{"line":3286,"column":9}}]},"241":{"line":3287,"type":"if","locations":[{"start":{"line":3287,"column":4},"end":{"line":3287,"column":4}},{"start":{"line":3287,"column":4},"end":{"line":3287,"column":4}}]},"242":{"line":3287,"type":"binary-expr","locations":[{"start":{"line":3287,"column":8},"end":{"line":3287,"column":40}},{"start":{"line":3287,"column":44},"end":{"line":3287,"column":76}}]},"243":{"line":3289,"type":"if","locations":[{"start":{"line":3289,"column":11},"end":{"line":3289,"column":11}},{"start":{"line":3289,"column":11},"end":{"line":3289,"column":11}}]},"244":{"line":3289,"type":"binary-expr","locations":[{"start":{"line":3289,"column":15},"end":{"line":3289,"column":47}},{"start":{"line":3289,"column":51},"end":{"line":3289,"column":78}}]},"245":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":11},"end":{"line":3292,"column":11}},{"start":{"line":3292,"column":11},"end":{"line":3292,"column":11}}]},"246":{"line":3292,"type":"binary-expr","locations":[{"start":{"line":3292,"column":15},"end":{"line":3292,"column":47}},{"start":{"line":3292,"column":51},"end":{"line":3292,"column":79}}]},"247":{"line":3294,"type":"if","locations":[{"start":{"line":3294,"column":6},"end":{"line":3294,"column":6}},{"start":{"line":3294,"column":6},"end":{"line":3294,"column":6}}]},"248":{"line":3301,"type":"if","locations":[{"start":{"line":3301,"column":9},"end":{"line":3301,"column":9}},{"start":{"line":3301,"column":9},"end":{"line":3301,"column":9}}]},"249":{"line":3302,"type":"if","locations":[{"start":{"line":3302,"column":4},"end":{"line":3302,"column":4}},{"start":{"line":3302,"column":4},"end":{"line":3302,"column":4}}]},"250":{"line":3302,"type":"binary-expr","locations":[{"start":{"line":3302,"column":8},"end":{"line":3302,"column":40}},{"start":{"line":3302,"column":44},"end":{"line":3302,"column":76}},{"start":{"line":3303,"column":11},"end":{"line":3303,"column":43}}]},"251":{"line":3389,"type":"if","locations":[{"start":{"line":3389,"column":2},"end":{"line":3389,"column":2}},{"start":{"line":3389,"column":2},"end":{"line":3389,"column":2}}]},"252":{"line":3389,"type":"binary-expr","locations":[{"start":{"line":3389,"column":6},"end":{"line":3389,"column":24}},{"start":{"line":3389,"column":28},"end":{"line":3389,"column":46}}]},"253":{"line":3459,"type":"if","locations":[{"start":{"line":3459,"column":2},"end":{"line":3459,"column":2}},{"start":{"line":3459,"column":2},"end":{"line":3459,"column":2}}]},"254":{"line":3459,"type":"binary-expr","locations":[{"start":{"line":3459,"column":6},"end":{"line":3459,"column":18}},{"start":{"line":3459,"column":22},"end":{"line":3459,"column":64}}]},"255":{"line":3463,"type":"if","locations":[{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}},{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}}]},"256":{"line":3463,"type":"binary-expr","locations":[{"start":{"line":3463,"column":6},"end":{"line":3463,"column":18}},{"start":{"line":3463,"column":22},"end":{"line":3463,"column":64}}]}},"code":["/*!"," * Module dependencies."," */","","var PromiseProvider = require('./promise_provider');","var QueryCursor = require('./querycursor');","var QueryStream = require('./querystream');","var cast = require('./cast');","var castUpdate = require('./services/query/castUpdate');","var helpers = require('./queryhelpers');","var mquery = require('mquery');","var readPref = require('./drivers').ReadPreference;","var setDefaultsOnInsert = require('./services/setDefaultsOnInsert');","var updateValidators = require('./services/updateValidators');","var util = require('util');","var utils = require('./utils');","","/**"," * Query constructor used for building queries."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.setOptions({ lean : true });"," *     query.collection(model.collection);"," *     query.where('age').gte(21).exec(callback);"," *"," * @param {Object} [options]"," * @param {Object} [model]"," * @param {Object} [conditions]"," * @param {Object} [collection] Mongoose collection"," * @api private"," */","","function Query(conditions, options, model, collection) {","  // this stuff is for dealing with custom queries created by #toConstructor","  if (!this._mongooseOptions) {","    this._mongooseOptions = {};","  }","","  // this is the case where we have a CustomQuery, we need to check if we got","  // options passed in, and if we did, merge them in","  if (options) {","    var keys = Object.keys(options);","    for (var i = 0; i < keys.length; ++i) {","      var k = keys[i];","      this._mongooseOptions[k] = options[k];","    }","  }","","  if (collection) {","    this.mongooseCollection = collection;","  }","","  if (model) {","    this.model = model;","    this.schema = model.schema;","  }","","  // this is needed because map reduce returns a model that can be queried, but","  // all of the queries on said model should be lean","  if (this.model && this.model._mapreduce) {","    this.lean();","  }","","  // inherit mquery","  mquery.call(this, this.mongooseCollection, options);","","  if (conditions) {","    this.find(conditions);","  }","","  if (this.schema) {","    var kareemOptions = {","      useErrorHandlers: true,","      numCallbackParams: 1","    };","    this._count = this.model.hooks.createWrapper('count',","        Query.prototype._count, this, kareemOptions);","    this._execUpdate = this.model.hooks.createWrapper('update',","        Query.prototype._execUpdate, this, kareemOptions);","    this._find = this.model.hooks.createWrapper('find',","        Query.prototype._find, this, kareemOptions);","    this._findOne = this.model.hooks.createWrapper('findOne',","        Query.prototype._findOne, this, kareemOptions);","    this._findOneAndRemove = this.model.hooks.createWrapper('findOneAndRemove',","        Query.prototype._findOneAndRemove, this, kareemOptions);","    this._findOneAndUpdate = this.model.hooks.createWrapper('findOneAndUpdate',","        Query.prototype._findOneAndUpdate, this, kareemOptions);","    this._replaceOne = this.model.hooks.createWrapper('replaceOne',","        Query.prototype._replaceOne, this, kareemOptions);","    this._updateMany = this.model.hooks.createWrapper('updateMany',","        Query.prototype._updateMany, this, kareemOptions);","    this._updateOne = this.model.hooks.createWrapper('updateOne',","        Query.prototype._updateOne, this, kareemOptions);","  }","}","","/*!"," * inherit mquery"," */","","Query.prototype = new mquery;","Query.prototype.constructor = Query;","Query.base = mquery.prototype;","","/**"," * Flag to opt out of using `$geoWithin`."," *"," *     mongoose.Query.use$geoWithin = false;"," *"," * MongoDB 2.4 deprecated the use of `$within`, replacing it with `$geoWithin`. Mongoose uses `$geoWithin` by default (which is 100% backward compatible with $within). If you are running an older version of MongoDB, set this flag to `false` so your `within()` queries continue to work."," *"," * @see http://docs.mongodb.org/manual/reference/operator/geoWithin/"," * @default true"," * @property use$geoWithin"," * @memberOf Query"," * @receiver Query"," * @api public"," */","","Query.use$geoWithin = mquery.use$geoWithin;","","/**"," * Converts this query to a customized, reusable query constructor with all arguments and options retained."," *"," * ####Example"," *"," *     // Create a query for adventure movies and read from the primary"," *     // node in the replica-set unless it is down, in which case we'll"," *     // read from a secondary node."," *     var query = Movie.find({ tags: 'adventure' }).read('primaryPreferred');"," *"," *     // create a custom Query constructor based off these settings"," *     var Adventure = query.toConstructor();"," *"," *     // Adventure is now a subclass of mongoose.Query and works the same way but with the"," *     // default query parameters and options set."," *     Adventure().exec(callback)"," *"," *     // further narrow down our query results while still using the previous settings"," *     Adventure().where({ name: /^Life/ }).exec(callback);"," *"," *     // since Adventure is a stand-alone constructor we can also add our own"," *     // helper methods and getters without impacting global queries"," *     Adventure.prototype.startsWith = function (prefix) {"," *       this.where({ name: new RegExp('^' + prefix) })"," *       return this;"," *     }"," *     Object.defineProperty(Adventure.prototype, 'highlyRated', {"," *       get: function () {"," *         this.where({ rating: { $gt: 4.5 }});"," *         return this;"," *       }"," *     })"," *     Adventure().highlyRated.startsWith('Life').exec(callback)"," *"," * New in 3.7.3"," *"," * @return {Query} subclass-of-Query"," * @api public"," */","","Query.prototype.toConstructor = function toConstructor() {","  var model = this.model;","  var coll = this.mongooseCollection;","","  var CustomQuery = function(criteria, options) {","    if (!(this instanceof CustomQuery)) {","      return new CustomQuery(criteria, options);","    }","    this._mongooseOptions = utils.clone(p._mongooseOptions);","    Query.call(this, criteria, options || null, model, coll);","  };","","  util.inherits(CustomQuery, Query);","","  // set inherited defaults","  var p = CustomQuery.prototype;","","  p.options = {};","","  p.setOptions(this.options);","","  p.op = this.op;","  p._conditions = utils.clone(this._conditions, { retainKeyOrder: true });","  p._fields = utils.clone(this._fields);","  p._update = utils.clone(this._update);","  p._path = this._path;","  p._distinct = this._distinct;","  p._collection = this._collection;","  p._mongooseOptions = this._mongooseOptions;","","  return CustomQuery;","};","","/**"," * Specifies a javascript function or expression to pass to MongoDBs query system."," *"," * ####Example"," *"," *     query.$where('this.comments.length === 10 || this.name.length === 5')"," *"," *     // or"," *"," *     query.$where(function () {"," *       return this.comments.length === 10 || this.name.length === 5;"," *     })"," *"," * ####NOTE:"," *"," * Only use `$where` when you have a condition that cannot be met using other MongoDB operators like `$lt`."," * **Be sure to read about all of [its caveats](http://docs.mongodb.org/manual/reference/operator/where/) before using.**"," *"," * @see $where http://docs.mongodb.org/manual/reference/operator/where/"," * @method $where"," * @param {String|Function} js javascript string or function"," * @return {Query} this"," * @memberOf Query"," * @method $where"," * @api public"," */","","/**"," * Specifies a `path` for use with chaining."," *"," * ####Example"," *"," *     // instead of writing:"," *     User.find({age: {$gte: 21, $lte: 65}}, callback);"," *"," *     // we can instead write:"," *     User.where('age').gte(21).lte(65);"," *"," *     // passing query conditions is permitted"," *     User.find().where({ name: 'vonderful' })"," *"," *     // chaining"," *     User"," *     .where('age').gte(21).lte(65)"," *     .where('name', /^vonderful/i)"," *     .where('friends').slice(10)"," *     .exec(callback)"," *"," * @method where"," * @memberOf Query"," * @param {String|Object} [path]"," * @param {any} [val]"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies the complementary comparison value for paths specified with `where()`"," *"," * ####Example"," *"," *     User.where('age').equals(49);"," *"," *     // is the same as"," *"," *     User.where('age', 49);"," *"," * @method equals"," * @memberOf Query"," * @param {Object} val"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for an `$or` condition."," *"," * ####Example"," *"," *     query.or([{ color: 'red' }, { status: 'emergency' }])"," *"," * @see $or http://docs.mongodb.org/manual/reference/operator/or/"," * @method or"," * @memberOf Query"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for a `$nor` condition."," *"," * ####Example"," *"," *     query.nor([{ color: 'green' }, { status: 'ok' }])"," *"," * @see $nor http://docs.mongodb.org/manual/reference/operator/nor/"," * @method nor"," * @memberOf Query"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies arguments for a `$and` condition."," *"," * ####Example"," *"," *     query.and([{ color: 'green' }, { status: 'ok' }])"," *"," * @method and"," * @memberOf Query"," * @see $and http://docs.mongodb.org/manual/reference/operator/and/"," * @param {Array} array array of conditions"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies a $gt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * ####Example"," *"," *     Thing.find().where('age').gt(21)"," *"," *     // or"," *     Thing.find().gt('age', 21)"," *"," * @method gt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $gt http://docs.mongodb.org/manual/reference/operator/gt/"," * @api public"," */","","/**"," * Specifies a $gte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method gte"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $gte http://docs.mongodb.org/manual/reference/operator/gte/"," * @api public"," */","","/**"," * Specifies a $lt query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lt"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @see $lt http://docs.mongodb.org/manual/reference/operator/lt/"," * @api public"," */","","/**"," * Specifies a $lte query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @method lte"," * @see $lte http://docs.mongodb.org/manual/reference/operator/lte/"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $ne query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $ne http://docs.mongodb.org/manual/reference/operator/ne/"," * @method ne"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $in query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $in http://docs.mongodb.org/manual/reference/operator/in/"," * @method in"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $nin query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $nin http://docs.mongodb.org/manual/reference/operator/nin/"," * @method nin"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies an $all query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $all http://docs.mongodb.org/manual/reference/operator/all/"," * @method all"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $size query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * ####Example"," *"," *     MyModel.where('tags').size(0).exec(function (err, docs) {"," *       if (err) return handleError(err);"," *"," *       assert(Array.isArray(docs));"," *       console.log('documents with 0 tags', docs);"," *     })"," *"," * @see $size http://docs.mongodb.org/manual/reference/operator/size/"," * @method size"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $regex query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $regex http://docs.mongodb.org/manual/reference/operator/regex/"," * @method regex"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a $maxDistance query condition."," *"," * When called with one argument, the most recent path passed to `where()` is used."," *"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," * @method maxDistance"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies a `$mod` condition"," *"," * @method mod"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @see $mod http://docs.mongodb.org/manual/reference/operator/mod/"," * @api public"," */","","/**"," * Specifies an `$exists` condition"," *"," * ####Example"," *"," *     // { name: { $exists: true }}"," *     Thing.where('name').exists()"," *     Thing.where('name').exists(true)"," *     Thing.find().exists('name')"," *"," *     // { name: { $exists: false }}"," *     Thing.where('name').exists(false);"," *     Thing.find().exists('name', false);"," *"," * @method exists"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val"," * @return {Query} this"," * @see $exists http://docs.mongodb.org/manual/reference/operator/exists/"," * @api public"," */","","/**"," * Specifies an `$elemMatch` condition"," *"," * ####Example"," *"," *     query.elemMatch('comment', { author: 'autobot', votes: {$gte: 5}})"," *"," *     query.where('comment').elemMatch({ author: 'autobot', votes: {$gte: 5}})"," *"," *     query.elemMatch('comment', function (elem) {"," *       elem.where('author').equals('autobot');"," *       elem.where('votes').gte(5);"," *     })"," *"," *     query.where('comment').elemMatch(function (elem) {"," *       elem.where({ author: 'autobot' });"," *       elem.where('votes').gte(5);"," *     })"," *"," * @method elemMatch"," * @memberOf Query"," * @param {String|Object|Function} path"," * @param {Object|Function} criteria"," * @return {Query} this"," * @see $elemMatch http://docs.mongodb.org/manual/reference/operator/elemMatch/"," * @api public"," */","","/**"," * Defines a `$within` or `$geoWithin` argument for geo-spatial queries."," *"," * ####Example"," *"," *     query.where(path).within().box()"," *     query.where(path).within().circle()"," *     query.where(path).within().geometry()"," *"," *     query.where('loc').within({ center: [50,50], radius: 10, unique: true, spherical: true });"," *     query.where('loc').within({ box: [[40.73, -73.9], [40.7, -73.988]] });"," *     query.where('loc').within({ polygon: [[],[],[],[]] });"," *"," *     query.where('loc').within([], [], []) // polygon"," *     query.where('loc').within([], []) // box"," *     query.where('loc').within({ type: 'LineString', coordinates: [...] }); // geometry"," *"," * **MUST** be used after `where()`."," *"," * ####NOTE:"," *"," * As of Mongoose 3.7, `$geoWithin` is always used for queries. To change this behavior, see [Query.use$geoWithin](#query_Query-use%2524geoWithin)."," *"," * ####NOTE:"," *"," * In Mongoose 3.7, `within` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within)."," *"," * @method within"," * @see $polygon http://docs.mongodb.org/manual/reference/operator/polygon/"," * @see $box http://docs.mongodb.org/manual/reference/operator/box/"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see $center http://docs.mongodb.org/manual/reference/operator/center/"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @memberOf Query"," * @return {Query} this"," * @api public"," */","","/**"," * Specifies a $slice projection for an array."," *"," * ####Example"," *"," *     query.slice('comments', 5)"," *     query.slice('comments', -5)"," *     query.slice('comments', [10, 5])"," *     query.where('comments').slice(5)"," *     query.where('comments').slice([-10, 5])"," *"," * @method slice"," * @memberOf Query"," * @param {String} [path]"," * @param {Number} val number/range of elements to slice"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/Retrieving+a+Subset+of+Fields#RetrievingaSubsetofFields-RetrievingaSubrangeofArrayElements"," * @see $slice http://docs.mongodb.org/manual/reference/projection/slice/#prj._S_slice"," * @api public"," */","","/**"," * Specifies the maximum number of documents the query will return."," *"," * ####Example"," *"," *     query.limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method limit"," * @memberOf Query"," * @param {Number} val"," * @api public"," */","","/**"," * Specifies the number of documents to skip."," *"," * ####Example"," *"," *     query.skip(100).limit(20)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method skip"," * @memberOf Query"," * @param {Number} val"," * @see cursor.skip http://docs.mongodb.org/manual/reference/method/cursor.skip/"," * @api public"," */","","/**"," * Specifies the maxScan option."," *"," * ####Example"," *"," *     query.maxScan(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method maxScan"," * @memberOf Query"," * @param {Number} val"," * @see maxScan http://docs.mongodb.org/manual/reference/operator/maxScan/"," * @api public"," */","","/**"," * Specifies the batchSize option."," *"," * ####Example"," *"," *     query.batchSize(100)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method batchSize"," * @memberOf Query"," * @param {Number} val"," * @see batchSize http://docs.mongodb.org/manual/reference/method/cursor.batchSize/"," * @api public"," */","","/**"," * Specifies the `comment` option."," *"," * ####Example"," *"," *     query.comment('login query')"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method comment"," * @memberOf Query"," * @param {Number} val"," * @see comment http://docs.mongodb.org/manual/reference/operator/comment/"," * @api public"," */","","/**"," * Specifies this query as a `snapshot` query."," *"," * ####Example"," *"," *     query.snapshot() // true"," *     query.snapshot(true)"," *     query.snapshot(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method snapshot"," * @memberOf Query"," * @see snapshot http://docs.mongodb.org/manual/reference/operator/snapshot/"," * @return {Query} this"," * @api public"," */","","/**"," * Sets query hints."," *"," * ####Example"," *"," *     query.hint({ indexA: 1, indexB: -1})"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @method hint"," * @memberOf Query"," * @param {Object} val a hint object"," * @return {Query} this"," * @see $hint http://docs.mongodb.org/manual/reference/operator/hint/"," * @api public"," */","","/**"," * Specifies which document fields to include or exclude (also known as the query \"projection\")"," *"," * When using string syntax, prefixing a path with `-` will flag that path as excluded. When a path does not have the `-` prefix, it is included. Lastly, if a path is prefixed with `+`, it forces inclusion of the path, which is useful for paths excluded at the [schema level](/docs/api.html#schematype_SchemaType-select)."," *"," * ####Example"," *"," *     // include a and b, exclude other fields"," *     query.select('a b');"," *"," *     // exclude c and d, include other fields"," *     query.select('-c -d');"," *"," *     // or you may use object notation, useful when"," *     // you have keys already prefixed with a \"-\""," *     query.select({ a: 1, b: 1 });"," *     query.select({ c: 0, d: 0 });"," *"," *     // force inclusion of field excluded at schema level"," *     query.select('+path')"," *"," * ####NOTE:"," *"," * Cannot be used with `distinct()`."," *"," * _v2 had slightly different syntax such as allowing arrays of field names. This support was removed in v3._"," *"," * @method select"," * @memberOf Query"," * @param {Object|String} arg"," * @return {Query} this"," * @see SchemaType"," * @api public"," */","","/**"," * _DEPRECATED_ Sets the slaveOk option."," *"," * **Deprecated** in MongoDB 2.2 in favor of [read preferences](#query_Query-read)."," *"," * ####Example:"," *"," *     query.slaveOk() // true"," *     query.slaveOk(true)"," *     query.slaveOk(false)"," *"," * @method slaveOk"," * @memberOf Query"," * @deprecated use read() preferences instead if on mongodb >= 2.2"," * @param {Boolean} v defaults to true"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see slaveOk http://docs.mongodb.org/manual/reference/method/rs.slaveOk/"," * @see read() #query_Query-read"," * @return {Query} this"," * @api public"," */","","/**"," * Determines the MongoDB nodes from which to read."," *"," * ####Preferences:"," *"," *     primary - (default) Read from primary only. Operations will produce an error if primary is unavailable. Cannot be combined with tags."," *     secondary            Read from secondary if available, otherwise error."," *     primaryPreferred     Read from primary if available, otherwise a secondary."," *     secondaryPreferred   Read from a secondary if available, otherwise read from the primary."," *     nearest              All operations read from among the nearest candidates, but unlike other modes, this option will include both the primary and all secondaries in the random selection."," *"," * Aliases"," *"," *     p   primary"," *     pp  primaryPreferred"," *     s   secondary"," *     sp  secondaryPreferred"," *     n   nearest"," *"," * ####Example:"," *"," *     new Query().read('primary')"," *     new Query().read('p')  // same as primary"," *"," *     new Query().read('primaryPreferred')"," *     new Query().read('pp') // same as primaryPreferred"," *"," *     new Query().read('secondary')"," *     new Query().read('s')  // same as secondary"," *"," *     new Query().read('secondaryPreferred')"," *     new Query().read('sp') // same as secondaryPreferred"," *"," *     new Query().read('nearest')"," *     new Query().read('n')  // same as nearest"," *"," *     // read from secondaries with matching tags"," *     new Query().read('s', [{ dc:'sf', s: 1 },{ dc:'ma', s: 2 }])"," *"," * Read more about how to use read preferrences [here](http://docs.mongodb.org/manual/applications/replication/#read-preference) and [here](http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences)."," *"," * @method read"," * @memberOf Query"," * @param {String} pref one of the listed preference options or aliases"," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences"," * @return {Query} this"," * @api public"," */","","Query.prototype.read = function read(pref, tags) {","  // first cast into a ReadPreference object to support tags","  var read = readPref.call(readPref, pref, tags);","  return Query.base.read.call(this, read);","};","","/**"," * Merges another Query or conditions object into this one."," *"," * When a Query is passed, conditions, field selection and options are merged."," *"," * New in 3.7.0"," *"," * @method merge"," * @memberOf Query"," * @param {Query|Object} source"," * @return {Query} this"," */","","/**"," * Sets query options."," *"," * ####Options:"," *"," * - [tailable](http://www.mongodb.org/display/DOCS/Tailable+Cursors) *"," * - [sort](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsort(\\)%7D%7D) *"," * - [limit](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Blimit%28%29%7D%7D) *"," * - [skip](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bskip%28%29%7D%7D) *"," * - [maxscan](https://docs.mongodb.org/v3.2/reference/operator/meta/maxScan/#metaOp._S_maxScan) *"," * - [batchSize](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7BbatchSize%28%29%7D%7D) *"," * - [comment](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24comment) *"," * - [snapshot](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%7B%7Bsnapshot%28%29%7D%7D) *"," * - [hint](http://www.mongodb.org/display/DOCS/Advanced+Queries#AdvancedQueries-%24hint) *"," * - [readPreference](http://docs.mongodb.org/manual/applications/replication/#read-preference) **"," * - [lean](./api.html#query_Query-lean) *"," * - [safe](http://www.mongodb.org/display/DOCS/getLastError+Command)"," *"," * _* denotes a query helper method is also available_"," * _** query helper method to set `readPreference` is `read()`_"," *"," * @param {Object} options"," * @api public"," */","","Query.prototype.setOptions = function(options, overwrite) {","  // overwrite is only for internal use","  if (overwrite) {","    // ensure that _mongooseOptions & options are two different objects","    this._mongooseOptions = (options && utils.clone(options)) || {};","    this.options = options || {};","","    if ('populate' in options) {","      this.populate(this._mongooseOptions);","    }","    return this;","  }","","  if (!(options && options.constructor.name === 'Object')) {","    return this;","  }","","  if (options && Array.isArray(options.populate)) {","    var populate = options.populate;","    delete options.populate;","    var _numPopulate = populate.length;","    for (var i = 0; i < _numPopulate; ++i) {","      this.populate(populate[i]);","    }","  }","","  return Query.base.setOptions.call(this, options);","};","","/**"," * Returns the current query conditions as a JSON object."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.find({ a: 1 }).where('b').gt(2);"," *     query.getQuery(); // { a: 1, b: { $gt: 2 } }"," *"," * @return {Object} current query conditions"," * @api public"," */","","Query.prototype.getQuery = function() {","  return this._conditions;","};","","/**"," * Returns the current update operations as a JSON object."," *"," * ####Example:"," *"," *     var query = new Query();"," *     query.update({}, { $set: { a: 5 } });"," *     query.getUpdate(); // { $set: { a: 5 } }"," *"," * @return {Object} current update operations"," * @api public"," */","","Query.prototype.getUpdate = function() {","  return this._update;","};","","/**"," * Returns fields selection for this query."," *"," * @method _fieldsForExec"," * @return {Object}"," * @api private"," * @receiver Query"," */","","/**"," * Return an update document with corrected $set operations."," *"," * @method _updateForExec"," * @api private"," * @receiver Query"," */","","Query.prototype._updateForExec = function() {","  var update = utils.clone(this._update, {","    retainKeyOrder: true,","    transform: false,","    depopulate: true","  });","  var ops = Object.keys(update);","  var i = ops.length;","  var ret = {};","","  while (i--) {","    var op = ops[i];","","    if (this.options.overwrite) {","      ret[op] = update[op];","      continue;","    }","","    if ('$' !== op[0]) {","      // fix up $set sugar","      if (!ret.$set) {","        if (update.$set) {","          ret.$set = update.$set;","        } else {","          ret.$set = {};","        }","      }","      ret.$set[op] = update[op];","      ops.splice(i, 1);","      if (!~ops.indexOf('$set')) ops.push('$set');","    } else if ('$set' === op) {","      if (!ret.$set) {","        ret[op] = update[op];","      }","    } else {","      ret[op] = update[op];","    }","  }","","  return ret;","};","","/**"," * Makes sure _path is set."," *"," * @method _ensurePath"," * @param {String} method"," * @api private"," * @receiver Query"," */","","/**"," * Determines if `conds` can be merged using `mquery().merge()`"," *"," * @method canMerge"," * @memberOf Query"," * @param {Object} conds"," * @return {Boolean}"," * @api private"," */","","/**"," * Returns default options for this query."," *"," * @param {Model} model"," * @api private"," */","","Query.prototype._optionsForExec = function(model) {","  var options = Query.base._optionsForExec.call(this);","","  delete options.populate;","  delete options.retainKeyOrder;","  model = model || this.model;","","  if (!model) {","    return options;","  }","","  if (!('safe' in options) && model.schema.options.safe) {","    options.safe = model.schema.options.safe;","  }","","  if (!('readPreference' in options) && model.schema.options.read) {","    options.readPreference = model.schema.options.read;","  }","","  return options;","};","","/**"," * Sets the lean option."," *"," * Documents returned from queries with the `lean` option enabled are plain javascript objects, not [MongooseDocuments](#document-js). They have no `save` method, getters/setters or other Mongoose magic applied."," *"," * ####Example:"," *"," *     new Query().lean() // true"," *     new Query().lean(true)"," *     new Query().lean(false)"," *"," *     Model.find().lean().exec(function (err, docs) {"," *       docs[0] instanceof mongoose.Document // false"," *     });"," *"," * This is a [great](https://groups.google.com/forum/#!topic/mongoose-orm/u2_DzDydcnA/discussion) option in high-performance read-only scenarios, especially when combined with [stream](#query_Query-stream)."," *"," * @param {Boolean} bool defaults to true"," * @return {Query} this"," * @api public"," */","","Query.prototype.lean = function(v) {","  this._mongooseOptions.lean = arguments.length ? !!v : true;","  return this;","};","","/**"," * Getter/setter around the current mongoose-specific options for this query"," * (populate, lean, etc.)"," *"," * @param {Object} options if specified, overwrites the current options"," * @returns {Object} the options"," * @api public"," */","","Query.prototype.mongooseOptions = function(v) {","  if (arguments.length > 0) {","    this._mongooseOptions = v;","  }","  return this._mongooseOptions;","};","","/**"," * Thunk around find()"," *"," * @param {Function} [callback]"," * @return {Query} this"," * @api private"," */","Query.prototype._find = function(callback) {","  if (this._castError) {","    callback(this._castError);","    return this;","  }","","  this._applyPaths();","  this._fields = this._castFields(this._fields);","","  var fields = this._fieldsForExec();","  var options = this._mongooseOptions;","  var _this = this;","","  var cb = function(err, docs) {","    if (err) {","      return callback(err);","    }","","    if (docs.length === 0) {","      return callback(null, docs);","    }","","    if (!options.populate) {","      return options.lean === true","          ? callback(null, docs)","          : completeMany(_this.model, docs, fields, null, callback);","    }","","    var pop = helpers.preparePopulationOptionsMQ(_this, options);","    pop.__noPromise = true;","    _this.model.populate(docs, pop, function(err, docs) {","      if (err) return callback(err);","      return options.lean === true","          ? callback(null, docs)","          : completeMany(_this.model, docs, fields, pop, callback);","    });","  };","","  return Query.base.find.call(this, {}, cb);","};","","/**"," * Finds documents."," *"," * When no `callback` is passed, the query is not executed. When the query is executed, the result will be an array of documents."," *"," * ####Example"," *"," *     query.find({ name: 'Los Pollos Hermanos' }).find(callback)"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback]"," * @return {Query} this"," * @api public"," */","","Query.prototype.find = function(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","","  conditions = utils.toObject(conditions);","","  if (mquery.canMerge(conditions)) {","    this.merge(conditions);","  }","","  prepareDiscriminatorCriteria(this);","","  try {","    this.cast(this.model);","    this._castError = null;","  } catch (err) {","    this._castError = err;","  }","","  // if we don't have a callback, then just return the query object","  if (!callback) {","    return Query.base.find.call(this);","  }","","  this._find(callback);","","  return this;","};","","/**"," * Merges another Query or conditions object into this one."," *"," * When a Query is passed, conditions, field selection and options are merged."," *"," * @param {Query|Object} source"," * @return {Query} this"," */","","Query.prototype.merge = function(source) {","  if (!source) {","    return this;","  }","","  var opts = { retainKeyOrder: this.options.retainKeyOrder, overwrite: true };","","  if (source instanceof Query) {","    // if source has a feature, apply it to ourselves","","    if (source._conditions) {","      utils.merge(this._conditions, source._conditions, opts);","    }","","    if (source._fields) {","      this._fields || (this._fields = {});","      utils.merge(this._fields, source._fields, opts);","    }","","    if (source.options) {","      this.options || (this.options = {});","      utils.merge(this.options, source.options, opts);","    }","","    if (source._update) {","      this._update || (this._update = {});","      utils.mergeClone(this._update, source._update);","    }","","    if (source._distinct) {","      this._distinct = source._distinct;","    }","","    return this;","  }","","  // plain object","  utils.merge(this._conditions, source, opts);","","  return this;","};","","/*!"," * hydrates many documents"," *"," * @param {Model} model"," * @param {Array} docs"," * @param {Object} fields"," * @param {Query} self"," * @param {Array} [pop] array of paths used in population"," * @param {Function} callback"," */","","function completeMany(model, docs, fields, pop, callback) {","  var arr = [];","  var count = docs.length;","  var len = count;","  var opts = pop ?","  {populated: pop}","      : undefined;","  function init(err) {","    if (err) return callback(err);","    --count || callback(null, arr);","  }","  for (var i = 0; i < len; ++i) {","    arr[i] = helpers.createModel(model, docs[i], fields);","    arr[i].init(docs[i], opts, init);","  }","}","","/**"," * Adds a collation to this op (MongoDB 3.4 and up)"," *"," * @param {Object} value"," * @return {Query} this"," * @see MongoDB docs https://docs.mongodb.com/manual/reference/method/cursor.collation/#cursor.collation"," * @api public"," */","","Query.prototype.collation = function(value) {","  if (this.options == null) {","    this.options = {};","  }","  this.options.collation = value;","  return this;","};","","/**"," * Thunk around findOne()"," *"," * @param {Function} [callback]"," * @see findOne http://docs.mongodb.org/manual/reference/method/db.collection.findOne/"," * @api private"," */","","Query.prototype._findOne = function(callback) {","  if (this._castError) {","    return callback(this._castError);","  }","","  this._applyPaths();","  this._fields = this._castFields(this._fields);","","  var options = this._mongooseOptions;","  var projection = this._fieldsForExec();","  var _this = this;","","  // don't pass in the conditions because we already merged them in","  Query.base.findOne.call(_this, {}, function(err, doc) {","    if (err) {","      return callback(err);","    }","    if (!doc) {","      return callback(null, null);","    }","","    if (!options.populate) {","      return options.lean === true","          ? callback(null, doc)","          : completeOne(_this.model, doc, null, {}, projection, null, callback);","    }","","    var pop = helpers.preparePopulationOptionsMQ(_this, options);","    pop.__noPromise = true;","    _this.model.populate(doc, pop, function(err, doc) {","      if (err) {","        return callback(err);","      }","      return options.lean === true","          ? callback(null, doc)","          : completeOne(_this.model, doc, null, {}, projection, pop, callback);","    });","  });","};","","/**"," * Declares the query a findOne operation. When executed, the first found document is passed to the callback."," *"," * Passing a `callback` executes the query. The result of the query is a single document."," *"," * * *Note:* `conditions` is optional, and if `conditions` is null or undefined,"," * mongoose will send an empty `findOne` command to MongoDB, which will return"," * an arbitrary document. If you're querying by `_id`, use `Model.findById()`"," * instead."," *"," * ####Example"," *"," *     var query  = Kitten.where({ color: 'white' });"," *     query.findOne(function (err, kitten) {"," *       if (err) return handleError(err);"," *       if (kitten) {"," *         // doc may be null if no document matched"," *       }"," *     });"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Object} [projection] optional fields to return"," * @param {Function} [callback] optional params are (error, document)"," * @return {Query} this"," * @see findOne http://docs.mongodb.org/manual/reference/method/db.collection.findOne/"," * @see Query.select #query_Query-select"," * @api public"," */","","Query.prototype.findOne = function(conditions, projection, options, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = null;","    projection = null;","    options = null;","  } else if (typeof projection === 'function') {","    callback = projection;","    options = null;","    projection = null;","  } else if (typeof options === 'function') {","    callback = options;","    options = null;","  }","","  // make sure we don't send in the whole Document to merge()","  conditions = utils.toObject(conditions);","","  this.op = 'findOne';","","  if (options) {","    this.setOptions(options);","  }","","  if (projection) {","    this.select(projection);","  }","","  if (mquery.canMerge(conditions)) {","    this.merge(conditions);","  } else if (conditions != null) {","    throw new Error('Invalid argument to findOne(): ' +","      util.inspect(conditions));","  }","","  prepareDiscriminatorCriteria(this);","","  try {","    this.cast(this.model);","    this._castError = null;","  } catch (err) {","    this._castError = err;","  }","","  if (!callback) {","    // already merged in the conditions, don't need to send them in.","    return Query.base.findOne.call(this);","  }","","  this._findOne(callback);","","  return this;","};","","/**"," * Thunk around count()"," *"," * @param {Function} [callback]"," * @see count http://docs.mongodb.org/manual/reference/method/db.collection.count/"," * @api private"," */","","Query.prototype._count = function(callback) {","  try {","    this.cast(this.model);","  } catch (err) {","    process.nextTick(function() {","      callback(err);","    });","    return this;","  }","","  var conds = this._conditions;","  var options = this._optionsForExec();","","  this._collection.count(conds, options, utils.tick(callback));","};","","/**"," * Specifying this query as a `count` query."," *"," * Passing a `callback` executes the query."," *"," * ####Example:"," *"," *     var countQuery = model.where({ 'color': 'black' }).count();"," *"," *     query.count({ color: 'black' }).count(callback)"," *"," *     query.count({ color: 'black' }, callback)"," *"," *     query.where('color', 'black').count(function (err, count) {"," *       if (err) return handleError(err);"," *       console.log('there are %d kittens', count);"," *     })"," *"," * @param {Object} [criteria] mongodb selector"," * @param {Function} [callback] optional params are (error, count)"," * @return {Query} this"," * @see count http://docs.mongodb.org/manual/reference/method/db.collection.count/"," * @api public"," */","","Query.prototype.count = function(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = undefined;","  }","","  if (mquery.canMerge(conditions)) {","    this.merge(conditions);","  }","","  this.op = 'count';","  if (!callback) {","    return this;","  }","","  this._count(callback);","","  return this;","};","","/**"," * Declares or executes a distict() operation."," *"," * Passing a `callback` executes the query."," *"," * ####Example"," *"," *     distinct(field, conditions, callback)"," *     distinct(field, conditions)"," *     distinct(field, callback)"," *     distinct(field)"," *     distinct(callback)"," *     distinct()"," *"," * @param {String} [field]"," * @param {Object|Query} [criteria]"," * @param {Function} [callback] optional params are (error, arr)"," * @return {Query} this"," * @see distinct http://docs.mongodb.org/manual/reference/method/db.collection.distinct/"," * @api public"," */","","Query.prototype.distinct = function(field, conditions, callback) {","  if (!callback) {","    if (typeof conditions === 'function') {","      callback = conditions;","      conditions = undefined;","    } else if (typeof field === 'function') {","      callback = field;","      field = undefined;","      conditions = undefined;","    }","  }","","  conditions = utils.toObject(conditions);","","  if (mquery.canMerge(conditions)) {","    this.merge(conditions);","  }","","  try {","    this.cast(this.model);","  } catch (err) {","    if (!callback) {","      throw err;","    }","    callback(err);","    return this;","  }","","  return Query.base.distinct.call(this, {}, field, callback);","};","","/**"," * Sets the sort order"," *"," * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`."," *"," * If a string is passed, it must be a space delimited list of path names. The"," * sort order of each path is ascending unless the path name is prefixed with `-`"," * which will be treated as descending."," *"," * ####Example"," *"," *     // sort by \"field\" ascending and \"test\" descending"," *     query.sort({ field: 'asc', test: -1 });"," *"," *     // equivalent"," *     query.sort('field -test');"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Object|String} arg"," * @return {Query} this"," * @see cursor.sort http://docs.mongodb.org/manual/reference/method/cursor.sort/"," * @api public"," */","","Query.prototype.sort = function(arg) {","  if (arguments.length > 1) {","    throw new Error('sort() only takes 1 Argument');","  }","","  return Query.base.sort.call(this, arg);","};","","/**"," * Declare and/or execute this query as a remove() operation."," *"," * ####Example"," *"," *     Model.remove({ artist: 'Anne Murray' }, callback)"," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback, you must first call `remove()` and then execute it by using the `exec()` method."," *"," *     // not executed"," *     var query = Model.find().remove({ name: 'Anne Murray' })"," *"," *     // executed"," *     query.remove({ name: 'Anne Murray' }, callback)"," *     query.remove({ name: 'Anne Murray' }).remove(callback)"," *"," *     // executed without a callback"," *     query.exec()"," *"," *     // summary"," *     query.remove(conds, fn); // executes"," *     query.remove(conds)"," *     query.remove(fn) // executes"," *     query.remove()"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback] optional params are (error, writeOpResult)"," * @return {Query} this"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @see remove http://docs.mongodb.org/manual/reference/method/db.collection.remove/"," * @api public"," */","","Query.prototype.remove = function(cond, callback) {","  if (typeof cond === 'function') {","    callback = cond;","    cond = null;","  }","","  var cb = typeof callback === 'function';","","  try {","    this.cast(this.model);","  } catch (err) {","    if (cb) return process.nextTick(callback.bind(null, err));","    return this;","  }","","  return Query.base.remove.call(this, cond, callback);","};","","/**"," * Declare and/or execute this query as a `deleteOne()` operation. Works like"," * remove, except it deletes at most one document regardless of the `justOne`"," * option."," *"," * ####Example"," *"," *     Character.deleteOne({ name: 'Eddard Stark' }, callback)"," *     Character.deleteOne({ name: 'Eddard Stark' }).then(next)"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback] optional params are (error, writeOpResult)"," * @return {Query} this"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @see remove http://docs.mongodb.org/manual/reference/method/db.collection.remove/"," * @api public"," */","","Query.prototype.deleteOne = function(cond, callback) {","  if (typeof cond === 'function') {","    callback = cond;","    cond = null;","  }","","  var cb = typeof callback === 'function';","","  try {","    this.cast(this.model);","  } catch (err) {","    if (cb) return process.nextTick(callback.bind(null, err));","    return this;","  }","","  return Query.base.deleteOne.call(this, cond, callback);","};","","/**"," * Declare and/or execute this query as a `deleteMany()` operation. Works like"," * remove, except it deletes _every_ document that matches `criteria` in the"," * collection, regardless of the value of `justOne`."," *"," * ####Example"," *"," *     Character.deleteMany({ name: /Stark/, age: { $gte: 18 } }, callback)"," *     Character.deleteMany({ name: /Stark/, age: { $gte: 18 } }).then(next)"," *"," * @param {Object|Query} [criteria] mongodb selector"," * @param {Function} [callback] optional params are (error, writeOpResult)"," * @return {Query} this"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @see remove http://docs.mongodb.org/manual/reference/method/db.collection.remove/"," * @api public"," */","","Query.prototype.deleteMany = function(cond, callback) {","  if (typeof cond === 'function') {","    callback = cond;","    cond = null;","  }","","  var cb = typeof callback === 'function';","","  try {","    this.cast(this.model);","  } catch (err) {","    if (cb) return process.nextTick(callback.bind(null, err));","    return this;","  }","","  return Query.base.deleteMany.call(this, cond, callback);","};","","/*!"," * hydrates a document"," *"," * @param {Model} model"," * @param {Document} doc"," * @param {Object} res 3rd parameter to callback"," * @param {Object} fields"," * @param {Query} self"," * @param {Array} [pop] array of paths used in population"," * @param {Function} callback"," */","","function completeOne(model, doc, res, options, fields, pop, callback) {","  var opts = pop ?","  {populated: pop}","      : undefined;","","  var casted = helpers.createModel(model, doc, fields);","  casted.init(doc, opts, function(err) {","    if (err) {","      return callback(err);","    }","","    if (options.rawResult) {","      res.value = casted;","      return callback(null, res);","    }","    if (options.passRawResult) {","      return callback(null, casted, decorateResult(res));","    }","    callback(null, casted);","  });","}","","/*!"," * If the model is a discriminator type and not root, then add the key & value to the criteria."," */","","function prepareDiscriminatorCriteria(query) {","  if (!query || !query.model || !query.model.schema) {","    return;","  }","","  var schema = query.model.schema;","","  if (schema && schema.discriminatorMapping && !schema.discriminatorMapping.isRoot) {","    query._conditions[schema.discriminatorMapping.key] = schema.discriminatorMapping.value;","  }","}","","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) update command."," *"," * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `fields`: {Object|String} - Field selection. Equivalent to `.select(fields).findOneAndUpdate()`"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0"," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB >= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false."," *"," * ####Callback Signature"," *     function(error, doc) {"," *       // error: any errors that occurred"," *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`"," *     }"," *"," * ####Examples"," *"," *     query.findOneAndUpdate(conditions, update, options, callback) // executes"," *     query.findOneAndUpdate(conditions, update, options)  // returns Query"," *     query.findOneAndUpdate(conditions, update, callback) // executes"," *     query.findOneAndUpdate(conditions, update)           // returns Query"," *     query.findOneAndUpdate(update, callback)             // returns Query"," *     query.findOneAndUpdate(update)                       // returns Query"," *     query.findOneAndUpdate(callback)                     // executes"," *     query.findOneAndUpdate()                             // returns Query"," *"," * @method findOneAndUpdate"," * @memberOf Query"," * @param {Object|Query} [query]"," * @param {Object} [doc]"," * @param {Object} [options]"," * @param {Boolean} [options.passRawResult] if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict)"," * @param {Function} [callback] optional params are (error, doc), _unless_ `passRawResult` is used, in which case params are (error, doc, writeOpResult)"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @return {Query} this"," * @api public"," */","","Query.prototype.findOneAndUpdate = function(criteria, doc, options, callback) {","  this.op = 'findOneAndUpdate';","  this._validate();","","  switch (arguments.length) {","    case 3:","      if (typeof options === 'function') {","        callback = options;","        options = {};","      }","      break;","    case 2:","      if (typeof doc === 'function') {","        callback = doc;","        doc = criteria;","        criteria = undefined;","      }","      options = undefined;","      break;","    case 1:","      if (typeof criteria === 'function') {","        callback = criteria;","        criteria = options = doc = undefined;","      } else {","        doc = criteria;","        criteria = options = undefined;","      }","  }","","  if (mquery.canMerge(criteria)) {","    this.merge(criteria);","  }","","  // apply doc","  if (doc) {","    this._mergeUpdate(doc);","  }","","  if (options) {","    options = utils.clone(options, { retainKeyOrder: true });","    if (options.projection) {","      this.select(options.projection);","      delete options.projection;","    }","    if (options.fields) {","      this.select(options.fields);","      delete options.fields;","    }","","    this.setOptions(options);","  }","","  if (!callback) {","    return this;","  }","","  return this._findOneAndUpdate(callback);","};","","/*!"," * Thunk around findOneAndUpdate()"," *"," * @param {Function} [callback]"," * @api private"," */","","Query.prototype._findOneAndUpdate = function(callback) {","  this._findAndModify('update', callback);","  return this;","};","","/**"," * Issues a mongodb [findAndModify](http://www.mongodb.org/display/DOCS/findAndModify+Command) remove command."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback. Executes immediately if `callback` is passed."," *"," * ####Available options"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0"," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," *"," * ####Callback Signature"," *     function(error, doc, result) {"," *       // error: any errors that occurred"," *       // doc: the document before updates are applied if `new: false`, or after updates if `new = true`"," *       // result: [raw result from the MongoDB driver](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," *     }"," *"," * ####Examples"," *"," *     A.where().findOneAndRemove(conditions, options, callback) // executes"," *     A.where().findOneAndRemove(conditions, options)  // return Query"," *     A.where().findOneAndRemove(conditions, callback) // executes"," *     A.where().findOneAndRemove(conditions) // returns Query"," *     A.where().findOneAndRemove(callback)   // executes"," *     A.where().findOneAndRemove()           // returns Query"," *"," * @method findOneAndRemove"," * @memberOf Query"," * @param {Object} [conditions]"," * @param {Object} [options]"," * @param {Boolean} [options.passRawResult] if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * @param {Boolean|String} [options.strict] overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict)"," * @param {Function} [callback] optional params are (error, document)"," * @return {Query} this"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Query.prototype.findOneAndRemove = function(conditions, options, callback) {","  this.op = 'findOneAndRemove';","  this._validate();","","  switch (arguments.length) {","    case 2:","      if (typeof options === 'function') {","        callback = options;","        options = {};","      }","      break;","    case 1:","      if (typeof conditions === 'function') {","        callback = conditions;","        conditions = undefined;","        options = undefined;","      }","      break;","  }","","  if (mquery.canMerge(conditions)) {","    this.merge(conditions);","  }","","  options && this.setOptions(options);","","  if (!callback) {","    return this;","  }","","  this._findOneAndRemove(callback);","","  return this;","};","","/*!"," * Thunk around findOneAndRemove()"," *"," * @param {Function} [callback]"," * @return {Query} this"," * @api private"," */","Query.prototype._findOneAndRemove = function(callback) {","  Query.base.findOneAndRemove.call(this, callback);","};","","/*!"," * ignore"," */","","function decorateResult(res) {","  if (res) {","    res._kareemIgnore = true;","  }","  return res;","}","","/*!"," * Override mquery.prototype._findAndModify to provide casting etc."," *"," * @param {String} type - either \"remove\" or \"update\""," * @param {Function} callback"," * @api private"," */","","Query.prototype._findAndModify = function(type, callback) {","  if (typeof callback !== 'function') {","    throw new Error('Expected callback in _findAndModify');","  }","","  var model = this.model;","  var schema = model.schema;","  var _this = this;","  var castedQuery;","  var castedDoc;","  var fields;","  var opts;","  var doValidate;","","  castedQuery = castQuery(this);","  if (castedQuery instanceof Error) {","    return callback(castedQuery);","  }","","  opts = this._optionsForExec(model);","","  if ('strict' in opts) {","    this._mongooseOptions.strict = opts.strict;","  }","","  if (type === 'remove') {","    opts.remove = true;","  } else {","    if (!('new' in opts)) {","      opts.new = false;","    }","    if (!('upsert' in opts)) {","      opts.upsert = false;","    }","    if (opts.upsert || opts['new']) {","      opts.remove = false;","    }","","    castedDoc = castDoc(this, opts.overwrite);","    castedDoc = setDefaultsOnInsert(this, schema, castedDoc, opts);","    if (!castedDoc) {","      if (opts.upsert) {","        // still need to do the upsert to empty doc","        var doc = utils.clone(castedQuery);","        delete doc._id;","        castedDoc = {$set: doc};","      } else {","        return this.findOne(callback);","      }","    } else if (castedDoc instanceof Error) {","      return callback(castedDoc);","    } else {","      // In order to make MongoDB 2.6 happy (see","      // https://jira.mongodb.org/browse/SERVER-12266 and related issues)","      // if we have an actual update document but $set is empty, junk the $set.","      if (castedDoc.$set && Object.keys(castedDoc.$set).length === 0) {","        delete castedDoc.$set;","      }","    }","","    doValidate = updateValidators(this, schema, castedDoc, opts);","  }","","  this._applyPaths();","","  var options = this._mongooseOptions;","","  if (this._fields) {","    fields = utils.clone(this._fields);","    opts.fields = this._castFields(fields);","    if (opts.fields instanceof Error) {","      return callback(opts.fields);","    }","  }","","  if (opts.sort) convertSortToArray(opts);","","  var cb = function(err, doc, res) {","    if (err) {","      return callback(err);","    }","","    if (!doc || (utils.isObject(doc) && Object.keys(doc).length === 0)) {","      if (opts.rawResult) {","        return callback(null, res);","      }","      // opts.passRawResult will be deprecated soon","      if (opts.passRawResult) {","        return callback(null, null, decorateResult(res));","      }","      return callback(null, null);","    }","","    if (!options.populate) {","      if (options.lean === true) {","        return _completeOneLean(doc, res, opts, callback);","      }","      return completeOne(_this.model, doc, res, opts, fields, null, callback);","    }","","    var pop = helpers.preparePopulationOptionsMQ(_this, options);","    pop.__noPromise = true;","    _this.model.populate(doc, pop, function(err, doc) {","      if (err) {","        return callback(err);","      }","","      if (options.lean === true) {","        return _completeOneLean(doc, res, opts, callback);","      }","      return completeOne(_this.model, doc, res, opts, fields, pop, callback);","    });","  };","","  if (opts.runValidators && doValidate) {","    var _callback = function(error) {","      if (error) {","        return callback(error);","      }","      _this._collection.findAndModify(castedQuery, castedDoc, opts, utils.tick(function(error, res) {","        return cb(error, res ? res.value : res, res);","      }));","    };","","    try {","      doValidate(_callback);","    } catch (error) {","      callback(error);","    }","  } else {","    this._collection.findAndModify(castedQuery, castedDoc, opts, utils.tick(function(error, res) {","      return cb(error, res ? res.value : res, res);","    }));","  }","","  return this;","};","","/*!"," * ignore"," */","","function _completeOneLean(doc, res, opts, callback) {","  if (opts.rawResult) {","    return callback(null, res);","  }","  if (opts.passRawResult) {","    return callback(null, doc, decorateResult(res));","  }","  return callback(null, doc);","}","","/*!"," * Override mquery.prototype._mergeUpdate to handle mongoose objects in"," * updates."," *"," * @param {Object} doc"," * @api private"," */","","Query.prototype._mergeUpdate = function(doc) {","  if (!this._update) this._update = {};","  if (doc instanceof Query) {","    if (doc._update) {","      utils.mergeClone(this._update, doc._update);","    }","  } else {","    utils.mergeClone(this._update, doc);","  }","};","","/*!"," * The mongodb driver 1.3.23 only supports the nested array sort"," * syntax. We must convert it or sorting findAndModify will not work."," */","","function convertSortToArray(opts) {","  if (Array.isArray(opts.sort)) {","    return;","  }","  if (!utils.isObject(opts.sort)) {","    return;","  }","","  var sort = [];","","  for (var key in opts.sort) {","    if (utils.object.hasOwnProperty(opts.sort, key)) {","      sort.push([key, opts.sort[key]]);","    }","  }","","  opts.sort = sort;","}","","/*!"," * Internal thunk for .update()"," *"," * @param {Function} callback"," * @see Model.update #model_Model.update"," * @api private"," */","Query.prototype._execUpdate = function(callback) {","  var schema = this.model.schema;","  var doValidate;","  var _this;","","  var castedQuery = this._conditions;","  var castedDoc = this._update;","  var options = this.options;","","  if (this._castError) {","    callback(this._castError);","    return this;","  }","","  if (this.options.runValidators) {","    _this = this;","    doValidate = updateValidators(this, schema, castedDoc, options);","    var _callback = function(err) {","      if (err) {","        return callback(err);","      }","","      Query.base.update.call(_this, castedQuery, castedDoc, options, callback);","    };","    try {","      doValidate(_callback);","    } catch (err) {","      process.nextTick(function() {","        callback(err);","      });","    }","    return this;","  }","","  Query.base.update.call(this, castedQuery, castedDoc, options, callback);","  return this;","};","","/*!"," * Internal thunk for .updateMany()"," *"," * @param {Function} callback"," * @see Model.update #model_Model.update"," * @api private"," */","Query.prototype._updateMany = function(callback) {","  var schema = this.model.schema;","  var doValidate;","  var _this;","","  var castedQuery = this._conditions;","  var castedDoc = this._update;","  var options = this.options;","","  if (this._castError) {","    callback(this._castError);","    return this;","  }","","  if (this.options.runValidators) {","    _this = this;","    doValidate = updateValidators(this, schema, castedDoc, options);","    var _callback = function(err) {","      if (err) {","        return callback(err);","      }","","      Query.base.updateMany.call(_this, castedQuery, castedDoc, options, callback);","    };","    try {","      doValidate(_callback);","    } catch (err) {","      process.nextTick(function() {","        callback(err);","      });","    }","    return this;","  }","","  Query.base.updateMany.call(this, castedQuery, castedDoc, options, callback);","  return this;","};","","/*!"," * Internal thunk for .updateOne()"," *"," * @param {Function} callback"," * @see Model.update #model_Model.update"," * @api private"," */","Query.prototype._updateOne = function(callback) {","  var schema = this.model.schema;","  var doValidate;","  var _this;","","  var castedQuery = this._conditions;","  var castedDoc = this._update;","  var options = this.options;","","  if (this._castError) {","    callback(this._castError);","    return this;","  }","","  if (this.options.runValidators) {","    _this = this;","    doValidate = updateValidators(this, schema, castedDoc, options);","    var _callback = function(err) {","      if (err) {","        return callback(err);","      }","","      Query.base.updateOne.call(_this, castedQuery, castedDoc, options, callback);","    };","    try {","      doValidate(_callback);","    } catch (err) {","      process.nextTick(function() {","        callback(err);","      });","    }","    return this;","  }","","  Query.base.updateOne.call(this, castedQuery, castedDoc, options, callback);","  return this;","};","","/*!"," * Internal thunk for .replaceOne()"," *"," * @param {Function} callback"," * @see Model.replaceOne #model_Model.replaceOne"," * @api private"," */","Query.prototype._replaceOne = function(callback) {","  var schema = this.model.schema;","  var doValidate;","  var _this;","","  var castedQuery = this._conditions;","  var castedDoc = this._update;","  var options = this.options;","","  if (this._castError) {","    callback(this._castError);","    return this;","  }","","  if (this.options.runValidators) {","    _this = this;","    doValidate = updateValidators(this, schema, castedDoc, options);","    var _callback = function(err) {","      if (err) {","        return callback(err);","      }","","      Query.base.updateMany.call(_this, castedQuery, castedDoc, options, callback);","    };","    try {","      doValidate(_callback);","    } catch (err) {","      process.nextTick(function() {","        callback(err);","      });","    }","    return this;","  }","","  Query.base.replaceOne.call(this, castedQuery, castedDoc, options, callback);","  return this;","};","","/**"," * Declare and/or execute this query as an update() operation."," *"," * _All paths passed that are not $atomic operations will become $set ops._"," *"," * ####Example"," *"," *     Model.where({ _id: id }).update({ title: 'words' })"," *"," *     // becomes"," *"," *     Model.where({ _id: id }).update({ $set: { title: 'words' }})"," *"," * ####Valid options:"," *"," *  - `safe` (boolean) safe mode (defaults to value set in schema (true))"," *  - `upsert` (boolean) whether to create the doc if it doesn't match (false)"," *  - `multi` (boolean) whether multiple documents should be updated (false)"," *  - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," *  - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB >= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," *  - `strict` (boolean) overrides the `strict` option for this update"," *  - `overwrite` (boolean) disables update-only mode, allowing you to overwrite the doc (false)"," *  - `context` (string) if set to 'query' and `runValidators` is on, `this` will refer to the query in custom validator functions that update validation runs. Does nothing if `runValidators` is false."," *"," * ####Note"," *"," * Passing an empty object `{}` as the doc will result in a no-op unless the `overwrite` option is passed. Without the `overwrite` option set, the update operation will be ignored and the callback executed without sending the command to MongoDB so as to prevent accidently overwritting documents in the collection."," *"," * ####Note"," *"," * The operation is only executed when a callback is passed. To force execution without a callback, we must first call update() and then execute it by using the `exec()` method."," *"," *     var q = Model.where({ _id: id });"," *     q.update({ $set: { name: 'bob' }}).update(); // not executed"," *"," *     q.update({ $set: { name: 'bob' }}).exec(); // executed"," *"," *     // keys that are not $atomic ops become $set."," *     // this executes the same command as the previous example."," *     q.update({ name: 'bob' }).exec();"," *"," *     // overwriting with empty docs"," *     var q = Model.where({ _id: id }).setOptions({ overwrite: true })"," *     q.update({ }, callback); // executes"," *"," *     // multi update with overwrite to empty doc"," *     var q = Model.where({ _id: id });"," *     q.setOptions({ multi: true, overwrite: true })"," *     q.update({ });"," *     q.update(callback); // executed"," *"," *     // multi updates"," *     Model.where()"," *          .update({ name: /^match/ }, { $set: { arr: [] }}, { multi: true }, callback)"," *"," *     // more multi updates"," *     Model.where()"," *          .setOptions({ multi: true })"," *          .update({ $set: { arr: [] }}, callback)"," *"," *     // single update by default"," *     Model.where({ email: 'address@example.com' })"," *          .update({ $inc: { counter: 1 }}, callback)"," *"," * API summary"," *"," *     update(criteria, doc, options, cb) // executes"," *     update(criteria, doc, options)"," *     update(criteria, doc, cb) // executes"," *     update(criteria, doc)"," *     update(doc, cb) // executes"," *     update(doc)"," *     update(cb) // executes"," *     update(true) // executes"," *     update()"," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback] optional, params are (error, writeOpResult)"," * @return {Query} this"," * @see Model.update #model_Model.update"," * @see update http://docs.mongodb.org/manual/reference/method/db.collection.update/"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @api public"," */","","Query.prototype.update = function(conditions, doc, options, callback) {","  if (typeof options === 'function') {","    // .update(conditions, doc, callback)","    callback = options;","    options = null;","  } else if (typeof doc === 'function') {","    // .update(doc, callback);","    callback = doc;","    doc = conditions;","    conditions = {};","    options = null;","  } else if (typeof conditions === 'function') {","    // .update(callback)","    callback = conditions;","    conditions = undefined;","    doc = undefined;","    options = undefined;","  } else if (typeof conditions === 'object' && !doc && !options && !callback) {","    // .update(doc)","    doc = conditions;","    conditions = undefined;","    options = undefined;","    callback = undefined;","  }","","  return _update(this, 'update', conditions, doc, options, callback);","};","","/**"," * Declare and/or execute this query as an updateMany() operation. Same as"," * `update()`, except MongoDB will update _all_ documents that match"," * `criteria` (as opposed to just the first one) regardless of the value of"," * the `multi` option."," *"," * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`"," * and `post('updateMany')` instead."," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback] optional params are (error, writeOpResult)"," * @return {Query} this"," * @see Model.update #model_Model.update"," * @see update http://docs.mongodb.org/manual/reference/method/db.collection.update/"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @api public"," */","","Query.prototype.updateMany = function(conditions, doc, options, callback) {","  if (typeof options === 'function') {","    // .update(conditions, doc, callback)","    callback = options;","    options = null;","  } else if (typeof doc === 'function') {","    // .update(doc, callback);","    callback = doc;","    doc = conditions;","    conditions = {};","    options = null;","  } else if (typeof conditions === 'function') {","    // .update(callback)","    callback = conditions;","    conditions = undefined;","    doc = undefined;","    options = undefined;","  } else if (typeof conditions === 'object' && !doc && !options && !callback) {","    // .update(doc)","    doc = conditions;","    conditions = undefined;","    options = undefined;","    callback = undefined;","  }","","  return _update(this, 'updateMany', conditions, doc, options, callback);","};","","/**"," * Declare and/or execute this query as an updateOne() operation. Same as"," * `update()`, except MongoDB will update _only_ the first document that"," * matches `criteria` regardless of the value of the `multi` option."," *"," * **Note** updateOne will _not_ fire update middleware. Use `pre('updateOne')`"," * and `post('updateOne')` instead."," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback] params are (error, writeOpResult)"," * @return {Query} this"," * @see Model.update #model_Model.update"," * @see update http://docs.mongodb.org/manual/reference/method/db.collection.update/"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @api public"," */","","Query.prototype.updateOne = function(conditions, doc, options, callback) {","  if (typeof options === 'function') {","    // .update(conditions, doc, callback)","    callback = options;","    options = null;","  } else if (typeof doc === 'function') {","    // .update(doc, callback);","    callback = doc;","    doc = conditions;","    conditions = {};","    options = null;","  } else if (typeof conditions === 'function') {","    // .update(callback)","    callback = conditions;","    conditions = undefined;","    doc = undefined;","    options = undefined;","  } else if (typeof conditions === 'object' && !doc && !options && !callback) {","    // .update(doc)","    doc = conditions;","    conditions = undefined;","    options = undefined;","    callback = undefined;","  }","","  return _update(this, 'updateOne', conditions, doc, options, callback);","};","","/**"," * Declare and/or execute this query as a replaceOne() operation. Same as"," * `update()`, except MongoDB will replace the existing document and will"," * not accept any atomic operators (`$set`, etc.)"," *"," * **Note** replaceOne will _not_ fire update middleware. Use `pre('replaceOne')`"," * and `post('replaceOne')` instead."," *"," * @param {Object} [criteria]"," * @param {Object} [doc] the update command"," * @param {Object} [options]"," * @param {Function} [callback] optional params are (error, writeOpResult)"," * @return {Query} this"," * @see Model.update #model_Model.update"," * @see update http://docs.mongodb.org/manual/reference/method/db.collection.update/"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~WriteOpResult"," * @api public"," */","","Query.prototype.replaceOne = function(conditions, doc, options, callback) {","  if (typeof options === 'function') {","    // .update(conditions, doc, callback)","    callback = options;","    options = null;","  } else if (typeof doc === 'function') {","    // .update(doc, callback);","    callback = doc;","    doc = conditions;","    conditions = {};","    options = null;","  } else if (typeof conditions === 'function') {","    // .update(callback)","    callback = conditions;","    conditions = undefined;","    doc = undefined;","    options = undefined;","  } else if (typeof conditions === 'object' && !doc && !options && !callback) {","    // .update(doc)","    doc = conditions;","    conditions = undefined;","    options = undefined;","    callback = undefined;","  }","","  this.setOptions({ overwrite: true });","  return _update(this, 'replaceOne', conditions, doc, options, callback);","};","","/*!"," * Internal helper for update, updateMany, updateOne, replaceOne"," */","","function _update(query, op, conditions, doc, options, callback) {","  // make sure we don't send in the whole Document to merge()","  query.op = op;","  conditions = utils.toObject(conditions);","","  var oldCb = callback;","  if (oldCb) {","    if (typeof oldCb === 'function') {","      callback = function(error, result) {","        oldCb(error, result ? result.result : {ok: 0, n: 0, nModified: 0});","      };","    } else {","      throw new Error('Invalid callback() argument.');","    }","  }","","  // strict is an option used in the update checking, make sure it gets set","  if (options) {","    if ('strict' in options) {","      query._mongooseOptions.strict = options.strict;","    }","  }","","  // if doc is undefined at this point, this means this function is being","  // executed by exec(not always see below). Grab the update doc from here in","  // order to validate","  // This could also be somebody calling update() or update({}). Probably not a","  // common use case, check for _update to make sure we don't do anything bad","  if (!doc && query._update) {","    doc = query._updateForExec();","  }","","  if (mquery.canMerge(conditions)) {","    query.merge(conditions);","  }","","  // validate the selector part of the query","  var castedQuery = castQuery(query);","  if (castedQuery instanceof Error) {","    query._castError = castedQuery;","    if (callback) {","      callback(castedQuery);","      return query;","    } else if (!options || !options.dontThrowCastError) {","      throw castedQuery;","    }","  }","","  // validate the update part of the query","  var castedDoc;","  try {","    var $options = {retainKeyOrder: true};","    if (options && options.minimize) {","      $options.minimize = true;","    }","    castedDoc = query._castUpdate(utils.clone(doc, $options),","      (options && options.overwrite) || op === 'replaceOne');","  } catch (err) {","    query._castError = castedQuery;","    if (callback) {","      callback(err);","      return query;","    } else if (!options || !options.dontThrowCastError) {","      throw err;","    }","  }","","  castedDoc = setDefaultsOnInsert(query, query.schema, castedDoc, options);","  if (!castedDoc) {","    // Make sure promises know that this is still an update, see gh-2796","    query.op = op;","    callback && callback(null);","    return query;","  }","","  if (utils.isObject(options)) {","    query.setOptions(options);","  }","","  if (!query._update) {","    query._update = castedDoc;","  }","","  // Hooks","  if (callback) {","    if (op === 'update') {","      return query._execUpdate(callback);","    }","    return query['_' + op](callback);","  }","","  return Query.base[op].call(query, castedQuery, castedDoc, options, callback);","}","","/**"," * Executes the query"," *"," * ####Examples:"," *"," *     var promise = query.exec();"," *     var promise = query.exec('update');"," *"," *     query.exec(callback);"," *     query.exec('find', callback);"," *"," * @param {String|Function} [operation]"," * @param {Function} [callback] optional params depend on the function being called"," * @return {Promise}"," * @api public"," */","","Query.prototype.exec = function exec(op, callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","","  if (typeof op === 'function') {","    callback = op;","    op = null;","  } else if (typeof op === 'string') {","    this.op = op;","  }","","  var _results;","  var promise = new Promise.ES6(function(resolve, reject) {","    if (!_this.op) {","      resolve();","      return;","    }","","    _this[_this.op].call(_this, function(error, res) {","      if (error) {","        reject(error);","        return;","      }","      _results = arguments;","      resolve(res);","    });","  });","","  if (callback) {","    promise.then(","      function() {","        callback.apply(null, _results);","        return null;","      },","      function(error) {","        callback(error);","      }).","      catch(function(error) {","        // If we made it here, we must have an error in the callback re:","        // gh-4500, so we need to emit.","        setImmediate(function() {","          _this.model.emit('error', error);","        });","      });","  }","","  return promise;","};","","/**"," * Executes the query returning a `Promise` which will be"," * resolved with either the doc(s) or rejected with the error."," *"," * @param {Function} [resolve]"," * @param {Function} [reject]"," * @return {Promise}"," * @api public"," */","","Query.prototype.then = function(resolve, reject) {","  return this.exec().then(resolve, reject);","};","","/**"," * Executes the query returning a `Promise` which will be"," * resolved with either the doc(s) or rejected with the error."," * Like `.then()`, but only takes a rejection handler."," *"," * @param {Function} [reject]"," * @return {Promise}"," * @api public"," */","","Query.prototype.catch = function(reject) {","  return this.exec().then(null, reject);","};","","/*!"," * Casts obj for an update command."," *"," * @param {Object} obj"," * @return {Object} obj after casting its values"," * @api private"," */","","Query.prototype._castUpdate = function _castUpdate(obj, overwrite) {","  var strict;","  if ('strict' in this._mongooseOptions) {","    strict = this._mongooseOptions.strict;","  } else if (this.schema && this.schema.options) {","    strict = this.schema.options.strict;","  } else {","    strict = true;","  }","  return castUpdate(this.schema, obj, {","    overwrite: overwrite,","    strict: strict","  });","};","","/*!"," * castQuery"," * @api private"," */","","function castQuery(query) {","  try {","    return query.cast(query.model);","  } catch (err) {","    return err;","  }","}","","/*!"," * castDoc"," * @api private"," */","","function castDoc(query, overwrite) {","  try {","    return query._castUpdate(query._update, overwrite);","  } catch (err) {","    return err;","  }","}","","/**"," * Specifies paths which should be populated with other documents."," *"," * ####Example:"," *"," *     Kitten.findOne().populate('owner').exec(function (err, kitten) {"," *       console.log(kitten.owner.name) // Max"," *     })"," *"," *     Kitten.find().populate({"," *         path: 'owner'"," *       , select: 'name'"," *       , match: { color: 'black' }"," *       , options: { sort: { name: -1 }}"," *     }).exec(function (err, kittens) {"," *       console.log(kittens[0].owner.name) // Zoopa"," *     })"," *"," *     // alternatively"," *     Kitten.find().populate('owner', 'name', null, {sort: { name: -1 }}).exec(function (err, kittens) {"," *       console.log(kittens[0].owner.name) // Zoopa"," *     })"," *"," * Paths are populated after the query executes and a response is received. A separate query is then executed for each path specified for population. After a response for each query has also been returned, the results are passed to the callback."," *"," * @param {Object|String} path either the path to populate or an object specifying all parameters"," * @param {Object|String} [select] Field selection for the population query"," * @param {Model} [model] The model you wish to use for population. If not specified, populate will look up the model by the name in the Schema's `ref` field."," * @param {Object} [match] Conditions for the population query"," * @param {Object} [options] Options for the population query (sort, etc)"," * @see population ./populate.html"," * @see Query#select #query_Query-select"," * @see Model.populate #model_Model.populate"," * @return {Query} this"," * @api public"," */","","Query.prototype.populate = function() {","  if (arguments.length === 0) {","    return this;","  }","","  var res = utils.populate.apply(null, arguments);","  var opts = this._mongooseOptions;","","  if (!utils.isObject(opts.populate)) {","    opts.populate = {};","  }","","  var pop = opts.populate;","","  for (var i = 0; i < res.length; ++i) {","    var path = res[i].path;","    if (pop[path] && pop[path].populate && res[i].populate) {","      res[i].populate = pop[path].populate.concat(res[i].populate);","    }","    pop[res[i].path] = res[i];","  }","","  return this;","};","","/**"," * Casts this query to the schema of `model`"," *"," * ####Note"," *"," * If `obj` is present, it is cast instead of this query."," *"," * @param {Model} model"," * @param {Object} [obj]"," * @return {Object}"," * @api public"," */","","Query.prototype.cast = function(model, obj) {","  obj || (obj = this._conditions);","","  try {","    return cast(model.schema, obj, {","      upsert: this.options && this.options.upsert,","      strict: (this.options && this.options.strict) ||","        (model.schema.options && model.schema.options.strict)","    });","  } catch (err) {","    // CastError, assign model","    if (typeof err.setModel === 'function') {","      err.setModel(model);","    }","    throw err;","  }","};","","/**"," * Casts selected field arguments for field selection with mongo 2.2"," *"," *     query.select({ ids: { $elemMatch: { $in: [hexString] }})"," *"," * @param {Object} fields"," * @see https://github.com/Automattic/mongoose/issues/1091"," * @see http://docs.mongodb.org/manual/reference/projection/elemMatch/"," * @api private"," */","","Query.prototype._castFields = function _castFields(fields) {","  var selected,","      elemMatchKeys,","      keys,","      key,","      out,","      i;","","  if (fields) {","    keys = Object.keys(fields);","    elemMatchKeys = [];","    i = keys.length;","","    // collect $elemMatch args","    while (i--) {","      key = keys[i];","      if (fields[key].$elemMatch) {","        selected || (selected = {});","        selected[key] = fields[key];","        elemMatchKeys.push(key);","      }","    }","  }","","  if (selected) {","    // they passed $elemMatch, cast em","    try {","      out = this.cast(this.model, selected);","    } catch (err) {","      return err;","    }","","    // apply the casted field args","    i = elemMatchKeys.length;","    while (i--) {","      key = elemMatchKeys[i];","      fields[key] = out[key];","    }","  }","","  return fields;","};","","/**"," * Applies schematype selected options to this query."," * @api private"," */","","Query.prototype._applyPaths = function applyPaths() {","  this._fields = this._fields || {};","  helpers.applyPaths(this._fields, this.model.schema);","};","","/**"," * Returns a Node.js 0.8 style [read stream](http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream) interface."," *"," * ####Example"," *"," *     // follows the nodejs 0.8 stream api"," *     Thing.find({ name: /^hello/ }).stream().pipe(res)"," *"," *     // manual streaming"," *     var stream = Thing.find({ name: /^hello/ }).stream();"," *"," *     stream.on('data', function (doc) {"," *       // do something with the mongoose document"," *     }).on('error', function (err) {"," *       // handle the error"," *     }).on('close', function () {"," *       // the stream is closed"," *     });"," *"," * ####Valid options"," *"," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`."," *"," * ####Example"," *"," *     // JSON.stringify all documents before emitting"," *     var stream = Thing.find().stream({ transform: JSON.stringify });"," *     stream.pipe(writeStream);"," *"," * @return {QueryStream}"," * @param {Object} [options]"," * @see QueryStream"," * @api public"," */","","Query.prototype.stream = function stream(opts) {","  this._applyPaths();","  this._fields = this._castFields(this._fields);","  return new QueryStream(this, opts);","};","Query.prototype.stream = util.deprecate(Query.prototype.stream, 'Mongoose: ' +","  'Query.prototype.stream() is deprecated in mongoose >= 4.5.0, ' +","  'use Query.prototype.cursor() instead');","","/**"," * Returns a wrapper around a [mongodb driver cursor](http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html)."," * A QueryCursor exposes a [Streams3](https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/)-compatible"," * interface, as well as a `.next()` function."," *"," * The `.cursor()` function triggers pre find hooks, but **not** post find hooks."," *"," * ####Example"," *"," *     // There are 2 ways to use a cursor. First, as a stream:"," *     Thing."," *       find({ name: /^hello/ })."," *       cursor()."," *       on('data', function(doc) { console.log(doc); })."," *       on('end', function() { console.log('Done!'); });"," *"," *     // Or you can use `.next()` to manually get the next doc in the stream."," *     // `.next()` returns a promise, so you can use promises or callbacks."," *     var cursor = Thing.find({ name: /^hello/ }).cursor();"," *     cursor.next(function(error, doc) {"," *       console.log(doc);"," *     });"," *"," *     // Because `.next()` returns a promise, you can use co"," *     // to easily iterate through all documents without loading them"," *     // all into memory."," *     co(function*() {"," *       const cursor = Thing.find({ name: /^hello/ }).cursor();"," *       for (let doc = yield cursor.next(); doc != null; doc = yield cursor.next()) {"," *         console.log(doc);"," *       }"," *     });"," *"," * ####Valid options"," *"," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data` and returned by `.next()`."," *"," * @return {QueryCursor}"," * @param {Object} [options]"," * @see QueryCursor"," * @api public"," */","","Query.prototype.cursor = function cursor(opts) {","  this._applyPaths();","  this._fields = this._castFields(this._fields);","  this.setOptions({ fields: this._fieldsForExec() });","  if (opts) {","    this.setOptions(opts);","  }","","  try {","    this.cast(this.model);","  } catch (err) {","    return (new QueryCursor(this, this.options))._markError(err);","  }","","  return new QueryCursor(this, this.options);","};","","// the rest of these are basically to support older Mongoose syntax with mquery","","/**"," * _DEPRECATED_ Alias of `maxScan`"," *"," * @deprecated"," * @see maxScan #query_Query-maxScan"," * @method maxscan"," * @memberOf Query"," */","","Query.prototype.maxscan = Query.base.maxScan;","","/**"," * Sets the tailable option (for use with capped collections)."," *"," * ####Example"," *"," *     query.tailable() // true"," *     query.tailable(true)"," *     query.tailable(false)"," *"," * ####Note"," *"," * Cannot be used with `distinct()`"," *"," * @param {Boolean} bool defaults to true"," * @param {Object} [opts] options to set"," * @param {Number} [opts.numberOfRetries] if cursor is exhausted, retry this many times before giving up"," * @param {Number} [opts.tailableRetryInterval] if cursor is exhausted, wait this many milliseconds before retrying"," * @see tailable http://docs.mongodb.org/manual/tutorial/create-tailable-cursor/"," * @api public"," */","","Query.prototype.tailable = function(val, opts) {","  // we need to support the tailable({ awaitdata : true }) as well as the","  // tailable(true, {awaitdata :true}) syntax that mquery does not support","  if (val && val.constructor.name === 'Object') {","    opts = val;","    val = true;","  }","","  if (val === undefined) {","    val = true;","  }","","  if (opts && typeof opts === 'object') {","    for (var key in opts) {","      if (key === 'awaitdata') {","        // For backwards compatibility","        this.options[key] = !!opts[key];","      } else {","        this.options[key] = opts[key];","      }","    }","  }","","  return Query.base.tailable.call(this, val);","};","","/**"," * Declares an intersects query for `geometry()`."," *"," * ####Example"," *"," *     query.where('path').intersects().geometry({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," *     query.where('path').intersects({"," *         type: 'LineString'"," *       , coordinates: [[180.0, 11.0], [180, 9.0]]"," *     })"," *"," * ####NOTE:"," *"," * **MUST** be used after `where()`."," *"," * ####NOTE:"," *"," * In Mongoose 3.7, `intersects` changed from a getter to a function. If you need the old syntax, use [this](https://github.com/ebensing/mongoose-within)."," *"," * @method intersects"," * @memberOf Query"," * @param {Object} [arg]"," * @return {Query} this"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see geoIntersects http://docs.mongodb.org/manual/reference/operator/geoIntersects/"," * @api public"," */","","/**"," * Specifies a `$geometry` condition"," *"," * ####Example"," *"," *     var polyA = [[[ 10, 20 ], [ 10, 40 ], [ 30, 40 ], [ 30, 20 ]]]"," *     query.where('loc').within().geometry({ type: 'Polygon', coordinates: polyA })"," *"," *     // or"," *     var polyB = [[ 0, 0 ], [ 1, 1 ]]"," *     query.where('loc').within().geometry({ type: 'LineString', coordinates: polyB })"," *"," *     // or"," *     var polyC = [ 0, 0 ]"," *     query.where('loc').within().geometry({ type: 'Point', coordinates: polyC })"," *"," *     // or"," *     query.where('loc').intersects().geometry({ type: 'Point', coordinates: polyC })"," *"," * The argument is assigned to the most recent path passed to `where()`."," *"," * ####NOTE:"," *"," * `geometry()` **must** come after either `intersects()` or `within()`."," *"," * The `object` argument must contain `type` and `coordinates` properties."," * - type {String}"," * - coordinates {Array}"," *"," * @method geometry"," * @memberOf Query"," * @param {Object} object Must contain a `type` property which is a String and a `coordinates` property which is an Array. See the examples."," * @return {Query} this"," * @see $geometry http://docs.mongodb.org/manual/reference/operator/geometry/"," * @see http://docs.mongodb.org/manual/release-notes/2.4/#new-geospatial-indexes-with-geojson-and-improved-spherical-geometry"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * Specifies a `$near` or `$nearSphere` condition"," *"," * These operators return documents sorted by distance."," *"," * ####Example"," *"," *     query.where('loc').near({ center: [10, 10] });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5 });"," *     query.where('loc').near({ center: [10, 10], maxDistance: 5, spherical: true });"," *     query.near('loc', { center: [10, 10], maxDistance: 5 });"," *"," * @method near"," * @memberOf Query"," * @param {String} [path]"," * @param {Object} val"," * @return {Query} this"," * @see $near http://docs.mongodb.org/manual/reference/operator/near/"," * @see $nearSphere http://docs.mongodb.org/manual/reference/operator/nearSphere/"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/*!"," * Overwriting mquery is needed to support a couple different near() forms found in older"," * versions of mongoose"," * near([1,1])"," * near(1,1)"," * near(field, [1,2])"," * near(field, 1, 2)"," * In addition to all of the normal forms supported by mquery"," */","","Query.prototype.near = function() {","  var params = [];","  var sphere = this._mongooseOptions.nearSphere;","","  // TODO refactor","","  if (arguments.length === 1) {","    if (Array.isArray(arguments[0])) {","      params.push({center: arguments[0], spherical: sphere});","    } else if (typeof arguments[0] === 'string') {","      // just passing a path","      params.push(arguments[0]);","    } else if (utils.isObject(arguments[0])) {","      if (typeof arguments[0].spherical !== 'boolean') {","        arguments[0].spherical = sphere;","      }","      params.push(arguments[0]);","    } else {","      throw new TypeError('invalid argument');","    }","  } else if (arguments.length === 2) {","    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {","      params.push({center: [arguments[0], arguments[1]], spherical: sphere});","    } else if (typeof arguments[0] === 'string' && Array.isArray(arguments[1])) {","      params.push(arguments[0]);","      params.push({center: arguments[1], spherical: sphere});","    } else if (typeof arguments[0] === 'string' && utils.isObject(arguments[1])) {","      params.push(arguments[0]);","      if (typeof arguments[1].spherical !== 'boolean') {","        arguments[1].spherical = sphere;","      }","      params.push(arguments[1]);","    } else {","      throw new TypeError('invalid argument');","    }","  } else if (arguments.length === 3) {","    if (typeof arguments[0] === 'string' && typeof arguments[1] === 'number'","        && typeof arguments[2] === 'number') {","      params.push(arguments[0]);","      params.push({center: [arguments[1], arguments[2]], spherical: sphere});","    } else {","      throw new TypeError('invalid argument');","    }","  } else {","    throw new TypeError('invalid argument');","  }","","  return Query.base.near.apply(this, params);","};","","/**"," * _DEPRECATED_ Specifies a `$nearSphere` condition"," *"," * ####Example"," *"," *     query.where('loc').nearSphere({ center: [10, 10], maxDistance: 5 });"," *"," * **Deprecated.** Use `query.near()` instead with the `spherical` option set to `true`."," *"," * ####Example"," *"," *     query.where('loc').near({ center: [10, 10], spherical: true });"," *"," * @deprecated"," * @see near() #query_Query-near"," * @see $near http://docs.mongodb.org/manual/reference/operator/near/"," * @see $nearSphere http://docs.mongodb.org/manual/reference/operator/nearSphere/"," * @see $maxDistance http://docs.mongodb.org/manual/reference/operator/maxDistance/"," */","","Query.prototype.nearSphere = function() {","  this._mongooseOptions.nearSphere = true;","  this.near.apply(this, arguments);","  return this;","};","","/**"," * Specifies a $polygon condition"," *"," * ####Example"," *"," *     query.where('loc').within().polygon([10,20], [13, 25], [7,15])"," *     query.polygon('loc', [10,20], [13, 25], [7,15])"," *"," * @method polygon"," * @memberOf Query"," * @param {String|Array} [path]"," * @param {Array|Object} [coordinatePairs...]"," * @return {Query} this"," * @see $polygon http://docs.mongodb.org/manual/reference/operator/polygon/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * Specifies a $box condition"," *"," * ####Example"," *"," *     var lowerLeft = [40.73083, -73.99756]"," *     var upperRight= [40.741404,  -73.988135]"," *"," *     query.where('loc').within().box(lowerLeft, upperRight)"," *     query.box({ ll : lowerLeft, ur : upperRight })"," *"," * @method box"," * @memberOf Query"," * @see $box http://docs.mongodb.org/manual/reference/operator/box/"," * @see within() Query#within #query_Query-within"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @param {Object} val"," * @param [Array] Upper Right Coords"," * @return {Query} this"," * @api public"," */","","/*!"," * this is needed to support the mongoose syntax of:"," * box(field, { ll : [x,y], ur : [x2,y2] })"," * box({ ll : [x,y], ur : [x2,y2] })"," */","","Query.prototype.box = function(ll, ur) {","  if (!Array.isArray(ll) && utils.isObject(ll)) {","    ur = ll.ur;","    ll = ll.ll;","  }","  return Query.base.box.call(this, ll, ur);","};","","/**"," * Specifies a $center or $centerSphere condition."," *"," * ####Example"," *"," *     var area = { center: [50, 50], radius: 10, unique: true }"," *     query.where('loc').within().circle(area)"," *     // alternatively"," *     query.circle('loc', area);"," *"," *     // spherical calculations"," *     var area = { center: [50, 50], radius: 10, unique: true, spherical: true }"," *     query.where('loc').within().circle(area)"," *     // alternatively"," *     query.circle('loc', area);"," *"," * New in 3.7.0"," *"," * @method circle"," * @memberOf Query"," * @param {String} [path]"," * @param {Object} area"," * @return {Query} this"," * @see $center http://docs.mongodb.org/manual/reference/operator/center/"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @see $geoWithin http://docs.mongodb.org/manual/reference/operator/geoWithin/"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @api public"," */","","/**"," * _DEPRECATED_ Alias for [circle](#query_Query-circle)"," *"," * **Deprecated.** Use [circle](#query_Query-circle) instead."," *"," * @deprecated"," * @method center"," * @memberOf Query"," * @api public"," */","","Query.prototype.center = Query.base.circle;","","/**"," * _DEPRECATED_ Specifies a $centerSphere condition"," *"," * **Deprecated.** Use [circle](#query_Query-circle) instead."," *"," * ####Example"," *"," *     var area = { center: [50, 50], radius: 10 };"," *     query.where('loc').within().centerSphere(area);"," *"," * @deprecated"," * @param {String} [path]"," * @param {Object} val"," * @return {Query} this"," * @see http://www.mongodb.org/display/DOCS/Geospatial+Indexing"," * @see $centerSphere http://docs.mongodb.org/manual/reference/operator/centerSphere/"," * @api public"," */","","Query.prototype.centerSphere = function() {","  if (arguments[0] && arguments[0].constructor.name === 'Object') {","    arguments[0].spherical = true;","  }","","  if (arguments[1] && arguments[1].constructor.name === 'Object') {","    arguments[1].spherical = true;","  }","","  Query.base.circle.apply(this, arguments);","};","","/**"," * Determines if field selection has been made."," *"," * @method selected"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/**"," * Determines if inclusive field selection has been made."," *"," *     query.selectedInclusively() // false"," *     query.select('name')"," *     query.selectedInclusively() // true"," *"," * @method selectedInclusively"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/**"," * Determines if exclusive field selection has been made."," *"," *     query.selectedExclusively() // false"," *     query.select('-name')"," *     query.selectedExclusively() // true"," *     query.selectedInclusively() // false"," *"," * @method selectedExclusively"," * @memberOf Query"," * @return {Boolean}"," * @api public"," */","","/*!"," * Export"," */","","module.exports = Query;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"35":1,"37":0,"38":0,"43":0,"44":0,"45":0,"46":0,"47":0,"51":0,"52":0,"55":0,"56":0,"57":0,"62":0,"63":0,"67":0,"69":0,"70":0,"73":0,"74":0,"78":0,"80":0,"82":0,"84":0,"86":0,"88":0,"90":0,"92":0,"94":0,"103":1,"104":1,"105":1,"122":1,"164":1,"165":0,"166":0,"168":0,"169":0,"170":0,"172":0,"173":0,"176":0,"179":0,"181":0,"183":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"194":0,"833":1,"835":0,"836":0,"877":1,"879":0,"881":0,"882":0,"884":0,"885":0,"887":0,"890":0,"891":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"903":0,"919":1,"920":0,"936":1,"937":0,"957":1,"958":0,"963":0,"964":0,"965":0,"967":0,"968":0,"970":0,"971":0,"972":0,"975":0,"977":0,"978":0,"979":0,"981":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"992":0,"996":0,"1025":1,"1026":0,"1028":0,"1029":0,"1030":0,"1032":0,"1033":0,"1036":0,"1037":0,"1040":0,"1041":0,"1044":0,"1069":1,"1070":0,"1071":0,"1083":1,"1084":0,"1085":0,"1087":0,"1097":1,"1098":0,"1099":0,"1100":0,"1103":0,"1104":0,"1106":0,"1107":0,"1108":0,"1110":0,"1111":0,"1112":0,"1115":0,"1116":0,"1119":0,"1120":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1135":0,"1153":1,"1154":0,"1155":0,"1156":0,"1159":0,"1161":0,"1162":0,"1165":0,"1167":0,"1168":0,"1169":0,"1171":0,"1175":0,"1176":0,"1179":0,"1181":0,"1193":1,"1194":0,"1195":0,"1198":0,"1200":0,"1203":0,"1204":0,"1207":0,"1208":0,"1209":0,"1212":0,"1213":0,"1214":0,"1217":0,"1218":0,"1219":0,"1222":0,"1223":0,"1226":0,"1230":0,"1232":0,"1246":1,"1247":0,"1248":0,"1249":0,"1250":0,"1253":1,"1254":0,"1255":0,"1257":0,"1258":0,"1259":0,"1272":1,"1273":0,"1274":0,"1276":0,"1277":0,"1288":1,"1289":0,"1290":0,"1293":0,"1294":0,"1296":0,"1297":0,"1298":0,"1301":0,"1302":0,"1303":0,"1305":0,"1306":0,"1309":0,"1310":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1321":0,"1357":1,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1373":0,"1375":0,"1377":0,"1378":0,"1381":0,"1382":0,"1385":0,"1386":0,"1387":0,"1388":0,"1392":0,"1394":0,"1395":0,"1396":0,"1398":0,"1401":0,"1403":0,"1406":0,"1408":0,"1419":1,"1420":0,"1421":0,"1423":0,"1424":0,"1426":0,"1429":0,"1430":0,"1432":0,"1460":1,"1461":0,"1462":0,"1463":0,"1466":0,"1467":0,"1470":0,"1471":0,"1472":0,"1475":0,"1477":0,"1502":1,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1514":0,"1516":0,"1517":0,"1520":0,"1521":0,"1523":0,"1524":0,"1526":0,"1527":0,"1530":0,"1560":1,"1561":0,"1562":0,"1565":0,"1603":1,"1604":0,"1605":0,"1606":0,"1609":0,"1611":0,"1612":0,"1614":0,"1615":0,"1618":0,"1639":1,"1640":0,"1641":0,"1642":0,"1645":0,"1647":0,"1648":0,"1650":0,"1651":0,"1654":0,"1675":1,"1676":0,"1677":0,"1678":0,"1681":0,"1683":0,"1684":0,"1686":0,"1687":0,"1690":0,"1705":1,"1706":0,"1710":0,"1711":0,"1712":0,"1713":0,"1716":0,"1717":0,"1718":0,"1720":0,"1721":0,"1723":0,"1731":1,"1732":0,"1733":0,"1736":0,"1738":0,"1739":0,"1791":1,"1792":0,"1793":0,"1795":0,"1797":0,"1798":0,"1799":0,"1801":0,"1803":0,"1804":0,"1805":0,"1806":0,"1808":0,"1809":0,"1811":0,"1812":0,"1813":0,"1815":0,"1816":0,"1820":0,"1821":0,"1825":0,"1826":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1835":0,"1836":0,"1837":0,"1840":0,"1843":0,"1844":0,"1847":0,"1857":1,"1858":0,"1859":0,"1901":1,"1902":0,"1903":0,"1905":0,"1907":0,"1908":0,"1909":0,"1911":0,"1913":0,"1914":0,"1915":0,"1916":0,"1918":0,"1921":0,"1922":0,"1925":0,"1927":0,"1928":0,"1931":0,"1933":0,"1943":1,"1944":0,"1951":1,"1952":0,"1953":0,"1955":0,"1966":1,"1967":0,"1968":0,"1971":0,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":0,"1980":0,"1981":0,"1982":0,"1985":0,"1987":0,"1988":0,"1991":0,"1992":0,"1994":0,"1995":0,"1997":0,"1998":0,"2000":0,"2001":0,"2004":0,"2005":0,"2006":0,"2007":0,"2009":0,"2010":0,"2011":0,"2013":0,"2015":0,"2016":0,"2021":0,"2022":0,"2026":0,"2029":0,"2031":0,"2033":0,"2034":0,"2035":0,"2036":0,"2037":0,"2041":0,"2043":0,"2044":0,"2045":0,"2048":0,"2049":0,"2050":0,"2053":0,"2054":0,"2056":0,"2059":0,"2060":0,"2061":0,"2063":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2073":0,"2074":0,"2076":0,"2080":0,"2081":0,"2082":0,"2083":0,"2085":0,"2086":0,"2090":0,"2091":0,"2093":0,"2096":0,"2097":0,"2101":0,"2108":1,"2109":0,"2110":0,"2112":0,"2113":0,"2115":0,"2126":1,"2127":0,"2128":0,"2129":0,"2130":0,"2133":0,"2142":1,"2143":0,"2144":0,"2146":0,"2147":0,"2150":0,"2152":0,"2153":0,"2154":0,"2158":0,"2168":1,"2169":0,"2170":0,"2171":0,"2173":0,"2174":0,"2175":0,"2177":0,"2178":0,"2179":0,"2182":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2190":0,"2192":0,"2193":0,"2195":0,"2196":0,"2199":0,"2202":0,"2203":0,"2213":1,"2214":0,"2215":0,"2216":0,"2218":0,"2219":0,"2220":0,"2222":0,"2223":0,"2224":0,"2227":0,"2228":0,"2229":0,"2230":0,"2231":0,"2232":0,"2235":0,"2237":0,"2238":0,"2240":0,"2241":0,"2244":0,"2247":0,"2248":0,"2258":1,"2259":0,"2260":0,"2261":0,"2263":0,"2264":0,"2265":0,"2267":0,"2268":0,"2269":0,"2272":0,"2273":0,"2274":0,"2275":0,"2276":0,"2277":0,"2280":0,"2282":0,"2283":0,"2285":0,"2286":0,"2289":0,"2292":0,"2293":0,"2303":1,"2304":0,"2305":0,"2306":0,"2308":0,"2309":0,"2310":0,"2312":0,"2313":0,"2314":0,"2317":0,"2318":0,"2319":0,"2320":0,"2321":0,"2322":0,"2325":0,"2327":0,"2328":0,"2330":0,"2331":0,"2334":0,"2337":0,"2338":0,"2428":1,"2429":0,"2431":0,"2432":0,"2433":0,"2435":0,"2436":0,"2437":0,"2438":0,"2439":0,"2441":0,"2442":0,"2443":0,"2444":0,"2445":0,"2447":0,"2448":0,"2449":0,"2450":0,"2453":0,"2476":1,"2477":0,"2479":0,"2480":0,"2481":0,"2483":0,"2484":0,"2485":0,"2486":0,"2487":0,"2489":0,"2490":0,"2491":0,"2492":0,"2493":0,"2495":0,"2496":0,"2497":0,"2498":0,"2501":0,"2523":1,"2524":0,"2526":0,"2527":0,"2528":0,"2530":0,"2531":0,"2532":0,"2533":0,"2534":0,"2536":0,"2537":0,"2538":0,"2539":0,"2540":0,"2542":0,"2543":0,"2544":0,"2545":0,"2548":0,"2570":1,"2571":0,"2573":0,"2574":0,"2575":0,"2577":0,"2578":0,"2579":0,"2580":0,"2581":0,"2583":0,"2584":0,"2585":0,"2586":0,"2587":0,"2589":0,"2590":0,"2591":0,"2592":0,"2595":0,"2596":0,"2603":1,"2605":0,"2606":0,"2608":0,"2609":0,"2610":0,"2611":0,"2612":0,"2615":0,"2620":0,"2621":0,"2622":0,"2631":0,"2632":0,"2635":0,"2636":0,"2640":0,"2641":0,"2642":0,"2643":0,"2644":0,"2645":0,"2646":0,"2647":0,"2652":0,"2653":0,"2654":0,"2655":0,"2656":0,"2658":0,"2661":0,"2662":0,"2663":0,"2664":0,"2665":0,"2666":0,"2670":0,"2671":0,"2673":0,"2674":0,"2675":0,"2678":0,"2679":0,"2682":0,"2683":0,"2687":0,"2688":0,"2689":0,"2691":0,"2694":0,"2714":1,"2715":0,"2716":0,"2718":0,"2719":0,"2720":0,"2721":0,"2722":0,"2725":0,"2726":0,"2727":0,"2728":0,"2729":0,"2732":0,"2733":0,"2734":0,"2735":0,"2737":0,"2738":0,"2742":0,"2743":0,"2745":0,"2746":0,"2749":0,"2754":0,"2755":0,"2760":0,"2773":1,"2774":0,"2787":1,"2788":0,"2799":1,"2800":0,"2801":0,"2802":0,"2803":0,"2804":0,"2806":0,"2808":0,"2819":1,"2820":0,"2821":0,"2823":0,"2832":1,"2833":0,"2834":0,"2836":0,"2877":1,"2878":0,"2879":0,"2882":0,"2883":0,"2885":0,"2886":0,"2889":0,"2891":0,"2892":0,"2893":0,"2894":0,"2896":0,"2899":0,"2915":1,"2916":0,"2918":0,"2919":0,"2926":0,"2927":0,"2929":0,"2944":1,"2945":0,"2952":0,"2953":0,"2954":0,"2955":0,"2958":0,"2959":0,"2960":0,"2961":0,"2962":0,"2963":0,"2968":0,"2970":0,"2971":0,"2973":0,"2977":0,"2978":0,"2979":0,"2980":0,"2984":0,"2992":1,"2993":0,"2994":0,"3032":1,"3033":0,"3034":0,"3035":0,"3037":1,"3084":1,"3085":0,"3086":0,"3087":0,"3088":0,"3089":0,"3092":0,"3093":0,"3095":0,"3098":0,"3112":1,"3135":1,"3138":0,"3139":0,"3140":0,"3143":0,"3144":0,"3147":0,"3148":0,"3149":0,"3151":0,"3153":0,"3158":0,"3266":1,"3267":0,"3268":0,"3272":0,"3273":0,"3274":0,"3275":0,"3277":0,"3278":0,"3279":0,"3280":0,"3282":0,"3284":0,"3286":0,"3287":0,"3288":0,"3289":0,"3290":0,"3291":0,"3292":0,"3293":0,"3294":0,"3295":0,"3297":0,"3299":0,"3301":0,"3302":0,"3304":0,"3305":0,"3307":0,"3310":0,"3313":0,"3336":1,"3337":0,"3338":0,"3339":0,"3388":1,"3389":0,"3390":0,"3391":0,"3393":0,"3437":1,"3458":1,"3459":0,"3460":0,"3463":0,"3464":0,"3467":0,"3510":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/querycursor.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/querycursor.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"fnMap":{"1":{"name":"QueryCursor","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":48}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":54},"end":{"line":41,"column":76}}},"4":{"name":"(anonymous_4)","line":43,"loc":{"start":{"line":43,"column":21},"end":{"line":43,"column":32}}},"5":{"name":"(anonymous_5)","line":61,"loc":{"start":{"line":61,"column":30},"end":{"line":61,"column":41}}},"6":{"name":"(anonymous_6)","line":63,"loc":{"start":{"line":63,"column":14},"end":{"line":63,"column":35}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":25},"end":{"line":69,"column":41}}},"8":{"name":"(anonymous_8)","line":73,"loc":{"start":{"line":73,"column":19},"end":{"line":73,"column":30}}},"9":{"name":"(anonymous_9)","line":116,"loc":{"start":{"line":116,"column":28},"end":{"line":116,"column":41}}},"10":{"name":"(anonymous_10)","line":125,"loc":{"start":{"line":125,"column":35},"end":{"line":125,"column":51}}},"11":{"name":"(anonymous_11)","line":142,"loc":{"start":{"line":142,"column":30},"end":{"line":142,"column":49}}},"12":{"name":"(anonymous_12)","line":145,"loc":{"start":{"line":145,"column":25},"end":{"line":145,"column":51}}},"13":{"name":"(anonymous_13)","line":146,"loc":{"start":{"line":146,"column":23},"end":{"line":146,"column":39}}},"14":{"name":"(anonymous_14)","line":170,"loc":{"start":{"line":170,"column":29},"end":{"line":170,"column":48}}},"15":{"name":"(anonymous_15)","line":173,"loc":{"start":{"line":173,"column":25},"end":{"line":173,"column":51}}},"16":{"name":"(anonymous_16)","line":174,"loc":{"start":{"line":174,"column":17},"end":{"line":174,"column":38}}},"17":{"name":"(anonymous_17)","line":197,"loc":{"start":{"line":197,"column":34},"end":{"line":197,"column":57}}},"18":{"name":"(anonymous_18)","line":201,"loc":{"start":{"line":201,"column":25},"end":{"line":201,"column":49}}},"19":{"name":"(anonymous_19)","line":205,"loc":{"start":{"line":205,"column":8},"end":{"line":205,"column":19}}},"20":{"name":"(anonymous_20)","line":206,"loc":{"start":{"line":206,"column":8},"end":{"line":206,"column":24}}},"21":{"name":"(anonymous_21)","line":212,"loc":{"start":{"line":212,"column":16},"end":{"line":212,"column":35}}},"22":{"name":"(anonymous_22)","line":213,"loc":{"start":{"line":213,"column":24},"end":{"line":213,"column":45}}},"23":{"name":"(anonymous_23)","line":220,"loc":{"start":{"line":220,"column":28},"end":{"line":220,"column":44}}},"24":{"name":"(anonymous_24)","line":225,"loc":{"start":{"line":225,"column":19},"end":{"line":225,"column":30}}},"25":{"name":"(anonymous_25)","line":232,"loc":{"start":{"line":232,"column":25},"end":{"line":232,"column":51}}},"26":{"name":"(anonymous_26)","line":233,"loc":{"start":{"line":233,"column":12},"end":{"line":233,"column":28}}},"27":{"name":"_next","line":249,"loc":{"start":{"line":249,"column":0},"end":{"line":249,"column":24}}},"28":{"name":"(anonymous_28)","line":252,"loc":{"start":{"line":252,"column":15},"end":{"line":252,"column":34}}},"29":{"name":"(anonymous_29)","line":256,"loc":{"start":{"line":256,"column":37},"end":{"line":256,"column":55}}},"30":{"name":"(anonymous_30)","line":263,"loc":{"start":{"line":263,"column":28},"end":{"line":263,"column":39}}},"31":{"name":"(anonymous_31)","line":269,"loc":{"start":{"line":269,"column":27},"end":{"line":269,"column":48}}},"32":{"name":"(anonymous_32)","line":286,"loc":{"start":{"line":286,"column":18},"end":{"line":286,"column":35}}},"33":{"name":"(anonymous_33)","line":290,"loc":{"start":{"line":290,"column":41},"end":{"line":290,"column":60}}},"34":{"name":"(anonymous_34)","line":300,"loc":{"start":{"line":300,"column":23},"end":{"line":300,"column":34}}},"35":{"name":"_create","line":310,"loc":{"start":{"line":310,"column":0},"end":{"line":310,"column":45}}},"36":{"name":"(anonymous_36)","line":316,"loc":{"start":{"line":316,"column":27},"end":{"line":316,"column":41}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":27}},"5":{"start":{"line":32,"column":0},"end":{"line":53,"column":1}},"6":{"start":{"line":33,"column":2},"end":{"line":33,"column":44}},"7":{"start":{"line":35,"column":2},"end":{"line":35,"column":21}},"8":{"start":{"line":36,"column":2},"end":{"line":36,"column":21}},"9":{"start":{"line":37,"column":2},"end":{"line":37,"column":66}},"10":{"start":{"line":38,"column":2},"end":{"line":38,"column":19}},"11":{"start":{"line":39,"column":2},"end":{"line":39,"column":26}},"12":{"start":{"line":40,"column":2},"end":{"line":52,"column":5}},"13":{"start":{"line":41,"column":4},"end":{"line":51,"column":7}},"14":{"start":{"line":42,"column":6},"end":{"line":45,"column":7}},"15":{"start":{"line":43,"column":8},"end":{"line":43,"column":36}},"16":{"start":{"line":44,"column":8},"end":{"line":44,"column":81}},"17":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"18":{"start":{"line":47,"column":8},"end":{"line":47,"column":40}},"19":{"start":{"line":49,"column":6},"end":{"line":49,"column":28}},"20":{"start":{"line":50,"column":6},"end":{"line":50,"column":35}},"21":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}},"22":{"start":{"line":61,"column":0},"end":{"line":81,"column":2}},"23":{"start":{"line":62,"column":2},"end":{"line":62,"column":19}},"24":{"start":{"line":63,"column":2},"end":{"line":80,"column":5}},"25":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"26":{"start":{"line":65,"column":6},"end":{"line":65,"column":40}},"27":{"start":{"line":67,"column":4},"end":{"line":78,"column":5}},"28":{"start":{"line":68,"column":6},"end":{"line":68,"column":23}},"29":{"start":{"line":69,"column":6},"end":{"line":76,"column":9}},"30":{"start":{"line":70,"column":8},"end":{"line":72,"column":9}},"31":{"start":{"line":71,"column":10},"end":{"line":71,"column":44}},"32":{"start":{"line":73,"column":8},"end":{"line":75,"column":14}},"33":{"start":{"line":74,"column":10},"end":{"line":74,"column":30}},"34":{"start":{"line":77,"column":6},"end":{"line":77,"column":13}},"35":{"start":{"line":79,"column":4},"end":{"line":79,"column":20}},"36":{"start":{"line":116,"column":0},"end":{"line":119,"column":2}},"37":{"start":{"line":117,"column":2},"end":{"line":117,"column":28}},"38":{"start":{"line":118,"column":2},"end":{"line":118,"column":14}},"39":{"start":{"line":125,"column":0},"end":{"line":128,"column":2}},"40":{"start":{"line":126,"column":2},"end":{"line":126,"column":22}},"41":{"start":{"line":127,"column":2},"end":{"line":127,"column":14}},"42":{"start":{"line":142,"column":0},"end":{"line":158,"column":2}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":38}},"44":{"start":{"line":144,"column":2},"end":{"line":144,"column":19}},"45":{"start":{"line":145,"column":2},"end":{"line":157,"column":5}},"46":{"start":{"line":146,"column":4},"end":{"line":156,"column":7}},"47":{"start":{"line":147,"column":6},"end":{"line":152,"column":7}},"48":{"start":{"line":148,"column":8},"end":{"line":148,"column":36}},"49":{"start":{"line":149,"column":8},"end":{"line":149,"column":22}},"50":{"start":{"line":150,"column":8},"end":{"line":151,"column":37}},"51":{"start":{"line":153,"column":6},"end":{"line":153,"column":26}},"52":{"start":{"line":154,"column":6},"end":{"line":154,"column":16}},"53":{"start":{"line":155,"column":6},"end":{"line":155,"column":29}},"54":{"start":{"line":170,"column":0},"end":{"line":183,"column":2}},"55":{"start":{"line":171,"column":2},"end":{"line":171,"column":38}},"56":{"start":{"line":172,"column":2},"end":{"line":172,"column":19}},"57":{"start":{"line":173,"column":2},"end":{"line":182,"column":5}},"58":{"start":{"line":174,"column":4},"end":{"line":181,"column":7}},"59":{"start":{"line":175,"column":6},"end":{"line":178,"column":7}},"60":{"start":{"line":176,"column":8},"end":{"line":176,"column":36}},"61":{"start":{"line":177,"column":8},"end":{"line":177,"column":29}},"62":{"start":{"line":179,"column":6},"end":{"line":179,"column":38}},"63":{"start":{"line":180,"column":6},"end":{"line":180,"column":19}},"64":{"start":{"line":197,"column":0},"end":{"line":242,"column":2}},"65":{"start":{"line":198,"column":2},"end":{"line":198,"column":38}},"66":{"start":{"line":199,"column":2},"end":{"line":199,"column":19}},"67":{"start":{"line":201,"column":2},"end":{"line":210,"column":4}},"68":{"start":{"line":202,"column":4},"end":{"line":202,"column":26}},"69":{"start":{"line":203,"column":4},"end":{"line":209,"column":5}},"70":{"start":{"line":204,"column":6},"end":{"line":206,"column":46}},"71":{"start":{"line":205,"column":21},"end":{"line":205,"column":36}},"72":{"start":{"line":206,"column":26},"end":{"line":206,"column":42}},"73":{"start":{"line":208,"column":6},"end":{"line":208,"column":21}},"74":{"start":{"line":212,"column":2},"end":{"line":230,"column":4}},"75":{"start":{"line":213,"column":4},"end":{"line":229,"column":7}},"76":{"start":{"line":214,"column":6},"end":{"line":216,"column":7}},"77":{"start":{"line":215,"column":8},"end":{"line":215,"column":31}},"78":{"start":{"line":217,"column":6},"end":{"line":219,"column":7}},"79":{"start":{"line":218,"column":8},"end":{"line":218,"column":30}},"80":{"start":{"line":220,"column":6},"end":{"line":228,"column":9}},"81":{"start":{"line":221,"column":8},"end":{"line":223,"column":9}},"82":{"start":{"line":222,"column":10},"end":{"line":222,"column":33}},"83":{"start":{"line":225,"column":8},"end":{"line":227,"column":14}},"84":{"start":{"line":226,"column":10},"end":{"line":226,"column":28}},"85":{"start":{"line":232,"column":2},"end":{"line":241,"column":5}},"86":{"start":{"line":233,"column":4},"end":{"line":240,"column":7}},"87":{"start":{"line":234,"column":6},"end":{"line":237,"column":7}},"88":{"start":{"line":235,"column":8},"end":{"line":235,"column":36}},"89":{"start":{"line":236,"column":8},"end":{"line":236,"column":29}},"90":{"start":{"line":238,"column":6},"end":{"line":238,"column":33}},"91":{"start":{"line":239,"column":6},"end":{"line":239,"column":23}},"92":{"start":{"line":249,"column":0},"end":{"line":304,"column":1}},"93":{"start":{"line":250,"column":2},"end":{"line":250,"column":20}},"94":{"start":{"line":251,"column":2},"end":{"line":260,"column":3}},"95":{"start":{"line":252,"column":4},"end":{"line":259,"column":6}},"96":{"start":{"line":253,"column":6},"end":{"line":255,"column":7}},"97":{"start":{"line":254,"column":8},"end":{"line":254,"column":28}},"98":{"start":{"line":256,"column":6},"end":{"line":258,"column":15}},"99":{"start":{"line":257,"column":8},"end":{"line":257,"column":23}},"100":{"start":{"line":262,"column":2},"end":{"line":266,"column":3}},"101":{"start":{"line":263,"column":4},"end":{"line":265,"column":7}},"102":{"start":{"line":264,"column":6},"end":{"line":264,"column":27}},"103":{"start":{"line":268,"column":2},"end":{"line":303,"column":3}},"104":{"start":{"line":269,"column":4},"end":{"line":298,"column":7}},"105":{"start":{"line":270,"column":6},"end":{"line":272,"column":7}},"106":{"start":{"line":271,"column":8},"end":{"line":271,"column":31}},"107":{"start":{"line":273,"column":6},"end":{"line":275,"column":7}},"108":{"start":{"line":274,"column":8},"end":{"line":274,"column":36}},"109":{"start":{"line":277,"column":6},"end":{"line":277,"column":44}},"110":{"start":{"line":278,"column":6},"end":{"line":282,"column":7}},"111":{"start":{"line":279,"column":8},"end":{"line":281,"column":50}},"112":{"start":{"line":284,"column":6},"end":{"line":285,"column":36}},"113":{"start":{"line":286,"column":6},"end":{"line":288,"column":9}},"114":{"start":{"line":287,"column":8},"end":{"line":287,"column":28}},"115":{"start":{"line":289,"column":6},"end":{"line":289,"column":29}},"116":{"start":{"line":290,"column":6},"end":{"line":297,"column":9}},"117":{"start":{"line":291,"column":8},"end":{"line":293,"column":9}},"118":{"start":{"line":292,"column":10},"end":{"line":292,"column":31}},"119":{"start":{"line":294,"column":8},"end":{"line":296,"column":43}},"120":{"start":{"line":300,"column":4},"end":{"line":302,"column":7}},"121":{"start":{"line":301,"column":6},"end":{"line":301,"column":21}},"122":{"start":{"line":310,"column":0},"end":{"line":322,"column":1}},"123":{"start":{"line":311,"column":2},"end":{"line":311,"column":78}},"124":{"start":{"line":312,"column":2},"end":{"line":314,"column":14}},"125":{"start":{"line":316,"column":2},"end":{"line":321,"column":5}},"126":{"start":{"line":317,"column":4},"end":{"line":319,"column":5}},"127":{"start":{"line":318,"column":6},"end":{"line":318,"column":21}},"128":{"start":{"line":320,"column":4},"end":{"line":320,"column":23}},"129":{"start":{"line":324,"column":0},"end":{"line":324,"column":29}}},"branchMap":{"1":{"line":37,"type":"cond-expr","locations":[{"start":{"line":37,"column":41},"end":{"line":37,"column":60}},{"start":{"line":37,"column":63},"end":{"line":37,"column":65}}]},"2":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"3":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":43}},{"start":{"line":44,"column":47},"end":{"line":44,"column":80}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"5":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":8},"end":{"line":70,"column":8}},{"start":{"line":70,"column":8},"end":{"line":70,"column":8}}]},"8":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":6},"end":{"line":147,"column":6}},{"start":{"line":147,"column":6},"end":{"line":147,"column":6}}]},"9":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":8},"end":{"line":148,"column":16}},{"start":{"line":148,"column":20},"end":{"line":148,"column":35}}]},"10":{"line":150,"type":"binary-expr","locations":[{"start":{"line":150,"column":15},"end":{"line":150,"column":50}},{"start":{"line":151,"column":10},"end":{"line":151,"column":36}}]},"11":{"line":155,"type":"binary-expr","locations":[{"start":{"line":155,"column":6},"end":{"line":155,"column":14}},{"start":{"line":155,"column":18},"end":{"line":155,"column":28}}]},"12":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"13":{"line":176,"type":"binary-expr","locations":[{"start":{"line":176,"column":8},"end":{"line":176,"column":16}},{"start":{"line":176,"column":20},"end":{"line":176,"column":35}}]},"14":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":14}},{"start":{"line":179,"column":18},"end":{"line":179,"column":37}}]},"15":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":4},"end":{"line":203,"column":4}},{"start":{"line":203,"column":4},"end":{"line":203,"column":4}}]},"16":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":15}},{"start":{"line":203,"column":19},"end":{"line":203,"column":53}}]},"17":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"18":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":6},"end":{"line":217,"column":6}},{"start":{"line":217,"column":6},"end":{"line":217,"column":6}}]},"19":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":221,"column":8}},{"start":{"line":221,"column":8},"end":{"line":221,"column":8}}]},"20":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":6}},{"start":{"line":234,"column":6},"end":{"line":234,"column":6}}]},"21":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":16}},{"start":{"line":235,"column":20},"end":{"line":235,"column":35}}]},"22":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":14}},{"start":{"line":238,"column":18},"end":{"line":238,"column":32}}]},"23":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"24":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":6},"end":{"line":253,"column":6}},{"start":{"line":253,"column":6},"end":{"line":253,"column":6}}]},"25":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":10},"end":{"line":253,"column":13}},{"start":{"line":253,"column":17},"end":{"line":253,"column":29}}]},"26":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"27":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"28":{"line":270,"type":"if","locations":[{"start":{"line":270,"column":6},"end":{"line":270,"column":6}},{"start":{"line":270,"column":6},"end":{"line":270,"column":6}}]},"29":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":6},"end":{"line":273,"column":6}},{"start":{"line":273,"column":6},"end":{"line":273,"column":6}}]},"30":{"line":278,"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":278,"column":6}},{"start":{"line":278,"column":6},"end":{"line":278,"column":6}}]},"31":{"line":279,"type":"cond-expr","locations":[{"start":{"line":280,"column":16},"end":{"line":280,"column":35}},{"start":{"line":281,"column":16},"end":{"line":281,"column":49}}]},"32":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":8}},{"start":{"line":291,"column":8},"end":{"line":291,"column":8}}]},"33":{"line":294,"type":"cond-expr","locations":[{"start":{"line":295,"column":10},"end":{"line":295,"column":29}},{"start":{"line":296,"column":10},"end":{"line":296,"column":42}}]},"34":{"line":312,"type":"cond-expr","locations":[{"start":{"line":313,"column":4},"end":{"line":313,"column":31}},{"start":{"line":314,"column":4},"end":{"line":314,"column":13}}]},"35":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":317,"column":4}},{"start":{"line":317,"column":4},"end":{"line":317,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var PromiseProvider = require('./promise_provider');","var Readable = require('stream').Readable;","var helpers = require('./queryhelpers');","var util = require('util');","","/**"," * A QueryCursor is a concurrency primitive for processing query results"," * one document at a time. A QueryCursor fulfills the [Node.js streams3 API](https://strongloop.com/strongblog/whats-new-io-js-beta-streams3/),"," * in addition to several other mechanisms for loading documents from MongoDB"," * one at a time."," *"," * QueryCursors execute the model's pre find hooks, but **not** the model's"," * post find hooks."," *"," * Unless you're an advanced user, do **not** instantiate this class directly."," * Use [`Query#cursor()`](/docs/api.html#query_Query-cursor) instead."," *"," * @param {Query} query"," * @param {Object} options query options passed to `.find()`"," * @inherits Readable"," * @event `cursor`: Emitted when the cursor is created"," * @event `error`: Emitted when an error occurred"," * @event `data`: Emitted when the stream is flowing and the next doc is ready"," * @event `end`: Emitted when the stream is exhausted"," * @api public"," */","","function QueryCursor(query, options) {","  Readable.call(this, { objectMode: true });","","  this.cursor = null;","  this.query = query;","  this._transforms = options.transform ? [options.transform] : [];","  var _this = this;","  var model = query.model;","  model.hooks.execPre('find', query, function() {","    model.collection.find(query._conditions, options, function(err, cursor) {","      if (_this._error) {","        cursor.close(function() {});","        _this.listeners('error').length > 0 && _this.emit('error', _this._error);","      }","      if (err) {","        return _this.emit('error', err);","      }","      _this.cursor = cursor;","      _this.emit('cursor', cursor);","    });","  });","}","","util.inherits(QueryCursor, Readable);","","/*!"," * Necessary to satisfy the Readable API"," */","","QueryCursor.prototype._read = function() {","  var _this = this;","  _next(this, function(error, doc) {","    if (error) {","      return _this.emit('error', error);","    }","    if (!doc) {","      _this.push(null);","      _this.cursor.close(function(error) {","        if (error) {","          return _this.emit('error', error);","        }","        setTimeout(function() {","          _this.emit('close');","        }, 0);","      });","      return;","    }","    _this.push(doc);","  });","};","","/**"," * Registers a transform function which subsequently maps documents retrieved"," * via the streams interface or `.next()`"," *"," * ####Example"," *"," *     // Map documents returned by `data` events"," *     Thing."," *       find({ name: /^hello/ })."," *       cursor()."," *       map(function (doc) {"," *        doc.foo = \"bar\";"," *        return doc;"," *       })"," *       on('data', function(doc) { console.log(doc.foo); });"," *"," *     // Or map documents returned by `.next()`"," *     var cursor = Thing.find({ name: /^hello/ })."," *       cursor()."," *       map(function (doc) {"," *         doc.foo = \"bar\";"," *         return doc;"," *       });"," *     cursor.next(function(error, doc) {"," *       console.log(doc.foo);"," *     });"," *"," * @param {Function} fn"," * @return {QueryCursor}"," * @api public"," * @method map"," */","","QueryCursor.prototype.map = function(fn) {","  this._transforms.push(fn);","  return this;","};","","/*!"," * Marks this cursor as errored"," */","","QueryCursor.prototype._markError = function(error) {","  this._error = error;","  return this;","};","","/**"," * Marks this cursor as closed. Will stop streaming and subsequent calls to"," * `next()` will error."," *"," * @param {Function} callback"," * @return {Promise}"," * @api public"," * @method close"," * @emits close"," * @see MongoDB driver cursor#close http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#close"," */","","QueryCursor.prototype.close = function(callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","  return new Promise.ES6(function(resolve, reject) {","    _this.cursor.close(function(error) {","      if (error) {","        callback && callback(error);","        reject(error);","        return _this.listeners('error').length > 0 &&","          _this.emit('error', error);","      }","      _this.emit('close');","      resolve();","      callback && callback();","    });","  });","};","","/**"," * Get the next document from this cursor. Will return `null` when there are"," * no documents left."," *"," * @param {Function} callback"," * @return {Promise}"," * @api public"," * @method next"," */","","QueryCursor.prototype.next = function(callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","  return new Promise.ES6(function(resolve, reject) {","    _next(_this, function(error, doc) {","      if (error) {","        callback && callback(error);","        return reject(error);","      }","      callback && callback(null, doc);","      resolve(doc);","    });","  });","};","","/**"," * Execute `fn` for every document in the cursor. If `fn` returns a promise,"," * will wait for the promise to resolve before iterating on to the next one."," * Returns a promise that resolves when done."," *"," * @param {Function} fn"," * @param {Function} [callback] executed when all docs have been processed"," * @return {Promise}"," * @api public"," * @method eachAsync"," */","","QueryCursor.prototype.eachAsync = function(fn, callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","","  var handleNextResult = function(doc, callback) {","    var promise = fn(doc);","    if (promise && typeof promise.then === 'function') {","      promise.then(","        function() { callback(null); },","        function(error) { callback(error); });","    } else {","      callback(null);","    }","  };","","  var iterate = function(callback) {","    return _next(_this, function(error, doc) {","      if (error) {","        return callback(error);","      }","      if (!doc) {","        return callback(null);","      }","      handleNextResult(doc, function(error) {","        if (error) {","          return callback(error);","        }","        // Make sure to clear the stack re: gh-4697","        setTimeout(function() {","          iterate(callback);","        }, 0);","      });","    });","  };","","  return new Promise.ES6(function(resolve, reject) {","    iterate(function(error) {","      if (error) {","        callback && callback(error);","        return reject(error);","      }","      callback && callback(null);","      return resolve();","    });","  });","};","","/*!"," * Get the next doc from the underlying cursor and mongooseify it"," * (populate, etc.)"," */","","function _next(ctx, cb) {","  var callback = cb;","  if (ctx._transforms.length) {","    callback = function(err, doc) {","      if (err || doc === null) {","        return cb(err, doc);","      }","      cb(err, ctx._transforms.reduce(function(doc, fn) {","        return fn(doc);","      }, doc));","    };","  }","","  if (ctx._error) {","    return process.nextTick(function() {","      callback(ctx._error);","    });","  }","","  if (ctx.cursor) {","    return ctx.cursor.next(function(error, doc) {","      if (error) {","        return callback(error);","      }","      if (!doc) {","        return callback(null, null);","      }","","      var opts = ctx.query._mongooseOptions;","      if (!opts.populate) {","        return opts.lean === true ?","                callback(null, doc) :","                _create(ctx, doc, null, callback);","      }","","      var pop = helpers.preparePopulationOptionsMQ(ctx.query,","        ctx.query._mongooseOptions);","      pop.forEach(function(option) {","        delete option.model;","      });","      pop.__noPromise = true;","      ctx.query.model.populate(doc, pop, function(err, doc) {","        if (err) {","          return callback(err);","        }","        return opts.lean === true ?","          callback(null, doc) :","          _create(ctx, doc, pop, callback);","      });","    });","  } else {","    ctx.once('cursor', function() {","      _next(ctx, cb);","    });","  }","}","","/*!"," * Convert a raw doc into a full mongoose doc."," */","","function _create(ctx, doc, populatedIds, cb) {","  var instance = helpers.createModel(ctx.query.model, doc, ctx.query._fields);","  var opts = populatedIds ?","    { populated: populatedIds } :","    undefined;","","  instance.init(doc, opts, function(err) {","    if (err) {","      return cb(err);","    }","    cb(null, instance);","  });","}","","module.exports = QueryCursor;",""],"l":{"5":1,"6":1,"7":1,"8":1,"32":1,"33":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"55":1,"61":1,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"71":0,"73":0,"74":0,"77":0,"79":0,"116":1,"117":0,"118":0,"125":1,"126":0,"127":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"153":0,"154":0,"155":0,"170":1,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"179":0,"180":0,"197":1,"198":0,"199":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"208":0,"212":0,"213":0,"214":0,"215":0,"217":0,"218":0,"220":0,"221":0,"222":0,"225":0,"226":0,"232":0,"233":0,"234":0,"235":0,"236":0,"238":0,"239":0,"249":1,"250":0,"251":0,"252":0,"253":0,"254":0,"256":0,"257":0,"262":0,"263":0,"264":0,"268":0,"269":0,"270":0,"271":0,"273":0,"274":0,"277":0,"278":0,"279":0,"284":0,"286":0,"287":0,"289":0,"290":0,"291":0,"292":0,"294":0,"300":0,"301":0,"310":1,"311":0,"312":0,"316":0,"317":0,"318":0,"320":0,"324":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/queryhelpers.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/queryhelpers.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0,0,0],"24":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"preparePopulationOptions","line":16,"loc":{"start":{"line":16,"column":35},"end":{"line":16,"column":85}}},"2":{"name":"preparePopulationOptionsMQ","line":34,"loc":{"start":{"line":34,"column":37},"end":{"line":34,"column":89}}},"3":{"name":"createModel","line":53,"loc":{"start":{"line":53,"column":22},"end":{"line":53,"column":63}}},"4":{"name":"applyPaths","line":76,"loc":{"start":{"line":76,"column":21},"end":{"line":76,"column":57}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":20},"end":{"line":101,"column":41}}},"6":{"name":"(anonymous_6)","line":125,"loc":{"start":{"line":125,"column":22},"end":{"line":125,"column":47}}},"7":{"name":"(anonymous_7)","line":132,"loc":{"start":{"line":132,"column":20},"end":{"line":132,"column":41}}},"8":{"name":"makeLean","line":180,"loc":{"start":{"line":180,"column":0},"end":{"line":180,"column":26}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":16,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":54}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":42}},"5":{"start":{"line":20,"column":20},"end":{"line":20,"column":42}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":13}},"7":{"start":{"line":34,"column":0},"end":{"line":41,"column":2}},"8":{"start":{"line":35,"column":2},"end":{"line":35,"column":63}},"9":{"start":{"line":38,"column":2},"end":{"line":38,"column":42}},"10":{"start":{"line":38,"column":20},"end":{"line":38,"column":42}},"11":{"start":{"line":40,"column":2},"end":{"line":40,"column":13}},"12":{"start":{"line":53,"column":0},"end":{"line":70,"column":2}},"13":{"start":{"line":54,"column":2},"end":{"line":56,"column":11}},"14":{"start":{"line":58,"column":2},"end":{"line":60,"column":11}},"15":{"start":{"line":62,"column":2},"end":{"line":67,"column":3}},"16":{"start":{"line":63,"column":4},"end":{"line":63,"column":55}},"17":{"start":{"line":64,"column":4},"end":{"line":64,"column":38}},"18":{"start":{"line":65,"column":4},"end":{"line":65,"column":54}},"19":{"start":{"line":66,"column":4},"end":{"line":66,"column":72}},"20":{"start":{"line":69,"column":2},"end":{"line":69,"column":44}},"21":{"start":{"line":76,"column":0},"end":{"line":172,"column":2}},"22":{"start":{"line":79,"column":2},"end":{"line":79,"column":14}},"23":{"start":{"line":80,"column":2},"end":{"line":80,"column":11}},"24":{"start":{"line":81,"column":2},"end":{"line":81,"column":9}},"25":{"start":{"line":83,"column":2},"end":{"line":92,"column":3}},"26":{"start":{"line":84,"column":4},"end":{"line":84,"column":31}},"27":{"start":{"line":85,"column":4},"end":{"line":85,"column":21}},"28":{"start":{"line":87,"column":4},"end":{"line":91,"column":5}},"29":{"start":{"line":88,"column":6},"end":{"line":88,"column":40}},"30":{"start":{"line":88,"column":31},"end":{"line":88,"column":40}},"31":{"start":{"line":89,"column":6},"end":{"line":89,"column":39}},"32":{"start":{"line":90,"column":6},"end":{"line":90,"column":12}},"33":{"start":{"line":97,"column":2},"end":{"line":99,"column":16}},"34":{"start":{"line":101,"column":2},"end":{"line":123,"column":4}},"35":{"start":{"line":102,"column":4},"end":{"line":102,"column":51}},"36":{"start":{"line":102,"column":44},"end":{"line":102,"column":51}},"37":{"start":{"line":104,"column":4},"end":{"line":104,"column":30}},"38":{"start":{"line":105,"column":4},"end":{"line":116,"column":5}},"39":{"start":{"line":107,"column":6},"end":{"line":107,"column":30}},"40":{"start":{"line":111,"column":6},"end":{"line":113,"column":7}},"41":{"start":{"line":112,"column":8},"end":{"line":112,"column":25}},"42":{"start":{"line":115,"column":6},"end":{"line":115,"column":13}},"43":{"start":{"line":119,"column":4},"end":{"line":119,"column":34}},"44":{"start":{"line":120,"column":4},"end":{"line":120,"column":40}},"45":{"start":{"line":120,"column":33},"end":{"line":120,"column":40}},"46":{"start":{"line":122,"column":4},"end":{"line":122,"column":53}},"47":{"start":{"line":125,"column":2},"end":{"line":142,"column":4}},"48":{"start":{"line":126,"column":4},"end":{"line":126,"column":28}},"49":{"start":{"line":129,"column":4},"end":{"line":129,"column":38}},"50":{"start":{"line":129,"column":31},"end":{"line":129,"column":38}},"51":{"start":{"line":130,"column":4},"end":{"line":130,"column":22}},"52":{"start":{"line":132,"column":4},"end":{"line":141,"column":7}},"53":{"start":{"line":133,"column":6},"end":{"line":133,"column":45}},"54":{"start":{"line":133,"column":18},"end":{"line":133,"column":45}},"55":{"start":{"line":135,"column":6},"end":{"line":135,"column":30}},"56":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"57":{"start":{"line":139,"column":8},"end":{"line":139,"column":41}},"58":{"start":{"line":144,"column":2},"end":{"line":144,"column":24}},"59":{"start":{"line":146,"column":2},"end":{"line":146,"column":8}},"60":{"start":{"line":147,"column":2},"end":{"line":171,"column":3}},"61":{"start":{"line":149,"column":6},"end":{"line":151,"column":7}},"62":{"start":{"line":150,"column":8},"end":{"line":150,"column":32}},"63":{"start":{"line":152,"column":6},"end":{"line":152,"column":12}},"64":{"start":{"line":154,"column":6},"end":{"line":159,"column":7}},"65":{"start":{"line":158,"column":8},"end":{"line":158,"column":23}},"66":{"start":{"line":160,"column":6},"end":{"line":162,"column":7}},"67":{"start":{"line":161,"column":8},"end":{"line":161,"column":32}},"68":{"start":{"line":163,"column":6},"end":{"line":163,"column":12}},"69":{"start":{"line":167,"column":6},"end":{"line":169,"column":7}},"70":{"start":{"line":168,"column":8},"end":{"line":168,"column":32}},"71":{"start":{"line":170,"column":6},"end":{"line":170,"column":12}},"72":{"start":{"line":180,"column":0},"end":{"line":183,"column":1}},"73":{"start":{"line":181,"column":2},"end":{"line":181,"column":42}},"74":{"start":{"line":182,"column":2},"end":{"line":182,"column":29}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":54,"type":"cond-expr","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":39}},{"start":{"line":56,"column":6},"end":{"line":56,"column":10}}]},"4":{"line":58,"type":"cond-expr","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":30}},{"start":{"line":60,"column":6},"end":{"line":60,"column":10}}]},"5":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":32}},{"start":{"line":58,"column":36},"end":{"line":58,"column":63}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"7":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":6},"end":{"line":62,"column":9}},{"start":{"line":62,"column":13},"end":{"line":62,"column":21}},{"start":{"line":62,"column":25},"end":{"line":62,"column":45}},{"start":{"line":62,"column":49},"end":{"line":62,"column":79}}]},"8":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"9":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":6},"end":{"line":88,"column":6}},{"start":{"line":88,"column":6},"end":{"line":88,"column":6}}]},"10":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"11":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"12":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},{"start":{"line":105,"column":18},"end":{"line":105,"column":36}}]},"13":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"14":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":10},"end":{"line":111,"column":27}},{"start":{"line":111,"column":31},"end":{"line":111,"column":46}},{"start":{"line":111,"column":50},"end":{"line":111,"column":70}}]},"15":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"16":{"line":122,"type":"cond-expr","locations":[{"start":{"line":122,"column":21},"end":{"line":122,"column":29}},{"start":{"line":122,"column":32},"end":{"line":122,"column":40}}]},"17":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":4},"end":{"line":126,"column":10}},{"start":{"line":126,"column":15},"end":{"line":126,"column":26}}]},"18":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":129,"column":4}},{"start":{"line":129,"column":4},"end":{"line":129,"column":4}}]},"19":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"20":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"21":{"line":147,"type":"switch","locations":[{"start":{"line":148,"column":4},"end":{"line":152,"column":12}},{"start":{"line":153,"column":4},"end":{"line":163,"column":12}},{"start":{"line":164,"column":4},"end":{"line":170,"column":12}}]},"22":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":6},"end":{"line":154,"column":6}},{"start":{"line":154,"column":6},"end":{"line":154,"column":6}}]},"23":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":10},"end":{"line":154,"column":16}},{"start":{"line":155,"column":10},"end":{"line":155,"column":29}},{"start":{"line":156,"column":10},"end":{"line":156,"column":37}},{"start":{"line":157,"column":10},"end":{"line":157,"column":54}}]},"24":{"line":181,"type":"binary-expr","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":16}},{"start":{"line":181,"column":21},"end":{"line":181,"column":40}}]}},"code":["","/*!"," * Module dependencies"," */","","var utils = require('./utils');","","/*!"," * Prepare a set of path options for query population."," *"," * @param {Query} query"," * @param {Object} options"," * @return {Array}"," */","","exports.preparePopulationOptions = function preparePopulationOptions(query, options) {","  var pop = utils.object.vals(query.options.populate);","","  // lean options should trickle through all queries","  if (options.lean) pop.forEach(makeLean);","","  return pop;","};","","/*!"," * Prepare a set of path options for query population. This is the MongooseQuery"," * version"," *"," * @param {Query} query"," * @param {Object} options"," * @return {Array}"," */","","exports.preparePopulationOptionsMQ = function preparePopulationOptionsMQ(query, options) {","  var pop = utils.object.vals(query._mongooseOptions.populate);","","  // lean options should trickle through all queries","  if (options.lean) pop.forEach(makeLean);","","  return pop;","};","","/*!"," * If the document is a mapped discriminator type, it returns a model instance for that type, otherwise,"," * it returns an instance of the given model."," *"," * @param {Model}  model"," * @param {Object} doc"," * @param {Object} fields"," *"," * @return {Model}"," */","exports.createModel = function createModel(model, doc, fields) {","  var discriminatorMapping = model.schema","    ? model.schema.discriminatorMapping","    : null;","","  var key = discriminatorMapping && discriminatorMapping.isRoot","    ? discriminatorMapping.key","    : null;","","  if (key && doc[key] && model.discriminators && model.discriminators[doc[key]]) {","    var discriminator = model.discriminators[doc[key]];","    var _fields = utils.clone(fields);","    exports.applyPaths(_fields, discriminator.schema);","    return new model.discriminators[doc[key]](undefined, _fields, true);","  }","","  return new model(undefined, fields, true);","};","","/*!"," * ignore"," */","","exports.applyPaths = function applyPaths(fields, schema) {","  // determine if query is selecting or excluding fields","","  var exclude;","  var keys;","  var ki;","","  if (fields) {","    keys = Object.keys(fields);","    ki = keys.length;","","    while (ki--) {","      if (keys[ki][0] === '+') continue;","      exclude = fields[keys[ki]] === 0;","      break;","    }","  }","","  // if selecting, apply default schematype select:true fields","  // if excluding, apply schematype select:false fields","","  var selected = [],","      excluded = [],","      seen = [];","","  var analyzePath = function(path, type) {","    if (typeof type.selected !== 'boolean') return;","","    var plusPath = '+' + path;","    if (fields && plusPath in fields) {","      // forced inclusion","      delete fields[plusPath];","","      // if there are other fields being included, add this one","      // if no other included fields, leave this out (implied inclusion)","      if (exclude === false && keys.length > 1 && !~keys.indexOf(path)) {","        fields[path] = 1;","      }","","      return;","    }","","    // check for parent exclusions","    var root = path.split('.')[0];","    if (~excluded.indexOf(root)) return;","","    (type.selected ? selected : excluded).push(path);","  };","","  var analyzeSchema = function(schema, prefix) {","    prefix || (prefix = '');","","    // avoid recursion","    if (~seen.indexOf(schema)) return;","    seen.push(schema);","","    schema.eachPath(function(path, type) {","      if (prefix) path = prefix + '.' + path;","","      analyzePath(path, type);","","      // array of subdocs?","      if (type.schema) {","        analyzeSchema(type.schema, path);","      }","    });","  };","","  analyzeSchema(schema);","","  var i;","  switch (exclude) {","    case true:","      for (i = 0; i < excluded.length; ++i) {","        fields[excluded[i]] = 0;","      }","      break;","    case false:","      if (schema &&","          schema.paths['_id'] &&","          schema.paths['_id'].options &&","          schema.paths['_id'].options.select === false) {","        fields._id = 0;","      }","      for (i = 0; i < selected.length; ++i) {","        fields[selected[i]] = 1;","      }","      break;","    case undefined:","      // user didn't specify fields, implies returning all fields.","      // only need to apply excluded fields","      for (i = 0; i < excluded.length; ++i) {","        fields[excluded[i]] = 0;","      }","      break;","  }","};","","/*!"," * Set each path query option to lean"," *"," * @param {Object} option"," */","","function makeLean(option) {","  option.options || (option.options = {});","  option.options.lean = true;","}",""],"l":{"6":1,"16":1,"17":0,"20":0,"22":0,"34":1,"35":0,"38":0,"40":0,"53":1,"54":0,"58":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"76":1,"79":0,"80":0,"81":0,"83":0,"84":0,"85":0,"87":0,"88":0,"89":0,"90":0,"97":0,"101":0,"102":0,"104":0,"105":0,"107":0,"111":0,"112":0,"115":0,"119":0,"120":0,"122":0,"125":0,"126":0,"129":0,"130":0,"132":0,"133":0,"135":0,"138":0,"139":0,"144":0,"146":0,"147":0,"149":0,"150":0,"152":0,"154":0,"158":0,"160":0,"161":0,"163":0,"167":0,"168":0,"170":0,"180":1,"181":0,"182":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/querystream.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/querystream.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1,"95":0,"96":0,"97":0,"98":0,"99":1,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":8},"end":{"line":10,"column":20}}},"2":{"name":"QueryStream","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":37}}},"3":{"name":"(anonymous_3)","line":73,"loc":{"start":{"line":73,"column":19},"end":{"line":73,"column":30}}},"4":{"name":"(anonymous_4)","line":113,"loc":{"start":{"line":113,"column":30},"end":{"line":113,"column":41}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":52},"end":{"line":132,"column":74}}},"6":{"name":"_next","line":148,"loc":{"start":{"line":148,"column":30},"end":{"line":148,"column":47}}},"7":{"name":"(anonymous_7)","line":176,"loc":{"start":{"line":176,"column":31},"end":{"line":176,"column":42}}},"8":{"name":"cursorcb","line":185,"loc":{"start":{"line":185,"column":27},"end":{"line":185,"column":55}}},"9":{"name":"_onNextObject","line":208,"loc":{"start":{"line":208,"column":38},"end":{"line":208,"column":71}}},"10":{"name":"(anonymous_10)","line":242,"loc":{"start":{"line":242,"column":14},"end":{"line":242,"column":31}}},"11":{"name":"(anonymous_11)","line":247,"loc":{"start":{"line":247,"column":39},"end":{"line":247,"column":58}}},"12":{"name":"createAndEmit","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":257,"column":48}}},"13":{"name":"(anonymous_13)","line":263,"loc":{"start":{"line":263,"column":27},"end":{"line":263,"column":41}}},"14":{"name":"emit","line":275,"loc":{"start":{"line":275,"column":0},"end":{"line":275,"column":25}}},"15":{"name":"(anonymous_15)","line":295,"loc":{"start":{"line":295,"column":30},"end":{"line":295,"column":41}}},"16":{"name":"(anonymous_16)","line":305,"loc":{"start":{"line":305,"column":31},"end":{"line":305,"column":42}}},"17":{"name":"(anonymous_17)","line":331,"loc":{"start":{"line":331,"column":32},"end":{"line":331,"column":46}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":38}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}},"4":{"start":{"line":10,"column":0},"end":{"line":12,"column":2}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":11}},"6":{"start":{"line":55,"column":0},"end":{"line":76,"column":1}},"7":{"start":{"line":56,"column":2},"end":{"line":56,"column":20}},"8":{"start":{"line":58,"column":2},"end":{"line":58,"column":21}},"9":{"start":{"line":59,"column":2},"end":{"line":59,"column":23}},"10":{"start":{"line":60,"column":2},"end":{"line":60,"column":22}},"11":{"start":{"line":61,"column":2},"end":{"line":61,"column":22}},"12":{"start":{"line":62,"column":2},"end":{"line":62,"column":25}},"13":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"14":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"15":{"start":{"line":65,"column":2},"end":{"line":65,"column":24}},"16":{"start":{"line":66,"column":2},"end":{"line":66,"column":24}},"17":{"start":{"line":67,"column":2},"end":{"line":69,"column":10}},"18":{"start":{"line":72,"column":2},"end":{"line":72,"column":19}},"19":{"start":{"line":73,"column":2},"end":{"line":75,"column":5}},"20":{"start":{"line":74,"column":4},"end":{"line":74,"column":18}},"21":{"start":{"line":82,"column":0},"end":{"line":82,"column":51}},"22":{"start":{"line":91,"column":0},"end":{"line":91,"column":31}},"23":{"start":{"line":100,"column":0},"end":{"line":100,"column":29}},"24":{"start":{"line":103,"column":0},"end":{"line":103,"column":15}},"25":{"start":{"line":104,"column":0},"end":{"line":104,"column":15}},"26":{"start":{"line":105,"column":0},"end":{"line":105,"column":15}},"27":{"start":{"line":113,"column":0},"end":{"line":139,"column":2}},"28":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"29":{"start":{"line":115,"column":4},"end":{"line":115,"column":11}},"30":{"start":{"line":118,"column":2},"end":{"line":121,"column":19}},"31":{"start":{"line":123,"column":2},"end":{"line":127,"column":3}},"32":{"start":{"line":124,"column":4},"end":{"line":124,"column":22}},"33":{"start":{"line":126,"column":4},"end":{"line":126,"column":30}},"34":{"start":{"line":129,"column":2},"end":{"line":129,"column":45}},"35":{"start":{"line":130,"column":2},"end":{"line":130,"column":52}},"36":{"start":{"line":132,"column":2},"end":{"line":138,"column":5}},"37":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"38":{"start":{"line":134,"column":6},"end":{"line":134,"column":32}},"39":{"start":{"line":136,"column":4},"end":{"line":136,"column":27}},"40":{"start":{"line":137,"column":4},"end":{"line":137,"column":18}},"41":{"start":{"line":148,"column":0},"end":{"line":167,"column":2}},"42":{"start":{"line":149,"column":2},"end":{"line":152,"column":3}},"43":{"start":{"line":150,"column":4},"end":{"line":150,"column":26}},"44":{"start":{"line":151,"column":4},"end":{"line":151,"column":25}},"45":{"start":{"line":154,"column":2},"end":{"line":154,"column":23}},"46":{"start":{"line":156,"column":2},"end":{"line":161,"column":3}},"47":{"start":{"line":157,"column":4},"end":{"line":157,"column":12}},"48":{"start":{"line":158,"column":4},"end":{"line":160,"column":5}},"49":{"start":{"line":159,"column":6},"end":{"line":159,"column":42}},"50":{"start":{"line":165,"column":2},"end":{"line":166,"column":3}},"51":{"start":{"line":176,"column":0},"end":{"line":198,"column":2}},"52":{"start":{"line":177,"column":2},"end":{"line":180,"column":3}},"53":{"start":{"line":178,"column":4},"end":{"line":178,"column":26}},"54":{"start":{"line":179,"column":4},"end":{"line":179,"column":25}},"55":{"start":{"line":182,"column":2},"end":{"line":182,"column":19}},"56":{"start":{"line":183,"column":2},"end":{"line":183,"column":25}},"57":{"start":{"line":185,"column":2},"end":{"line":187,"column":5}},"58":{"start":{"line":186,"column":4},"end":{"line":186,"column":34}},"59":{"start":{"line":191,"column":2},"end":{"line":193,"column":3}},"60":{"start":{"line":192,"column":4},"end":{"line":192,"column":16}},"61":{"start":{"line":197,"column":2},"end":{"line":197,"column":24}},"62":{"start":{"line":208,"column":0},"end":{"line":255,"column":2}},"63":{"start":{"line":209,"column":2},"end":{"line":211,"column":3}},"64":{"start":{"line":210,"column":4},"end":{"line":210,"column":11}},"65":{"start":{"line":213,"column":2},"end":{"line":218,"column":3}},"66":{"start":{"line":214,"column":4},"end":{"line":214,"column":40}},"67":{"start":{"line":215,"column":4},"end":{"line":215,"column":34}},"68":{"start":{"line":216,"column":4},"end":{"line":216,"column":26}},"69":{"start":{"line":217,"column":4},"end":{"line":217,"column":25}},"70":{"start":{"line":220,"column":2},"end":{"line":222,"column":3}},"71":{"start":{"line":221,"column":4},"end":{"line":221,"column":29}},"72":{"start":{"line":225,"column":2},"end":{"line":228,"column":3}},"73":{"start":{"line":226,"column":4},"end":{"line":226,"column":21}},"74":{"start":{"line":227,"column":4},"end":{"line":227,"column":26}},"75":{"start":{"line":230,"column":2},"end":{"line":230,"column":41}},"76":{"start":{"line":232,"column":2},"end":{"line":236,"column":3}},"77":{"start":{"line":233,"column":4},"end":{"line":235,"column":39}},"78":{"start":{"line":238,"column":2},"end":{"line":238,"column":19}},"79":{"start":{"line":239,"column":2},"end":{"line":239,"column":90}},"80":{"start":{"line":242,"column":2},"end":{"line":244,"column":5}},"81":{"start":{"line":243,"column":4},"end":{"line":243,"column":24}},"82":{"start":{"line":246,"column":2},"end":{"line":246,"column":25}},"83":{"start":{"line":247,"column":2},"end":{"line":254,"column":5}},"84":{"start":{"line":248,"column":4},"end":{"line":250,"column":5}},"85":{"start":{"line":249,"column":6},"end":{"line":249,"column":32}},"86":{"start":{"line":251,"column":4},"end":{"line":253,"column":39}},"87":{"start":{"line":257,"column":0},"end":{"line":269,"column":1}},"88":{"start":{"line":258,"column":2},"end":{"line":258,"column":74}},"89":{"start":{"line":259,"column":2},"end":{"line":261,"column":14}},"90":{"start":{"line":263,"column":2},"end":{"line":268,"column":5}},"91":{"start":{"line":264,"column":4},"end":{"line":266,"column":5}},"92":{"start":{"line":265,"column":6},"end":{"line":265,"column":31}},"93":{"start":{"line":267,"column":4},"end":{"line":267,"column":25}},"94":{"start":{"line":275,"column":0},"end":{"line":287,"column":1}},"95":{"start":{"line":276,"column":2},"end":{"line":276,"column":42}},"96":{"start":{"line":279,"column":2},"end":{"line":286,"column":3}},"97":{"start":{"line":281,"column":4},"end":{"line":281,"column":17}},"98":{"start":{"line":285,"column":4},"end":{"line":285,"column":26}},"99":{"start":{"line":295,"column":0},"end":{"line":297,"column":2}},"100":{"start":{"line":296,"column":2},"end":{"line":296,"column":21}},"101":{"start":{"line":305,"column":0},"end":{"line":322,"column":2}},"102":{"start":{"line":306,"column":2},"end":{"line":306,"column":22}},"103":{"start":{"line":308,"column":2},"end":{"line":311,"column":3}},"104":{"start":{"line":310,"column":4},"end":{"line":310,"column":11}},"105":{"start":{"line":314,"column":2},"end":{"line":316,"column":3}},"106":{"start":{"line":315,"column":4},"end":{"line":315,"column":11}},"107":{"start":{"line":318,"column":2},"end":{"line":321,"column":3}},"108":{"start":{"line":320,"column":4},"end":{"line":320,"column":24}},"109":{"start":{"line":331,"column":0},"end":{"line":348,"column":2}},"110":{"start":{"line":332,"column":2},"end":{"line":334,"column":3}},"111":{"start":{"line":333,"column":4},"end":{"line":333,"column":11}},"112":{"start":{"line":335,"column":2},"end":{"line":335,"column":25}},"113":{"start":{"line":336,"column":2},"end":{"line":336,"column":24}},"114":{"start":{"line":337,"column":2},"end":{"line":337,"column":24}},"115":{"start":{"line":339,"column":2},"end":{"line":341,"column":3}},"116":{"start":{"line":340,"column":4},"end":{"line":340,"column":25}},"117":{"start":{"line":343,"column":2},"end":{"line":345,"column":3}},"118":{"start":{"line":344,"column":4},"end":{"line":344,"column":28}},"119":{"start":{"line":347,"column":2},"end":{"line":347,"column":21}},"120":{"start":{"line":367,"column":0},"end":{"line":367,"column":39}}},"branchMap":{"1":{"line":67,"type":"cond-expr","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":25}},{"start":{"line":69,"column":8},"end":{"line":69,"column":9}}]},"2":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":20},"end":{"line":67,"column":27}},{"start":{"line":67,"column":31},"end":{"line":67,"column":70}}]},"3":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"4":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"5":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":2},"end":{"line":149,"column":2}},{"start":{"line":149,"column":2},"end":{"line":149,"column":2}}]},"6":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":17}},{"start":{"line":149,"column":21},"end":{"line":149,"column":36}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"8":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":18}},{"start":{"line":156,"column":22},"end":{"line":156,"column":41}}]},"9":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":11},"end":{"line":158,"column":23}},{"start":{"line":158,"column":27},"end":{"line":158,"column":43}},{"start":{"line":158,"column":48},"end":{"line":158,"column":74}}]},"10":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"11":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":6},"end":{"line":177,"column":17}},{"start":{"line":177,"column":21},"end":{"line":177,"column":36}}]},"12":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"13":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"14":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"15":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":16}},{"start":{"line":214,"column":21},"end":{"line":214,"column":38}}]},"16":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"17":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":2},"end":{"line":225,"column":2}},{"start":{"line":225,"column":2},"end":{"line":225,"column":2}}]},"18":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":2},"end":{"line":232,"column":2}},{"start":{"line":232,"column":2},"end":{"line":232,"column":2}}]},"19":{"line":233,"type":"cond-expr","locations":[{"start":{"line":234,"column":8},"end":{"line":234,"column":23}},{"start":{"line":235,"column":8},"end":{"line":235,"column":38}}]},"20":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"21":{"line":251,"type":"cond-expr","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":24}},{"start":{"line":253,"column":8},"end":{"line":253,"column":38}}]},"22":{"line":259,"type":"cond-expr","locations":[{"start":{"line":260,"column":4},"end":{"line":260,"column":29}},{"start":{"line":261,"column":4},"end":{"line":261,"column":13}}]},"23":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"24":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":2},"end":{"line":279,"column":2}},{"start":{"line":279,"column":2},"end":{"line":279,"column":2}}]},"25":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":2},"end":{"line":308,"column":2}},{"start":{"line":308,"column":2},"end":{"line":308,"column":2}}]},"26":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"27":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":2},"end":{"line":318,"column":2}},{"start":{"line":318,"column":2},"end":{"line":318,"column":2}}]},"28":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":2},"end":{"line":332,"column":2}},{"start":{"line":332,"column":2},"end":{"line":332,"column":2}}]},"29":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"30":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":2},"end":{"line":343,"column":2}},{"start":{"line":343,"column":2},"end":{"line":343,"column":2}}]}},"code":["/* eslint no-empty: 1 */","","/*!"," * Module dependencies."," */","","var Stream = require('stream').Stream;","var utils = require('./utils');","var helpers = require('./queryhelpers');","var K = function(k) {","  return k;","};","","/**"," * Provides a Node.js 0.8 style [ReadStream](http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream) interface for Queries."," *"," *     var stream = Model.find().stream();"," *"," *     stream.on('data', function (doc) {"," *       // do something with the mongoose document"," *     }).on('error', function (err) {"," *       // handle the error"," *     }).on('close', function () {"," *       // the stream is closed"," *     });"," *"," *"," * The stream interface allows us to simply \"plug-in\" to other _Node.js 0.8_ style write streams."," *"," *     Model.where('created').gte(twoWeeksAgo).stream().pipe(writeStream);"," *"," * ####Valid options"," *"," *   - `transform`: optional function which accepts a mongoose document. The return value of the function will be emitted on `data`."," *"," * ####Example"," *"," *     // JSON.stringify all documents before emitting"," *     var stream = Thing.find().stream({ transform: JSON.stringify });"," *     stream.pipe(writeStream);"," *"," * _NOTE: plugging into an HTTP response will *not* work out of the box. Those streams expect only strings or buffers to be emitted, so first formatting our documents as strings/buffers is necessary._"," *"," * _NOTE: these streams are Node.js 0.8 style read streams which differ from Node.js 0.10 style. Node.js 0.10 streams are not well tested yet and are not guaranteed to work._"," *"," * @param {Query} query"," * @param {Object} [options]"," * @inherits NodeJS Stream http://nodejs.org/docs/v0.8.21/api/stream.html#stream_readable_stream"," * @event `data`: emits a single Mongoose document"," * @event `error`: emits when an error occurs during streaming. This will emit _before_ the `close` event."," * @event `close`: emits when the stream reaches the end of the cursor or an error occurs, or the stream is manually `destroy`ed. After this event, no more events are emitted."," * @api public"," */","","function QueryStream(query, options) {","  Stream.call(this);","","  this.query = query;","  this.readable = true;","  this.paused = false;","  this._cursor = null;","  this._destroyed = null;","  this._fields = null;","  this._buffer = null;","  this._inline = T_INIT;","  this._running = false;","  this._transform = options && typeof options.transform === 'function'","      ? options.transform","      : K;","","  // give time to hook up events","  var _this = this;","  process.nextTick(function() {","    _this._init();","  });","}","","/*!"," * Inherit from Stream"," */","","QueryStream.prototype.__proto__ = Stream.prototype;","","/**"," * Flag stating whether or not this stream is readable."," *"," * @property readable"," * @api public"," */","","QueryStream.prototype.readable;","","/**"," * Flag stating whether or not this stream is paused."," *"," * @property paused"," * @api public"," */","","QueryStream.prototype.paused;","","// trampoline flags","var T_INIT = 0;","var T_IDLE = 1;","var T_CONT = 2;","","/**"," * Initializes the query."," *"," * @api private"," */","","QueryStream.prototype._init = function() {","  if (this._destroyed) {","    return;","  }","","  var query = this.query,","      model = query.model,","      options = query._optionsForExec(model),","      _this = this;","","  try {","    query.cast(model);","  } catch (err) {","    return _this.destroy(err);","  }","","  _this._fields = utils.clone(query._fields);","  options.fields = query._castFields(_this._fields);","","  model.collection.find(query._conditions, options, function(err, cursor) {","    if (err) {","      return _this.destroy(err);","    }","    _this._cursor = cursor;","    _this._next();","  });","};","","/**"," * Trampoline for pulling the next doc from cursor."," *"," * @see QueryStream#__next #querystream_QueryStream-__next"," * @api private"," */","","QueryStream.prototype._next = function _next() {","  if (this.paused || this._destroyed) {","    this._running = false;","    return this._running;","  }","","  this._running = true;","","  if (this._buffer && this._buffer.length) {","    var arg;","    while (!this.paused && !this._destroyed && (arg = this._buffer.shift())) { // eslint-disable-line no-cond-assign","      this._onNextObject.apply(this, arg);","    }","  }","","  // avoid stack overflows with large result sets.","  // trampoline instead of recursion.","  while (this.__next()) {","  }","};","","/**"," * Pulls the next doc from the cursor."," *"," * @see QueryStream#_next #querystream_QueryStream-_next"," * @api private"," */","","QueryStream.prototype.__next = function() {","  if (this.paused || this._destroyed) {","    this._running = false;","    return this._running;","  }","","  var _this = this;","  _this._inline = T_INIT;","","  _this._cursor.nextObject(function cursorcb(err, doc) {","    _this._onNextObject(err, doc);","  });","","  // if onNextObject() was already called in this tick","  // return ourselves to the trampoline.","  if (T_CONT === this._inline) {","    return true;","  }","  // onNextObject() hasn't fired yet. tell onNextObject","  // that its ok to call _next b/c we are not within","  // the trampoline anymore.","  this._inline = T_IDLE;","};","","/**"," * Transforms raw `doc`s returned from the cursor into a model instance."," *"," * @param {Error|null} err"," * @param {Object} doc"," * @api private"," */","","QueryStream.prototype._onNextObject = function _onNextObject(err, doc) {","  if (this._destroyed) {","    return;","  }","","  if (this.paused) {","    this._buffer || (this._buffer = []);","    this._buffer.push([err, doc]);","    this._running = false;","    return this._running;","  }","","  if (err) {","    return this.destroy(err);","  }","","  // when doc is null we hit the end of the cursor","  if (!doc) {","    this.emit('end');","    return this.destroy();","  }","","  var opts = this.query._mongooseOptions;","","  if (!opts.populate) {","    return opts.lean === true ?","        emit(this, doc) :","        createAndEmit(this, null, doc);","  }","","  var _this = this;","  var pop = helpers.preparePopulationOptionsMQ(_this.query, _this.query._mongooseOptions);","","  // Hack to work around gh-3108","  pop.forEach(function(option) {","    delete option.model;","  });","","  pop.__noPromise = true;","  _this.query.model.populate(doc, pop, function(err, doc) {","    if (err) {","      return _this.destroy(err);","    }","    return opts.lean === true ?","        emit(_this, doc) :","        createAndEmit(_this, pop, doc);","  });","};","","function createAndEmit(self, populatedIds, doc) {","  var instance = helpers.createModel(self.query.model, doc, self._fields);","  var opts = populatedIds ?","    {populated: populatedIds} :","    undefined;","","  instance.init(doc, opts, function(err) {","    if (err) {","      return self.destroy(err);","    }","    emit(self, instance);","  });","}","","/*!"," * Emit a data event and manage the trampoline state"," */","","function emit(self, doc) {","  self.emit('data', self._transform(doc));","","  // trampoline management","  if (T_IDLE === self._inline) {","    // no longer in trampoline. restart it.","    self._next();","  } else {","    // in a trampoline. tell __next that its","    // ok to continue jumping.","    self._inline = T_CONT;","  }","}","","/**"," * Pauses this stream."," *"," * @api public"," */","","QueryStream.prototype.pause = function() {","  this.paused = true;","};","","/**"," * Resumes this stream."," *"," * @api public"," */","","QueryStream.prototype.resume = function() {","  this.paused = false;","","  if (!this._cursor) {","    // cannot start if not initialized","    return;","  }","","  // are we within the trampoline?","  if (T_INIT === this._inline) {","    return;","  }","","  if (!this._running) {","    // outside QueryStream control, need manual restart","    return this._next();","  }","};","","/**"," * Destroys the stream, closing the underlying cursor, which emits the close event. No more events will be emitted after the close event."," *"," * @param {Error} [err]"," * @api public"," */","","QueryStream.prototype.destroy = function(err) {","  if (this._destroyed) {","    return;","  }","  this._destroyed = true;","  this._running = false;","  this.readable = false;","","  if (this._cursor) {","    this._cursor.close();","  }","","  if (err) {","    this.emit('error', err);","  }","","  this.emit('close');","};","","/**"," * Pipes this query stream into another stream. This method is inherited from NodeJS Streams."," *"," * ####Example:"," *"," *     query.stream().pipe(writeStream [, options])"," *"," * @method pipe"," * @memberOf QueryStream"," * @see NodeJS http://nodejs.org/api/stream.html"," * @api public"," */","","/*!"," * Module exports"," */","","module.exports = exports = QueryStream;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":0,"55":1,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"72":0,"73":0,"74":0,"82":1,"91":1,"100":1,"103":1,"104":1,"105":1,"113":1,"114":0,"115":0,"118":0,"123":0,"124":0,"126":0,"129":0,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"148":1,"149":0,"150":0,"151":0,"154":0,"156":0,"157":0,"158":0,"159":0,"165":0,"176":1,"177":0,"178":0,"179":0,"182":0,"183":0,"185":0,"186":0,"191":0,"192":0,"197":0,"208":1,"209":0,"210":0,"213":0,"214":0,"215":0,"216":0,"217":0,"220":0,"221":0,"225":0,"226":0,"227":0,"230":0,"232":0,"233":0,"238":0,"239":0,"242":0,"243":0,"246":0,"247":0,"248":0,"249":0,"251":0,"257":1,"258":0,"259":0,"263":0,"264":0,"265":0,"267":0,"275":1,"276":0,"279":0,"281":0,"285":0,"295":1,"296":0,"305":1,"306":0,"308":0,"310":0,"314":0,"315":0,"318":0,"320":0,"331":1,"332":0,"333":0,"335":0,"336":0,"337":0,"339":0,"340":0,"343":0,"344":0,"347":0,"367":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/query/castUpdate.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/query/castUpdate.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":1,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0,0,0],"39":[0,0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0,0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"castUpdate","line":17,"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":59}}},"2":{"name":"walkUpdatePath","line":102,"loc":{"start":{"line":102,"column":0},"end":{"line":102,"column":55}}},"3":{"name":"castUpdateVal","line":250,"loc":{"start":{"line":250,"column":0},"end":{"line":250,"column":54}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":17,"column":0},"end":{"line":87,"column":2}},"4":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":19,"column":4},"end":{"line":19,"column":21}},"6":{"start":{"line":22,"column":2},"end":{"line":22,"column":29}},"7":{"start":{"line":23,"column":2},"end":{"line":23,"column":21}},"8":{"start":{"line":24,"column":2},"end":{"line":24,"column":15}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":10}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":27}},"12":{"start":{"line":28,"column":2},"end":{"line":28,"column":36}},"13":{"start":{"line":30,"column":2},"end":{"line":52,"column":3}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":20}},"15":{"start":{"line":33,"column":4},"end":{"line":51,"column":5}},"16":{"start":{"line":35,"column":6},"end":{"line":41,"column":7}},"17":{"start":{"line":36,"column":8},"end":{"line":40,"column":9}},"18":{"start":{"line":37,"column":10},"end":{"line":37,"column":30}},"19":{"start":{"line":39,"column":10},"end":{"line":39,"column":24}},"20":{"start":{"line":42,"column":6},"end":{"line":42,"column":29}},"21":{"start":{"line":43,"column":6},"end":{"line":43,"column":23}},"22":{"start":{"line":44,"column":6},"end":{"line":44,"column":50}},"23":{"start":{"line":44,"column":33},"end":{"line":44,"column":50}},"24":{"start":{"line":45,"column":11},"end":{"line":51,"column":5}},"25":{"start":{"line":46,"column":6},"end":{"line":48,"column":7}},"26":{"start":{"line":47,"column":8},"end":{"line":47,"column":26}},"27":{"start":{"line":50,"column":6},"end":{"line":50,"column":24}},"28":{"start":{"line":55,"column":2},"end":{"line":55,"column":17}},"29":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"30":{"start":{"line":60,"column":4},"end":{"line":60,"column":19}},"31":{"start":{"line":63,"column":2},"end":{"line":84,"column":3}},"32":{"start":{"line":64,"column":4},"end":{"line":64,"column":16}},"33":{"start":{"line":65,"column":4},"end":{"line":65,"column":18}},"34":{"start":{"line":66,"column":4},"end":{"line":66,"column":56}},"35":{"start":{"line":67,"column":4},"end":{"line":83,"column":5}},"36":{"start":{"line":70,"column":6},"end":{"line":70,"column":65}},"37":{"start":{"line":71,"column":11},"end":{"line":83,"column":5}},"38":{"start":{"line":78,"column":6},"end":{"line":78,"column":58}},"39":{"start":{"line":80,"column":6},"end":{"line":81,"column":57}},"40":{"start":{"line":82,"column":6},"end":{"line":82,"column":27}},"41":{"start":{"line":86,"column":2},"end":{"line":86,"column":24}},"42":{"start":{"line":102,"column":0},"end":{"line":214,"column":1}},"43":{"start":{"line":103,"column":2},"end":{"line":109,"column":10}},"44":{"start":{"line":111,"column":2},"end":{"line":111,"column":55}},"45":{"start":{"line":113,"column":2},"end":{"line":212,"column":3}},"46":{"start":{"line":114,"column":4},"end":{"line":114,"column":18}},"47":{"start":{"line":115,"column":4},"end":{"line":115,"column":19}},"48":{"start":{"line":117,"column":4},"end":{"line":211,"column":5}},"49":{"start":{"line":119,"column":6},"end":{"line":119,"column":51}},"50":{"start":{"line":120,"column":6},"end":{"line":175,"column":7}},"51":{"start":{"line":122,"column":8},"end":{"line":122,"column":23}},"52":{"start":{"line":124,"column":8},"end":{"line":142,"column":9}},"53":{"start":{"line":125,"column":10},"end":{"line":127,"column":12}},"54":{"start":{"line":129,"column":10},"end":{"line":131,"column":11}},"55":{"start":{"line":130,"column":12},"end":{"line":130,"column":45}},"56":{"start":{"line":133,"column":10},"end":{"line":135,"column":11}},"57":{"start":{"line":134,"column":12},"end":{"line":134,"column":39}},"58":{"start":{"line":137,"column":10},"end":{"line":139,"column":11}},"59":{"start":{"line":138,"column":12},"end":{"line":138,"column":47}},"60":{"start":{"line":141,"column":10},"end":{"line":141,"column":56}},"61":{"start":{"line":143,"column":13},"end":{"line":175,"column":7}},"62":{"start":{"line":145,"column":8},"end":{"line":145,"column":54}},"63":{"start":{"line":146,"column":8},"end":{"line":146,"column":23}},"64":{"start":{"line":147,"column":13},"end":{"line":175,"column":7}},"65":{"start":{"line":148,"column":8},"end":{"line":148,"column":54}},"66":{"start":{"line":149,"column":8},"end":{"line":149,"column":23}},"67":{"start":{"line":151,"column":8},"end":{"line":151,"column":41}},"68":{"start":{"line":152,"column":8},"end":{"line":152,"column":49}},"69":{"start":{"line":153,"column":8},"end":{"line":153,"column":29}},"70":{"start":{"line":154,"column":8},"end":{"line":159,"column":9}},"71":{"start":{"line":158,"column":10},"end":{"line":158,"column":44}},"72":{"start":{"line":161,"column":8},"end":{"line":168,"column":9}},"73":{"start":{"line":162,"column":10},"end":{"line":167,"column":11}},"74":{"start":{"line":163,"column":12},"end":{"line":163,"column":51}},"75":{"start":{"line":164,"column":17},"end":{"line":167,"column":11}},"76":{"start":{"line":165,"column":12},"end":{"line":165,"column":28}},"77":{"start":{"line":166,"column":12},"end":{"line":166,"column":21}},"78":{"start":{"line":173,"column":8},"end":{"line":174,"column":65}},"79":{"start":{"line":177,"column":6},"end":{"line":178,"column":28}},"80":{"start":{"line":179,"column":6},"end":{"line":179,"column":48}},"81":{"start":{"line":181,"column":6},"end":{"line":181,"column":55}},"82":{"start":{"line":182,"column":6},"end":{"line":182,"column":28}},"83":{"start":{"line":183,"column":6},"end":{"line":188,"column":7}},"84":{"start":{"line":187,"column":8},"end":{"line":187,"column":53}},"85":{"start":{"line":190,"column":6},"end":{"line":192,"column":52}},"86":{"start":{"line":194,"column":6},"end":{"line":210,"column":7}},"87":{"start":{"line":195,"column":8},"end":{"line":199,"column":9}},"88":{"start":{"line":196,"column":10},"end":{"line":196,"column":50}},"89":{"start":{"line":198,"column":10},"end":{"line":198,"column":26}},"90":{"start":{"line":203,"column":8},"end":{"line":206,"column":9}},"91":{"start":{"line":204,"column":10},"end":{"line":204,"column":25}},"92":{"start":{"line":205,"column":10},"end":{"line":205,"column":19}},"93":{"start":{"line":208,"column":8},"end":{"line":208,"column":23}},"94":{"start":{"line":209,"column":8},"end":{"line":209,"column":59}},"95":{"start":{"line":213,"column":2},"end":{"line":213,"column":17}},"96":{"start":{"line":221,"column":0},"end":{"line":225,"column":2}},"97":{"start":{"line":232,"column":0},"end":{"line":238,"column":2}},"98":{"start":{"line":250,"column":0},"end":{"line":291,"column":1}},"99":{"start":{"line":251,"column":2},"end":{"line":256,"column":3}},"100":{"start":{"line":253,"column":4},"end":{"line":255,"column":14}},"101":{"start":{"line":258,"column":2},"end":{"line":259,"column":50}},"102":{"start":{"line":260,"column":2},"end":{"line":272,"column":3}},"103":{"start":{"line":263,"column":4},"end":{"line":263,"column":31}},"104":{"start":{"line":264,"column":4},"end":{"line":270,"column":5}},"105":{"start":{"line":265,"column":6},"end":{"line":265,"column":16}},"106":{"start":{"line":266,"column":11},"end":{"line":270,"column":5}},"107":{"start":{"line":267,"column":6},"end":{"line":267,"column":19}},"108":{"start":{"line":269,"column":6},"end":{"line":269,"column":16}},"109":{"start":{"line":271,"column":4},"end":{"line":271,"column":15}},"110":{"start":{"line":274,"column":2},"end":{"line":279,"column":3}},"111":{"start":{"line":275,"column":4},"end":{"line":277,"column":5}},"112":{"start":{"line":276,"column":6},"end":{"line":276,"column":38}},"113":{"start":{"line":278,"column":4},"end":{"line":278,"column":23}},"114":{"start":{"line":280,"column":2},"end":{"line":285,"column":3}},"115":{"start":{"line":281,"column":4},"end":{"line":283,"column":5}},"116":{"start":{"line":282,"column":6},"end":{"line":282,"column":32}},"117":{"start":{"line":284,"column":4},"end":{"line":284,"column":24}},"118":{"start":{"line":286,"column":2},"end":{"line":288,"column":3}},"119":{"start":{"line":287,"column":4},"end":{"line":287,"column":50}},"120":{"start":{"line":290,"column":2},"end":{"line":290,"column":34}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":18,"column":2}},{"start":{"line":18,"column":2},"end":{"line":18,"column":2}}]},"2":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"3":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":8},"end":{"line":33,"column":21}},{"start":{"line":33,"column":25},"end":{"line":33,"column":35}}]},"4":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"5":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":8}},{"start":{"line":36,"column":8},"end":{"line":36,"column":8}}]},"6":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":6}},{"start":{"line":44,"column":6},"end":{"line":44,"column":6}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":11},"end":{"line":45,"column":11}},{"start":{"line":45,"column":11},"end":{"line":45,"column":11}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":6},"end":{"line":46,"column":6}},{"start":{"line":46,"column":6},"end":{"line":46,"column":6}}]},"9":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"10":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":19},"end":{"line":66,"column":31}},{"start":{"line":66,"column":35},"end":{"line":66,"column":55}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"12":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":11}},{"start":{"line":68,"column":8},"end":{"line":68,"column":31}},{"start":{"line":69,"column":9},"end":{"line":69,"column":19}},{"start":{"line":69,"column":23},"end":{"line":69,"column":35}}]},"13":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":11},"end":{"line":71,"column":11}},{"start":{"line":71,"column":11},"end":{"line":71,"column":11}}]},"14":{"line":71,"type":"binary-expr","locations":[{"start":{"line":71,"column":15},"end":{"line":71,"column":24}},{"start":{"line":71,"column":28},"end":{"line":71,"column":31}},{"start":{"line":71,"column":35},"end":{"line":71,"column":58}}]},"15":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":9},"end":{"line":86,"column":16}},{"start":{"line":86,"column":20},"end":{"line":86,"column":23}}]},"16":{"line":103,"type":"cond-expr","locations":[{"start":{"line":103,"column":22},"end":{"line":103,"column":32}},{"start":{"line":103,"column":35},"end":{"line":103,"column":37}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"18":{"line":117,"type":"binary-expr","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":11}},{"start":{"line":117,"column":15},"end":{"line":117,"column":48}}]},"19":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":120,"column":6}},{"start":{"line":120,"column":6},"end":{"line":120,"column":6}}]},"20":{"line":120,"type":"binary-expr","locations":[{"start":{"line":120,"column":10},"end":{"line":120,"column":20}},{"start":{"line":120,"column":24},"end":{"line":120,"column":41}},{"start":{"line":120,"column":45},"end":{"line":120,"column":58}}]},"21":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":124,"column":8}},{"start":{"line":124,"column":8},"end":{"line":124,"column":8}}]},"22":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":10},"end":{"line":129,"column":10}},{"start":{"line":129,"column":10},"end":{"line":129,"column":10}}]},"23":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":10},"end":{"line":133,"column":10}},{"start":{"line":133,"column":10},"end":{"line":133,"column":10}}]},"24":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":10},"end":{"line":137,"column":10}},{"start":{"line":137,"column":10},"end":{"line":137,"column":10}}]},"25":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":14},"end":{"line":137,"column":29}},{"start":{"line":137,"column":33},"end":{"line":137,"column":52}}]},"26":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":13},"end":{"line":143,"column":13}},{"start":{"line":143,"column":13},"end":{"line":143,"column":13}}]},"27":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":13},"end":{"line":147,"column":13}},{"start":{"line":147,"column":13},"end":{"line":147,"column":13}}]},"28":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":17},"end":{"line":147,"column":30}},{"start":{"line":147,"column":34},"end":{"line":147,"column":44}}]},"29":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"30":{"line":154,"type":"binary-expr","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":27}},{"start":{"line":155,"column":12},"end":{"line":155,"column":13}},{"start":{"line":156,"column":12},"end":{"line":156,"column":20}},{"start":{"line":157,"column":12},"end":{"line":157,"column":40}}]},"31":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"32":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":10},"end":{"line":162,"column":10}},{"start":{"line":162,"column":10},"end":{"line":162,"column":10}}]},"33":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":17},"end":{"line":164,"column":17}},{"start":{"line":164,"column":17},"end":{"line":164,"column":17}}]},"34":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":19},"end":{"line":173,"column":72}},{"start":{"line":174,"column":11},"end":{"line":174,"column":30}},{"start":{"line":174,"column":34},"end":{"line":174,"column":63}}]},"35":{"line":177,"type":"cond-expr","locations":[{"start":{"line":178,"column":8},"end":{"line":178,"column":12}},{"start":{"line":178,"column":15},"end":{"line":178,"column":27}}]},"36":{"line":177,"type":"binary-expr","locations":[{"start":{"line":177,"column":23},"end":{"line":177,"column":38}},{"start":{"line":177,"column":42},"end":{"line":177,"column":55}},{"start":{"line":177,"column":59},"end":{"line":177,"column":73}}]},"37":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"38":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":10},"end":{"line":183,"column":25}},{"start":{"line":184,"column":10},"end":{"line":184,"column":21}},{"start":{"line":185,"column":10},"end":{"line":185,"column":28}},{"start":{"line":186,"column":10},"end":{"line":186,"column":48}}]},"39":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":17},"end":{"line":190,"column":25}},{"start":{"line":191,"column":10},"end":{"line":191,"column":21}},{"start":{"line":192,"column":10},"end":{"line":192,"column":51}}]},"40":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":6},"end":{"line":194,"column":6}},{"start":{"line":194,"column":6},"end":{"line":194,"column":6}}]},"41":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":8}},{"start":{"line":195,"column":8},"end":{"line":195,"column":8}}]},"42":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"43":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":2}},{"start":{"line":251,"column":2},"end":{"line":251,"column":2}}]},"44":{"line":253,"type":"cond-expr","locations":[{"start":{"line":254,"column":10},"end":{"line":254,"column":21}},{"start":{"line":255,"column":10},"end":{"line":255,"column":13}}]},"45":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":13},"end":{"line":258,"column":26}},{"start":{"line":258,"column":30},"end":{"line":258,"column":43}},{"start":{"line":259,"column":7},"end":{"line":259,"column":26}},{"start":{"line":259,"column":30},"end":{"line":259,"column":48}}]},"46":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"47":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":4},"end":{"line":264,"column":4}},{"start":{"line":264,"column":4},"end":{"line":264,"column":4}}]},"48":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":11},"end":{"line":266,"column":11}},{"start":{"line":266,"column":11},"end":{"line":266,"column":11}}]},"49":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":2},"end":{"line":274,"column":2}},{"start":{"line":274,"column":2},"end":{"line":274,"column":2}}]},"50":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"51":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"52":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":4},"end":{"line":281,"column":4}},{"start":{"line":281,"column":4},"end":{"line":281,"column":4}}]},"53":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":2},"end":{"line":286,"column":2}},{"start":{"line":286,"column":2},"end":{"line":286,"column":2}}]}},"code":["'use strict';","","var StrictModeError = require('../../error/strict');","var utils = require('../../utils');","","/*!"," * Casts an update op based on the given schema"," *"," * @param {Schema} schema"," * @param {Object} obj"," * @param {Object} options"," * @param {Boolean} [options.overwrite] defaults to false"," * @param {Boolean|String} [options.strict] defaults to true"," * @return {Boolean} true iff the update is non-empty"," */","","module.exports = function castUpdate(schema, obj, options) {","  if (!obj) {","    return undefined;","  }","","  var ops = Object.keys(obj);","  var i = ops.length;","  var ret = {};","  var hasKeys;","  var val;","  var hasDollarKey = false;","  var overwrite = options.overwrite;","","  while (i--) {","    var op = ops[i];","    // if overwrite is set, don't do any of the special $set stuff","    if (op[0] !== '$' && !overwrite) {","      // fix up $set sugar","      if (!ret.$set) {","        if (obj.$set) {","          ret.$set = obj.$set;","        } else {","          ret.$set = {};","        }","      }","      ret.$set[op] = obj[op];","      ops.splice(i, 1);","      if (!~ops.indexOf('$set')) ops.push('$set');","    } else if (op === '$set') {","      if (!ret.$set) {","        ret[op] = obj[op];","      }","    } else {","      ret[op] = obj[op];","    }","  }","","  // cast each value","  i = ops.length;","","  // if we get passed {} for the update, we still need to respect that when it","  // is an overwrite scenario","  if (overwrite) {","    hasKeys = true;","  }","","  while (i--) {","    op = ops[i];","    val = ret[op];","    hasDollarKey = hasDollarKey || op.charAt(0) === '$';","    if (val &&","        typeof val === 'object' &&","        (!overwrite || hasDollarKey)) {","      hasKeys |= walkUpdatePath(schema, val, op, options.strict);","    } else if (overwrite && ret && typeof ret === 'object') {","      // if we are just using overwrite, cast the query and then we will","      // *always* return the value, even if it is an empty object. We need to","      // set hasKeys above because we need to account for the case where the","      // user passes {} and wants to clobber the whole document","      // Also, _walkUpdatePath expects an operation, so give it $set since that","      // is basically what we're doing","      walkUpdatePath(schema, ret, '$set', options.strict);","    } else {","      var msg = 'Invalid atomic update value for ' + op + '. '","          + 'Expected an object, received ' + typeof val;","      throw new Error(msg);","    }","  }","","  return hasKeys && ret;","};","","/*!"," * Walk each path of obj and cast its values"," * according to its schema."," *"," * @param {Schema} schema"," * @param {Object} obj - part of a query"," * @param {String} op - the atomic operator ($pull, $set, etc)"," * @param {Boolean|String} strict"," * @param {String} pref - path prefix (internal only)"," * @return {Bool} true if this path has keys to update"," * @api private"," */","","function walkUpdatePath(schema, obj, op, strict, pref) {","  var prefix = pref ? pref + '.' : '',","      keys = Object.keys(obj),","      i = keys.length,","      hasKeys = false,","      schematype,","      key,","      val;","","  var useNestedStrict = schema.options.useNestedStrict;","","  while (i--) {","    key = keys[i];","    val = obj[key];","","    if (val && val.constructor.name === 'Object') {","      // watch for embedded doc schemas","      schematype = schema._getSchema(prefix + key);","      if (schematype && schematype.caster && op in castOps) {","        // embedded doc schema","        hasKeys = true;","","        if ('$each' in val) {","          obj[key] = {","            $each: castUpdateVal(schematype, val.$each, op)","          };","","          if (val.$slice != null) {","            obj[key].$slice = val.$slice | 0;","          }","","          if (val.$sort) {","            obj[key].$sort = val.$sort;","          }","","          if (!!val.$position || val.$position === 0) {","            obj[key].$position = val.$position;","          }","        } else {","          obj[key] = castUpdateVal(schematype, val, op);","        }","      } else if (op === '$currentDate') {","        // $currentDate can take an object","        obj[key] = castUpdateVal(schematype, val, op);","        hasKeys = true;","      } else if (op in castOps && schematype) {","        obj[key] = castUpdateVal(schematype, val, op);","        hasKeys = true;","      } else {","        var pathToCheck = (prefix + key);","        var v = schema._getPathType(pathToCheck);","        var _strict = strict;","        if (useNestedStrict &&","            v &&","            v.schema &&","            'strict' in v.schema.options) {","          _strict = v.schema.options.strict;","        }","","        if (v.pathType === 'undefined') {","          if (_strict === 'throw') {","            throw new StrictModeError(pathToCheck);","          } else if (_strict) {","            delete obj[key];","            continue;","          }","        }","","        // gh-2314","        // we should be able to set a schema-less field","        // to an empty object literal","        hasKeys |= walkUpdatePath(schema, val, op, strict, prefix + key) ||","          (utils.isObject(val) && Object.keys(val).length === 0);","      }","    } else {","      var checkPath = (key === '$each' || key === '$or' || key === '$and') ?","        pref : prefix + key;","      schematype = schema._getSchema(checkPath);","","      var pathDetails = schema._getPathType(checkPath);","      var isStrict = strict;","      if (useNestedStrict &&","          pathDetails &&","          pathDetails.schema &&","          'strict' in pathDetails.schema.options) {","        isStrict = pathDetails.schema.options.strict;","      }","","      var skip = isStrict &&","          !schematype &&","          !/real|nested/.test(pathDetails.pathType);","","      if (skip) {","        if (isStrict === 'throw') {","          throw new StrictModeError(prefix + key);","        } else {","          delete obj[key];","        }","      } else {","        // gh-1845 temporary fix: ignore $rename. See gh-3027 for tracking","        // improving this.","        if (op === '$rename') {","          hasKeys = true;","          continue;","        }","","        hasKeys = true;","        obj[key] = castUpdateVal(schematype, val, op, key);","      }","    }","  }","  return hasKeys;","}","","/*!"," * These operators should be cast to numbers instead"," * of their path schema type."," */","","var numberOps = {","  $pop: 1,","  $unset: 1,","  $inc: 1","};","","/*!"," * These operators require casting docs"," * to real Documents for Update operations."," */","","var castOps = {","  $push: 1,","  $pushAll: 1,","  $addToSet: 1,","  $set: 1,","  $setOnInsert: 1","};","","/*!"," * Casts `val` according to `schema` and atomic `op`."," *"," * @param {SchemaType} schema"," * @param {Object} val"," * @param {String} op - the atomic operator ($pull, $set, etc)"," * @param {String} [$conditional]"," * @api private"," */","","function castUpdateVal(schema, val, op, $conditional) {","  if (!schema) {","    // non-existing schema path","    return op in numberOps","        ? Number(val)","        : val;","  }","","  var cond = schema.caster && op in castOps &&","      (utils.isObject(val) || Array.isArray(val));","  if (cond) {","    // Cast values for ops that add data to MongoDB.","    // Ensures embedded documents get ObjectIds etc.","    var tmp = schema.cast(val);","    if (Array.isArray(val)) {","      val = tmp;","    } else if (Array.isArray(tmp)) {","      val = tmp[0];","    } else {","      val = tmp;","    }","    return val;","  }","","  if (op in numberOps) {","    if (op === '$inc') {","      return schema.castForQuery(val);","    }","    return Number(val);","  }","  if (op === '$currentDate') {","    if (typeof val === 'object') {","      return {$type: val.$type};","    }","    return Boolean(val);","  }","  if (/^\\$/.test($conditional)) {","    return schema.castForQuery($conditional, val);","  }","","  return schema.castForQuery(val);","}",""],"l":{"3":1,"4":1,"17":1,"18":0,"19":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"30":0,"31":0,"33":0,"35":0,"36":0,"37":0,"39":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"50":0,"55":0,"59":0,"60":0,"63":0,"64":0,"65":0,"66":0,"67":0,"70":0,"71":0,"78":0,"80":0,"82":0,"86":0,"102":1,"103":0,"111":0,"113":0,"114":0,"115":0,"117":0,"119":0,"120":0,"122":0,"124":0,"125":0,"129":0,"130":0,"133":0,"134":0,"137":0,"138":0,"141":0,"143":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"154":0,"158":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"173":0,"177":0,"179":0,"181":0,"182":0,"183":0,"187":0,"190":0,"194":0,"195":0,"196":0,"198":0,"203":0,"204":0,"205":0,"208":0,"209":0,"213":0,"221":1,"232":1,"250":1,"251":0,"253":0,"258":0,"260":0,"263":0,"264":0,"265":0,"266":0,"267":0,"269":0,"271":0,"274":0,"275":0,"276":0,"278":0,"280":0,"281":0,"282":0,"284":0,"286":0,"287":0,"290":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/setDefaultsOnInsert.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/setDefaultsOnInsert.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":17},"end":{"line":16,"column":61}}},"2":{"name":"(anonymous_2)","line":60,"loc":{"start":{"line":60,"column":22},"end":{"line":60,"column":49}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":37},"end":{"line":68,"column":66}}},"4":{"name":"isModified","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":36}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":54}},"2":{"start":{"line":16,"column":0},"end":{"line":97,"column":2}},"3":{"start":{"line":17,"column":2},"end":{"line":17,"column":42}},"4":{"start":{"line":18,"column":2},"end":{"line":18,"column":23}},"5":{"start":{"line":19,"column":2},"end":{"line":19,"column":25}},"6":{"start":{"line":20,"column":2},"end":{"line":20,"column":28}},"7":{"start":{"line":21,"column":2},"end":{"line":21,"column":30}},"8":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"9":{"start":{"line":24,"column":2},"end":{"line":94,"column":3}},"10":{"start":{"line":25,"column":4},"end":{"line":30,"column":5}},"11":{"start":{"line":26,"column":6},"end":{"line":29,"column":7}},"12":{"start":{"line":27,"column":8},"end":{"line":27,"column":56}},"13":{"start":{"line":28,"column":8},"end":{"line":28,"column":31}},"14":{"start":{"line":32,"column":4},"end":{"line":34,"column":5}},"15":{"start":{"line":33,"column":6},"end":{"line":33,"column":45}},"16":{"start":{"line":36,"column":4},"end":{"line":36,"column":47}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":31}},"18":{"start":{"line":38,"column":4},"end":{"line":57,"column":5}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":26}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":46}},"21":{"start":{"line":41,"column":6},"end":{"line":54,"column":7}},"22":{"start":{"line":42,"column":8},"end":{"line":42,"column":51}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":33}},"25":{"start":{"line":45,"column":8},"end":{"line":50,"column":9}},"26":{"start":{"line":46,"column":10},"end":{"line":49,"column":11}},"27":{"start":{"line":47,"column":12},"end":{"line":47,"column":32}},"28":{"start":{"line":48,"column":12},"end":{"line":48,"column":18}},"29":{"start":{"line":51,"column":8},"end":{"line":53,"column":9}},"30":{"start":{"line":52,"column":10},"end":{"line":52,"column":19}},"31":{"start":{"line":55,"column":6},"end":{"line":55,"column":31}},"32":{"start":{"line":56,"column":6},"end":{"line":56,"column":28}},"33":{"start":{"line":59,"column":4},"end":{"line":93,"column":5}},"34":{"start":{"line":60,"column":6},"end":{"line":92,"column":9}},"35":{"start":{"line":61,"column":8},"end":{"line":64,"column":9}},"36":{"start":{"line":63,"column":10},"end":{"line":63,"column":17}},"37":{"start":{"line":65,"column":8},"end":{"line":91,"column":9}},"38":{"start":{"line":68,"column":10},"end":{"line":82,"column":13}},"39":{"start":{"line":69,"column":12},"end":{"line":72,"column":13}},"40":{"start":{"line":71,"column":14},"end":{"line":71,"column":21}},"41":{"start":{"line":74,"column":12},"end":{"line":74,"column":57}},"42":{"start":{"line":75,"column":12},"end":{"line":81,"column":13}},"43":{"start":{"line":77,"column":14},"end":{"line":77,"column":42}},"44":{"start":{"line":78,"column":14},"end":{"line":78,"column":68}},"45":{"start":{"line":79,"column":14},"end":{"line":79,"column":63}},"46":{"start":{"line":80,"column":14},"end":{"line":80,"column":54}},"47":{"start":{"line":84,"column":10},"end":{"line":84,"column":54}},"48":{"start":{"line":85,"column":10},"end":{"line":90,"column":11}},"49":{"start":{"line":86,"column":12},"end":{"line":86,"column":40}},"50":{"start":{"line":87,"column":12},"end":{"line":87,"column":66}},"51":{"start":{"line":88,"column":12},"end":{"line":88,"column":47}},"52":{"start":{"line":89,"column":12},"end":{"line":89,"column":38}},"53":{"start":{"line":96,"column":2},"end":{"line":96,"column":19}},"54":{"start":{"line":99,"column":0},"end":{"line":112,"column":1}},"55":{"start":{"line":100,"column":2},"end":{"line":102,"column":3}},"56":{"start":{"line":101,"column":4},"end":{"line":101,"column":16}},"57":{"start":{"line":103,"column":2},"end":{"line":103,"column":27}},"58":{"start":{"line":104,"column":2},"end":{"line":104,"column":18}},"59":{"start":{"line":105,"column":2},"end":{"line":110,"column":3}},"60":{"start":{"line":106,"column":4},"end":{"line":108,"column":5}},"61":{"start":{"line":107,"column":6},"end":{"line":107,"column":18}},"62":{"start":{"line":109,"column":4},"end":{"line":109,"column":23}},"63":{"start":{"line":111,"column":2},"end":{"line":111,"column":15}}},"branchMap":{"1":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":25},"end":{"line":17,"column":34}},{"start":{"line":17,"column":38},"end":{"line":17,"column":40}}]},"2":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":24,"column":2}},{"start":{"line":24,"column":2},"end":{"line":24,"column":2}}]},"3":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":13}},{"start":{"line":24,"column":17},"end":{"line":24,"column":31}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"5":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"6":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"7":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":10},"end":{"line":41,"column":19}},{"start":{"line":41,"column":23},"end":{"line":41,"column":52}}]},"8":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":10},"end":{"line":46,"column":10}},{"start":{"line":46,"column":10},"end":{"line":46,"column":10}}]},"9":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"10":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"11":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":8}},{"start":{"line":61,"column":8},"end":{"line":61,"column":8}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":12}},{"start":{"line":69,"column":12},"end":{"line":69,"column":12}}]},"14":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":12}},{"start":{"line":75,"column":12},"end":{"line":75,"column":12}}]},"15":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":16},"end":{"line":75,"column":57}},{"start":{"line":76,"column":16},"end":{"line":76,"column":42}}]},"16":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":26},"end":{"line":77,"column":35}},{"start":{"line":77,"column":39},"end":{"line":77,"column":41}}]},"17":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":39},"end":{"line":78,"column":61}},{"start":{"line":78,"column":65},"end":{"line":78,"column":67}}]},"18":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":10},"end":{"line":85,"column":10}},{"start":{"line":85,"column":10},"end":{"line":85,"column":10}}]},"19":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":14},"end":{"line":85,"column":41}},{"start":{"line":85,"column":45},"end":{"line":85,"column":71}}]},"20":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":24},"end":{"line":86,"column":33}},{"start":{"line":86,"column":37},"end":{"line":86,"column":39}}]},"21":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":37},"end":{"line":87,"column":59}},{"start":{"line":87,"column":63},"end":{"line":87,"column":65}}]},"22":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":2},"end":{"line":100,"column":2}},{"start":{"line":100,"column":2},"end":{"line":100,"column":2}}]},"23":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]}},"code":["'use strict';","","var modifiedPaths = require('./common').modifiedPaths;","","/**"," * Applies defaults to update and findOneAndUpdate operations."," *"," * @param {Query} query"," * @param {Schema} schema"," * @param {Object} castedDoc"," * @param {Object} options"," * @method setDefaultsOnInsert"," * @api private"," */","","module.exports = function(query, schema, castedDoc, options) {","  var keys = Object.keys(castedDoc || {});","  var updatedKeys = {};","  var updatedValues = {};","  var numKeys = keys.length;","  var hasDollarUpdate = false;","  var modified = {};","","  if (options && options.upsert) {","    for (var i = 0; i < numKeys; ++i) {","      if (keys[i].charAt(0) === '$') {","        modifiedPaths(castedDoc[keys[i]], '', modified);","        hasDollarUpdate = true;","      }","    }","","    if (!hasDollarUpdate) {","      modifiedPaths(castedDoc, '', modified);","    }","","    var paths = Object.keys(query._conditions);","    var numPaths = keys.length;","    for (i = 0; i < numPaths; ++i) {","      var path = paths[i];","      var condition = query._conditions[path];","      if (condition && typeof condition === 'object') {","        var conditionKeys = Object.keys(condition);","        var numConditionKeys = conditionKeys.length;","        var hasDollarKey = false;","        for (var j = 0; j < numConditionKeys; ++j) {","          if (conditionKeys[j].charAt(0) === '$') {","            hasDollarKey = true;","            break;","          }","        }","        if (hasDollarKey) {","          continue;","        }","      }","      updatedKeys[path] = true;","      modified[path] = true;","    }","","    if (options.setDefaultsOnInsert) {","      schema.eachPath(function(path, schemaType) {","        if (path === '_id') {","          // Ignore _id for now because it causes bugs in 2.4","          return;","        }","        if (schemaType.$isSingleNested) {","          // Only handle nested schemas 1-level deep to avoid infinite","          // recursion re: https://github.com/mongodb-js/mongoose-autopopulate/issues/11","          schemaType.schema.eachPath(function(_path, _schemaType) {","            if (path === '_id') {","              // Ignore _id for now because it causes bugs in 2.4","              return;","            }","","            var def = _schemaType.getDefault(null, true);","            if (!isModified(modified, path + '.' + _path) &&","                typeof def !== 'undefined') {","              castedDoc = castedDoc || {};","              castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};","              castedDoc.$setOnInsert[path + '.' + _path] = def;","              updatedValues[path + '.' + _path] = def;","            }","          });","        } else {","          var def = schemaType.getDefault(null, true);","          if (!isModified(modified, path) && typeof def !== 'undefined') {","            castedDoc = castedDoc || {};","            castedDoc.$setOnInsert = castedDoc.$setOnInsert || {};","            castedDoc.$setOnInsert[path] = def;","            updatedValues[path] = def;","          }","        }","      });","    }","  }","","  return castedDoc;","};","","function isModified(modified, path) {","  if (modified[path]) {","    return true;","  }","  var sp = path.split('.');","  var cur = sp[0];","  for (var i = 0; i < sp.length; ++i) {","    if (modified[cur]) {","      return true;","    }","    cur += '.' + sp[i];","  }","  return false;","}",""],"l":{"3":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"32":0,"33":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"51":0,"52":0,"55":0,"56":0,"59":0,"60":0,"61":0,"63":0,"65":0,"68":0,"69":0,"71":0,"74":0,"75":0,"77":0,"78":0,"79":0,"80":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"96":0,"99":1,"100":0,"101":0,"103":0,"104":0,"105":0,"106":0,"107":0,"109":0,"111":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/updateValidators.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/updateValidators.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":23,"loc":{"start":{"line":23,"column":17},"end":{"line":23,"column":61}}},"2":{"name":"iter","line":76,"loc":{"start":{"line":76,"column":2},"end":{"line":76,"column":22}}},"3":{"name":"(anonymous_3)","line":84,"loc":{"start":{"line":84,"column":31},"end":{"line":84,"column":50}}},"4":{"name":"(anonymous_4)","line":87,"loc":{"start":{"line":87,"column":12},"end":{"line":87,"column":26}}},"5":{"name":"(anonymous_5)","line":106,"loc":{"start":{"line":106,"column":5},"end":{"line":106,"column":17}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":33},"end":{"line":109,"column":52}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":14},"end":{"line":112,"column":28}}},"8":{"name":"(anonymous_8)","line":124,"loc":{"start":{"line":124,"column":11},"end":{"line":124,"column":23}}},"9":{"name":"(anonymous_9)","line":125,"loc":{"start":{"line":125,"column":37},"end":{"line":125,"column":56}}},"10":{"name":"(anonymous_10)","line":128,"loc":{"start":{"line":128,"column":16},"end":{"line":128,"column":30}}},"11":{"name":"(anonymous_11)","line":144,"loc":{"start":{"line":144,"column":9},"end":{"line":144,"column":28}}},"12":{"name":"(anonymous_12)","line":145,"loc":{"start":{"line":145,"column":34},"end":{"line":145,"column":45}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":53}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":41}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":42}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":54}},"6":{"start":{"line":23,"column":0},"end":{"line":156,"column":2}},"7":{"start":{"line":24,"column":2},"end":{"line":24,"column":12}},"8":{"start":{"line":25,"column":2},"end":{"line":25,"column":42}},"9":{"start":{"line":26,"column":2},"end":{"line":26,"column":23}},"10":{"start":{"line":27,"column":2},"end":{"line":27,"column":25}},"11":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"12":{"start":{"line":29,"column":2},"end":{"line":29,"column":28}},"13":{"start":{"line":30,"column":2},"end":{"line":30,"column":30}},"14":{"start":{"line":31,"column":2},"end":{"line":31,"column":20}},"15":{"start":{"line":33,"column":2},"end":{"line":64,"column":3}},"16":{"start":{"line":34,"column":4},"end":{"line":63,"column":5}},"17":{"start":{"line":35,"column":6},"end":{"line":47,"column":7}},"18":{"start":{"line":36,"column":8},"end":{"line":36,"column":48}},"19":{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},"20":{"start":{"line":38,"column":10},"end":{"line":44,"column":11}},"21":{"start":{"line":39,"column":12},"end":{"line":40,"column":58}},"22":{"start":{"line":42,"column":12},"end":{"line":43,"column":54}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":17}},"24":{"start":{"line":48,"column":6},"end":{"line":48,"column":54}},"25":{"start":{"line":49,"column":6},"end":{"line":49,"column":45}},"26":{"start":{"line":50,"column":6},"end":{"line":50,"column":36}},"27":{"start":{"line":51,"column":6},"end":{"line":51,"column":34}},"28":{"start":{"line":52,"column":6},"end":{"line":61,"column":7}},"29":{"start":{"line":53,"column":8},"end":{"line":53,"column":57}},"30":{"start":{"line":54,"column":8},"end":{"line":54,"column":57}},"31":{"start":{"line":55,"column":8},"end":{"line":59,"column":9}},"32":{"start":{"line":56,"column":10},"end":{"line":56,"column":54}},"33":{"start":{"line":57,"column":15},"end":{"line":59,"column":9}},"34":{"start":{"line":58,"column":10},"end":{"line":58,"column":49}},"35":{"start":{"line":60,"column":8},"end":{"line":60,"column":40}},"36":{"start":{"line":62,"column":6},"end":{"line":62,"column":29}},"37":{"start":{"line":66,"column":2},"end":{"line":70,"column":3}},"38":{"start":{"line":67,"column":4},"end":{"line":67,"column":43}},"39":{"start":{"line":68,"column":4},"end":{"line":68,"column":39}},"40":{"start":{"line":69,"column":4},"end":{"line":69,"column":45}},"41":{"start":{"line":72,"column":2},"end":{"line":72,"column":43}},"42":{"start":{"line":73,"column":2},"end":{"line":73,"column":34}},"43":{"start":{"line":74,"column":2},"end":{"line":74,"column":31}},"44":{"start":{"line":75,"column":2},"end":{"line":75,"column":28}},"45":{"start":{"line":76,"column":2},"end":{"line":98,"column":3}},"46":{"start":{"line":77,"column":4},"end":{"line":77,"column":51}},"47":{"start":{"line":78,"column":4},"end":{"line":97,"column":5}},"48":{"start":{"line":81,"column":6},"end":{"line":83,"column":7}},"49":{"start":{"line":82,"column":8},"end":{"line":82,"column":15}},"50":{"start":{"line":84,"column":6},"end":{"line":96,"column":9}},"51":{"start":{"line":85,"column":8},"end":{"line":95,"column":37}},"52":{"start":{"line":88,"column":14},"end":{"line":91,"column":15}},"53":{"start":{"line":89,"column":16},"end":{"line":89,"column":38}},"54":{"start":{"line":90,"column":16},"end":{"line":90,"column":43}},"55":{"start":{"line":92,"column":14},"end":{"line":92,"column":29}},"56":{"start":{"line":99,"column":2},"end":{"line":101,"column":3}},"57":{"start":{"line":100,"column":4},"end":{"line":100,"column":39}},"58":{"start":{"line":103,"column":2},"end":{"line":103,"column":53}},"59":{"start":{"line":104,"column":2},"end":{"line":104,"column":44}},"60":{"start":{"line":105,"column":2},"end":{"line":142,"column":3}},"61":{"start":{"line":106,"column":4},"end":{"line":141,"column":10}},"62":{"start":{"line":107,"column":6},"end":{"line":107,"column":58}},"63":{"start":{"line":108,"column":6},"end":{"line":140,"column":7}},"64":{"start":{"line":109,"column":8},"end":{"line":120,"column":11}},"65":{"start":{"line":110,"column":10},"end":{"line":119,"column":69}},"66":{"start":{"line":113,"column":16},"end":{"line":116,"column":17}},"67":{"start":{"line":114,"column":18},"end":{"line":114,"column":45}},"68":{"start":{"line":115,"column":18},"end":{"line":115,"column":45}},"69":{"start":{"line":117,"column":16},"end":{"line":117,"column":31}},"70":{"start":{"line":122,"column":8},"end":{"line":122,"column":63}},"71":{"start":{"line":123,"column":8},"end":{"line":139,"column":9}},"72":{"start":{"line":124,"column":10},"end":{"line":138,"column":16}},"73":{"start":{"line":125,"column":12},"end":{"line":137,"column":15}},"74":{"start":{"line":126,"column":14},"end":{"line":136,"column":43}},"75":{"start":{"line":129,"column":18},"end":{"line":132,"column":19}},"76":{"start":{"line":130,"column":20},"end":{"line":130,"column":47}},"77":{"start":{"line":131,"column":20},"end":{"line":131,"column":47}},"78":{"start":{"line":133,"column":18},"end":{"line":133,"column":33}},"79":{"start":{"line":144,"column":2},"end":{"line":155,"column":4}},"80":{"start":{"line":145,"column":4},"end":{"line":154,"column":7}},"81":{"start":{"line":146,"column":6},"end":{"line":152,"column":7}},"82":{"start":{"line":147,"column":8},"end":{"line":147,"column":44}},"83":{"start":{"line":148,"column":8},"end":{"line":150,"column":9}},"84":{"start":{"line":149,"column":10},"end":{"line":149,"column":69}},"85":{"start":{"line":151,"column":8},"end":{"line":151,"column":29}},"86":{"start":{"line":153,"column":6},"end":{"line":153,"column":21}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":25},"end":{"line":25,"column":34}},{"start":{"line":25,"column":38},"end":{"line":25,"column":40}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"4":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":10},"end":{"line":35,"column":29}},{"start":{"line":35,"column":33},"end":{"line":35,"column":56}}]},"5":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":10}},{"start":{"line":38,"column":10},"end":{"line":38,"column":10}}]},"6":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":45},"end":{"line":39,"column":74}},{"start":{"line":39,"column":78},"end":{"line":39,"column":80}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":45},"end":{"line":42,"column":74}},{"start":{"line":42,"column":78},"end":{"line":42,"column":80}}]},"8":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":55,"column":8}},{"start":{"line":55,"column":8},"end":{"line":55,"column":8}}]},"9":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":12},"end":{"line":55,"column":30}},{"start":{"line":55,"column":34},"end":{"line":55,"column":60}}]},"10":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":15},"end":{"line":57,"column":15}},{"start":{"line":57,"column":15},"end":{"line":57,"column":15}}]},"11":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"12":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":4},"end":{"line":78,"column":4}},{"start":{"line":78,"column":4},"end":{"line":78,"column":4}}]},"13":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":6},"end":{"line":81,"column":6}},{"start":{"line":81,"column":6},"end":{"line":81,"column":6}}]},"14":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":10},"end":{"line":81,"column":37}},{"start":{"line":81,"column":41},"end":{"line":81,"column":76}}]},"15":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":14},"end":{"line":88,"column":14}},{"start":{"line":88,"column":14},"end":{"line":88,"column":14}}]},"16":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":53},"end":{"line":94,"column":58}},{"start":{"line":94,"column":61},"end":{"line":94,"column":65}}]},"17":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":12},"end":{"line":94,"column":19}},{"start":{"line":94,"column":23},"end":{"line":94,"column":50}}]},"18":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"19":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":10},"end":{"line":108,"column":20}},{"start":{"line":108,"column":24},"end":{"line":108,"column":59}}]},"20":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":16},"end":{"line":113,"column":16}},{"start":{"line":113,"column":16},"end":{"line":113,"column":16}}]},"21":{"line":119,"type":"cond-expr","locations":[{"start":{"line":119,"column":55},"end":{"line":119,"column":60}},{"start":{"line":119,"column":63},"end":{"line":119,"column":67}}]},"22":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":14},"end":{"line":119,"column":21}},{"start":{"line":119,"column":25},"end":{"line":119,"column":52}}]},"23":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":18},"end":{"line":129,"column":18}},{"start":{"line":129,"column":18},"end":{"line":129,"column":18}}]},"24":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":57},"end":{"line":135,"column":62}},{"start":{"line":135,"column":65},"end":{"line":135,"column":69}}]},"25":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":16},"end":{"line":135,"column":23}},{"start":{"line":135,"column":27},"end":{"line":135,"column":54}}]},"26":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":6},"end":{"line":146,"column":6}},{"start":{"line":146,"column":6},"end":{"line":146,"column":6}}]}},"code":["/*!"," * Module dependencies."," */","","var Mixed = require('../schema/mixed');","var ValidationError = require('../error/validation');","var parallel = require('async/parallel');","var flatten = require('./common').flatten;","var modifiedPaths = require('./common').modifiedPaths;","","/**"," * Applies validators and defaults to update and findOneAndUpdate operations,"," * specifically passing a null doc as `this` to validators and defaults"," *"," * @param {Query} query"," * @param {Schema} schema"," * @param {Object} castedDoc"," * @param {Object} options"," * @method runValidatorsOnUpdate"," * @api private"," */","","module.exports = function(query, schema, castedDoc, options) {","  var _keys;","  var keys = Object.keys(castedDoc || {});","  var updatedKeys = {};","  var updatedValues = {};","  var arrayAtomicUpdates = {};","  var numKeys = keys.length;","  var hasDollarUpdate = false;","  var modified = {};","","  for (var i = 0; i < numKeys; ++i) {","    if (keys[i].charAt(0) === '$') {","      if (keys[i] === '$push' || keys[i] === '$addToSet') {","        _keys = Object.keys(castedDoc[keys[i]]);","        for (var ii = 0; ii < _keys.length; ++ii) {","          if (castedDoc[keys[i]][_keys[ii]].$each) {","            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).","              concat(castedDoc[keys[i]][_keys[ii]].$each);","          } else {","            arrayAtomicUpdates[_keys[ii]] = (arrayAtomicUpdates[_keys[ii]] || []).","              concat([castedDoc[keys[i]][_keys[ii]]]);","          }","        }","        continue;","      }","      modifiedPaths(castedDoc[keys[i]], '', modified);","      var flat = flatten(castedDoc[keys[i]]);","      var paths = Object.keys(flat);","      var numPaths = paths.length;","      for (var j = 0; j < numPaths; ++j) {","        var updatedPath = paths[j].replace('.$.', '.0.');","        updatedPath = updatedPath.replace(/\\.\\$$/, '.0');","        if (keys[i] === '$set' || keys[i] === '$setOnInsert') {","          updatedValues[updatedPath] = flat[paths[j]];","        } else if (keys[i] === '$unset') {","          updatedValues[updatedPath] = undefined;","        }","        updatedKeys[updatedPath] = true;","      }","      hasDollarUpdate = true;","    }","  }","","  if (!hasDollarUpdate) {","    modifiedPaths(castedDoc, '', modified);","    updatedValues = flatten(castedDoc);","    updatedKeys = Object.keys(updatedValues);","  }","","  var updates = Object.keys(updatedValues);","  var numUpdates = updates.length;","  var validatorsToExecute = [];","  var validationErrors = [];","  function iter(i, v) {","    var schemaPath = schema._getSchema(updates[i]);","    if (schemaPath) {","      // gh-4305: `_getSchema()` will report all sub-fields of a 'Mixed' path","      // as 'Mixed', so avoid double validating them.","      if (schemaPath instanceof Mixed && schemaPath.$fullPath !== updates[i]) {","        return;","      }","      validatorsToExecute.push(function(callback) {","        schemaPath.doValidate(","            v,","            function(err) {","              if (err) {","                err.path = updates[i];","                validationErrors.push(err);","              }","              callback(null);","            },","            options && options.context === 'query' ? query : null,","            {updateValidator: true});","      });","    }","  }","  for (i = 0; i < numUpdates; ++i) {","    iter(i, updatedValues[updates[i]]);","  }","","  var arrayUpdates = Object.keys(arrayAtomicUpdates);","  var numArrayUpdates = arrayUpdates.length;","  for (i = 0; i < numArrayUpdates; ++i) {","    (function(i) {","      var schemaPath = schema._getSchema(arrayUpdates[i]);","      if (schemaPath && schemaPath.$isMongooseDocumentArray) {","        validatorsToExecute.push(function(callback) {","          schemaPath.doValidate(","              arrayAtomicUpdates[arrayUpdates[i]],","              function(err) {","                if (err) {","                  err.path = arrayUpdates[i];","                  validationErrors.push(err);","                }","                callback(null);","              },","              options && options.context === 'query' ? query : null);","        });","      } else {","        schemaPath = schema._getSchema(arrayUpdates[i] + '.0');","        for (var j = 0; j < arrayAtomicUpdates[arrayUpdates[i]].length; ++j) {","          (function(j) {","            validatorsToExecute.push(function(callback) {","              schemaPath.doValidate(","                arrayAtomicUpdates[arrayUpdates[i]][j],","                function(err) {","                  if (err) {","                    err.path = arrayUpdates[i];","                    validationErrors.push(err);","                  }","                  callback(null);","                },","                options && options.context === 'query' ? query : null,","                { updateValidator: true });","            });","          })(j);","        }","      }","    })(i);","  }","","  return function(callback) {","    parallel(validatorsToExecute, function() {","      if (validationErrors.length) {","        var err = new ValidationError(null);","        for (var i = 0; i < validationErrors.length; ++i) {","          err.errors[validationErrors[i].path] = validationErrors[i];","        }","        return callback(err);","      }","      callback(null);","    });","  };","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"62":0,"66":0,"67":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"81":0,"82":0,"84":0,"85":0,"88":0,"89":0,"90":0,"92":0,"99":0,"100":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"117":0,"122":0,"123":0,"124":0,"125":0,"126":0,"129":0,"130":0,"131":0,"133":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"151":0,"153":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/model.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/model.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":0,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":1,"269":0,"270":0,"271":1,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":1,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":1,"319":0,"320":1,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":1,"335":16,"336":1,"337":0,"338":0,"339":0,"340":1,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":1,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":1,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":1,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":1,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":1,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":1,"451":0,"452":0,"453":0,"454":0,"455":0,"456":1,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":1,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":1,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":1,"494":0,"495":0,"496":0,"497":1,"498":0,"499":0,"500":1,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":1,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":1,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":1,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":1,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":1,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":1,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":1,"716":0,"717":0,"718":0,"719":1,"720":0,"721":1,"722":0,"723":1,"724":0,"725":1,"726":0,"727":1,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":1,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":1,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":1,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":1,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":1,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":1,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":1,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":1,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":1,"919":0,"920":0,"921":0,"922":0,"923":0,"924":1,"925":1,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":1,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":1,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":1,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":1,"1031":0,"1032":0,"1033":0,"1034":0,"1035":1,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":1,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":1,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":1,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":1,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":1,"1185":0,"1186":0,"1187":0,"1188":0,"1189":1,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":1,"1203":0,"1204":1,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":1,"1259":0,"1260":0,"1261":1,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":1,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0,0,0,0,0,0],"36":[0,0],"37":[0,0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0,0,0,0,0,0,0],"79":[0,0],"80":[0,0],"81":[0,0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,0],"167":[0,0],"168":[0,0],"169":[0,0],"170":[0,0],"171":[0,0],"172":[0,0],"173":[0,0],"174":[0,0],"175":[0,0],"176":[0,0],"177":[0,0],"178":[0,0],"179":[0,0],"180":[0,0],"181":[0,0],"182":[0,0],"183":[0,0],"184":[0,0],"185":[0,0],"186":[0,0],"187":[0,0],"188":[0,0],"189":[0,0],"190":[0,0],"191":[0,0],"192":[0,0],"193":[0,0],"194":[0,0],"195":[0,0],"196":[0,0,0],"197":[0,0],"198":[0,0],"199":[0,0],"200":[0,0],"201":[0,0],"202":[0,0],"203":[0,0],"204":[0,0],"205":[0,0],"206":[0,0],"207":[0,0],"208":[0,0],"209":[0,0],"210":[0,0],"211":[0,0],"212":[0,0],"213":[0,0],"214":[0,0],"215":[0,0],"216":[0,0],"217":[0,0],"218":[0,0],"219":[0,0],"220":[0,0],"221":[0,0],"222":[0,0],"223":[0,0],"224":[0,0],"225":[0,0],"226":[0,0,0],"227":[0,0],"228":[0,0],"229":[0,0],"230":[0,0],"231":[0,0],"232":[0,0],"233":[0,0],"234":[0,0],"235":[0,0],"236":[0,0],"237":[0,0],"238":[0,0],"239":[0,0],"240":[0,0],"241":[0,0],"242":[0,0],"243":[0,0],"244":[0,0],"245":[0,0],"246":[0,0],"247":[0,0],"248":[0,0],"249":[0,0],"250":[0,0],"251":[0,0],"252":[0,0],"253":[0,0],"254":[0,0],"255":[0,0],"256":[0,0],"257":[0,0],"258":[0,0],"259":[0,0],"260":[0,0],"261":[0,0],"262":[0,0],"263":[0,0],"264":[0,0],"265":[0,0],"266":[0,0],"267":[0,0],"268":[0,0],"269":[0,0],"270":[0,0],"271":[0,0],"272":[0,0],"273":[0,0],"274":[0,0],"275":[0,0],"276":[0,0],"277":[0,0],"278":[0,0],"279":[0,0],"280":[0,0],"281":[0,0],"282":[0,0],"283":[0,0],"284":[0,0],"285":[0,0],"286":[0,0],"287":[0,0],"288":[0,0],"289":[0,0],"290":[0,0],"291":[0,0],"292":[0,0],"293":[0,0],"294":[0,0],"295":[0,0],"296":[0,0],"297":[0,0],"298":[0,0],"299":[0,0],"300":[0,0],"301":[0,0],"302":[0,0],"303":[0,0],"304":[0,0],"305":[0,0,0],"306":[0,0,0],"307":[0,0],"308":[0,0],"309":[0,0],"310":[0,0],"311":[0,0],"312":[0,0,0],"313":[0,0],"314":[0,0],"315":[0,0],"316":[0,0],"317":[0,0],"318":[0,0],"319":[0,0],"320":[0,0],"321":[0,0],"322":[0,0],"323":[0,0],"324":[0,0],"325":[0,0],"326":[0,0],"327":[0,0],"328":[0,0],"329":[0,0],"330":[0,0],"331":[0,0],"332":[0,0],"333":[0,0,0],"334":[0,0],"335":[0,0],"336":[0,0],"337":[0,0],"338":[0,0],"339":[0,0],"340":[0,0],"341":[0,0],"342":[0,0],"343":[0,0],"344":[0,0,0],"345":[0,0],"346":[0,0],"347":[0,0,0,0],"348":[0,0],"349":[0,0],"350":[0,0],"351":[0,0],"352":[0,0,0],"353":[0,0],"354":[0,0],"355":[0,0],"356":[0,0],"357":[0,0],"358":[0,0],"359":[0,0],"360":[0,0],"361":[0,0],"362":[0,0,0],"363":[0,0],"364":[0,0,0],"365":[0,0,0],"366":[0,0],"367":[0,0],"368":[0,0],"369":[0,0],"370":[0,0],"371":[0,0],"372":[0,0],"373":[0,0],"374":[0,0,0],"375":[0,0],"376":[0,0,0],"377":[0,0],"378":[0,0,0],"379":[0,0],"380":[0,0],"381":[0,0],"382":[0,0],"383":[0,0],"384":[0,0],"385":[0,0],"386":[0,0],"387":[0,0],"388":[0,0],"389":[0,0,0],"390":[0,0],"391":[0,0],"392":[0,0],"393":[0,0],"394":[0,0],"395":[0,0],"396":[0,0],"397":[0,0],"398":[0,0],"399":[0,0],"400":[0,0],"401":[0,0],"402":[0,0],"403":[0,0],"404":[0,0],"405":[0,0],"406":[0,0],"407":[0,0],"408":[0,0],"409":[0,0],"410":[0,0],"411":[0,0],"412":[0,0],"413":[0,0],"414":[0,0],"415":[0,0],"416":[0,0],"417":[0,0],"418":[0,0],"419":[0,0],"420":[0,0],"421":[0,0],"422":[0,0],"423":[0,0],"424":[0,0],"425":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0},"fnMap":{"1":{"name":"Model","line":50,"loc":{"start":{"line":50,"column":0},"end":{"line":50,"column":36}}},"2":{"name":"(anonymous_2)","line":111,"loc":{"start":{"line":111,"column":32},"end":{"line":111,"column":60}}},"3":{"name":"(anonymous_3)","line":141,"loc":{"start":{"line":141,"column":17},"end":{"line":141,"column":28}}},"4":{"name":"(anonymous_4)","line":148,"loc":{"start":{"line":148,"column":46},"end":{"line":148,"column":65}}},"5":{"name":"(anonymous_5)","line":193,"loc":{"start":{"line":193,"column":60},"end":{"line":193,"column":79}}},"6":{"name":"(anonymous_6)","line":216,"loc":{"start":{"line":216,"column":26},"end":{"line":216,"column":54}}},"7":{"name":"(anonymous_7)","line":219,"loc":{"start":{"line":219,"column":31},"end":{"line":219,"column":55}}},"8":{"name":"(anonymous_8)","line":221,"loc":{"start":{"line":221,"column":91},"end":{"line":221,"column":107}}},"9":{"name":"(anonymous_9)","line":265,"loc":{"start":{"line":265,"column":91},"end":{"line":265,"column":107}}},"10":{"name":"(anonymous_10)","line":313,"loc":{"start":{"line":313,"column":23},"end":{"line":313,"column":45}}},"11":{"name":"shouldSkipVersioning","line":337,"loc":{"start":{"line":337,"column":0},"end":{"line":337,"column":42}}},"12":{"name":"operand","line":359,"loc":{"start":{"line":359,"column":0},"end":{"line":359,"column":52}}},"13":{"name":"handleAtomics","line":419,"loc":{"start":{"line":419,"column":0},"end":{"line":419,"column":56}}},"14":{"name":"(anonymous_14)","line":426,"loc":{"start":{"line":426,"column":34},"end":{"line":426,"column":51}}},"15":{"name":"iter","line":458,"loc":{"start":{"line":458,"column":2},"end":{"line":458,"column":21}}},"16":{"name":"(anonymous_16)","line":492,"loc":{"start":{"line":492,"column":27},"end":{"line":492,"column":38}}},"17":{"name":"checkDivergentArray","line":578,"loc":{"start":{"line":578,"column":0},"end":{"line":578,"column":47}}},"18":{"name":"(anonymous_18)","line":625,"loc":{"start":{"line":625,"column":29},"end":{"line":625,"column":52}}},"19":{"name":"increment","line":671,"loc":{"start":{"line":671,"column":28},"end":{"line":671,"column":49}}},"20":{"name":"_where","line":684,"loc":{"start":{"line":684,"column":27},"end":{"line":684,"column":50}}},"21":{"name":"remove","line":736,"loc":{"start":{"line":736,"column":25},"end":{"line":736,"column":54}}},"22":{"name":"(anonymous_22)","line":749,"loc":{"start":{"line":749,"column":10},"end":{"line":749,"column":24}}},"23":{"name":"(anonymous_23)","line":750,"loc":{"start":{"line":750,"column":10},"end":{"line":750,"column":24}}},"24":{"name":"(anonymous_24)","line":762,"loc":{"start":{"line":762,"column":38},"end":{"line":762,"column":64}}},"25":{"name":"(anonymous_25)","line":774,"loc":{"start":{"line":774,"column":44},"end":{"line":774,"column":58}}},"26":{"name":"model","line":801,"loc":{"start":{"line":801,"column":24},"end":{"line":801,"column":45}}},"27":{"name":"(anonymous_27)","line":831,"loc":{"start":{"line":831,"column":22},"end":{"line":831,"column":45}}},"28":{"name":"init","line":875,"loc":{"start":{"line":875,"column":13},"end":{"line":875,"column":29}}},"29":{"name":"ensureIndexes","line":914,"loc":{"start":{"line":914,"column":22},"end":{"line":914,"column":64}}},"30":{"name":"(anonymous_30)","line":931,"loc":{"start":{"line":931,"column":25},"end":{"line":931,"column":51}}},"31":{"name":"(anonymous_31)","line":932,"loc":{"start":{"line":932,"column":41},"end":{"line":932,"column":57}}},"32":{"name":"_ensureIndexes","line":943,"loc":{"start":{"line":943,"column":0},"end":{"line":943,"column":50}}},"33":{"name":"(anonymous_33)","line":946,"loc":{"start":{"line":946,"column":17},"end":{"line":946,"column":28}}},"34":{"name":"(anonymous_34)","line":954,"loc":{"start":{"line":954,"column":13},"end":{"line":954,"column":27}}},"35":{"name":"(anonymous_35)","line":962,"loc":{"start":{"line":962,"column":24},"end":{"line":962,"column":61}}},"36":{"name":"(anonymous_36)","line":965,"loc":{"start":{"line":965,"column":25},"end":{"line":965,"column":51}}},"37":{"name":"(anonymous_37)","line":969,"loc":{"start":{"line":969,"column":15},"end":{"line":969,"column":26}}},"38":{"name":"(anonymous_38)","line":979,"loc":{"start":{"line":979,"column":66},"end":{"line":979,"column":86}}},"39":{"name":"(anonymous_39)","line":988,"loc":{"start":{"line":988,"column":15},"end":{"line":988,"column":26}}},"40":{"name":"_handleSafe","line":998,"loc":{"start":{"line":998,"column":0},"end":{"line":998,"column":30}}},"41":{"name":"remove","line":1082,"loc":{"start":{"line":1082,"column":15},"end":{"line":1082,"column":53}}},"42":{"name":"deleteOne","line":1117,"loc":{"start":{"line":1117,"column":18},"end":{"line":1117,"column":59}}},"43":{"name":"deleteMany","line":1152,"loc":{"start":{"line":1152,"column":19},"end":{"line":1152,"column":61}}},"44":{"name":"find","line":1209,"loc":{"start":{"line":1209,"column":13},"end":{"line":1209,"column":70}}},"45":{"name":"findById","line":1285,"loc":{"start":{"line":1285,"column":17},"end":{"line":1285,"column":70}}},"46":{"name":"findOne","line":1339,"loc":{"start":{"line":1339,"column":16},"end":{"line":1339,"column":76}}},"47":{"name":"count","line":1385,"loc":{"start":{"line":1385,"column":14},"end":{"line":1385,"column":51}}},"48":{"name":"distinct","line":1425,"loc":{"start":{"line":1425,"column":17},"end":{"line":1425,"column":64}}},"49":{"name":"where","line":1464,"loc":{"start":{"line":1464,"column":14},"end":{"line":1464,"column":40}}},"50":{"name":"$where","line":1486,"loc":{"start":{"line":1486,"column":15},"end":{"line":1486,"column":33}}},"51":{"name":"(anonymous_51)","line":1561,"loc":{"start":{"line":1561,"column":25},"end":{"line":1561,"column":73}}},"52":{"name":"(anonymous_52)","line":1675,"loc":{"start":{"line":1675,"column":26},"end":{"line":1675,"column":66}}},"53":{"name":"(anonymous_53)","line":1748,"loc":{"start":{"line":1748,"column":25},"end":{"line":1748,"column":65}}},"54":{"name":"(anonymous_54)","line":1807,"loc":{"start":{"line":1807,"column":26},"end":{"line":1807,"column":58}}},"55":{"name":"create","line":1859,"loc":{"start":{"line":1859,"column":15},"end":{"line":1859,"column":46}}},"56":{"name":"(anonymous_56)","line":1884,"loc":{"start":{"line":1884,"column":32},"end":{"line":1884,"column":58}}},"57":{"name":"(anonymous_57)","line":1886,"loc":{"start":{"line":1886,"column":19},"end":{"line":1886,"column":30}}},"58":{"name":"(anonymous_58)","line":1894,"loc":{"start":{"line":1894,"column":17},"end":{"line":1894,"column":31}}},"59":{"name":"(anonymous_59)","line":1895,"loc":{"start":{"line":1895,"column":21},"end":{"line":1895,"column":40}}},"60":{"name":"(anonymous_60)","line":1900,"loc":{"start":{"line":1900,"column":30},"end":{"line":1900,"column":51}}},"61":{"name":"(anonymous_61)","line":1917,"loc":{"start":{"line":1917,"column":24},"end":{"line":1917,"column":51}}},"62":{"name":"(anonymous_62)","line":1963,"loc":{"start":{"line":1963,"column":19},"end":{"line":1963,"column":52}}},"63":{"name":"(anonymous_63)","line":1978,"loc":{"start":{"line":1978,"column":14},"end":{"line":1978,"column":28}}},"64":{"name":"(anonymous_64)","line":1979,"loc":{"start":{"line":1979,"column":19},"end":{"line":1979,"column":38}}},"65":{"name":"(anonymous_65)","line":1981,"loc":{"start":{"line":1981,"column":42},"end":{"line":1981,"column":58}}},"66":{"name":"(anonymous_66)","line":1996,"loc":{"start":{"line":1996,"column":22},"end":{"line":1996,"column":44}}},"67":{"name":"(anonymous_67)","line":2002,"loc":{"start":{"line":2002,"column":36},"end":{"line":2002,"column":50}}},"68":{"name":"(anonymous_68)","line":2010,"loc":{"start":{"line":2010,"column":39},"end":{"line":2010,"column":53}}},"69":{"name":"(anonymous_69)","line":2019,"loc":{"start":{"line":2019,"column":53},"end":{"line":2019,"column":69}}},"70":{"name":"(anonymous_70)","line":2077,"loc":{"start":{"line":2077,"column":18},"end":{"line":2077,"column":51}}},"71":{"name":"(anonymous_71)","line":2089,"loc":{"start":{"line":2089,"column":28},"end":{"line":2089,"column":41}}},"72":{"name":"(anonymous_72)","line":2091,"loc":{"start":{"line":2091,"column":13},"end":{"line":2091,"column":32}}},"73":{"name":"(anonymous_73)","line":2093,"loc":{"start":{"line":2093,"column":68},"end":{"line":2093,"column":84}}},"74":{"name":"(anonymous_74)","line":2101,"loc":{"start":{"line":2101,"column":13},"end":{"line":2101,"column":32}}},"75":{"name":"(anonymous_75)","line":2114,"loc":{"start":{"line":2114,"column":13},"end":{"line":2114,"column":32}}},"76":{"name":"(anonymous_76)","line":2129,"loc":{"start":{"line":2129,"column":13},"end":{"line":2129,"column":32}}},"77":{"name":"(anonymous_77)","line":2140,"loc":{"start":{"line":2140,"column":72},"end":{"line":2140,"column":88}}},"78":{"name":"(anonymous_78)","line":2148,"loc":{"start":{"line":2148,"column":13},"end":{"line":2148,"column":32}}},"79":{"name":"(anonymous_79)","line":2159,"loc":{"start":{"line":2159,"column":13},"end":{"line":2159,"column":32}}},"80":{"name":"(anonymous_80)","line":2170,"loc":{"start":{"line":2170,"column":13},"end":{"line":2170,"column":32}}},"81":{"name":"(anonymous_81)","line":2176,"loc":{"start":{"line":2176,"column":32},"end":{"line":2176,"column":58}}},"82":{"name":"(anonymous_82)","line":2177,"loc":{"start":{"line":2177,"column":26},"end":{"line":2177,"column":42}}},"83":{"name":"(anonymous_83)","line":2183,"loc":{"start":{"line":2183,"column":47},"end":{"line":2183,"column":68}}},"84":{"name":"(anonymous_84)","line":2212,"loc":{"start":{"line":2212,"column":16},"end":{"line":2212,"column":30}}},"85":{"name":"update","line":2298,"loc":{"start":{"line":2298,"column":15},"end":{"line":2298,"column":67}}},"86":{"name":"updateMany","line":2318,"loc":{"start":{"line":2318,"column":19},"end":{"line":2318,"column":75}}},"87":{"name":"updateOne","line":2337,"loc":{"start":{"line":2337,"column":18},"end":{"line":2337,"column":73}}},"88":{"name":"replaceOne","line":2356,"loc":{"start":{"line":2356,"column":19},"end":{"line":2356,"column":75}}},"89":{"name":"_update","line":2364,"loc":{"start":{"line":2364,"column":0},"end":{"line":2364,"column":64}}},"90":{"name":"mapReduce","line":2463,"loc":{"start":{"line":2463,"column":18},"end":{"line":2463,"column":50}}},"91":{"name":"(anonymous_91)","line":2470,"loc":{"start":{"line":2470,"column":25},"end":{"line":2470,"column":51}}},"92":{"name":"(anonymous_92)","line":2489,"loc":{"start":{"line":2489,"column":46},"end":{"line":2489,"column":72}}},"93":{"name":"(anonymous_93)","line":2552,"loc":{"start":{"line":2552,"column":16},"end":{"line":2552,"column":50}}},"94":{"name":"(anonymous_94)","line":2565,"loc":{"start":{"line":2565,"column":27},"end":{"line":2565,"column":53}}},"95":{"name":"(anonymous_95)","line":2574,"loc":{"start":{"line":2574,"column":25},"end":{"line":2574,"column":51}}},"96":{"name":"(anonymous_96)","line":2575,"loc":{"start":{"line":2575,"column":18},"end":{"line":2575,"column":37}}},"97":{"name":"init","line":2597,"loc":{"start":{"line":2597,"column":6},"end":{"line":2597,"column":25}}},"98":{"name":"aggregate","line":2681,"loc":{"start":{"line":2681,"column":18},"end":{"line":2681,"column":39}}},"99":{"name":"(anonymous_99)","line":2734,"loc":{"start":{"line":2734,"column":18},"end":{"line":2734,"column":58}}},"100":{"name":"(anonymous_100)","line":2745,"loc":{"start":{"line":2745,"column":25},"end":{"line":2745,"column":51}}},"101":{"name":"(anonymous_101)","line":2764,"loc":{"start":{"line":2764,"column":82},"end":{"line":2764,"column":101}}},"102":{"name":"init","line":2782,"loc":{"start":{"line":2782,"column":6},"end":{"line":2782,"column":25}}},"103":{"name":"(anonymous_103)","line":2871,"loc":{"start":{"line":2871,"column":17},"end":{"line":2871,"column":49}}},"104":{"name":"(anonymous_104)","line":2888,"loc":{"start":{"line":2888,"column":27},"end":{"line":2888,"column":53}}},"105":{"name":"(anonymous_105)","line":2889,"loc":{"start":{"line":2889,"column":43},"end":{"line":2889,"column":65}}},"106":{"name":"_populate","line":2913,"loc":{"start":{"line":2913,"column":0},"end":{"line":2913,"column":56}}},"107":{"name":"next","line":2928,"loc":{"start":{"line":2928,"column":2},"end":{"line":2928,"column":21}}},"108":{"name":"populate","line":2945,"loc":{"start":{"line":2945,"column":0},"end":{"line":2945,"column":50}}},"109":{"name":"(anonymous_109)","line":2959,"loc":{"start":{"line":2959,"column":24},"end":{"line":2959,"column":35}}},"110":{"name":"flatten","line":2967,"loc":{"start":{"line":2967,"column":2},"end":{"line":2967,"column":25}}},"111":{"name":"next","line":3043,"loc":{"start":{"line":3043,"column":2},"end":{"line":3043,"column":58}}},"112":{"name":"_assign","line":3052,"loc":{"start":{"line":3052,"column":2},"end":{"line":3052,"column":51}}},"113":{"name":"assignVals","line":3145,"loc":{"start":{"line":3145,"column":0},"end":{"line":3145,"column":23}}},"114":{"name":"setValue","line":3158,"loc":{"start":{"line":3158,"column":2},"end":{"line":3158,"column":25}}},"115":{"name":"assignRawDocsToIdStructure","line":3195,"loc":{"start":{"line":3195,"column":0},"end":{"line":3195,"column":116}}},"116":{"name":"(anonymous_116)","line":3249,"loc":{"start":{"line":3249,"column":21},"end":{"line":3249,"column":38}}},"117":{"name":"getModelsMapForPopulate","line":3258,"loc":{"start":{"line":3258,"column":0},"end":{"line":3258,"column":55}}},"118":{"name":"(anonymous_118)","line":3296,"loc":{"start":{"line":3296,"column":39},"end":{"line":3296,"column":51}}},"119":{"name":"convertTo_id","line":3425,"loc":{"start":{"line":3425,"column":0},"end":{"line":3425,"column":27}}},"120":{"name":"valueFilter","line":3462,"loc":{"start":{"line":3462,"column":0},"end":{"line":3462,"column":42}}},"121":{"name":"maybeRemoveId","line":3502,"loc":{"start":{"line":3502,"column":0},"end":{"line":3502,"column":47}}},"122":{"name":"isDoc","line":3517,"loc":{"start":{"line":3517,"column":0},"end":{"line":3517,"column":20}}},"123":{"name":"_getSchema","line":3553,"loc":{"start":{"line":3553,"column":19},"end":{"line":3553,"column":45}}},"124":{"name":"compile","line":3567,"loc":{"start":{"line":3567,"column":16},"end":{"line":3567,"column":81}}},"125":{"name":"model","line":3585,"loc":{"start":{"line":3585,"column":12},"end":{"line":3585,"column":48}}},"126":{"name":"(anonymous_126)","line":3625,"loc":{"start":{"line":3625,"column":16},"end":{"line":3625,"column":27}}},"127":{"name":"(anonymous_127)","line":3636,"loc":{"start":{"line":3636,"column":21},"end":{"line":3636,"column":54}}},"128":{"name":"(anonymous_128)","line":3642,"loc":{"start":{"line":3642,"column":27},"end":{"line":3642,"column":53}}},"129":{"name":"(anonymous_129)","line":3643,"loc":{"start":{"line":3643,"column":40},"end":{"line":3643,"column":64}}},"130":{"name":"applyQueryMethods","line":3664,"loc":{"start":{"line":3664,"column":0},"end":{"line":3664,"column":43}}},"131":{"name":"subclass","line":3679,"loc":{"start":{"line":3679,"column":19},"end":{"line":3679,"column":63}}},"132":{"name":"Model","line":3683,"loc":{"start":{"line":3683,"column":14},"end":{"line":3683,"column":50}}},"133":{"name":"(anonymous_133)","line":3716,"loc":{"start":{"line":3716,"column":22},"end":{"line":3716,"column":41}}},"134":{"name":"(anonymous_134)","line":3718,"loc":{"start":{"line":3718,"column":9},"end":{"line":3718,"column":20}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":39}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":56}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":65}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":50}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":65}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":52}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"11":{"start":{"line":15,"column":0},"end":{"line":15,"column":56}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":60}},"13":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"14":{"start":{"line":18,"column":0},"end":{"line":18,"column":29}},"15":{"start":{"line":19,"column":0},"end":{"line":19,"column":56}},"16":{"start":{"line":20,"column":0},"end":{"line":20,"column":62}},"17":{"start":{"line":21,"column":0},"end":{"line":21,"column":87}},"18":{"start":{"line":22,"column":0},"end":{"line":22,"column":41}},"19":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}},"20":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"21":{"start":{"line":26,"column":0},"end":{"line":28,"column":46}},"22":{"start":{"line":30,"column":0},"end":{"line":34,"column":2}},"23":{"start":{"line":50,"column":0},"end":{"line":52,"column":1}},"24":{"start":{"line":51,"column":2},"end":{"line":51,"column":49}},"25":{"start":{"line":61,"column":0},"end":{"line":61,"column":47}},"26":{"start":{"line":62,"column":0},"end":{"line":62,"column":49}},"27":{"start":{"line":71,"column":0},"end":{"line":71,"column":19}},"28":{"start":{"line":80,"column":0},"end":{"line":80,"column":27}},"29":{"start":{"line":89,"column":0},"end":{"line":89,"column":26}},"30":{"start":{"line":99,"column":0},"end":{"line":99,"column":23}},"31":{"start":{"line":109,"column":0},"end":{"line":109,"column":30}},"32":{"start":{"line":111,"column":0},"end":{"line":210,"column":2}},"33":{"start":{"line":112,"column":2},"end":{"line":112,"column":19}},"34":{"start":{"line":113,"column":2},"end":{"line":113,"column":8}},"35":{"start":{"line":114,"column":2},"end":{"line":114,"column":11}},"36":{"start":{"line":115,"column":2},"end":{"line":115,"column":10}},"37":{"start":{"line":116,"column":2},"end":{"line":118,"column":3}},"38":{"start":{"line":117,"column":4},"end":{"line":117,"column":44}},"39":{"start":{"line":119,"column":2},"end":{"line":121,"column":3}},"40":{"start":{"line":120,"column":4},"end":{"line":120,"column":24}},"41":{"start":{"line":123,"column":2},"end":{"line":209,"column":3}},"42":{"start":{"line":125,"column":4},"end":{"line":125,"column":29}},"43":{"start":{"line":127,"column":4},"end":{"line":127,"column":72}},"44":{"start":{"line":128,"column":4},"end":{"line":128,"column":35}},"45":{"start":{"line":129,"column":4},"end":{"line":129,"column":51}},"46":{"start":{"line":130,"column":4},"end":{"line":130,"column":38}},"47":{"start":{"line":131,"column":4},"end":{"line":131,"column":44}},"48":{"start":{"line":133,"column":4},"end":{"line":133,"column":45}},"49":{"start":{"line":135,"column":4},"end":{"line":145,"column":5}},"50":{"start":{"line":141,"column":6},"end":{"line":143,"column":12}},"51":{"start":{"line":142,"column":8},"end":{"line":142,"column":71}},"52":{"start":{"line":144,"column":6},"end":{"line":144,"column":13}},"53":{"start":{"line":147,"column":4},"end":{"line":147,"column":31}},"54":{"start":{"line":148,"column":4},"end":{"line":159,"column":7}},"55":{"start":{"line":149,"column":6},"end":{"line":156,"column":7}},"56":{"start":{"line":150,"column":8},"end":{"line":150,"column":27}},"57":{"start":{"line":151,"column":8},"end":{"line":151,"column":34}},"58":{"start":{"line":152,"column":8},"end":{"line":152,"column":46}},"59":{"start":{"line":154,"column":8},"end":{"line":154,"column":22}},"60":{"start":{"line":155,"column":8},"end":{"line":155,"column":15}},"61":{"start":{"line":158,"column":6},"end":{"line":158,"column":26}},"62":{"start":{"line":160,"column":4},"end":{"line":160,"column":20}},"63":{"start":{"line":161,"column":4},"end":{"line":161,"column":23}},"64":{"start":{"line":162,"column":4},"end":{"line":162,"column":30}},"65":{"start":{"line":163,"column":4},"end":{"line":163,"column":42}},"66":{"start":{"line":165,"column":4},"end":{"line":165,"column":30}},"67":{"start":{"line":169,"column":4},"end":{"line":169,"column":31}},"68":{"start":{"line":171,"column":4},"end":{"line":171,"column":32}},"69":{"start":{"line":173,"column":4},"end":{"line":205,"column":5}},"70":{"start":{"line":174,"column":6},"end":{"line":177,"column":7}},"71":{"start":{"line":175,"column":8},"end":{"line":175,"column":24}},"72":{"start":{"line":176,"column":8},"end":{"line":176,"column":15}},"73":{"start":{"line":179,"column":6},"end":{"line":179,"column":42}},"74":{"start":{"line":180,"column":6},"end":{"line":183,"column":7}},"75":{"start":{"line":181,"column":8},"end":{"line":181,"column":24}},"76":{"start":{"line":182,"column":8},"end":{"line":182,"column":15}},"77":{"start":{"line":185,"column":6},"end":{"line":191,"column":7}},"78":{"start":{"line":186,"column":8},"end":{"line":186,"column":40}},"79":{"start":{"line":187,"column":8},"end":{"line":187,"column":26}},"80":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"81":{"start":{"line":189,"column":10},"end":{"line":189,"column":48}},"82":{"start":{"line":193,"column":6},"end":{"line":200,"column":9}},"83":{"start":{"line":194,"column":8},"end":{"line":197,"column":9}},"84":{"start":{"line":195,"column":10},"end":{"line":195,"column":24}},"85":{"start":{"line":196,"column":10},"end":{"line":196,"column":17}},"86":{"start":{"line":198,"column":8},"end":{"line":198,"column":27}},"87":{"start":{"line":199,"column":8},"end":{"line":199,"column":28}},"88":{"start":{"line":202,"column":6},"end":{"line":202,"column":22}},"89":{"start":{"line":203,"column":6},"end":{"line":203,"column":17}},"90":{"start":{"line":204,"column":6},"end":{"line":204,"column":13}},"91":{"start":{"line":207,"column":4},"end":{"line":207,"column":30}},"92":{"start":{"line":208,"column":4},"end":{"line":208,"column":42}},"93":{"start":{"line":216,"column":0},"end":{"line":274,"column":2}},"94":{"start":{"line":217,"column":2},"end":{"line":217,"column":19}},"95":{"start":{"line":219,"column":2},"end":{"line":273,"column":5}},"96":{"start":{"line":220,"column":4},"end":{"line":224,"column":5}},"97":{"start":{"line":221,"column":6},"end":{"line":223,"column":9}},"98":{"start":{"line":222,"column":8},"end":{"line":222,"column":24}},"99":{"start":{"line":226,"column":4},"end":{"line":226,"column":21}},"100":{"start":{"line":227,"column":4},"end":{"line":227,"column":26}},"101":{"start":{"line":229,"column":4},"end":{"line":229,"column":24}},"102":{"start":{"line":230,"column":4},"end":{"line":240,"column":5}},"103":{"start":{"line":231,"column":6},"end":{"line":239,"column":7}},"104":{"start":{"line":232,"column":8},"end":{"line":232,"column":36}},"105":{"start":{"line":233,"column":13},"end":{"line":239,"column":7}},"106":{"start":{"line":234,"column":8},"end":{"line":234,"column":38}},"107":{"start":{"line":235,"column":13},"end":{"line":239,"column":7}},"108":{"start":{"line":236,"column":8},"end":{"line":236,"column":46}},"109":{"start":{"line":238,"column":8},"end":{"line":238,"column":29}},"110":{"start":{"line":243,"column":4},"end":{"line":259,"column":5}},"111":{"start":{"line":244,"column":6},"end":{"line":244,"column":74}},"112":{"start":{"line":245,"column":6},"end":{"line":245,"column":36}},"113":{"start":{"line":247,"column":6},"end":{"line":251,"column":7}},"114":{"start":{"line":249,"column":8},"end":{"line":249,"column":42}},"115":{"start":{"line":250,"column":8},"end":{"line":250,"column":29}},"116":{"start":{"line":254,"column":6},"end":{"line":258,"column":7}},"117":{"start":{"line":255,"column":8},"end":{"line":255,"column":50}},"118":{"start":{"line":256,"column":8},"end":{"line":256,"column":46}},"119":{"start":{"line":257,"column":8},"end":{"line":257,"column":41}},"120":{"start":{"line":261,"column":4},"end":{"line":268,"column":5}},"121":{"start":{"line":264,"column":6},"end":{"line":264,"column":55}},"122":{"start":{"line":265,"column":6},"end":{"line":267,"column":9}},"123":{"start":{"line":266,"column":8},"end":{"line":266,"column":24}},"124":{"start":{"line":270,"column":4},"end":{"line":270,"column":43}},"125":{"start":{"line":271,"column":4},"end":{"line":271,"column":55}},"126":{"start":{"line":272,"column":4},"end":{"line":272,"column":39}},"127":{"start":{"line":313,"column":0},"end":{"line":328,"column":2}},"128":{"start":{"line":314,"column":2},"end":{"line":317,"column":3}},"129":{"start":{"line":315,"column":4},"end":{"line":315,"column":17}},"130":{"start":{"line":316,"column":4},"end":{"line":316,"column":24}},"131":{"start":{"line":319,"column":2},"end":{"line":321,"column":3}},"132":{"start":{"line":320,"column":4},"end":{"line":320,"column":17}},"133":{"start":{"line":323,"column":2},"end":{"line":325,"column":3}},"134":{"start":{"line":324,"column":4},"end":{"line":324,"column":44}},"135":{"start":{"line":327,"column":2},"end":{"line":327,"column":35}},"136":{"start":{"line":337,"column":0},"end":{"line":345,"column":1}},"137":{"start":{"line":338,"column":2},"end":{"line":338,"column":58}},"138":{"start":{"line":339,"column":2},"end":{"line":339,"column":36}},"139":{"start":{"line":339,"column":23},"end":{"line":339,"column":36}},"140":{"start":{"line":342,"column":2},"end":{"line":342,"column":38}},"141":{"start":{"line":344,"column":2},"end":{"line":344,"column":30}},"142":{"start":{"line":359,"column":0},"end":{"line":407,"column":1}},"143":{"start":{"line":361,"column":2},"end":{"line":361,"column":22}},"144":{"start":{"line":362,"column":2},"end":{"line":362,"column":33}},"145":{"start":{"line":362,"column":18},"end":{"line":362,"column":33}},"146":{"start":{"line":363,"column":2},"end":{"line":363,"column":29}},"147":{"start":{"line":366,"column":2},"end":{"line":366,"column":55}},"148":{"start":{"line":366,"column":48},"end":{"line":366,"column":55}},"149":{"start":{"line":369,"column":2},"end":{"line":369,"column":52}},"150":{"start":{"line":369,"column":45},"end":{"line":369,"column":52}},"151":{"start":{"line":372,"column":2},"end":{"line":372,"column":63}},"152":{"start":{"line":372,"column":56},"end":{"line":372,"column":63}},"153":{"start":{"line":374,"column":2},"end":{"line":387,"column":3}},"154":{"start":{"line":383,"column":6},"end":{"line":383,"column":12}},"155":{"start":{"line":386,"column":6},"end":{"line":386,"column":13}},"156":{"start":{"line":394,"column":2},"end":{"line":406,"column":3}},"157":{"start":{"line":395,"column":4},"end":{"line":395,"column":35}},"158":{"start":{"line":396,"column":9},"end":{"line":406,"column":3}},"159":{"start":{"line":398,"column":4},"end":{"line":398,"column":21}},"160":{"start":{"line":399,"column":9},"end":{"line":406,"column":3}},"161":{"start":{"line":401,"column":4},"end":{"line":401,"column":21}},"162":{"start":{"line":402,"column":9},"end":{"line":406,"column":3}},"163":{"start":{"line":405,"column":4},"end":{"line":405,"column":37}},"164":{"start":{"line":419,"column":0},"end":{"line":482,"column":1}},"165":{"start":{"line":420,"column":2},"end":{"line":423,"column":3}},"166":{"start":{"line":422,"column":4},"end":{"line":422,"column":11}},"167":{"start":{"line":425,"column":2},"end":{"line":436,"column":3}},"168":{"start":{"line":426,"column":4},"end":{"line":434,"column":7}},"169":{"start":{"line":427,"column":6},"end":{"line":427,"column":25}},"170":{"start":{"line":428,"column":6},"end":{"line":428,"column":26}},"171":{"start":{"line":429,"column":6},"end":{"line":432,"column":7}},"172":{"start":{"line":430,"column":8},"end":{"line":430,"column":21}},"173":{"start":{"line":431,"column":8},"end":{"line":431,"column":29}},"174":{"start":{"line":433,"column":6},"end":{"line":433,"column":49}},"175":{"start":{"line":435,"column":4},"end":{"line":435,"column":11}},"176":{"start":{"line":440,"column":2},"end":{"line":444,"column":9}},"177":{"start":{"line":446,"column":2},"end":{"line":456,"column":3}},"178":{"start":{"line":449,"column":4},"end":{"line":453,"column":5}},"179":{"start":{"line":450,"column":6},"end":{"line":450,"column":63}},"180":{"start":{"line":451,"column":11},"end":{"line":453,"column":5}},"181":{"start":{"line":452,"column":6},"end":{"line":452,"column":30}},"182":{"start":{"line":455,"column":4},"end":{"line":455,"column":52}},"183":{"start":{"line":458,"column":2},"end":{"line":462,"column":3}},"184":{"start":{"line":459,"column":4},"end":{"line":461,"column":14}},"185":{"start":{"line":464,"column":2},"end":{"line":481,"column":3}},"186":{"start":{"line":465,"column":4},"end":{"line":465,"column":16}},"187":{"start":{"line":466,"column":4},"end":{"line":466,"column":22}},"188":{"start":{"line":468,"column":4},"end":{"line":474,"column":5}},"189":{"start":{"line":469,"column":6},"end":{"line":469,"column":80}},"190":{"start":{"line":470,"column":11},"end":{"line":474,"column":5}},"191":{"start":{"line":471,"column":6},"end":{"line":471,"column":26}},"192":{"start":{"line":472,"column":11},"end":{"line":474,"column":5}},"193":{"start":{"line":473,"column":6},"end":{"line":473,"column":26}},"194":{"start":{"line":476,"column":4},"end":{"line":478,"column":5}},"195":{"start":{"line":477,"column":6},"end":{"line":477,"column":25}},"196":{"start":{"line":480,"column":4},"end":{"line":480,"column":47}},"197":{"start":{"line":492,"column":0},"end":{"line":566,"column":2}},"198":{"start":{"line":493,"column":2},"end":{"line":493,"column":30}},"199":{"start":{"line":494,"column":2},"end":{"line":494,"column":64}},"200":{"start":{"line":494,"column":57},"end":{"line":494,"column":64}},"201":{"start":{"line":496,"column":2},"end":{"line":500,"column":12}},"202":{"start":{"line":502,"column":2},"end":{"line":502,"column":28}},"203":{"start":{"line":503,"column":2},"end":{"line":505,"column":3}},"204":{"start":{"line":504,"column":4},"end":{"line":504,"column":75}},"205":{"start":{"line":507,"column":2},"end":{"line":555,"column":3}},"206":{"start":{"line":508,"column":4},"end":{"line":508,"column":24}},"207":{"start":{"line":509,"column":4},"end":{"line":509,"column":27}},"208":{"start":{"line":511,"column":4},"end":{"line":511,"column":60}},"209":{"start":{"line":512,"column":4},"end":{"line":515,"column":5}},"210":{"start":{"line":513,"column":6},"end":{"line":513,"column":28}},"211":{"start":{"line":514,"column":6},"end":{"line":514,"column":15}},"212":{"start":{"line":517,"column":4},"end":{"line":517,"column":46}},"213":{"start":{"line":518,"column":4},"end":{"line":536,"column":5}},"214":{"start":{"line":521,"column":6},"end":{"line":521,"column":43}},"215":{"start":{"line":522,"column":6},"end":{"line":522,"column":29}},"216":{"start":{"line":523,"column":6},"end":{"line":535,"column":7}},"217":{"start":{"line":525,"column":8},"end":{"line":534,"column":9}},"218":{"start":{"line":526,"column":10},"end":{"line":526,"column":46}},"219":{"start":{"line":527,"column":10},"end":{"line":527,"column":29}},"220":{"start":{"line":528,"column":10},"end":{"line":528,"column":42}},"221":{"start":{"line":532,"column":10},"end":{"line":532,"column":36}},"222":{"start":{"line":533,"column":10},"end":{"line":533,"column":19}},"223":{"start":{"line":538,"column":4},"end":{"line":538,"column":35}},"224":{"start":{"line":538,"column":26},"end":{"line":538,"column":35}},"225":{"start":{"line":540,"column":4},"end":{"line":554,"column":5}},"226":{"start":{"line":541,"column":6},"end":{"line":541,"column":53}},"227":{"start":{"line":542,"column":11},"end":{"line":554,"column":5}},"228":{"start":{"line":543,"column":6},"end":{"line":543,"column":46}},"229":{"start":{"line":544,"column":11},"end":{"line":554,"column":5}},"230":{"start":{"line":546,"column":6},"end":{"line":546,"column":53}},"231":{"start":{"line":547,"column":11},"end":{"line":554,"column":5}},"232":{"start":{"line":549,"column":6},"end":{"line":549,"column":31}},"233":{"start":{"line":550,"column":6},"end":{"line":550,"column":47}},"234":{"start":{"line":552,"column":6},"end":{"line":552,"column":67}},"235":{"start":{"line":553,"column":6},"end":{"line":553,"column":47}},"236":{"start":{"line":557,"column":2},"end":{"line":559,"column":3}},"237":{"start":{"line":558,"column":4},"end":{"line":558,"column":46}},"238":{"start":{"line":561,"column":2},"end":{"line":563,"column":3}},"239":{"start":{"line":562,"column":4},"end":{"line":562,"column":34}},"240":{"start":{"line":565,"column":2},"end":{"line":565,"column":24}},"241":{"start":{"line":578,"column":0},"end":{"line":615,"column":1}},"242":{"start":{"line":580,"column":2},"end":{"line":580,"column":38}},"243":{"start":{"line":582,"column":2},"end":{"line":589,"column":3}},"244":{"start":{"line":585,"column":4},"end":{"line":585,"column":33}},"245":{"start":{"line":586,"column":4},"end":{"line":588,"column":5}},"246":{"start":{"line":587,"column":6},"end":{"line":587,"column":17}},"247":{"start":{"line":591,"column":2},"end":{"line":591,"column":55}},"248":{"start":{"line":591,"column":48},"end":{"line":591,"column":55}},"249":{"start":{"line":602,"column":2},"end":{"line":607,"column":45}},"250":{"start":{"line":609,"column":2},"end":{"line":614,"column":3}},"251":{"start":{"line":610,"column":4},"end":{"line":610,"column":33}},"252":{"start":{"line":611,"column":4},"end":{"line":613,"column":5}},"253":{"start":{"line":612,"column":6},"end":{"line":612,"column":18}},"254":{"start":{"line":625,"column":0},"end":{"line":655,"column":2}},"255":{"start":{"line":626,"column":2},"end":{"line":626,"column":43}},"256":{"start":{"line":628,"column":2},"end":{"line":632,"column":3}},"257":{"start":{"line":630,"column":4},"end":{"line":630,"column":48}},"258":{"start":{"line":630,"column":13},"end":{"line":630,"column":48}},"259":{"start":{"line":631,"column":4},"end":{"line":631,"column":11}},"260":{"start":{"line":640,"column":2},"end":{"line":642,"column":3}},"261":{"start":{"line":641,"column":4},"end":{"line":641,"column":11}},"262":{"start":{"line":645,"column":2},"end":{"line":647,"column":3}},"263":{"start":{"line":646,"column":4},"end":{"line":646,"column":36}},"264":{"start":{"line":649,"column":2},"end":{"line":654,"column":3}},"265":{"start":{"line":650,"column":4},"end":{"line":653,"column":5}},"266":{"start":{"line":651,"column":6},"end":{"line":651,"column":38}},"267":{"start":{"line":652,"column":6},"end":{"line":652,"column":26}},"268":{"start":{"line":671,"column":0},"end":{"line":674,"column":2}},"269":{"start":{"line":672,"column":2},"end":{"line":672,"column":33}},"270":{"start":{"line":673,"column":2},"end":{"line":673,"column":14}},"271":{"start":{"line":684,"column":0},"end":{"line":708,"column":2}},"272":{"start":{"line":685,"column":2},"end":{"line":685,"column":24}},"273":{"start":{"line":687,"column":2},"end":{"line":688,"column":10}},"274":{"start":{"line":690,"column":2},"end":{"line":692,"column":3}},"275":{"start":{"line":691,"column":4},"end":{"line":691,"column":30}},"276":{"start":{"line":694,"column":2},"end":{"line":701,"column":3}},"277":{"start":{"line":695,"column":4},"end":{"line":695,"column":43}},"278":{"start":{"line":696,"column":4},"end":{"line":696,"column":23}},"279":{"start":{"line":698,"column":4},"end":{"line":700,"column":5}},"280":{"start":{"line":699,"column":6},"end":{"line":699,"column":52}},"281":{"start":{"line":703,"column":2},"end":{"line":705,"column":3}},"282":{"start":{"line":704,"column":4},"end":{"line":704,"column":50}},"283":{"start":{"line":707,"column":2},"end":{"line":707,"column":15}},"284":{"start":{"line":736,"column":0},"end":{"line":787,"column":2}},"285":{"start":{"line":737,"column":2},"end":{"line":740,"column":3}},"286":{"start":{"line":738,"column":4},"end":{"line":738,"column":17}},"287":{"start":{"line":739,"column":4},"end":{"line":739,"column":24}},"288":{"start":{"line":742,"column":2},"end":{"line":744,"column":3}},"289":{"start":{"line":743,"column":4},"end":{"line":743,"column":17}},"290":{"start":{"line":746,"column":2},"end":{"line":753,"column":3}},"291":{"start":{"line":747,"column":4},"end":{"line":751,"column":5}},"292":{"start":{"line":748,"column":6},"end":{"line":750,"column":38}},"293":{"start":{"line":749,"column":26},"end":{"line":749,"column":40}},"294":{"start":{"line":750,"column":26},"end":{"line":750,"column":34}},"295":{"start":{"line":752,"column":4},"end":{"line":752,"column":16}},"296":{"start":{"line":755,"column":2},"end":{"line":755,"column":19}},"297":{"start":{"line":756,"column":2},"end":{"line":756,"column":38}},"298":{"start":{"line":758,"column":2},"end":{"line":760,"column":3}},"299":{"start":{"line":759,"column":4},"end":{"line":759,"column":44}},"300":{"start":{"line":762,"column":2},"end":{"line":785,"column":5}},"301":{"start":{"line":763,"column":4},"end":{"line":763,"column":33}},"302":{"start":{"line":764,"column":4},"end":{"line":768,"column":5}},"303":{"start":{"line":765,"column":6},"end":{"line":765,"column":20}},"304":{"start":{"line":766,"column":6},"end":{"line":766,"column":22}},"305":{"start":{"line":767,"column":6},"end":{"line":767,"column":13}},"306":{"start":{"line":770,"column":4},"end":{"line":772,"column":5}},"307":{"start":{"line":771,"column":6},"end":{"line":771,"column":47}},"308":{"start":{"line":774,"column":4},"end":{"line":784,"column":7}},"309":{"start":{"line":775,"column":6},"end":{"line":781,"column":7}},"310":{"start":{"line":776,"column":8},"end":{"line":776,"column":36}},"311":{"start":{"line":777,"column":8},"end":{"line":777,"column":48}},"312":{"start":{"line":778,"column":8},"end":{"line":778,"column":23}},"313":{"start":{"line":779,"column":8},"end":{"line":779,"column":30}},"314":{"start":{"line":780,"column":8},"end":{"line":780,"column":15}},"315":{"start":{"line":782,"column":6},"end":{"line":782,"column":18}},"316":{"start":{"line":783,"column":6},"end":{"line":783,"column":20}},"317":{"start":{"line":786,"column":2},"end":{"line":786,"column":27}},"318":{"start":{"line":801,"column":0},"end":{"line":803,"column":2}},"319":{"start":{"line":802,"column":2},"end":{"line":802,"column":29}},"320":{"start":{"line":831,"column":0},"end":{"line":857,"column":2}},"321":{"start":{"line":832,"column":2},"end":{"line":834,"column":3}},"322":{"start":{"line":833,"column":4},"end":{"line":833,"column":39}},"323":{"start":{"line":836,"column":2},"end":{"line":836,"column":45}},"324":{"start":{"line":837,"column":2},"end":{"line":839,"column":3}},"325":{"start":{"line":838,"column":4},"end":{"line":838,"column":40}},"326":{"start":{"line":841,"column":2},"end":{"line":841,"column":37}},"327":{"start":{"line":843,"column":2},"end":{"line":843,"column":80}},"328":{"start":{"line":844,"column":2},"end":{"line":844,"column":36}},"329":{"start":{"line":845,"column":2},"end":{"line":845,"column":41}},"330":{"start":{"line":846,"column":2},"end":{"line":850,"column":5}},"331":{"start":{"line":853,"column":2},"end":{"line":853,"column":26}},"332":{"start":{"line":854,"column":2},"end":{"line":854,"column":26}},"333":{"start":{"line":856,"column":2},"end":{"line":856,"column":11}},"334":{"start":{"line":865,"column":0},"end":{"line":867,"column":1}},"335":{"start":{"line":866,"column":2},"end":{"line":866,"column":39}},"336":{"start":{"line":875,"column":0},"end":{"line":882,"column":2}},"337":{"start":{"line":876,"column":2},"end":{"line":879,"column":3}},"338":{"start":{"line":878,"column":4},"end":{"line":878,"column":64}},"339":{"start":{"line":881,"column":2},"end":{"line":881,"column":33}},"340":{"start":{"line":914,"column":0},"end":{"line":941,"column":2}},"341":{"start":{"line":915,"column":2},"end":{"line":918,"column":3}},"342":{"start":{"line":916,"column":4},"end":{"line":916,"column":23}},"343":{"start":{"line":917,"column":4},"end":{"line":917,"column":19}},"344":{"start":{"line":920,"column":2},"end":{"line":923,"column":3}},"345":{"start":{"line":921,"column":4},"end":{"line":921,"column":44}},"346":{"start":{"line":922,"column":4},"end":{"line":922,"column":11}},"347":{"start":{"line":925,"column":2},"end":{"line":927,"column":3}},"348":{"start":{"line":926,"column":4},"end":{"line":926,"column":44}},"349":{"start":{"line":929,"column":2},"end":{"line":929,"column":19}},"350":{"start":{"line":930,"column":2},"end":{"line":930,"column":38}},"351":{"start":{"line":931,"column":2},"end":{"line":940,"column":5}},"352":{"start":{"line":932,"column":4},"end":{"line":939,"column":7}},"353":{"start":{"line":933,"column":6},"end":{"line":936,"column":7}},"354":{"start":{"line":934,"column":8},"end":{"line":934,"column":36}},"355":{"start":{"line":935,"column":8},"end":{"line":935,"column":22}},"356":{"start":{"line":937,"column":6},"end":{"line":937,"column":29}},"357":{"start":{"line":938,"column":6},"end":{"line":938,"column":16}},"358":{"start":{"line":943,"column":0},"end":{"line":996,"column":1}},"359":{"start":{"line":944,"column":2},"end":{"line":944,"column":39}},"360":{"start":{"line":945,"column":2},"end":{"line":950,"column":3}},"361":{"start":{"line":946,"column":4},"end":{"line":948,"column":7}},"362":{"start":{"line":947,"column":6},"end":{"line":947,"column":29}},"363":{"start":{"line":949,"column":4},"end":{"line":949,"column":11}},"364":{"start":{"line":954,"column":2},"end":{"line":960,"column":4}},"365":{"start":{"line":955,"column":4},"end":{"line":957,"column":5}},"366":{"start":{"line":956,"column":6},"end":{"line":956,"column":31}},"367":{"start":{"line":958,"column":4},"end":{"line":958,"column":29}},"368":{"start":{"line":959,"column":4},"end":{"line":959,"column":30}},"369":{"start":{"line":962,"column":2},"end":{"line":964,"column":4}},"370":{"start":{"line":963,"column":4},"end":{"line":963,"column":64}},"371":{"start":{"line":965,"column":2},"end":{"line":967,"column":4}},"372":{"start":{"line":966,"column":4},"end":{"line":966,"column":54}},"373":{"start":{"line":969,"column":2},"end":{"line":986,"column":4}},"374":{"start":{"line":970,"column":4},"end":{"line":970,"column":32}},"375":{"start":{"line":971,"column":4},"end":{"line":971,"column":30}},"376":{"start":{"line":971,"column":16},"end":{"line":971,"column":30}},"377":{"start":{"line":973,"column":4},"end":{"line":973,"column":31}},"378":{"start":{"line":974,"column":4},"end":{"line":974,"column":27}},"379":{"start":{"line":975,"column":4},"end":{"line":975,"column":25}},"380":{"start":{"line":977,"column":4},"end":{"line":977,"column":43}},"381":{"start":{"line":979,"column":4},"end":{"line":985,"column":8}},"382":{"start":{"line":980,"column":6},"end":{"line":980,"column":55}},"383":{"start":{"line":981,"column":6},"end":{"line":983,"column":7}},"384":{"start":{"line":982,"column":8},"end":{"line":982,"column":25}},"385":{"start":{"line":984,"column":6},"end":{"line":984,"column":15}},"386":{"start":{"line":988,"column":2},"end":{"line":995,"column":5}},"387":{"start":{"line":990,"column":4},"end":{"line":994,"column":5}},"388":{"start":{"line":991,"column":6},"end":{"line":991,"column":44}},"389":{"start":{"line":993,"column":6},"end":{"line":993,"column":15}},"390":{"start":{"line":998,"column":0},"end":{"line":1011,"column":1}},"391":{"start":{"line":999,"column":2},"end":{"line":1010,"column":3}},"392":{"start":{"line":1000,"column":4},"end":{"line":1003,"column":5}},"393":{"start":{"line":1001,"column":6},"end":{"line":1001,"column":31}},"394":{"start":{"line":1002,"column":6},"end":{"line":1002,"column":26}},"395":{"start":{"line":1004,"column":4},"end":{"line":1009,"column":5}},"396":{"start":{"line":1005,"column":6},"end":{"line":1005,"column":33}},"397":{"start":{"line":1006,"column":6},"end":{"line":1006,"column":33}},"398":{"start":{"line":1007,"column":6},"end":{"line":1007,"column":47}},"399":{"start":{"line":1008,"column":6},"end":{"line":1008,"column":26}},"400":{"start":{"line":1021,"column":0},"end":{"line":1021,"column":13}},"401":{"start":{"line":1031,"column":0},"end":{"line":1031,"column":9}},"402":{"start":{"line":1041,"column":0},"end":{"line":1041,"column":17}},"403":{"start":{"line":1051,"column":0},"end":{"line":1051,"column":11}},"404":{"start":{"line":1061,"column":0},"end":{"line":1061,"column":21}},"405":{"start":{"line":1082,"column":0},"end":{"line":1096,"column":2}},"406":{"start":{"line":1083,"column":2},"end":{"line":1086,"column":3}},"407":{"start":{"line":1084,"column":4},"end":{"line":1084,"column":26}},"408":{"start":{"line":1085,"column":4},"end":{"line":1085,"column":20}},"409":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":65}},"410":{"start":{"line":1091,"column":2},"end":{"line":1093,"column":3}},"411":{"start":{"line":1092,"column":4},"end":{"line":1092,"column":44}},"412":{"start":{"line":1095,"column":2},"end":{"line":1095,"column":29}},"413":{"start":{"line":1117,"column":0},"end":{"line":1131,"column":2}},"414":{"start":{"line":1118,"column":2},"end":{"line":1121,"column":3}},"415":{"start":{"line":1119,"column":4},"end":{"line":1119,"column":26}},"416":{"start":{"line":1120,"column":4},"end":{"line":1120,"column":20}},"417":{"start":{"line":1124,"column":2},"end":{"line":1124,"column":65}},"418":{"start":{"line":1126,"column":2},"end":{"line":1128,"column":3}},"419":{"start":{"line":1127,"column":4},"end":{"line":1127,"column":44}},"420":{"start":{"line":1130,"column":2},"end":{"line":1130,"column":32}},"421":{"start":{"line":1152,"column":0},"end":{"line":1166,"column":2}},"422":{"start":{"line":1153,"column":2},"end":{"line":1156,"column":3}},"423":{"start":{"line":1154,"column":4},"end":{"line":1154,"column":26}},"424":{"start":{"line":1155,"column":4},"end":{"line":1155,"column":20}},"425":{"start":{"line":1159,"column":2},"end":{"line":1159,"column":65}},"426":{"start":{"line":1161,"column":2},"end":{"line":1163,"column":3}},"427":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":44}},"428":{"start":{"line":1165,"column":2},"end":{"line":1165,"column":33}},"429":{"start":{"line":1209,"column":0},"end":{"line":1236,"column":2}},"430":{"start":{"line":1210,"column":2},"end":{"line":1222,"column":3}},"431":{"start":{"line":1211,"column":4},"end":{"line":1211,"column":26}},"432":{"start":{"line":1212,"column":4},"end":{"line":1212,"column":20}},"433":{"start":{"line":1213,"column":4},"end":{"line":1213,"column":22}},"434":{"start":{"line":1214,"column":4},"end":{"line":1214,"column":19}},"435":{"start":{"line":1215,"column":9},"end":{"line":1222,"column":3}},"436":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":26}},"437":{"start":{"line":1217,"column":4},"end":{"line":1217,"column":22}},"438":{"start":{"line":1218,"column":4},"end":{"line":1218,"column":19}},"439":{"start":{"line":1219,"column":9},"end":{"line":1222,"column":3}},"440":{"start":{"line":1220,"column":4},"end":{"line":1220,"column":23}},"441":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":19}},"442":{"start":{"line":1224,"column":2},"end":{"line":1224,"column":57}},"443":{"start":{"line":1225,"column":2},"end":{"line":1225,"column":24}},"444":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":25}},"445":{"start":{"line":1227,"column":2},"end":{"line":1229,"column":3}},"446":{"start":{"line":1228,"column":4},"end":{"line":1228,"column":52}},"447":{"start":{"line":1231,"column":2},"end":{"line":1233,"column":3}},"448":{"start":{"line":1232,"column":4},"end":{"line":1232,"column":44}},"449":{"start":{"line":1235,"column":2},"end":{"line":1235,"column":39}},"450":{"start":{"line":1285,"column":0},"end":{"line":1295,"column":2}},"451":{"start":{"line":1286,"column":2},"end":{"line":1288,"column":3}},"452":{"start":{"line":1287,"column":4},"end":{"line":1287,"column":14}},"453":{"start":{"line":1290,"column":2},"end":{"line":1292,"column":3}},"454":{"start":{"line":1291,"column":4},"end":{"line":1291,"column":44}},"455":{"start":{"line":1294,"column":2},"end":{"line":1294,"column":64}},"456":{"start":{"line":1339,"column":0},"end":{"line":1367,"column":2}},"457":{"start":{"line":1340,"column":2},"end":{"line":1352,"column":3}},"458":{"start":{"line":1341,"column":4},"end":{"line":1341,"column":23}},"459":{"start":{"line":1342,"column":4},"end":{"line":1342,"column":19}},"460":{"start":{"line":1343,"column":9},"end":{"line":1352,"column":3}},"461":{"start":{"line":1344,"column":4},"end":{"line":1344,"column":26}},"462":{"start":{"line":1345,"column":4},"end":{"line":1345,"column":22}},"463":{"start":{"line":1346,"column":4},"end":{"line":1346,"column":19}},"464":{"start":{"line":1347,"column":9},"end":{"line":1352,"column":3}},"465":{"start":{"line":1348,"column":4},"end":{"line":1348,"column":26}},"466":{"start":{"line":1349,"column":4},"end":{"line":1349,"column":20}},"467":{"start":{"line":1350,"column":4},"end":{"line":1350,"column":22}},"468":{"start":{"line":1351,"column":4},"end":{"line":1351,"column":19}},"469":{"start":{"line":1355,"column":2},"end":{"line":1355,"column":57}},"470":{"start":{"line":1356,"column":2},"end":{"line":1356,"column":24}},"471":{"start":{"line":1357,"column":2},"end":{"line":1357,"column":25}},"472":{"start":{"line":1358,"column":2},"end":{"line":1360,"column":3}},"473":{"start":{"line":1359,"column":4},"end":{"line":1359,"column":52}},"474":{"start":{"line":1362,"column":2},"end":{"line":1364,"column":3}},"475":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":44}},"476":{"start":{"line":1366,"column":2},"end":{"line":1366,"column":42}},"477":{"start":{"line":1385,"column":0},"end":{"line":1399,"column":2}},"478":{"start":{"line":1386,"column":2},"end":{"line":1389,"column":3}},"479":{"start":{"line":1387,"column":4},"end":{"line":1387,"column":26}},"480":{"start":{"line":1388,"column":4},"end":{"line":1388,"column":20}},"481":{"start":{"line":1392,"column":2},"end":{"line":1392,"column":57}},"482":{"start":{"line":1394,"column":2},"end":{"line":1396,"column":3}},"483":{"start":{"line":1395,"column":4},"end":{"line":1395,"column":44}},"484":{"start":{"line":1398,"column":2},"end":{"line":1398,"column":40}},"485":{"start":{"line":1425,"column":0},"end":{"line":1438,"column":2}},"486":{"start":{"line":1427,"column":2},"end":{"line":1427,"column":57}},"487":{"start":{"line":1429,"column":2},"end":{"line":1432,"column":3}},"488":{"start":{"line":1430,"column":4},"end":{"line":1430,"column":26}},"489":{"start":{"line":1431,"column":4},"end":{"line":1431,"column":20}},"490":{"start":{"line":1433,"column":2},"end":{"line":1435,"column":3}},"491":{"start":{"line":1434,"column":4},"end":{"line":1434,"column":44}},"492":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":50}},"493":{"start":{"line":1464,"column":0},"end":{"line":1469,"column":2}},"494":{"start":{"line":1465,"column":2},"end":{"line":1465,"column":11}},"495":{"start":{"line":1467,"column":2},"end":{"line":1467,"column":66}},"496":{"start":{"line":1468,"column":2},"end":{"line":1468,"column":39}},"497":{"start":{"line":1486,"column":0},"end":{"line":1489,"column":2}},"498":{"start":{"line":1487,"column":2},"end":{"line":1487,"column":66}},"499":{"start":{"line":1488,"column":2},"end":{"line":1488,"column":40}},"500":{"start":{"line":1561,"column":0},"end":{"line":1599,"column":2}},"501":{"start":{"line":1562,"column":2},"end":{"line":1577,"column":3}},"502":{"start":{"line":1563,"column":4},"end":{"line":1563,"column":23}},"503":{"start":{"line":1564,"column":4},"end":{"line":1564,"column":19}},"504":{"start":{"line":1565,"column":9},"end":{"line":1577,"column":3}},"505":{"start":{"line":1566,"column":4},"end":{"line":1574,"column":5}},"506":{"start":{"line":1567,"column":6},"end":{"line":1572,"column":60}},"507":{"start":{"line":1573,"column":6},"end":{"line":1573,"column":31}},"508":{"start":{"line":1575,"column":4},"end":{"line":1575,"column":24}},"509":{"start":{"line":1576,"column":4},"end":{"line":1576,"column":27}},"510":{"start":{"line":1578,"column":2},"end":{"line":1580,"column":3}},"511":{"start":{"line":1579,"column":4},"end":{"line":1579,"column":44}},"512":{"start":{"line":1582,"column":2},"end":{"line":1582,"column":13}},"513":{"start":{"line":1583,"column":2},"end":{"line":1585,"column":3}},"514":{"start":{"line":1584,"column":4},"end":{"line":1584,"column":28}},"515":{"start":{"line":1587,"column":2},"end":{"line":1587,"column":65}},"516":{"start":{"line":1588,"column":2},"end":{"line":1593,"column":3}},"517":{"start":{"line":1589,"column":4},"end":{"line":1591,"column":5}},"518":{"start":{"line":1590,"column":6},"end":{"line":1590,"column":31}},"519":{"start":{"line":1592,"column":4},"end":{"line":1592,"column":60}},"520":{"start":{"line":1595,"column":2},"end":{"line":1595,"column":57}},"521":{"start":{"line":1596,"column":2},"end":{"line":1596,"column":20}},"522":{"start":{"line":1598,"column":2},"end":{"line":1598,"column":68}},"523":{"start":{"line":1675,"column":0},"end":{"line":1696,"column":2}},"524":{"start":{"line":1676,"column":2},"end":{"line":1678,"column":3}},"525":{"start":{"line":1677,"column":4},"end":{"line":1677,"column":44}},"526":{"start":{"line":1679,"column":2},"end":{"line":1688,"column":3}},"527":{"start":{"line":1680,"column":4},"end":{"line":1686,"column":5}},"528":{"start":{"line":1681,"column":6},"end":{"line":1684,"column":61}},"529":{"start":{"line":1685,"column":6},"end":{"line":1685,"column":31}},"530":{"start":{"line":1687,"column":4},"end":{"line":1687,"column":55}},"531":{"start":{"line":1691,"column":2},"end":{"line":1693,"column":3}},"532":{"start":{"line":1692,"column":4},"end":{"line":1692,"column":16}},"533":{"start":{"line":1695,"column":2},"end":{"line":1695,"column":80}},"534":{"start":{"line":1748,"column":0},"end":{"line":1775,"column":2}},"535":{"start":{"line":1749,"column":2},"end":{"line":1755,"column":3}},"536":{"start":{"line":1750,"column":4},"end":{"line":1753,"column":58}},"537":{"start":{"line":1754,"column":4},"end":{"line":1754,"column":29}},"538":{"start":{"line":1757,"column":2},"end":{"line":1760,"column":3}},"539":{"start":{"line":1758,"column":4},"end":{"line":1758,"column":23}},"540":{"start":{"line":1759,"column":4},"end":{"line":1759,"column":24}},"541":{"start":{"line":1761,"column":2},"end":{"line":1763,"column":3}},"542":{"start":{"line":1762,"column":4},"end":{"line":1762,"column":44}},"543":{"start":{"line":1765,"column":2},"end":{"line":1765,"column":13}},"544":{"start":{"line":1766,"column":2},"end":{"line":1769,"column":3}},"545":{"start":{"line":1767,"column":4},"end":{"line":1767,"column":28}},"546":{"start":{"line":1768,"column":4},"end":{"line":1768,"column":31}},"547":{"start":{"line":1771,"column":2},"end":{"line":1771,"column":57}},"548":{"start":{"line":1772,"column":2},"end":{"line":1772,"column":20}},"549":{"start":{"line":1774,"column":2},"end":{"line":1774,"column":60}},"550":{"start":{"line":1807,"column":0},"end":{"line":1820,"column":2}},"551":{"start":{"line":1808,"column":2},"end":{"line":1814,"column":3}},"552":{"start":{"line":1809,"column":4},"end":{"line":1812,"column":59}},"553":{"start":{"line":1813,"column":4},"end":{"line":1813,"column":29}},"554":{"start":{"line":1815,"column":2},"end":{"line":1817,"column":3}},"555":{"start":{"line":1816,"column":4},"end":{"line":1816,"column":44}},"556":{"start":{"line":1819,"column":2},"end":{"line":1819,"column":61}},"557":{"start":{"line":1859,"column":0},"end":{"line":1941,"column":2}},"558":{"start":{"line":1860,"column":2},"end":{"line":1860,"column":11}},"559":{"start":{"line":1861,"column":2},"end":{"line":1861,"column":9}},"560":{"start":{"line":1862,"column":2},"end":{"line":1862,"column":62}},"561":{"start":{"line":1864,"column":2},"end":{"line":1876,"column":3}},"562":{"start":{"line":1865,"column":4},"end":{"line":1865,"column":15}},"563":{"start":{"line":1866,"column":4},"end":{"line":1866,"column":18}},"564":{"start":{"line":1868,"column":4},"end":{"line":1868,"column":47}},"565":{"start":{"line":1870,"column":4},"end":{"line":1875,"column":5}},"566":{"start":{"line":1871,"column":6},"end":{"line":1871,"column":16}},"567":{"start":{"line":1872,"column":6},"end":{"line":1872,"column":60}},"568":{"start":{"line":1874,"column":6},"end":{"line":1874,"column":35}},"569":{"start":{"line":1878,"column":2},"end":{"line":1878,"column":38}},"570":{"start":{"line":1879,"column":2},"end":{"line":1879,"column":19}},"571":{"start":{"line":1880,"column":2},"end":{"line":1882,"column":3}},"572":{"start":{"line":1881,"column":4},"end":{"line":1881,"column":32}},"573":{"start":{"line":1884,"column":2},"end":{"line":1938,"column":5}},"574":{"start":{"line":1885,"column":4},"end":{"line":1891,"column":5}},"575":{"start":{"line":1886,"column":6},"end":{"line":1889,"column":9}},"576":{"start":{"line":1887,"column":8},"end":{"line":1887,"column":23}},"577":{"start":{"line":1888,"column":8},"end":{"line":1888,"column":22}},"578":{"start":{"line":1890,"column":6},"end":{"line":1890,"column":13}},"579":{"start":{"line":1893,"column":4},"end":{"line":1893,"column":23}},"580":{"start":{"line":1894,"column":4},"end":{"line":1915,"column":7}},"581":{"start":{"line":1895,"column":6},"end":{"line":1914,"column":9}},"582":{"start":{"line":1896,"column":8},"end":{"line":1898,"column":16}},"583":{"start":{"line":1899,"column":8},"end":{"line":1899,"column":65}},"584":{"start":{"line":1900,"column":8},"end":{"line":1905,"column":10}},"585":{"start":{"line":1901,"column":10},"end":{"line":1903,"column":11}},"586":{"start":{"line":1902,"column":12},"end":{"line":1902,"column":35}},"587":{"start":{"line":1904,"column":10},"end":{"line":1904,"column":30}},"588":{"start":{"line":1909,"column":8},"end":{"line":1913,"column":9}},"589":{"start":{"line":1910,"column":10},"end":{"line":1910,"column":74}},"590":{"start":{"line":1912,"column":10},"end":{"line":1912,"column":62}},"591":{"start":{"line":1917,"column":4},"end":{"line":1937,"column":7}},"592":{"start":{"line":1918,"column":6},"end":{"line":1925,"column":7}},"593":{"start":{"line":1919,"column":8},"end":{"line":1923,"column":9}},"594":{"start":{"line":1920,"column":10},"end":{"line":1920,"column":20}},"595":{"start":{"line":1922,"column":10},"end":{"line":1922,"column":24}},"596":{"start":{"line":1924,"column":8},"end":{"line":1924,"column":15}},"597":{"start":{"line":1927,"column":6},"end":{"line":1936,"column":7}},"598":{"start":{"line":1928,"column":8},"end":{"line":1928,"column":27}},"599":{"start":{"line":1929,"column":8},"end":{"line":1929,"column":46}},"600":{"start":{"line":1931,"column":8},"end":{"line":1931,"column":42}},"601":{"start":{"line":1932,"column":8},"end":{"line":1935,"column":9}},"602":{"start":{"line":1933,"column":10},"end":{"line":1933,"column":34}},"603":{"start":{"line":1934,"column":10},"end":{"line":1934,"column":37}},"604":{"start":{"line":1940,"column":2},"end":{"line":1940,"column":17}},"605":{"start":{"line":1963,"column":0},"end":{"line":2032,"column":2}},"606":{"start":{"line":1964,"column":2},"end":{"line":1964,"column":19}},"607":{"start":{"line":1965,"column":2},"end":{"line":1968,"column":3}},"608":{"start":{"line":1966,"column":4},"end":{"line":1966,"column":23}},"609":{"start":{"line":1967,"column":4},"end":{"line":1967,"column":19}},"610":{"start":{"line":1969,"column":2},"end":{"line":1971,"column":3}},"611":{"start":{"line":1970,"column":4},"end":{"line":1970,"column":44}},"612":{"start":{"line":1973,"column":2},"end":{"line":1975,"column":3}},"613":{"start":{"line":1974,"column":4},"end":{"line":1974,"column":16}},"614":{"start":{"line":1977,"column":2},"end":{"line":1977,"column":21}},"615":{"start":{"line":1978,"column":2},"end":{"line":1994,"column":5}},"616":{"start":{"line":1979,"column":4},"end":{"line":1993,"column":7}},"617":{"start":{"line":1980,"column":6},"end":{"line":1980,"column":27}},"618":{"start":{"line":1981,"column":6},"end":{"line":1992,"column":9}},"619":{"start":{"line":1982,"column":8},"end":{"line":1990,"column":9}},"620":{"start":{"line":1986,"column":10},"end":{"line":1988,"column":11}},"621":{"start":{"line":1987,"column":12},"end":{"line":1987,"column":40}},"622":{"start":{"line":1989,"column":10},"end":{"line":1989,"column":33}},"623":{"start":{"line":1991,"column":8},"end":{"line":1991,"column":28}},"624":{"start":{"line":1996,"column":2},"end":{"line":2031,"column":5}},"625":{"start":{"line":1997,"column":4},"end":{"line":2000,"column":5}},"626":{"start":{"line":1998,"column":6},"end":{"line":1998,"column":34}},"627":{"start":{"line":1999,"column":6},"end":{"line":1999,"column":13}},"628":{"start":{"line":2002,"column":4},"end":{"line":2004,"column":7}},"629":{"start":{"line":2003,"column":6},"end":{"line":2003,"column":25}},"630":{"start":{"line":2006,"column":4},"end":{"line":2009,"column":5}},"631":{"start":{"line":2007,"column":6},"end":{"line":2007,"column":37}},"632":{"start":{"line":2008,"column":6},"end":{"line":2008,"column":13}},"633":{"start":{"line":2010,"column":4},"end":{"line":2018,"column":7}},"634":{"start":{"line":2011,"column":6},"end":{"line":2013,"column":7}},"635":{"start":{"line":2012,"column":8},"end":{"line":2012,"column":47}},"636":{"start":{"line":2014,"column":6},"end":{"line":2016,"column":7}},"637":{"start":{"line":2015,"column":8},"end":{"line":2015,"column":75}},"638":{"start":{"line":2017,"column":6},"end":{"line":2017,"column":50}},"639":{"start":{"line":2019,"column":4},"end":{"line":2030,"column":7}},"640":{"start":{"line":2020,"column":6},"end":{"line":2023,"column":7}},"641":{"start":{"line":2021,"column":8},"end":{"line":2021,"column":36}},"642":{"start":{"line":2022,"column":8},"end":{"line":2022,"column":15}},"643":{"start":{"line":2024,"column":6},"end":{"line":2028,"column":7}},"644":{"start":{"line":2025,"column":8},"end":{"line":2025,"column":39}},"645":{"start":{"line":2026,"column":8},"end":{"line":2026,"column":46}},"646":{"start":{"line":2027,"column":8},"end":{"line":2027,"column":58}},"647":{"start":{"line":2029,"column":6},"end":{"line":2029,"column":48}},"648":{"start":{"line":2077,"column":0},"end":{"line":2196,"column":2}},"649":{"start":{"line":2078,"column":2},"end":{"line":2078,"column":38}},"650":{"start":{"line":2079,"column":2},"end":{"line":2079,"column":19}},"651":{"start":{"line":2080,"column":2},"end":{"line":2083,"column":3}},"652":{"start":{"line":2081,"column":4},"end":{"line":2081,"column":23}},"653":{"start":{"line":2082,"column":4},"end":{"line":2082,"column":19}},"654":{"start":{"line":2084,"column":2},"end":{"line":2086,"column":3}},"655":{"start":{"line":2085,"column":4},"end":{"line":2085,"column":44}},"656":{"start":{"line":2087,"column":2},"end":{"line":2087,"column":26}},"657":{"start":{"line":2089,"column":2},"end":{"line":2174,"column":5}},"658":{"start":{"line":2090,"column":4},"end":{"line":2173,"column":5}},"659":{"start":{"line":2091,"column":6},"end":{"line":2099,"column":8}},"660":{"start":{"line":2092,"column":8},"end":{"line":2092,"column":77}},"661":{"start":{"line":2093,"column":8},"end":{"line":2098,"column":11}},"662":{"start":{"line":2094,"column":10},"end":{"line":2096,"column":11}},"663":{"start":{"line":2095,"column":12},"end":{"line":2095,"column":35}},"664":{"start":{"line":2097,"column":10},"end":{"line":2097,"column":25}},"665":{"start":{"line":2100,"column":11},"end":{"line":2173,"column":5}},"666":{"start":{"line":2101,"column":6},"end":{"line":2112,"column":8}},"667":{"start":{"line":2102,"column":8},"end":{"line":2109,"column":9}},"668":{"start":{"line":2103,"column":10},"end":{"line":2104,"column":39}},"669":{"start":{"line":2105,"column":10},"end":{"line":2106,"column":68}},"670":{"start":{"line":2108,"column":10},"end":{"line":2108,"column":33}},"671":{"start":{"line":2111,"column":8},"end":{"line":2111,"column":23}},"672":{"start":{"line":2113,"column":11},"end":{"line":2173,"column":5}},"673":{"start":{"line":2114,"column":6},"end":{"line":2127,"column":8}},"674":{"start":{"line":2115,"column":8},"end":{"line":2124,"column":9}},"675":{"start":{"line":2116,"column":10},"end":{"line":2117,"column":40}},"676":{"start":{"line":2118,"column":10},"end":{"line":2121,"column":13}},"677":{"start":{"line":2123,"column":10},"end":{"line":2123,"column":33}},"678":{"start":{"line":2126,"column":8},"end":{"line":2126,"column":23}},"679":{"start":{"line":2128,"column":11},"end":{"line":2173,"column":5}},"680":{"start":{"line":2129,"column":6},"end":{"line":2146,"column":8}},"681":{"start":{"line":2130,"column":8},"end":{"line":2135,"column":9}},"682":{"start":{"line":2131,"column":10},"end":{"line":2132,"column":40}},"683":{"start":{"line":2134,"column":10},"end":{"line":2134,"column":33}},"684":{"start":{"line":2138,"column":8},"end":{"line":2139,"column":65}},"685":{"start":{"line":2140,"column":8},"end":{"line":2145,"column":11}},"686":{"start":{"line":2141,"column":10},"end":{"line":2143,"column":11}},"687":{"start":{"line":2142,"column":12},"end":{"line":2142,"column":35}},"688":{"start":{"line":2144,"column":10},"end":{"line":2144,"column":25}},"689":{"start":{"line":2147,"column":11},"end":{"line":2173,"column":5}},"690":{"start":{"line":2148,"column":6},"end":{"line":2157,"column":8}},"691":{"start":{"line":2149,"column":8},"end":{"line":2154,"column":9}},"692":{"start":{"line":2150,"column":10},"end":{"line":2151,"column":39}},"693":{"start":{"line":2153,"column":10},"end":{"line":2153,"column":33}},"694":{"start":{"line":2156,"column":8},"end":{"line":2156,"column":23}},"695":{"start":{"line":2158,"column":11},"end":{"line":2173,"column":5}},"696":{"start":{"line":2159,"column":6},"end":{"line":2168,"column":8}},"697":{"start":{"line":2160,"column":8},"end":{"line":2165,"column":9}},"698":{"start":{"line":2161,"column":10},"end":{"line":2162,"column":40}},"699":{"start":{"line":2164,"column":10},"end":{"line":2164,"column":33}},"700":{"start":{"line":2167,"column":8},"end":{"line":2167,"column":23}},"701":{"start":{"line":2170,"column":6},"end":{"line":2172,"column":8}},"702":{"start":{"line":2171,"column":8},"end":{"line":2171,"column":66}},"703":{"start":{"line":2176,"column":2},"end":{"line":2193,"column":5}},"704":{"start":{"line":2177,"column":4},"end":{"line":2192,"column":7}},"705":{"start":{"line":2178,"column":6},"end":{"line":2181,"column":7}},"706":{"start":{"line":2179,"column":8},"end":{"line":2179,"column":36}},"707":{"start":{"line":2180,"column":8},"end":{"line":2180,"column":29}},"708":{"start":{"line":2183,"column":6},"end":{"line":2191,"column":9}},"709":{"start":{"line":2184,"column":8},"end":{"line":2187,"column":9}},"710":{"start":{"line":2185,"column":10},"end":{"line":2185,"column":38}},"711":{"start":{"line":2186,"column":10},"end":{"line":2186,"column":31}},"712":{"start":{"line":2189,"column":8},"end":{"line":2189,"column":40}},"713":{"start":{"line":2190,"column":8},"end":{"line":2190,"column":21}},"714":{"start":{"line":2195,"column":2},"end":{"line":2195,"column":17}},"715":{"start":{"line":2212,"column":0},"end":{"line":2216,"column":2}},"716":{"start":{"line":2213,"column":2},"end":{"line":2213,"column":63}},"717":{"start":{"line":2214,"column":2},"end":{"line":2214,"column":18}},"718":{"start":{"line":2215,"column":2},"end":{"line":2215,"column":15}},"719":{"start":{"line":2298,"column":0},"end":{"line":2300,"column":2}},"720":{"start":{"line":2299,"column":2},"end":{"line":2299,"column":69}},"721":{"start":{"line":2318,"column":0},"end":{"line":2320,"column":2}},"722":{"start":{"line":2319,"column":2},"end":{"line":2319,"column":73}},"723":{"start":{"line":2337,"column":0},"end":{"line":2339,"column":2}},"724":{"start":{"line":2338,"column":2},"end":{"line":2338,"column":72}},"725":{"start":{"line":2356,"column":0},"end":{"line":2358,"column":2}},"726":{"start":{"line":2357,"column":2},"end":{"line":2357,"column":73}},"727":{"start":{"line":2364,"column":0},"end":{"line":2390,"column":1}},"728":{"start":{"line":2365,"column":2},"end":{"line":2365,"column":60}},"729":{"start":{"line":2366,"column":2},"end":{"line":2368,"column":3}},"730":{"start":{"line":2367,"column":4},"end":{"line":2367,"column":45}},"731":{"start":{"line":2371,"column":2},"end":{"line":2375,"column":3}},"732":{"start":{"line":2372,"column":4},"end":{"line":2372,"column":39}},"733":{"start":{"line":2374,"column":4},"end":{"line":2374,"column":65}},"734":{"start":{"line":2376,"column":2},"end":{"line":2376,"column":75}},"735":{"start":{"line":2378,"column":2},"end":{"line":2387,"column":3}},"736":{"start":{"line":2379,"column":4},"end":{"line":2386,"column":5}},"737":{"start":{"line":2380,"column":6},"end":{"line":2380,"column":47}},"738":{"start":{"line":2382,"column":6},"end":{"line":2384,"column":7}},"739":{"start":{"line":2383,"column":8},"end":{"line":2383,"column":30}},"740":{"start":{"line":2385,"column":6},"end":{"line":2385,"column":60}},"741":{"start":{"line":2389,"column":2},"end":{"line":2389,"column":52}},"742":{"start":{"line":2463,"column":0},"end":{"line":2521,"column":2}},"743":{"start":{"line":2464,"column":2},"end":{"line":2464,"column":19}},"744":{"start":{"line":2465,"column":2},"end":{"line":2467,"column":3}},"745":{"start":{"line":2466,"column":4},"end":{"line":2466,"column":44}},"746":{"start":{"line":2468,"column":2},"end":{"line":2468,"column":42}},"747":{"start":{"line":2469,"column":2},"end":{"line":2469,"column":38}},"748":{"start":{"line":2470,"column":2},"end":{"line":2520,"column":5}},"749":{"start":{"line":2471,"column":4},"end":{"line":2474,"column":5}},"750":{"start":{"line":2472,"column":6},"end":{"line":2472,"column":64}},"751":{"start":{"line":2473,"column":6},"end":{"line":2473,"column":52}},"752":{"start":{"line":2476,"column":4},"end":{"line":2476,"column":36}},"753":{"start":{"line":2476,"column":16},"end":{"line":2476,"column":36}},"754":{"start":{"line":2477,"column":4},"end":{"line":2477,"column":46}},"755":{"start":{"line":2477,"column":29},"end":{"line":2477,"column":46}},"756":{"start":{"line":2479,"column":4},"end":{"line":2479,"column":26}},"757":{"start":{"line":2480,"column":4},"end":{"line":2480,"column":32}},"758":{"start":{"line":2482,"column":4},"end":{"line":2487,"column":5}},"759":{"start":{"line":2483,"column":6},"end":{"line":2483,"column":39}},"760":{"start":{"line":2484,"column":6},"end":{"line":2484,"column":20}},"761":{"start":{"line":2485,"column":6},"end":{"line":2485,"column":30}},"762":{"start":{"line":2486,"column":6},"end":{"line":2486,"column":20}},"763":{"start":{"line":2489,"column":4},"end":{"line":2519,"column":7}},"764":{"start":{"line":2490,"column":6},"end":{"line":2494,"column":7}},"765":{"start":{"line":2491,"column":8},"end":{"line":2491,"column":34}},"766":{"start":{"line":2492,"column":8},"end":{"line":2492,"column":20}},"767":{"start":{"line":2493,"column":8},"end":{"line":2493,"column":15}},"768":{"start":{"line":2496,"column":6},"end":{"line":2512,"column":7}},"769":{"start":{"line":2498,"column":8},"end":{"line":2503,"column":26}},"770":{"start":{"line":2505,"column":8},"end":{"line":2505,"column":32}},"771":{"start":{"line":2507,"column":8},"end":{"line":2507,"column":49}},"772":{"start":{"line":2508,"column":8},"end":{"line":2511,"column":35}},"773":{"start":{"line":2514,"column":6},"end":{"line":2514,"column":45}},"774":{"start":{"line":2515,"column":6},"end":{"line":2517,"column":7}},"775":{"start":{"line":2516,"column":8},"end":{"line":2516,"column":53}},"776":{"start":{"line":2518,"column":6},"end":{"line":2518,"column":26}},"777":{"start":{"line":2552,"column":0},"end":{"line":2640,"column":2}},"778":{"start":{"line":2553,"column":2},"end":{"line":2556,"column":3}},"779":{"start":{"line":2554,"column":4},"end":{"line":2554,"column":23}},"780":{"start":{"line":2555,"column":4},"end":{"line":2555,"column":17}},"781":{"start":{"line":2558,"column":2},"end":{"line":2560,"column":3}},"782":{"start":{"line":2559,"column":4},"end":{"line":2559,"column":44}},"783":{"start":{"line":2562,"column":2},"end":{"line":2562,"column":19}},"784":{"start":{"line":2563,"column":2},"end":{"line":2563,"column":38}},"785":{"start":{"line":2564,"column":2},"end":{"line":2570,"column":3}},"786":{"start":{"line":2565,"column":4},"end":{"line":2569,"column":7}},"787":{"start":{"line":2566,"column":6},"end":{"line":2566,"column":66}},"788":{"start":{"line":2567,"column":6},"end":{"line":2567,"column":20}},"789":{"start":{"line":2568,"column":6},"end":{"line":2568,"column":34}},"790":{"start":{"line":2572,"column":2},"end":{"line":2572,"column":11}},"791":{"start":{"line":2574,"column":2},"end":{"line":2639,"column":5}},"792":{"start":{"line":2575,"column":4},"end":{"line":2615,"column":6}},"793":{"start":{"line":2576,"column":6},"end":{"line":2580,"column":7}},"794":{"start":{"line":2577,"column":8},"end":{"line":2577,"column":20}},"795":{"start":{"line":2578,"column":8},"end":{"line":2578,"column":34}},"796":{"start":{"line":2579,"column":8},"end":{"line":2579,"column":15}},"797":{"start":{"line":2581,"column":6},"end":{"line":2585,"column":7}},"798":{"start":{"line":2582,"column":8},"end":{"line":2582,"column":40}},"799":{"start":{"line":2583,"column":8},"end":{"line":2583,"column":59}},"800":{"start":{"line":2584,"column":8},"end":{"line":2584,"column":15}},"801":{"start":{"line":2587,"column":6},"end":{"line":2587,"column":37}},"802":{"start":{"line":2589,"column":6},"end":{"line":2593,"column":7}},"803":{"start":{"line":2590,"column":8},"end":{"line":2590,"column":40}},"804":{"start":{"line":2591,"column":8},"end":{"line":2591,"column":59}},"805":{"start":{"line":2592,"column":8},"end":{"line":2592,"column":15}},"806":{"start":{"line":2595,"column":6},"end":{"line":2595,"column":26}},"807":{"start":{"line":2597,"column":6},"end":{"line":2608,"column":7}},"808":{"start":{"line":2598,"column":8},"end":{"line":2603,"column":9}},"809":{"start":{"line":2599,"column":10},"end":{"line":2599,"column":25}},"810":{"start":{"line":2600,"column":10},"end":{"line":2600,"column":22}},"811":{"start":{"line":2601,"column":10},"end":{"line":2601,"column":36}},"812":{"start":{"line":2602,"column":10},"end":{"line":2602,"column":17}},"813":{"start":{"line":2604,"column":8},"end":{"line":2607,"column":9}},"814":{"start":{"line":2605,"column":10},"end":{"line":2605,"column":42}},"815":{"start":{"line":2606,"column":10},"end":{"line":2606,"column":61}},"816":{"start":{"line":2610,"column":6},"end":{"line":2614,"column":7}},"817":{"start":{"line":2611,"column":8},"end":{"line":2611,"column":38}},"818":{"start":{"line":2612,"column":8},"end":{"line":2612,"column":41}},"819":{"start":{"line":2613,"column":8},"end":{"line":2613,"column":44}},"820":{"start":{"line":2617,"column":4},"end":{"line":2638,"column":5}},"821":{"start":{"line":2618,"column":6},"end":{"line":2624,"column":7}},"822":{"start":{"line":2619,"column":8},"end":{"line":2620,"column":37}},"823":{"start":{"line":2621,"column":8},"end":{"line":2621,"column":22}},"824":{"start":{"line":2622,"column":8},"end":{"line":2622,"column":36}},"825":{"start":{"line":2623,"column":8},"end":{"line":2623,"column":15}},"826":{"start":{"line":2625,"column":6},"end":{"line":2625,"column":18}},"827":{"start":{"line":2626,"column":6},"end":{"line":2626,"column":18}},"828":{"start":{"line":2627,"column":6},"end":{"line":2627,"column":55}},"829":{"start":{"line":2629,"column":6},"end":{"line":2635,"column":7}},"830":{"start":{"line":2630,"column":8},"end":{"line":2631,"column":40}},"831":{"start":{"line":2632,"column":8},"end":{"line":2632,"column":22}},"832":{"start":{"line":2633,"column":8},"end":{"line":2633,"column":36}},"833":{"start":{"line":2634,"column":8},"end":{"line":2634,"column":15}},"834":{"start":{"line":2637,"column":6},"end":{"line":2637,"column":55}},"835":{"start":{"line":2681,"column":0},"end":{"line":2707,"column":2}},"836":{"start":{"line":2682,"column":2},"end":{"line":2684,"column":15}},"837":{"start":{"line":2686,"column":2},"end":{"line":2688,"column":3}},"838":{"start":{"line":2687,"column":4},"end":{"line":2687,"column":26}},"839":{"start":{"line":2690,"column":2},"end":{"line":2694,"column":3}},"840":{"start":{"line":2691,"column":4},"end":{"line":2691,"column":39}},"841":{"start":{"line":2693,"column":4},"end":{"line":2693,"column":36}},"842":{"start":{"line":2696,"column":2},"end":{"line":2696,"column":24}},"843":{"start":{"line":2698,"column":2},"end":{"line":2700,"column":3}},"844":{"start":{"line":2699,"column":4},"end":{"line":2699,"column":21}},"845":{"start":{"line":2702,"column":2},"end":{"line":2704,"column":3}},"846":{"start":{"line":2703,"column":4},"end":{"line":2703,"column":44}},"847":{"start":{"line":2706,"column":2},"end":{"line":2706,"column":27}},"848":{"start":{"line":2734,"column":0},"end":{"line":2802,"column":2}},"849":{"start":{"line":2735,"column":2},"end":{"line":2738,"column":3}},"850":{"start":{"line":2736,"column":4},"end":{"line":2736,"column":23}},"851":{"start":{"line":2737,"column":4},"end":{"line":2737,"column":17}},"852":{"start":{"line":2739,"column":2},"end":{"line":2741,"column":3}},"853":{"start":{"line":2740,"column":4},"end":{"line":2740,"column":44}},"854":{"start":{"line":2743,"column":2},"end":{"line":2743,"column":19}},"855":{"start":{"line":2744,"column":2},"end":{"line":2744,"column":38}},"856":{"start":{"line":2745,"column":2},"end":{"line":2801,"column":5}},"857":{"start":{"line":2746,"column":4},"end":{"line":2746,"column":14}},"858":{"start":{"line":2747,"column":4},"end":{"line":2753,"column":5}},"859":{"start":{"line":2748,"column":6},"end":{"line":2748,"column":61}},"860":{"start":{"line":2749,"column":11},"end":{"line":2753,"column":5}},"861":{"start":{"line":2750,"column":6},"end":{"line":2750,"column":69}},"862":{"start":{"line":2751,"column":11},"end":{"line":2753,"column":5}},"863":{"start":{"line":2752,"column":6},"end":{"line":2752,"column":63}},"864":{"start":{"line":2755,"column":4},"end":{"line":2759,"column":5}},"865":{"start":{"line":2756,"column":6},"end":{"line":2756,"column":34}},"866":{"start":{"line":2757,"column":6},"end":{"line":2757,"column":20}},"867":{"start":{"line":2758,"column":6},"end":{"line":2758,"column":13}},"868":{"start":{"line":2762,"column":4},"end":{"line":2762,"column":32}},"869":{"start":{"line":2764,"column":4},"end":{"line":2800,"column":7}},"870":{"start":{"line":2767,"column":6},"end":{"line":2771,"column":7}},"871":{"start":{"line":2768,"column":8},"end":{"line":2768,"column":34}},"872":{"start":{"line":2769,"column":8},"end":{"line":2769,"column":20}},"873":{"start":{"line":2770,"column":8},"end":{"line":2770,"column":15}},"874":{"start":{"line":2773,"column":6},"end":{"line":2773,"column":37}},"875":{"start":{"line":2774,"column":6},"end":{"line":2778,"column":7}},"876":{"start":{"line":2775,"column":8},"end":{"line":2775,"column":59}},"877":{"start":{"line":2776,"column":8},"end":{"line":2776,"column":40}},"878":{"start":{"line":2777,"column":8},"end":{"line":2777,"column":15}},"879":{"start":{"line":2780,"column":6},"end":{"line":2780,"column":26}},"880":{"start":{"line":2782,"column":6},"end":{"line":2793,"column":7}},"881":{"start":{"line":2783,"column":8},"end":{"line":2787,"column":9}},"882":{"start":{"line":2784,"column":10},"end":{"line":2784,"column":36}},"883":{"start":{"line":2785,"column":10},"end":{"line":2785,"column":22}},"884":{"start":{"line":2786,"column":10},"end":{"line":2786,"column":17}},"885":{"start":{"line":2789,"column":8},"end":{"line":2792,"column":9}},"886":{"start":{"line":2790,"column":10},"end":{"line":2790,"column":61}},"887":{"start":{"line":2791,"column":10},"end":{"line":2791,"column":42}},"888":{"start":{"line":2795,"column":6},"end":{"line":2799,"column":7}},"889":{"start":{"line":2796,"column":8},"end":{"line":2796,"column":34}},"890":{"start":{"line":2797,"column":8},"end":{"line":2797,"column":37}},"891":{"start":{"line":2798,"column":8},"end":{"line":2798,"column":44}},"892":{"start":{"line":2871,"column":0},"end":{"line":2900,"column":2}},"893":{"start":{"line":2872,"column":2},"end":{"line":2872,"column":19}},"894":{"start":{"line":2873,"column":2},"end":{"line":2875,"column":3}},"895":{"start":{"line":2874,"column":4},"end":{"line":2874,"column":44}},"896":{"start":{"line":2878,"column":2},"end":{"line":2878,"column":47}},"897":{"start":{"line":2879,"column":2},"end":{"line":2879,"column":32}},"898":{"start":{"line":2882,"column":2},"end":{"line":2882,"column":17}},"899":{"start":{"line":2884,"column":2},"end":{"line":2899,"column":3}},"900":{"start":{"line":2885,"column":4},"end":{"line":2885,"column":50}},"901":{"start":{"line":2887,"column":4},"end":{"line":2887,"column":40}},"902":{"start":{"line":2888,"column":4},"end":{"line":2898,"column":7}},"903":{"start":{"line":2889,"column":6},"end":{"line":2897,"column":9}},"904":{"start":{"line":2890,"column":8},"end":{"line":2896,"column":9}},"905":{"start":{"line":2891,"column":10},"end":{"line":2891,"column":38}},"906":{"start":{"line":2892,"column":10},"end":{"line":2892,"column":24}},"907":{"start":{"line":2894,"column":10},"end":{"line":2894,"column":43}},"908":{"start":{"line":2895,"column":10},"end":{"line":2895,"column":24}},"909":{"start":{"line":2913,"column":0},"end":{"line":2937,"column":1}},"910":{"start":{"line":2914,"column":2},"end":{"line":2914,"column":29}},"911":{"start":{"line":2916,"column":2},"end":{"line":2918,"column":3}},"912":{"start":{"line":2917,"column":4},"end":{"line":2917,"column":32}},"913":{"start":{"line":2921,"column":2},"end":{"line":2921,"column":18}},"914":{"start":{"line":2922,"column":2},"end":{"line":2922,"column":11}},"915":{"start":{"line":2923,"column":2},"end":{"line":2926,"column":3}},"916":{"start":{"line":2924,"column":4},"end":{"line":2924,"column":20}},"917":{"start":{"line":2925,"column":4},"end":{"line":2925,"column":38}},"918":{"start":{"line":2928,"column":2},"end":{"line":2936,"column":3}},"919":{"start":{"line":2929,"column":4},"end":{"line":2931,"column":5}},"920":{"start":{"line":2930,"column":6},"end":{"line":2930,"column":27}},"921":{"start":{"line":2932,"column":4},"end":{"line":2934,"column":5}},"922":{"start":{"line":2933,"column":6},"end":{"line":2933,"column":13}},"923":{"start":{"line":2935,"column":4},"end":{"line":2935,"column":25}},"924":{"start":{"line":2942,"column":0},"end":{"line":2943,"column":39}},"925":{"start":{"line":2945,"column":0},"end":{"line":3138,"column":1}},"926":{"start":{"line":2946,"column":2},"end":{"line":2946,"column":16}},"927":{"start":{"line":2949,"column":2},"end":{"line":2951,"column":3}},"928":{"start":{"line":2950,"column":4},"end":{"line":2950,"column":18}},"929":{"start":{"line":2953,"column":2},"end":{"line":2955,"column":3}},"930":{"start":{"line":2954,"column":4},"end":{"line":2954,"column":22}},"931":{"start":{"line":2957,"column":2},"end":{"line":2957,"column":60}},"932":{"start":{"line":2958,"column":2},"end":{"line":2962,"column":3}},"933":{"start":{"line":2959,"column":4},"end":{"line":2961,"column":7}},"934":{"start":{"line":2960,"column":6},"end":{"line":2960,"column":26}},"935":{"start":{"line":2964,"column":2},"end":{"line":2965,"column":36}},"936":{"start":{"line":2967,"column":2},"end":{"line":2970,"column":3}},"937":{"start":{"line":2969,"column":4},"end":{"line":2969,"column":30}},"938":{"start":{"line":2972,"column":2},"end":{"line":2972,"column":23}},"939":{"start":{"line":2973,"column":2},"end":{"line":2973,"column":21}},"940":{"start":{"line":2974,"column":2},"end":{"line":3037,"column":3}},"941":{"start":{"line":2975,"column":4},"end":{"line":2975,"column":23}},"942":{"start":{"line":2976,"column":4},"end":{"line":2976,"column":32}},"943":{"start":{"line":2978,"column":4},"end":{"line":2982,"column":5}},"944":{"start":{"line":2979,"column":6},"end":{"line":2979,"column":58}},"945":{"start":{"line":2981,"column":6},"end":{"line":2981,"column":17}},"946":{"start":{"line":2984,"column":4},"end":{"line":2984,"column":52}},"947":{"start":{"line":2985,"column":4},"end":{"line":2985,"column":34}},"948":{"start":{"line":2987,"column":4},"end":{"line":2990,"column":5}},"949":{"start":{"line":2988,"column":6},"end":{"line":2988,"column":19}},"950":{"start":{"line":2989,"column":6},"end":{"line":2989,"column":15}},"951":{"start":{"line":2992,"column":4},"end":{"line":2992,"column":18}},"952":{"start":{"line":2993,"column":4},"end":{"line":2995,"column":5}},"953":{"start":{"line":2994,"column":6},"end":{"line":2994,"column":45}},"954":{"start":{"line":2997,"column":4},"end":{"line":2997,"column":28}},"955":{"start":{"line":2998,"column":4},"end":{"line":2998,"column":87}},"956":{"start":{"line":2999,"column":4},"end":{"line":2999,"column":89}},"957":{"start":{"line":3001,"column":4},"end":{"line":3012,"column":5}},"958":{"start":{"line":3005,"column":6},"end":{"line":3011,"column":7}},"959":{"start":{"line":3006,"column":8},"end":{"line":3006,"column":57}},"960":{"start":{"line":3009,"column":8},"end":{"line":3009,"column":50}},"961":{"start":{"line":3010,"column":8},"end":{"line":3010,"column":26}},"962":{"start":{"line":3014,"column":4},"end":{"line":3017,"column":5}},"963":{"start":{"line":3015,"column":6},"end":{"line":3015,"column":63}},"964":{"start":{"line":3016,"column":6},"end":{"line":3016,"column":73}},"965":{"start":{"line":3019,"column":4},"end":{"line":3019,"column":43}},"966":{"start":{"line":3020,"column":4},"end":{"line":3020,"column":67}},"967":{"start":{"line":3026,"column":4},"end":{"line":3029,"column":5}},"968":{"start":{"line":3028,"column":6},"end":{"line":3028,"column":37}},"969":{"start":{"line":3032,"column":4},"end":{"line":3034,"column":5}},"970":{"start":{"line":3033,"column":6},"end":{"line":3033,"column":34}},"971":{"start":{"line":3036,"column":4},"end":{"line":3036,"column":53}},"972":{"start":{"line":3039,"column":2},"end":{"line":3041,"column":3}},"973":{"start":{"line":3040,"column":4},"end":{"line":3040,"column":22}},"974":{"start":{"line":3043,"column":2},"end":{"line":3050,"column":3}},"975":{"start":{"line":3044,"column":4},"end":{"line":3044,"column":34}},"976":{"start":{"line":3044,"column":13},"end":{"line":3044,"column":34}},"977":{"start":{"line":3045,"column":4},"end":{"line":3045,"column":35}},"978":{"start":{"line":3046,"column":4},"end":{"line":3046,"column":49}},"979":{"start":{"line":3047,"column":4},"end":{"line":3049,"column":5}},"980":{"start":{"line":3048,"column":6},"end":{"line":3048,"column":17}},"981":{"start":{"line":3052,"column":2},"end":{"line":3137,"column":3}},"982":{"start":{"line":3053,"column":4},"end":{"line":3053,"column":34}},"983":{"start":{"line":3053,"column":13},"end":{"line":3053,"column":34}},"984":{"start":{"line":3055,"column":4},"end":{"line":3055,"column":30}},"985":{"start":{"line":3056,"column":4},"end":{"line":3056,"column":34}},"986":{"start":{"line":3057,"column":4},"end":{"line":3057,"column":30}},"987":{"start":{"line":3058,"column":4},"end":{"line":3058,"column":13}},"988":{"start":{"line":3059,"column":4},"end":{"line":3059,"column":55}},"989":{"start":{"line":3060,"column":4},"end":{"line":3060,"column":26}},"990":{"start":{"line":3061,"column":4},"end":{"line":3061,"column":22}},"991":{"start":{"line":3062,"column":4},"end":{"line":3062,"column":21}},"992":{"start":{"line":3063,"column":4},"end":{"line":3063,"column":12}},"993":{"start":{"line":3064,"column":4},"end":{"line":3064,"column":12}},"994":{"start":{"line":3069,"column":4},"end":{"line":3122,"column":5}},"995":{"start":{"line":3070,"column":6},"end":{"line":3070,"column":20}},"996":{"start":{"line":3071,"column":6},"end":{"line":3121,"column":7}},"997":{"start":{"line":3072,"column":8},"end":{"line":3072,"column":53}},"998":{"start":{"line":3073,"column":8},"end":{"line":3116,"column":9}},"999":{"start":{"line":3074,"column":10},"end":{"line":3074,"column":39}},"1000":{"start":{"line":3075,"column":10},"end":{"line":3098,"column":11}},"1001":{"start":{"line":3076,"column":12},"end":{"line":3076,"column":32}},"1002":{"start":{"line":3077,"column":12},"end":{"line":3079,"column":13}},"1003":{"start":{"line":3078,"column":14},"end":{"line":3078,"column":32}},"1004":{"start":{"line":3080,"column":12},"end":{"line":3080,"column":32}},"1005":{"start":{"line":3081,"column":12},"end":{"line":3097,"column":13}},"1006":{"start":{"line":3082,"column":14},"end":{"line":3088,"column":15}},"1007":{"start":{"line":3083,"column":16},"end":{"line":3083,"column":39}},"1008":{"start":{"line":3084,"column":16},"end":{"line":3084,"column":38}},"1009":{"start":{"line":3086,"column":16},"end":{"line":3086,"column":51}},"1010":{"start":{"line":3087,"column":16},"end":{"line":3087,"column":51}},"1011":{"start":{"line":3090,"column":14},"end":{"line":3096,"column":15}},"1012":{"start":{"line":3091,"column":16},"end":{"line":3091,"column":37}},"1013":{"start":{"line":3092,"column":16},"end":{"line":3092,"column":36}},"1014":{"start":{"line":3094,"column":16},"end":{"line":3094,"column":35}},"1015":{"start":{"line":3095,"column":16},"end":{"line":3095,"column":34}},"1016":{"start":{"line":3100,"column":10},"end":{"line":3102,"column":11}},"1017":{"start":{"line":3101,"column":12},"end":{"line":3101,"column":28}},"1018":{"start":{"line":3103,"column":10},"end":{"line":3103,"column":29}},"1019":{"start":{"line":3104,"column":10},"end":{"line":3115,"column":11}},"1020":{"start":{"line":3105,"column":12},"end":{"line":3111,"column":13}},"1021":{"start":{"line":3106,"column":14},"end":{"line":3106,"column":37}},"1022":{"start":{"line":3107,"column":14},"end":{"line":3107,"column":36}},"1023":{"start":{"line":3109,"column":14},"end":{"line":3109,"column":49}},"1024":{"start":{"line":3110,"column":14},"end":{"line":3110,"column":49}},"1025":{"start":{"line":3113,"column":12},"end":{"line":3113,"column":31}},"1026":{"start":{"line":3114,"column":12},"end":{"line":3114,"column":30}},"1027":{"start":{"line":3118,"column":8},"end":{"line":3120,"column":9}},"1028":{"start":{"line":3119,"column":10},"end":{"line":3119,"column":38}},"1029":{"start":{"line":3124,"column":4},"end":{"line":3136,"column":7}},"1030":{"start":{"line":3145,"column":0},"end":{"line":3173,"column":1}},"1031":{"start":{"line":3148,"column":2},"end":{"line":3149,"column":34}},"1032":{"start":{"line":3154,"column":2},"end":{"line":3154,"column":20}},"1033":{"start":{"line":3155,"column":2},"end":{"line":3155,"column":24}},"1034":{"start":{"line":3156,"column":2},"end":{"line":3156,"column":26}},"1035":{"start":{"line":3158,"column":2},"end":{"line":3160,"column":3}},"1036":{"start":{"line":3159,"column":4},"end":{"line":3159,"column":37}},"1037":{"start":{"line":3162,"column":2},"end":{"line":3172,"column":3}},"1038":{"start":{"line":3163,"column":4},"end":{"line":3166,"column":5}},"1039":{"start":{"line":3165,"column":6},"end":{"line":3165,"column":15}},"1040":{"start":{"line":3168,"column":4},"end":{"line":3170,"column":5}},"1041":{"start":{"line":3169,"column":6},"end":{"line":3169,"column":30}},"1042":{"start":{"line":3171,"column":4},"end":{"line":3171,"column":57}},"1043":{"start":{"line":3195,"column":0},"end":{"line":3256,"column":1}},"1044":{"start":{"line":3197,"column":2},"end":{"line":3197,"column":20}},"1045":{"start":{"line":3198,"column":2},"end":{"line":3198,"column":50}},"1046":{"start":{"line":3199,"column":2},"end":{"line":3199,"column":10}},"1047":{"start":{"line":3200,"column":2},"end":{"line":3200,"column":10}},"1048":{"start":{"line":3201,"column":2},"end":{"line":3201,"column":9}},"1049":{"start":{"line":3203,"column":2},"end":{"line":3240,"column":3}},"1050":{"start":{"line":3204,"column":4},"end":{"line":3204,"column":19}},"1051":{"start":{"line":3206,"column":4},"end":{"line":3211,"column":5}},"1052":{"start":{"line":3208,"column":6},"end":{"line":3208,"column":105}},"1053":{"start":{"line":3209,"column":6},"end":{"line":3209,"column":24}},"1054":{"start":{"line":3210,"column":6},"end":{"line":3210,"column":15}},"1055":{"start":{"line":3213,"column":4},"end":{"line":3218,"column":5}},"1056":{"start":{"line":3216,"column":6},"end":{"line":3216,"column":24}},"1057":{"start":{"line":3217,"column":6},"end":{"line":3217,"column":15}},"1058":{"start":{"line":3220,"column":4},"end":{"line":3220,"column":21}},"1059":{"start":{"line":3222,"column":4},"end":{"line":3239,"column":5}},"1060":{"start":{"line":3226,"column":6},"end":{"line":3226,"column":28}},"1061":{"start":{"line":3227,"column":6},"end":{"line":3235,"column":7}},"1062":{"start":{"line":3228,"column":8},"end":{"line":3232,"column":9}},"1063":{"start":{"line":3229,"column":10},"end":{"line":3229,"column":43}},"1064":{"start":{"line":3231,"column":10},"end":{"line":3231,"column":29}},"1065":{"start":{"line":3234,"column":8},"end":{"line":3234,"column":26}},"1066":{"start":{"line":3238,"column":6},"end":{"line":3238,"column":50}},"1067":{"start":{"line":3242,"column":2},"end":{"line":3242,"column":20}},"1068":{"start":{"line":3243,"column":2},"end":{"line":3255,"column":3}},"1069":{"start":{"line":3249,"column":4},"end":{"line":3254,"column":7}},"1070":{"start":{"line":3250,"column":6},"end":{"line":3252,"column":7}},"1071":{"start":{"line":3251,"column":8},"end":{"line":3251,"column":15}},"1072":{"start":{"line":3253,"column":6},"end":{"line":3253,"column":22}},"1073":{"start":{"line":3258,"column":0},"end":{"line":3416,"column":1}},"1074":{"start":{"line":3259,"column":2},"end":{"line":3263,"column":106}},"1075":{"start":{"line":3265,"column":2},"end":{"line":3265,"column":36}},"1076":{"start":{"line":3266,"column":2},"end":{"line":3266,"column":24}},"1077":{"start":{"line":3267,"column":2},"end":{"line":3267,"column":29}},"1078":{"start":{"line":3269,"column":2},"end":{"line":3269,"column":42}},"1079":{"start":{"line":3270,"column":2},"end":{"line":3270,"column":68}},"1080":{"start":{"line":3271,"column":2},"end":{"line":3277,"column":3}},"1081":{"start":{"line":3275,"column":4},"end":{"line":3276,"column":58}},"1082":{"start":{"line":3279,"column":2},"end":{"line":3281,"column":3}},"1083":{"start":{"line":3280,"column":4},"end":{"line":3280,"column":27}},"1084":{"start":{"line":3283,"column":2},"end":{"line":3285,"column":3}},"1085":{"start":{"line":3284,"column":4},"end":{"line":3284,"column":61}},"1086":{"start":{"line":3287,"column":2},"end":{"line":3287,"column":63}},"1087":{"start":{"line":3289,"column":2},"end":{"line":3413,"column":3}},"1088":{"start":{"line":3290,"column":4},"end":{"line":3290,"column":18}},"1089":{"start":{"line":3292,"column":4},"end":{"line":3334,"column":5}},"1090":{"start":{"line":3293,"column":6},"end":{"line":3293,"column":48}},"1091":{"start":{"line":3294,"column":6},"end":{"line":3294,"column":49}},"1092":{"start":{"line":3295,"column":6},"end":{"line":3299,"column":7}},"1093":{"start":{"line":3296,"column":8},"end":{"line":3298,"column":11}},"1094":{"start":{"line":3297,"column":10},"end":{"line":3297,"column":27}},"1095":{"start":{"line":3301,"column":6},"end":{"line":3333,"column":7}},"1096":{"start":{"line":3302,"column":8},"end":{"line":3302,"column":39}},"1097":{"start":{"line":3303,"column":8},"end":{"line":3303,"column":32}},"1098":{"start":{"line":3305,"column":8},"end":{"line":3318,"column":9}},"1099":{"start":{"line":3306,"column":10},"end":{"line":3306,"column":69}},"1100":{"start":{"line":3308,"column":10},"end":{"line":3315,"column":11}},"1101":{"start":{"line":3309,"column":12},"end":{"line":3309,"column":68}},"1102":{"start":{"line":3310,"column":12},"end":{"line":3310,"column":78}},"1103":{"start":{"line":3312,"column":12},"end":{"line":3314,"column":13}},"1104":{"start":{"line":3313,"column":14},"end":{"line":3313,"column":63}},"1105":{"start":{"line":3317,"column":10},"end":{"line":3317,"column":39}},"1106":{"start":{"line":3319,"column":8},"end":{"line":3319,"column":74}},"1107":{"start":{"line":3321,"column":8},"end":{"line":3330,"column":9}},"1108":{"start":{"line":3322,"column":10},"end":{"line":3322,"column":57}},"1109":{"start":{"line":3323,"column":15},"end":{"line":3330,"column":9}},"1110":{"start":{"line":3324,"column":10},"end":{"line":3324,"column":75}},"1111":{"start":{"line":3325,"column":10},"end":{"line":3325,"column":27}},"1112":{"start":{"line":3329,"column":10},"end":{"line":3329,"column":67}},"1113":{"start":{"line":3332,"column":8},"end":{"line":3332,"column":42}},"1114":{"start":{"line":3336,"column":4},"end":{"line":3338,"column":5}},"1115":{"start":{"line":3337,"column":6},"end":{"line":3337,"column":15}},"1116":{"start":{"line":3340,"column":4},"end":{"line":3342,"column":5}},"1117":{"start":{"line":3341,"column":6},"end":{"line":3341,"column":32}},"1118":{"start":{"line":3344,"column":4},"end":{"line":3344,"column":53}},"1119":{"start":{"line":3345,"column":4},"end":{"line":3347,"column":19}},"1120":{"start":{"line":3348,"column":4},"end":{"line":3350,"column":12}},"1121":{"start":{"line":3351,"column":4},"end":{"line":3351,"column":72}},"1122":{"start":{"line":3352,"column":4},"end":{"line":3354,"column":5}},"1123":{"start":{"line":3353,"column":6},"end":{"line":3353,"column":23}},"1124":{"start":{"line":3356,"column":4},"end":{"line":3359,"column":5}},"1125":{"start":{"line":3357,"column":6},"end":{"line":3358,"column":47}},"1126":{"start":{"line":3361,"column":4},"end":{"line":3361,"column":34}},"1127":{"start":{"line":3362,"column":4},"end":{"line":3362,"column":60}},"1128":{"start":{"line":3363,"column":4},"end":{"line":3363,"column":55}},"1129":{"start":{"line":3364,"column":4},"end":{"line":3364,"column":63}},"1130":{"start":{"line":3365,"column":4},"end":{"line":3367,"column":5}},"1131":{"start":{"line":3366,"column":6},"end":{"line":3366,"column":62}},"1132":{"start":{"line":3369,"column":4},"end":{"line":3369,"column":30}},"1133":{"start":{"line":3370,"column":4},"end":{"line":3412,"column":5}},"1134":{"start":{"line":3371,"column":6},"end":{"line":3371,"column":32}},"1135":{"start":{"line":3372,"column":6},"end":{"line":3372,"column":69}},"1136":{"start":{"line":3373,"column":6},"end":{"line":3373,"column":69}},"1137":{"start":{"line":3374,"column":6},"end":{"line":3376,"column":34}},"1138":{"start":{"line":3378,"column":6},"end":{"line":3411,"column":7}},"1139":{"start":{"line":3379,"column":8},"end":{"line":3381,"column":10}},"1140":{"start":{"line":3383,"column":8},"end":{"line":3387,"column":9}},"1141":{"start":{"line":3384,"column":10},"end":{"line":3386,"column":13}},"1142":{"start":{"line":3388,"column":8},"end":{"line":3388,"column":45}},"1143":{"start":{"line":3389,"column":8},"end":{"line":3391,"column":9}},"1144":{"start":{"line":3390,"column":10},"end":{"line":3390,"column":39}},"1145":{"start":{"line":3392,"column":8},"end":{"line":3392,"column":30}},"1146":{"start":{"line":3394,"column":8},"end":{"line":3405,"column":10}},"1147":{"start":{"line":3406,"column":8},"end":{"line":3406,"column":39}},"1148":{"start":{"line":3408,"column":8},"end":{"line":3408,"column":45}},"1149":{"start":{"line":3409,"column":8},"end":{"line":3409,"column":44}},"1150":{"start":{"line":3410,"column":8},"end":{"line":3410,"column":46}},"1151":{"start":{"line":3415,"column":2},"end":{"line":3415,"column":13}},"1152":{"start":{"line":3425,"column":0},"end":{"line":3442,"column":1}},"1153":{"start":{"line":3426,"column":2},"end":{"line":3426,"column":43}},"1154":{"start":{"line":3426,"column":28},"end":{"line":3426,"column":43}},"1155":{"start":{"line":3428,"column":2},"end":{"line":3439,"column":3}},"1156":{"start":{"line":3429,"column":4},"end":{"line":3433,"column":5}},"1157":{"start":{"line":3430,"column":6},"end":{"line":3432,"column":7}},"1158":{"start":{"line":3431,"column":8},"end":{"line":3431,"column":28}},"1159":{"start":{"line":3434,"column":4},"end":{"line":3436,"column":5}},"1160":{"start":{"line":3435,"column":6},"end":{"line":3435,"column":48}},"1161":{"start":{"line":3438,"column":4},"end":{"line":3438,"column":26}},"1162":{"start":{"line":3441,"column":2},"end":{"line":3441,"column":13}},"1163":{"start":{"line":3462,"column":0},"end":{"line":3496,"column":1}},"1164":{"start":{"line":3463,"column":2},"end":{"line":3487,"column":3}},"1165":{"start":{"line":3465,"column":4},"end":{"line":3465,"column":17}},"1166":{"start":{"line":3466,"column":4},"end":{"line":3466,"column":31}},"1167":{"start":{"line":3467,"column":4},"end":{"line":3476,"column":5}},"1168":{"start":{"line":3468,"column":6},"end":{"line":3468,"column":26}},"1169":{"start":{"line":3469,"column":6},"end":{"line":3469,"column":35}},"1170":{"start":{"line":3469,"column":26},"end":{"line":3469,"column":35}},"1171":{"start":{"line":3470,"column":6},"end":{"line":3470,"column":44}},"1172":{"start":{"line":3471,"column":6},"end":{"line":3471,"column":23}},"1173":{"start":{"line":3472,"column":6},"end":{"line":3475,"column":7}},"1174":{"start":{"line":3474,"column":8},"end":{"line":3474,"column":14}},"1175":{"start":{"line":3480,"column":4},"end":{"line":3482,"column":5}},"1176":{"start":{"line":3481,"column":6},"end":{"line":3481,"column":41}},"1177":{"start":{"line":3483,"column":4},"end":{"line":3485,"column":5}},"1178":{"start":{"line":3484,"column":6},"end":{"line":3484,"column":22}},"1179":{"start":{"line":3486,"column":4},"end":{"line":3486,"column":15}},"1180":{"start":{"line":3490,"column":2},"end":{"line":3493,"column":3}},"1181":{"start":{"line":3491,"column":4},"end":{"line":3491,"column":39}},"1182":{"start":{"line":3492,"column":4},"end":{"line":3492,"column":15}},"1183":{"start":{"line":3495,"column":2},"end":{"line":3495,"column":14}},"1184":{"start":{"line":3502,"column":0},"end":{"line":3510,"column":1}},"1185":{"start":{"line":3503,"column":2},"end":{"line":3509,"column":3}},"1186":{"start":{"line":3504,"column":4},"end":{"line":3508,"column":5}},"1187":{"start":{"line":3505,"column":6},"end":{"line":3505,"column":29}},"1188":{"start":{"line":3507,"column":6},"end":{"line":3507,"column":24}},"1189":{"start":{"line":3517,"column":0},"end":{"line":3541,"column":1}},"1190":{"start":{"line":3518,"column":2},"end":{"line":3520,"column":3}},"1191":{"start":{"line":3519,"column":4},"end":{"line":3519,"column":17}},"1192":{"start":{"line":3522,"column":2},"end":{"line":3522,"column":24}},"1193":{"start":{"line":3523,"column":2},"end":{"line":3525,"column":3}},"1194":{"start":{"line":3524,"column":4},"end":{"line":3524,"column":17}},"1195":{"start":{"line":3527,"column":2},"end":{"line":3529,"column":3}},"1196":{"start":{"line":3528,"column":4},"end":{"line":3528,"column":17}},"1197":{"start":{"line":3531,"column":2},"end":{"line":3533,"column":3}},"1198":{"start":{"line":3532,"column":4},"end":{"line":3532,"column":17}},"1199":{"start":{"line":3535,"column":2},"end":{"line":3537,"column":3}},"1200":{"start":{"line":3536,"column":4},"end":{"line":3536,"column":17}},"1201":{"start":{"line":3540,"column":2},"end":{"line":3540,"column":14}},"1202":{"start":{"line":3553,"column":0},"end":{"line":3555,"column":2}},"1203":{"start":{"line":3554,"column":2},"end":{"line":3554,"column":38}},"1204":{"start":{"line":3567,"column":0},"end":{"line":3655,"column":2}},"1205":{"start":{"line":3568,"column":2},"end":{"line":3568,"column":62}},"1206":{"start":{"line":3570,"column":2},"end":{"line":3575,"column":3}},"1207":{"start":{"line":3572,"column":4},"end":{"line":3572,"column":15}},"1208":{"start":{"line":3573,"column":4},"end":{"line":3573,"column":42}},"1209":{"start":{"line":3574,"column":4},"end":{"line":3574,"column":18}},"1210":{"start":{"line":3577,"column":2},"end":{"line":3577,"column":12}},"1211":{"start":{"line":3578,"column":2},"end":{"line":3591,"column":3}},"1212":{"start":{"line":3579,"column":4},"end":{"line":3579,"column":17}},"1213":{"start":{"line":3580,"column":4},"end":{"line":3580,"column":22}},"1214":{"start":{"line":3581,"column":4},"end":{"line":3581,"column":34}},"1215":{"start":{"line":3582,"column":4},"end":{"line":3582,"column":53}},"1216":{"start":{"line":3585,"column":4},"end":{"line":3590,"column":6}},"1217":{"start":{"line":3586,"column":6},"end":{"line":3588,"column":7}},"1218":{"start":{"line":3587,"column":8},"end":{"line":3587,"column":46}},"1219":{"start":{"line":3589,"column":6},"end":{"line":3589,"column":44}},"1220":{"start":{"line":3593,"column":2},"end":{"line":3593,"column":39}},"1221":{"start":{"line":3594,"column":2},"end":{"line":3594,"column":20}},"1222":{"start":{"line":3595,"column":2},"end":{"line":3595,"column":25}},"1223":{"start":{"line":3596,"column":2},"end":{"line":3599,"column":3}},"1224":{"start":{"line":3597,"column":4},"end":{"line":3597,"column":28}},"1225":{"start":{"line":3598,"column":4},"end":{"line":3598,"column":48}},"1226":{"start":{"line":3600,"column":2},"end":{"line":3600,"column":38}},"1227":{"start":{"line":3601,"column":2},"end":{"line":3601,"column":45}},"1228":{"start":{"line":3602,"column":2},"end":{"line":3602,"column":68}},"1229":{"start":{"line":3604,"column":2},"end":{"line":3604,"column":39}},"1230":{"start":{"line":3606,"column":2},"end":{"line":3609,"column":4}},"1231":{"start":{"line":3611,"column":2},"end":{"line":3614,"column":4}},"1232":{"start":{"line":3617,"column":2},"end":{"line":3617,"column":30}},"1233":{"start":{"line":3618,"column":2},"end":{"line":3618,"column":30}},"1234":{"start":{"line":3619,"column":2},"end":{"line":3619,"column":28}},"1235":{"start":{"line":3621,"column":2},"end":{"line":3621,"column":40}},"1236":{"start":{"line":3622,"column":2},"end":{"line":3622,"column":48}},"1237":{"start":{"line":3625,"column":2},"end":{"line":3628,"column":4}},"1238":{"start":{"line":3626,"column":4},"end":{"line":3626,"column":33}},"1239":{"start":{"line":3627,"column":4},"end":{"line":3627,"column":70}},"1240":{"start":{"line":3629,"column":2},"end":{"line":3629,"column":57}},"1241":{"start":{"line":3630,"column":2},"end":{"line":3630,"column":32}},"1242":{"start":{"line":3631,"column":2},"end":{"line":3631,"column":41}},"1243":{"start":{"line":3633,"column":2},"end":{"line":3633,"column":49}},"1244":{"start":{"line":3634,"column":2},"end":{"line":3635,"column":44}},"1245":{"start":{"line":3636,"column":2},"end":{"line":3652,"column":4}},"1246":{"start":{"line":3637,"column":4},"end":{"line":3637,"column":40}},"1247":{"start":{"line":3638,"column":4},"end":{"line":3641,"column":5}},"1248":{"start":{"line":3639,"column":6},"end":{"line":3639,"column":25}},"1249":{"start":{"line":3640,"column":6},"end":{"line":3640,"column":21}},"1250":{"start":{"line":3642,"column":4},"end":{"line":3651,"column":7}},"1251":{"start":{"line":3643,"column":6},"end":{"line":3650,"column":9}},"1252":{"start":{"line":3644,"column":8},"end":{"line":3647,"column":9}},"1253":{"start":{"line":3645,"column":10},"end":{"line":3645,"column":38}},"1254":{"start":{"line":3646,"column":10},"end":{"line":3646,"column":31}},"1255":{"start":{"line":3648,"column":8},"end":{"line":3648,"column":43}},"1256":{"start":{"line":3649,"column":8},"end":{"line":3649,"column":24}},"1257":{"start":{"line":3654,"column":2},"end":{"line":3654,"column":15}},"1258":{"start":{"line":3664,"column":0},"end":{"line":3668,"column":1}},"1259":{"start":{"line":3665,"column":2},"end":{"line":3667,"column":3}},"1260":{"start":{"line":3666,"column":4},"end":{"line":3666,"column":42}},"1261":{"start":{"line":3679,"column":0},"end":{"line":3714,"column":2}},"1262":{"start":{"line":3681,"column":2},"end":{"line":3681,"column":19}},"1263":{"start":{"line":3683,"column":2},"end":{"line":3688,"column":4}},"1264":{"start":{"line":3684,"column":4},"end":{"line":3686,"column":5}},"1265":{"start":{"line":3685,"column":6},"end":{"line":3685,"column":44}},"1266":{"start":{"line":3687,"column":4},"end":{"line":3687,"column":42}},"1267":{"start":{"line":3690,"column":2},"end":{"line":3690,"column":26}},"1268":{"start":{"line":3691,"column":2},"end":{"line":3691,"column":46}},"1269":{"start":{"line":3692,"column":2},"end":{"line":3692,"column":39}},"1270":{"start":{"line":3694,"column":2},"end":{"line":3696,"column":31}},"1271":{"start":{"line":3698,"column":2},"end":{"line":3698,"column":32}},"1272":{"start":{"line":3700,"column":2},"end":{"line":3703,"column":3}},"1273":{"start":{"line":3701,"column":4},"end":{"line":3702,"column":60}},"1274":{"start":{"line":3705,"column":2},"end":{"line":3708,"column":4}},"1275":{"start":{"line":3710,"column":2},"end":{"line":3710,"column":78}},"1276":{"start":{"line":3711,"column":2},"end":{"line":3711,"column":48}},"1277":{"start":{"line":3712,"column":2},"end":{"line":3712,"column":15}},"1278":{"start":{"line":3713,"column":2},"end":{"line":3713,"column":15}},"1279":{"start":{"line":3716,"column":0},"end":{"line":3725,"column":2}},"1280":{"start":{"line":3717,"column":2},"end":{"line":3717,"column":19}},"1281":{"start":{"line":3718,"column":2},"end":{"line":3724,"column":4}},"1282":{"start":{"line":3719,"column":4},"end":{"line":3723,"column":5}},"1283":{"start":{"line":3720,"column":6},"end":{"line":3720,"column":38}},"1284":{"start":{"line":3722,"column":6},"end":{"line":3722,"column":33}},"1285":{"start":{"line":3731,"column":0},"end":{"line":3731,"column":33}}},"branchMap":{"1":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":2},"end":{"line":116,"column":2}},{"start":{"line":116,"column":2},"end":{"line":116,"column":2}}]},"2":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":6},"end":{"line":116,"column":19}},{"start":{"line":116,"column":23},"end":{"line":116,"column":47}}]},"3":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":2},"end":{"line":119,"column":2}},{"start":{"line":119,"column":2},"end":{"line":119,"column":2}}]},"4":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"5":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"6":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":37},"end":{"line":135,"column":40}},{"start":{"line":135,"column":44},"end":{"line":135,"column":46}}]},"7":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":6},"end":{"line":149,"column":6}},{"start":{"line":149,"column":6},"end":{"line":149,"column":6}}]},"8":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":4},"end":{"line":173,"column":4}},{"start":{"line":173,"column":4},"end":{"line":173,"column":4}}]},"9":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":6},"end":{"line":174,"column":6}},{"start":{"line":174,"column":6},"end":{"line":174,"column":6}}]},"10":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":6},"end":{"line":180,"column":6}},{"start":{"line":180,"column":6},"end":{"line":180,"column":6}}]},"11":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":6}},{"start":{"line":185,"column":6},"end":{"line":185,"column":6}}]},"12":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":8},"end":{"line":194,"column":8}},{"start":{"line":194,"column":8},"end":{"line":194,"column":8}}]},"13":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"14":{"line":230,"type":"if","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":4}},{"start":{"line":230,"column":4},"end":{"line":230,"column":4}}]},"15":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":6}},{"start":{"line":231,"column":6},"end":{"line":231,"column":6}}]},"16":{"line":233,"type":"if","locations":[{"start":{"line":233,"column":13},"end":{"line":233,"column":13}},{"start":{"line":233,"column":13},"end":{"line":233,"column":13}}]},"17":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":17},"end":{"line":233,"column":30}},{"start":{"line":233,"column":34},"end":{"line":233,"column":63}}]},"18":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":13},"end":{"line":235,"column":13}},{"start":{"line":235,"column":13},"end":{"line":235,"column":13}}]},"19":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":17},"end":{"line":235,"column":30}},{"start":{"line":235,"column":34},"end":{"line":235,"column":71}}]},"20":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":4},"end":{"line":243,"column":4}},{"start":{"line":243,"column":4},"end":{"line":243,"column":4}}]},"21":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":25}},{"start":{"line":243,"column":29},"end":{"line":243,"column":49}}]},"22":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":6},"end":{"line":247,"column":6}},{"start":{"line":247,"column":6},"end":{"line":247,"column":6}}]},"23":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":6},"end":{"line":254,"column":6}},{"start":{"line":254,"column":6},"end":{"line":254,"column":6}}]},"24":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"25":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":28}},{"start":{"line":262,"column":8},"end":{"line":262,"column":48}},{"start":{"line":263,"column":8},"end":{"line":263,"column":24}}]},"26":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":2},"end":{"line":314,"column":2}},{"start":{"line":314,"column":2},"end":{"line":314,"column":2}}]},"27":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":2},"end":{"line":319,"column":2}},{"start":{"line":319,"column":2},"end":{"line":319,"column":2}}]},"28":{"line":323,"type":"if","locations":[{"start":{"line":323,"column":2},"end":{"line":323,"column":2}},{"start":{"line":323,"column":2},"end":{"line":323,"column":2}}]},"29":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":2},"end":{"line":339,"column":2}},{"start":{"line":339,"column":2},"end":{"line":339,"column":2}}]},"30":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":4}},{"start":{"line":361,"column":9},"end":{"line":361,"column":20}}]},"31":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":2},"end":{"line":362,"column":2}},{"start":{"line":362,"column":2},"end":{"line":362,"column":2}}]},"32":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":2},"end":{"line":366,"column":2}},{"start":{"line":366,"column":2},"end":{"line":366,"column":2}}]},"33":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":2},"end":{"line":369,"column":2}},{"start":{"line":369,"column":2},"end":{"line":369,"column":2}}]},"34":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":2},"end":{"line":372,"column":2}},{"start":{"line":372,"column":2},"end":{"line":372,"column":2}}]},"35":{"line":374,"type":"switch","locations":[{"start":{"line":375,"column":4},"end":{"line":375,"column":16}},{"start":{"line":376,"column":4},"end":{"line":376,"column":18}},{"start":{"line":377,"column":4},"end":{"line":377,"column":16}},{"start":{"line":378,"column":4},"end":{"line":378,"column":17}},{"start":{"line":379,"column":4},"end":{"line":379,"column":20}},{"start":{"line":380,"column":4},"end":{"line":380,"column":17}},{"start":{"line":381,"column":4},"end":{"line":381,"column":20}},{"start":{"line":382,"column":4},"end":{"line":383,"column":12}},{"start":{"line":384,"column":4},"end":{"line":386,"column":13}}]},"36":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"37":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":6},"end":{"line":394,"column":20}},{"start":{"line":394,"column":24},"end":{"line":394,"column":41}},{"start":{"line":394,"column":45},"end":{"line":394,"column":63}}]},"38":{"line":396,"type":"if","locations":[{"start":{"line":396,"column":9},"end":{"line":396,"column":9}},{"start":{"line":396,"column":9},"end":{"line":396,"column":9}}]},"39":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":9},"end":{"line":399,"column":9}},{"start":{"line":399,"column":9},"end":{"line":399,"column":9}}]},"40":{"line":402,"type":"if","locations":[{"start":{"line":402,"column":9},"end":{"line":402,"column":9}},{"start":{"line":402,"column":9},"end":{"line":402,"column":9}}]},"41":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":2},"end":{"line":420,"column":2}},{"start":{"line":420,"column":2},"end":{"line":420,"column":2}}]},"42":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":6},"end":{"line":420,"column":16}},{"start":{"line":420,"column":20},"end":{"line":420,"column":41}}]},"43":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":2},"end":{"line":425,"column":2}},{"start":{"line":425,"column":2},"end":{"line":425,"column":2}}]},"44":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":6},"end":{"line":429,"column":6}},{"start":{"line":429,"column":6},"end":{"line":429,"column":6}}]},"45":{"line":429,"type":"binary-expr","locations":[{"start":{"line":429,"column":10},"end":{"line":429,"column":41}},{"start":{"line":429,"column":45},"end":{"line":429,"column":62}}]},"46":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":2},"end":{"line":446,"column":2}},{"start":{"line":446,"column":2},"end":{"line":446,"column":2}}]},"47":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"48":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":11},"end":{"line":451,"column":11}},{"start":{"line":451,"column":11},"end":{"line":451,"column":11}}]},"49":{"line":459,"type":"cond-expr","locations":[{"start":{"line":460,"column":10},"end":{"line":460,"column":56}},{"start":{"line":461,"column":10},"end":{"line":461,"column":13}}]},"50":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":4},"end":{"line":468,"column":4}},{"start":{"line":468,"column":4},"end":{"line":468,"column":4}}]},"51":{"line":470,"type":"if","locations":[{"start":{"line":470,"column":11},"end":{"line":470,"column":11}},{"start":{"line":470,"column":11},"end":{"line":470,"column":11}}]},"52":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":11},"end":{"line":472,"column":11}},{"start":{"line":472,"column":11},"end":{"line":472,"column":11}}]},"53":{"line":476,"type":"if","locations":[{"start":{"line":476,"column":4},"end":{"line":476,"column":4}},{"start":{"line":476,"column":4},"end":{"line":476,"column":4}}]},"54":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":2},"end":{"line":494,"column":2}},{"start":{"line":494,"column":2},"end":{"line":494,"column":2}}]},"55":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":6},"end":{"line":494,"column":19}},{"start":{"line":494,"column":23},"end":{"line":494,"column":55}}]},"56":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"57":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":4},"end":{"line":512,"column":4}},{"start":{"line":512,"column":4},"end":{"line":512,"column":4}}]},"58":{"line":518,"type":"if","locations":[{"start":{"line":518,"column":4},"end":{"line":518,"column":4}},{"start":{"line":518,"column":4},"end":{"line":518,"column":4}}]},"59":{"line":518,"type":"binary-expr","locations":[{"start":{"line":518,"column":8},"end":{"line":518,"column":12}},{"start":{"line":518,"column":16},"end":{"line":518,"column":33}}]},"60":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":6},"end":{"line":523,"column":6}},{"start":{"line":523,"column":6},"end":{"line":523,"column":6}}]},"61":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":10},"end":{"line":523,"column":32}},{"start":{"line":523,"column":36},"end":{"line":523,"column":69}}]},"62":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":8},"end":{"line":525,"column":8}},{"start":{"line":525,"column":8},"end":{"line":525,"column":8}}]},"63":{"line":525,"type":"binary-expr","locations":[{"start":{"line":525,"column":12},"end":{"line":525,"column":32}},{"start":{"line":525,"column":36},"end":{"line":525,"column":53}},{"start":{"line":525,"column":57},"end":{"line":525,"column":90}}]},"64":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"65":{"line":540,"type":"if","locations":[{"start":{"line":540,"column":4},"end":{"line":540,"column":4}},{"start":{"line":540,"column":4},"end":{"line":540,"column":4}}]},"66":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":11},"end":{"line":542,"column":11}},{"start":{"line":542,"column":11},"end":{"line":542,"column":11}}]},"67":{"line":544,"type":"if","locations":[{"start":{"line":544,"column":11},"end":{"line":544,"column":11}},{"start":{"line":544,"column":11},"end":{"line":544,"column":11}}]},"68":{"line":544,"type":"binary-expr","locations":[{"start":{"line":544,"column":15},"end":{"line":544,"column":26}},{"start":{"line":544,"column":30},"end":{"line":544,"column":44}}]},"69":{"line":547,"type":"if","locations":[{"start":{"line":547,"column":11},"end":{"line":547,"column":11}},{"start":{"line":547,"column":11},"end":{"line":547,"column":11}}]},"70":{"line":547,"type":"binary-expr","locations":[{"start":{"line":547,"column":15},"end":{"line":547,"column":26}},{"start":{"line":547,"column":30},"end":{"line":547,"column":52}}]},"71":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":2},"end":{"line":557,"column":2}},{"start":{"line":557,"column":2},"end":{"line":557,"column":2}}]},"72":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]},"73":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":2},"end":{"line":582,"column":2}},{"start":{"line":582,"column":2},"end":{"line":582,"column":2}}]},"74":{"line":582,"type":"binary-expr","locations":[{"start":{"line":582,"column":6},"end":{"line":582,"column":10}},{"start":{"line":582,"column":14},"end":{"line":582,"column":30}}]},"75":{"line":586,"type":"if","locations":[{"start":{"line":586,"column":4},"end":{"line":586,"column":4}},{"start":{"line":586,"column":4},"end":{"line":586,"column":4}}]},"76":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":2},"end":{"line":591,"column":2}},{"start":{"line":591,"column":2},"end":{"line":591,"column":2}}]},"77":{"line":591,"type":"binary-expr","locations":[{"start":{"line":591,"column":8},"end":{"line":591,"column":11}},{"start":{"line":591,"column":15},"end":{"line":591,"column":20}},{"start":{"line":591,"column":24},"end":{"line":591,"column":45}}]},"78":{"line":602,"type":"binary-expr","locations":[{"start":{"line":602,"column":14},"end":{"line":602,"column":31}},{"start":{"line":603,"column":6},"end":{"line":603,"column":25}},{"start":{"line":603,"column":29},"end":{"line":603,"column":86}},{"start":{"line":604,"column":6},"end":{"line":604,"column":25}},{"start":{"line":604,"column":29},"end":{"line":604,"column":53}},{"start":{"line":605,"column":6},"end":{"line":605,"column":24}},{"start":{"line":606,"column":7},"end":{"line":606,"column":35}},{"start":{"line":607,"column":6},"end":{"line":607,"column":43}}]},"79":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":2},"end":{"line":609,"column":2}},{"start":{"line":609,"column":2},"end":{"line":609,"column":2}}]},"80":{"line":611,"type":"if","locations":[{"start":{"line":611,"column":4},"end":{"line":611,"column":4}},{"start":{"line":611,"column":4},"end":{"line":611,"column":4}}]},"81":{"line":611,"type":"binary-expr","locations":[{"start":{"line":611,"column":8},"end":{"line":611,"column":41}},{"start":{"line":611,"column":45},"end":{"line":611,"column":57}},{"start":{"line":611,"column":61},"end":{"line":611,"column":73}}]},"82":{"line":628,"type":"if","locations":[{"start":{"line":628,"column":2},"end":{"line":628,"column":2}},{"start":{"line":628,"column":2},"end":{"line":628,"column":2}}]},"83":{"line":630,"type":"if","locations":[{"start":{"line":630,"column":4},"end":{"line":630,"column":4}},{"start":{"line":630,"column":4},"end":{"line":630,"column":4}}]},"84":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":2},"end":{"line":640,"column":2}},{"start":{"line":640,"column":2},"end":{"line":640,"column":2}}]},"85":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":2},"end":{"line":645,"column":2}},{"start":{"line":645,"column":2},"end":{"line":645,"column":2}}]},"86":{"line":649,"type":"if","locations":[{"start":{"line":649,"column":2},"end":{"line":649,"column":2}},{"start":{"line":649,"column":2},"end":{"line":649,"column":2}}]},"87":{"line":650,"type":"if","locations":[{"start":{"line":650,"column":4},"end":{"line":650,"column":4}},{"start":{"line":650,"column":4},"end":{"line":650,"column":4}}]},"88":{"line":650,"type":"binary-expr","locations":[{"start":{"line":650,"column":8},"end":{"line":650,"column":19}},{"start":{"line":650,"column":23},"end":{"line":650,"column":61}}]},"89":{"line":651,"type":"binary-expr","locations":[{"start":{"line":651,"column":6},"end":{"line":651,"column":16}},{"start":{"line":651,"column":21},"end":{"line":651,"column":36}}]},"90":{"line":685,"type":"binary-expr","locations":[{"start":{"line":685,"column":2},"end":{"line":685,"column":7}},{"start":{"line":685,"column":12},"end":{"line":685,"column":22}}]},"91":{"line":690,"type":"if","locations":[{"start":{"line":690,"column":2},"end":{"line":690,"column":2}},{"start":{"line":690,"column":2},"end":{"line":690,"column":2}}]},"92":{"line":694,"type":"if","locations":[{"start":{"line":694,"column":2},"end":{"line":694,"column":2}},{"start":{"line":694,"column":2},"end":{"line":694,"column":2}}]},"93":{"line":703,"type":"if","locations":[{"start":{"line":703,"column":2},"end":{"line":703,"column":2}},{"start":{"line":703,"column":2},"end":{"line":703,"column":2}}]},"94":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":2},"end":{"line":737,"column":2}},{"start":{"line":737,"column":2},"end":{"line":737,"column":2}}]},"95":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":2},"end":{"line":742,"column":2}},{"start":{"line":742,"column":2},"end":{"line":742,"column":2}}]},"96":{"line":746,"type":"if","locations":[{"start":{"line":746,"column":2},"end":{"line":746,"column":2}},{"start":{"line":746,"column":2},"end":{"line":746,"column":2}}]},"97":{"line":747,"type":"if","locations":[{"start":{"line":747,"column":4},"end":{"line":747,"column":4}},{"start":{"line":747,"column":4},"end":{"line":747,"column":4}}]},"98":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"99":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":4},"end":{"line":764,"column":4}},{"start":{"line":764,"column":4},"end":{"line":764,"column":4}}]},"100":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":6},"end":{"line":766,"column":8}},{"start":{"line":766,"column":12},"end":{"line":766,"column":21}}]},"101":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":4},"end":{"line":770,"column":4}},{"start":{"line":770,"column":4},"end":{"line":770,"column":4}}]},"102":{"line":770,"type":"binary-expr","locations":[{"start":{"line":770,"column":8},"end":{"line":770,"column":21}},{"start":{"line":770,"column":25},"end":{"line":770,"column":50}}]},"103":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":6},"end":{"line":775,"column":6}},{"start":{"line":775,"column":6},"end":{"line":775,"column":6}}]},"104":{"line":779,"type":"binary-expr","locations":[{"start":{"line":779,"column":8},"end":{"line":779,"column":10}},{"start":{"line":779,"column":14},"end":{"line":779,"column":29}}]},"105":{"line":783,"type":"binary-expr","locations":[{"start":{"line":783,"column":6},"end":{"line":783,"column":8}},{"start":{"line":783,"column":12},"end":{"line":783,"column":19}}]},"106":{"line":832,"type":"if","locations":[{"start":{"line":832,"column":2},"end":{"line":832,"column":2}},{"start":{"line":832,"column":2},"end":{"line":832,"column":2}}]},"107":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":2},"end":{"line":837,"column":2}},{"start":{"line":837,"column":2},"end":{"line":837,"column":2}}]},"108":{"line":876,"type":"if","locations":[{"start":{"line":876,"column":2},"end":{"line":876,"column":2}},{"start":{"line":876,"column":2},"end":{"line":876,"column":2}}]},"109":{"line":876,"type":"binary-expr","locations":[{"start":{"line":876,"column":7},"end":{"line":876,"column":36}},{"start":{"line":877,"column":7},"end":{"line":877,"column":45}},{"start":{"line":877,"column":49},"end":{"line":877,"column":73}}]},"110":{"line":915,"type":"if","locations":[{"start":{"line":915,"column":2},"end":{"line":915,"column":2}},{"start":{"line":915,"column":2},"end":{"line":915,"column":2}}]},"111":{"line":920,"type":"if","locations":[{"start":{"line":920,"column":2},"end":{"line":920,"column":2}},{"start":{"line":920,"column":2},"end":{"line":920,"column":2}}]},"112":{"line":920,"type":"binary-expr","locations":[{"start":{"line":920,"column":6},"end":{"line":920,"column":13}},{"start":{"line":920,"column":17},"end":{"line":920,"column":36}}]},"113":{"line":925,"type":"if","locations":[{"start":{"line":925,"column":2},"end":{"line":925,"column":2}},{"start":{"line":925,"column":2},"end":{"line":925,"column":2}}]},"114":{"line":932,"type":"binary-expr","locations":[{"start":{"line":932,"column":26},"end":{"line":932,"column":33}},{"start":{"line":932,"column":37},"end":{"line":932,"column":39}}]},"115":{"line":933,"type":"if","locations":[{"start":{"line":933,"column":6},"end":{"line":933,"column":6}},{"start":{"line":933,"column":6},"end":{"line":933,"column":6}}]},"116":{"line":934,"type":"binary-expr","locations":[{"start":{"line":934,"column":8},"end":{"line":934,"column":16}},{"start":{"line":934,"column":20},"end":{"line":934,"column":35}}]},"117":{"line":937,"type":"binary-expr","locations":[{"start":{"line":937,"column":6},"end":{"line":937,"column":14}},{"start":{"line":937,"column":18},"end":{"line":937,"column":28}}]},"118":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":2},"end":{"line":945,"column":2}},{"start":{"line":945,"column":2},"end":{"line":945,"column":2}}]},"119":{"line":947,"type":"binary-expr","locations":[{"start":{"line":947,"column":6},"end":{"line":947,"column":14}},{"start":{"line":947,"column":18},"end":{"line":947,"column":28}}]},"120":{"line":955,"type":"if","locations":[{"start":{"line":955,"column":4},"end":{"line":955,"column":4}},{"start":{"line":955,"column":4},"end":{"line":955,"column":4}}]},"121":{"line":955,"type":"binary-expr","locations":[{"start":{"line":955,"column":8},"end":{"line":955,"column":11}},{"start":{"line":955,"column":15},"end":{"line":955,"column":51}}]},"122":{"line":959,"type":"binary-expr","locations":[{"start":{"line":959,"column":4},"end":{"line":959,"column":12}},{"start":{"line":959,"column":16},"end":{"line":959,"column":29}}]},"123":{"line":971,"type":"if","locations":[{"start":{"line":971,"column":4},"end":{"line":971,"column":4}},{"start":{"line":971,"column":4},"end":{"line":971,"column":4}}]},"124":{"line":981,"type":"if","locations":[{"start":{"line":981,"column":6},"end":{"line":981,"column":6}},{"start":{"line":981,"column":6},"end":{"line":981,"column":6}}]},"125":{"line":990,"type":"if","locations":[{"start":{"line":990,"column":4},"end":{"line":990,"column":4}},{"start":{"line":990,"column":4},"end":{"line":990,"column":4}}]},"126":{"line":990,"type":"binary-expr","locations":[{"start":{"line":990,"column":8},"end":{"line":990,"column":26}},{"start":{"line":990,"column":30},"end":{"line":990,"column":58}}]},"127":{"line":999,"type":"if","locations":[{"start":{"line":999,"column":2},"end":{"line":999,"column":2}},{"start":{"line":999,"column":2},"end":{"line":999,"column":2}}]},"128":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":4},"end":{"line":1000,"column":4}},{"start":{"line":1000,"column":4},"end":{"line":1000,"column":4}}]},"129":{"line":1004,"type":"if","locations":[{"start":{"line":1004,"column":4},"end":{"line":1004,"column":4}},{"start":{"line":1004,"column":4},"end":{"line":1004,"column":4}}]},"130":{"line":1083,"type":"if","locations":[{"start":{"line":1083,"column":2},"end":{"line":1083,"column":2}},{"start":{"line":1083,"column":2},"end":{"line":1083,"column":2}}]},"131":{"line":1091,"type":"if","locations":[{"start":{"line":1091,"column":2},"end":{"line":1091,"column":2}},{"start":{"line":1091,"column":2},"end":{"line":1091,"column":2}}]},"132":{"line":1118,"type":"if","locations":[{"start":{"line":1118,"column":2},"end":{"line":1118,"column":2}},{"start":{"line":1118,"column":2},"end":{"line":1118,"column":2}}]},"133":{"line":1126,"type":"if","locations":[{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}},{"start":{"line":1126,"column":2},"end":{"line":1126,"column":2}}]},"134":{"line":1153,"type":"if","locations":[{"start":{"line":1153,"column":2},"end":{"line":1153,"column":2}},{"start":{"line":1153,"column":2},"end":{"line":1153,"column":2}}]},"135":{"line":1161,"type":"if","locations":[{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}},{"start":{"line":1161,"column":2},"end":{"line":1161,"column":2}}]},"136":{"line":1210,"type":"if","locations":[{"start":{"line":1210,"column":2},"end":{"line":1210,"column":2}},{"start":{"line":1210,"column":2},"end":{"line":1210,"column":2}}]},"137":{"line":1215,"type":"if","locations":[{"start":{"line":1215,"column":9},"end":{"line":1215,"column":9}},{"start":{"line":1215,"column":9},"end":{"line":1215,"column":9}}]},"138":{"line":1219,"type":"if","locations":[{"start":{"line":1219,"column":9},"end":{"line":1219,"column":9}},{"start":{"line":1219,"column":9},"end":{"line":1219,"column":9}}]},"139":{"line":1227,"type":"if","locations":[{"start":{"line":1227,"column":2},"end":{"line":1227,"column":2}},{"start":{"line":1227,"column":2},"end":{"line":1227,"column":2}}]},"140":{"line":1227,"type":"binary-expr","locations":[{"start":{"line":1227,"column":6},"end":{"line":1227,"column":38}},{"start":{"line":1227,"column":42},"end":{"line":1227,"column":66}}]},"141":{"line":1231,"type":"if","locations":[{"start":{"line":1231,"column":2},"end":{"line":1231,"column":2}},{"start":{"line":1231,"column":2},"end":{"line":1231,"column":2}}]},"142":{"line":1286,"type":"if","locations":[{"start":{"line":1286,"column":2},"end":{"line":1286,"column":2}},{"start":{"line":1286,"column":2},"end":{"line":1286,"column":2}}]},"143":{"line":1290,"type":"if","locations":[{"start":{"line":1290,"column":2},"end":{"line":1290,"column":2}},{"start":{"line":1290,"column":2},"end":{"line":1290,"column":2}}]},"144":{"line":1340,"type":"if","locations":[{"start":{"line":1340,"column":2},"end":{"line":1340,"column":2}},{"start":{"line":1340,"column":2},"end":{"line":1340,"column":2}}]},"145":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":9},"end":{"line":1343,"column":9}},{"start":{"line":1343,"column":9},"end":{"line":1343,"column":9}}]},"146":{"line":1347,"type":"if","locations":[{"start":{"line":1347,"column":9},"end":{"line":1347,"column":9}},{"start":{"line":1347,"column":9},"end":{"line":1347,"column":9}}]},"147":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}},{"start":{"line":1358,"column":2},"end":{"line":1358,"column":2}}]},"148":{"line":1358,"type":"binary-expr","locations":[{"start":{"line":1358,"column":6},"end":{"line":1358,"column":38}},{"start":{"line":1358,"column":42},"end":{"line":1358,"column":66}}]},"149":{"line":1362,"type":"if","locations":[{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}},{"start":{"line":1362,"column":2},"end":{"line":1362,"column":2}}]},"150":{"line":1386,"type":"if","locations":[{"start":{"line":1386,"column":2},"end":{"line":1386,"column":2}},{"start":{"line":1386,"column":2},"end":{"line":1386,"column":2}}]},"151":{"line":1394,"type":"if","locations":[{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}},{"start":{"line":1394,"column":2},"end":{"line":1394,"column":2}}]},"152":{"line":1429,"type":"if","locations":[{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}},{"start":{"line":1429,"column":2},"end":{"line":1429,"column":2}}]},"153":{"line":1433,"type":"if","locations":[{"start":{"line":1433,"column":2},"end":{"line":1433,"column":2}},{"start":{"line":1433,"column":2},"end":{"line":1433,"column":2}}]},"154":{"line":1562,"type":"if","locations":[{"start":{"line":1562,"column":2},"end":{"line":1562,"column":2}},{"start":{"line":1562,"column":2},"end":{"line":1562,"column":2}}]},"155":{"line":1565,"type":"if","locations":[{"start":{"line":1565,"column":9},"end":{"line":1565,"column":9}},{"start":{"line":1565,"column":9},"end":{"line":1565,"column":9}}]},"156":{"line":1566,"type":"if","locations":[{"start":{"line":1566,"column":4},"end":{"line":1566,"column":4}},{"start":{"line":1566,"column":4},"end":{"line":1566,"column":4}}]},"157":{"line":1578,"type":"if","locations":[{"start":{"line":1578,"column":2},"end":{"line":1578,"column":2}},{"start":{"line":1578,"column":2},"end":{"line":1578,"column":2}}]},"158":{"line":1583,"type":"if","locations":[{"start":{"line":1583,"column":2},"end":{"line":1583,"column":2}},{"start":{"line":1583,"column":2},"end":{"line":1583,"column":2}}]},"159":{"line":1583,"type":"binary-expr","locations":[{"start":{"line":1583,"column":6},"end":{"line":1583,"column":13}},{"start":{"line":1583,"column":17},"end":{"line":1583,"column":31}}]},"160":{"line":1588,"type":"if","locations":[{"start":{"line":1588,"column":2},"end":{"line":1588,"column":2}},{"start":{"line":1588,"column":2},"end":{"line":1588,"column":2}}]},"161":{"line":1588,"type":"binary-expr","locations":[{"start":{"line":1588,"column":6},"end":{"line":1588,"column":36}},{"start":{"line":1588,"column":40},"end":{"line":1588,"column":47}},{"start":{"line":1588,"column":51},"end":{"line":1588,"column":65}}]},"162":{"line":1589,"type":"if","locations":[{"start":{"line":1589,"column":4},"end":{"line":1589,"column":4}},{"start":{"line":1589,"column":4},"end":{"line":1589,"column":4}}]},"163":{"line":1676,"type":"if","locations":[{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}},{"start":{"line":1676,"column":2},"end":{"line":1676,"column":2}}]},"164":{"line":1679,"type":"if","locations":[{"start":{"line":1679,"column":2},"end":{"line":1679,"column":2}},{"start":{"line":1679,"column":2},"end":{"line":1679,"column":2}}]},"165":{"line":1680,"type":"if","locations":[{"start":{"line":1680,"column":4},"end":{"line":1680,"column":4}},{"start":{"line":1680,"column":4},"end":{"line":1680,"column":4}}]},"166":{"line":1691,"type":"if","locations":[{"start":{"line":1691,"column":2},"end":{"line":1691,"column":2}},{"start":{"line":1691,"column":2},"end":{"line":1691,"column":2}}]},"167":{"line":1749,"type":"if","locations":[{"start":{"line":1749,"column":2},"end":{"line":1749,"column":2}},{"start":{"line":1749,"column":2},"end":{"line":1749,"column":2}}]},"168":{"line":1749,"type":"binary-expr","locations":[{"start":{"line":1749,"column":6},"end":{"line":1749,"column":28}},{"start":{"line":1749,"column":32},"end":{"line":1749,"column":64}}]},"169":{"line":1757,"type":"if","locations":[{"start":{"line":1757,"column":2},"end":{"line":1757,"column":2}},{"start":{"line":1757,"column":2},"end":{"line":1757,"column":2}}]},"170":{"line":1761,"type":"if","locations":[{"start":{"line":1761,"column":2},"end":{"line":1761,"column":2}},{"start":{"line":1761,"column":2},"end":{"line":1761,"column":2}}]},"171":{"line":1766,"type":"if","locations":[{"start":{"line":1766,"column":2},"end":{"line":1766,"column":2}},{"start":{"line":1766,"column":2},"end":{"line":1766,"column":2}}]},"172":{"line":1808,"type":"if","locations":[{"start":{"line":1808,"column":2},"end":{"line":1808,"column":2}},{"start":{"line":1808,"column":2},"end":{"line":1808,"column":2}}]},"173":{"line":1808,"type":"binary-expr","locations":[{"start":{"line":1808,"column":6},"end":{"line":1808,"column":28}},{"start":{"line":1808,"column":32},"end":{"line":1808,"column":56}}]},"174":{"line":1815,"type":"if","locations":[{"start":{"line":1815,"column":2},"end":{"line":1815,"column":2}},{"start":{"line":1815,"column":2},"end":{"line":1815,"column":2}}]},"175":{"line":1864,"type":"if","locations":[{"start":{"line":1864,"column":2},"end":{"line":1864,"column":2}},{"start":{"line":1864,"column":2},"end":{"line":1864,"column":2}}]},"176":{"line":1870,"type":"if","locations":[{"start":{"line":1870,"column":4},"end":{"line":1870,"column":4}},{"start":{"line":1870,"column":4},"end":{"line":1870,"column":4}}]},"177":{"line":1870,"type":"binary-expr","locations":[{"start":{"line":1870,"column":8},"end":{"line":1870,"column":34}},{"start":{"line":1870,"column":38},"end":{"line":1870,"column":43}}]},"178":{"line":1880,"type":"if","locations":[{"start":{"line":1880,"column":2},"end":{"line":1880,"column":2}},{"start":{"line":1880,"column":2},"end":{"line":1880,"column":2}}]},"179":{"line":1885,"type":"if","locations":[{"start":{"line":1885,"column":4},"end":{"line":1885,"column":4}},{"start":{"line":1885,"column":4},"end":{"line":1885,"column":4}}]},"180":{"line":1887,"type":"binary-expr","locations":[{"start":{"line":1887,"column":8},"end":{"line":1887,"column":10}},{"start":{"line":1887,"column":14},"end":{"line":1887,"column":22}}]},"181":{"line":1896,"type":"cond-expr","locations":[{"start":{"line":1897,"column":10},"end":{"line":1897,"column":53}},{"start":{"line":1898,"column":10},"end":{"line":1898,"column":15}}]},"182":{"line":1896,"type":"binary-expr","locations":[{"start":{"line":1896,"column":20},"end":{"line":1896,"column":40}},{"start":{"line":1896,"column":44},"end":{"line":1896,"column":65}}]},"183":{"line":1899,"type":"cond-expr","locations":[{"start":{"line":1899,"column":44},"end":{"line":1899,"column":47}},{"start":{"line":1899,"column":50},"end":{"line":1899,"column":64}}]},"184":{"line":1901,"type":"if","locations":[{"start":{"line":1901,"column":10},"end":{"line":1901,"column":10}},{"start":{"line":1901,"column":10},"end":{"line":1901,"column":10}}]},"185":{"line":1909,"type":"if","locations":[{"start":{"line":1909,"column":8},"end":{"line":1909,"column":8}},{"start":{"line":1909,"column":8},"end":{"line":1909,"column":8}}]},"186":{"line":1918,"type":"if","locations":[{"start":{"line":1918,"column":6},"end":{"line":1918,"column":6}},{"start":{"line":1918,"column":6},"end":{"line":1918,"column":6}}]},"187":{"line":1919,"type":"if","locations":[{"start":{"line":1919,"column":8},"end":{"line":1919,"column":8}},{"start":{"line":1919,"column":8},"end":{"line":1919,"column":8}}]},"188":{"line":1927,"type":"if","locations":[{"start":{"line":1927,"column":6},"end":{"line":1927,"column":6}},{"start":{"line":1927,"column":6},"end":{"line":1927,"column":6}}]},"189":{"line":1929,"type":"binary-expr","locations":[{"start":{"line":1929,"column":8},"end":{"line":1929,"column":10}},{"start":{"line":1929,"column":14},"end":{"line":1929,"column":45}}]},"190":{"line":1932,"type":"if","locations":[{"start":{"line":1932,"column":8},"end":{"line":1932,"column":8}},{"start":{"line":1932,"column":8},"end":{"line":1932,"column":8}}]},"191":{"line":1965,"type":"if","locations":[{"start":{"line":1965,"column":2},"end":{"line":1965,"column":2}},{"start":{"line":1965,"column":2},"end":{"line":1965,"column":2}}]},"192":{"line":1969,"type":"if","locations":[{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}},{"start":{"line":1969,"column":2},"end":{"line":1969,"column":2}}]},"193":{"line":1973,"type":"if","locations":[{"start":{"line":1973,"column":2},"end":{"line":1973,"column":2}},{"start":{"line":1973,"column":2},"end":{"line":1973,"column":2}}]},"194":{"line":1982,"type":"if","locations":[{"start":{"line":1982,"column":8},"end":{"line":1982,"column":8}},{"start":{"line":1982,"column":8},"end":{"line":1982,"column":8}}]},"195":{"line":1986,"type":"if","locations":[{"start":{"line":1986,"column":10},"end":{"line":1986,"column":10}},{"start":{"line":1986,"column":10},"end":{"line":1986,"column":10}}]},"196":{"line":1986,"type":"binary-expr","locations":[{"start":{"line":1986,"column":14},"end":{"line":1986,"column":29}},{"start":{"line":1986,"column":33},"end":{"line":1986,"column":60}},{"start":{"line":1986,"column":64},"end":{"line":1986,"column":92}}]},"197":{"line":1997,"type":"if","locations":[{"start":{"line":1997,"column":4},"end":{"line":1997,"column":4}},{"start":{"line":1997,"column":4},"end":{"line":1997,"column":4}}]},"198":{"line":1998,"type":"binary-expr","locations":[{"start":{"line":1998,"column":6},"end":{"line":1998,"column":14}},{"start":{"line":1998,"column":18},"end":{"line":1998,"column":33}}]},"199":{"line":2006,"type":"if","locations":[{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}},{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}}]},"200":{"line":2007,"type":"binary-expr","locations":[{"start":{"line":2007,"column":6},"end":{"line":2007,"column":14}},{"start":{"line":2007,"column":18},"end":{"line":2007,"column":36}}]},"201":{"line":2011,"type":"if","locations":[{"start":{"line":2011,"column":6},"end":{"line":2011,"column":6}},{"start":{"line":2011,"column":6},"end":{"line":2011,"column":6}}]},"202":{"line":2014,"type":"if","locations":[{"start":{"line":2014,"column":6},"end":{"line":2014,"column":6}},{"start":{"line":2014,"column":6},"end":{"line":2014,"column":6}}]},"203":{"line":2020,"type":"if","locations":[{"start":{"line":2020,"column":6},"end":{"line":2020,"column":6}},{"start":{"line":2020,"column":6},"end":{"line":2020,"column":6}}]},"204":{"line":2021,"type":"binary-expr","locations":[{"start":{"line":2021,"column":8},"end":{"line":2021,"column":16}},{"start":{"line":2021,"column":20},"end":{"line":2021,"column":35}}]},"205":{"line":2029,"type":"binary-expr","locations":[{"start":{"line":2029,"column":6},"end":{"line":2029,"column":14}},{"start":{"line":2029,"column":18},"end":{"line":2029,"column":47}}]},"206":{"line":2080,"type":"if","locations":[{"start":{"line":2080,"column":2},"end":{"line":2080,"column":2}},{"start":{"line":2080,"column":2},"end":{"line":2080,"column":2}}]},"207":{"line":2084,"type":"if","locations":[{"start":{"line":2084,"column":2},"end":{"line":2084,"column":2}},{"start":{"line":2084,"column":2},"end":{"line":2084,"column":2}}]},"208":{"line":2087,"type":"binary-expr","locations":[{"start":{"line":2087,"column":12},"end":{"line":2087,"column":19}},{"start":{"line":2087,"column":23},"end":{"line":2087,"column":25}}]},"209":{"line":2090,"type":"if","locations":[{"start":{"line":2090,"column":4},"end":{"line":2090,"column":4}},{"start":{"line":2090,"column":4},"end":{"line":2090,"column":4}}]},"210":{"line":2094,"type":"if","locations":[{"start":{"line":2094,"column":10},"end":{"line":2094,"column":10}},{"start":{"line":2094,"column":10},"end":{"line":2094,"column":10}}]},"211":{"line":2100,"type":"if","locations":[{"start":{"line":2100,"column":11},"end":{"line":2100,"column":11}},{"start":{"line":2100,"column":11},"end":{"line":2100,"column":11}}]},"212":{"line":2113,"type":"if","locations":[{"start":{"line":2113,"column":11},"end":{"line":2113,"column":11}},{"start":{"line":2113,"column":11},"end":{"line":2113,"column":11}}]},"213":{"line":2128,"type":"if","locations":[{"start":{"line":2128,"column":11},"end":{"line":2128,"column":11}},{"start":{"line":2128,"column":11},"end":{"line":2128,"column":11}}]},"214":{"line":2141,"type":"if","locations":[{"start":{"line":2141,"column":10},"end":{"line":2141,"column":10}},{"start":{"line":2141,"column":10},"end":{"line":2141,"column":10}}]},"215":{"line":2147,"type":"if","locations":[{"start":{"line":2147,"column":11},"end":{"line":2147,"column":11}},{"start":{"line":2147,"column":11},"end":{"line":2147,"column":11}}]},"216":{"line":2158,"type":"if","locations":[{"start":{"line":2158,"column":11},"end":{"line":2158,"column":11}},{"start":{"line":2158,"column":11},"end":{"line":2158,"column":11}}]},"217":{"line":2178,"type":"if","locations":[{"start":{"line":2178,"column":6},"end":{"line":2178,"column":6}},{"start":{"line":2178,"column":6},"end":{"line":2178,"column":6}}]},"218":{"line":2179,"type":"binary-expr","locations":[{"start":{"line":2179,"column":8},"end":{"line":2179,"column":16}},{"start":{"line":2179,"column":20},"end":{"line":2179,"column":35}}]},"219":{"line":2184,"type":"if","locations":[{"start":{"line":2184,"column":8},"end":{"line":2184,"column":8}},{"start":{"line":2184,"column":8},"end":{"line":2184,"column":8}}]},"220":{"line":2185,"type":"binary-expr","locations":[{"start":{"line":2185,"column":10},"end":{"line":2185,"column":18}},{"start":{"line":2185,"column":22},"end":{"line":2185,"column":37}}]},"221":{"line":2189,"type":"binary-expr","locations":[{"start":{"line":2189,"column":8},"end":{"line":2189,"column":16}},{"start":{"line":2189,"column":20},"end":{"line":2189,"column":39}}]},"222":{"line":2366,"type":"if","locations":[{"start":{"line":2366,"column":2},"end":{"line":2366,"column":2}},{"start":{"line":2366,"column":2},"end":{"line":2366,"column":2}}]},"223":{"line":2371,"type":"if","locations":[{"start":{"line":2371,"column":2},"end":{"line":2371,"column":2}},{"start":{"line":2371,"column":2},"end":{"line":2371,"column":2}}]},"224":{"line":2376,"type":"cond-expr","locations":[{"start":{"line":2376,"column":44},"end":{"line":2376,"column":51}},{"start":{"line":2376,"column":54},"end":{"line":2376,"column":74}}]},"225":{"line":2378,"type":"if","locations":[{"start":{"line":2378,"column":2},"end":{"line":2378,"column":2}},{"start":{"line":2378,"column":2},"end":{"line":2378,"column":2}}]},"226":{"line":2378,"type":"binary-expr","locations":[{"start":{"line":2378,"column":6},"end":{"line":2378,"column":37}},{"start":{"line":2378,"column":41},"end":{"line":2378,"column":48}},{"start":{"line":2378,"column":52},"end":{"line":2378,"column":66}}]},"227":{"line":2379,"type":"if","locations":[{"start":{"line":2379,"column":4},"end":{"line":2379,"column":4}},{"start":{"line":2379,"column":4},"end":{"line":2379,"column":4}}]},"228":{"line":2382,"type":"if","locations":[{"start":{"line":2382,"column":6},"end":{"line":2382,"column":6}},{"start":{"line":2382,"column":6},"end":{"line":2382,"column":6}}]},"229":{"line":2465,"type":"if","locations":[{"start":{"line":2465,"column":2},"end":{"line":2465,"column":2}},{"start":{"line":2465,"column":2},"end":{"line":2465,"column":2}}]},"230":{"line":2471,"type":"if","locations":[{"start":{"line":2471,"column":4},"end":{"line":2471,"column":4}},{"start":{"line":2471,"column":4},"end":{"line":2471,"column":4}}]},"231":{"line":2476,"type":"if","locations":[{"start":{"line":2476,"column":4},"end":{"line":2476,"column":4}},{"start":{"line":2476,"column":4},"end":{"line":2476,"column":4}}]},"232":{"line":2477,"type":"if","locations":[{"start":{"line":2477,"column":4},"end":{"line":2477,"column":4}},{"start":{"line":2477,"column":4},"end":{"line":2477,"column":4}}]},"233":{"line":2482,"type":"if","locations":[{"start":{"line":2482,"column":4},"end":{"line":2482,"column":4}},{"start":{"line":2482,"column":4},"end":{"line":2482,"column":4}}]},"234":{"line":2490,"type":"if","locations":[{"start":{"line":2490,"column":6},"end":{"line":2490,"column":6}},{"start":{"line":2490,"column":6},"end":{"line":2490,"column":6}}]},"235":{"line":2491,"type":"binary-expr","locations":[{"start":{"line":2491,"column":8},"end":{"line":2491,"column":16}},{"start":{"line":2491,"column":20},"end":{"line":2491,"column":33}}]},"236":{"line":2496,"type":"if","locations":[{"start":{"line":2496,"column":6},"end":{"line":2496,"column":6}},{"start":{"line":2496,"column":6},"end":{"line":2496,"column":6}}]},"237":{"line":2496,"type":"binary-expr","locations":[{"start":{"line":2496,"column":10},"end":{"line":2496,"column":21}},{"start":{"line":2496,"column":25},"end":{"line":2496,"column":38}}]},"238":{"line":2507,"type":"binary-expr","locations":[{"start":{"line":2507,"column":8},"end":{"line":2507,"column":16}},{"start":{"line":2507,"column":20},"end":{"line":2507,"column":48}}]},"239":{"line":2508,"type":"cond-expr","locations":[{"start":{"line":2508,"column":33},"end":{"line":2511,"column":10}},{"start":{"line":2511,"column":13},"end":{"line":2511,"column":34}}]},"240":{"line":2514,"type":"binary-expr","locations":[{"start":{"line":2514,"column":6},"end":{"line":2514,"column":14}},{"start":{"line":2514,"column":18},"end":{"line":2514,"column":44}}]},"241":{"line":2515,"type":"if","locations":[{"start":{"line":2515,"column":6},"end":{"line":2515,"column":6}},{"start":{"line":2515,"column":6},"end":{"line":2515,"column":6}}]},"242":{"line":2553,"type":"if","locations":[{"start":{"line":2553,"column":2},"end":{"line":2553,"column":2}},{"start":{"line":2553,"column":2},"end":{"line":2553,"column":2}}]},"243":{"line":2558,"type":"if","locations":[{"start":{"line":2558,"column":2},"end":{"line":2558,"column":2}},{"start":{"line":2558,"column":2},"end":{"line":2558,"column":2}}]},"244":{"line":2564,"type":"if","locations":[{"start":{"line":2564,"column":2},"end":{"line":2564,"column":2}},{"start":{"line":2564,"column":2},"end":{"line":2564,"column":2}}]},"245":{"line":2568,"type":"binary-expr","locations":[{"start":{"line":2568,"column":6},"end":{"line":2568,"column":14}},{"start":{"line":2568,"column":18},"end":{"line":2568,"column":33}}]},"246":{"line":2576,"type":"if","locations":[{"start":{"line":2576,"column":6},"end":{"line":2576,"column":6}},{"start":{"line":2576,"column":6},"end":{"line":2576,"column":6}}]},"247":{"line":2578,"type":"binary-expr","locations":[{"start":{"line":2578,"column":8},"end":{"line":2578,"column":16}},{"start":{"line":2578,"column":20},"end":{"line":2578,"column":33}}]},"248":{"line":2581,"type":"if","locations":[{"start":{"line":2581,"column":6},"end":{"line":2581,"column":6}},{"start":{"line":2581,"column":6},"end":{"line":2581,"column":6}}]},"249":{"line":2583,"type":"binary-expr","locations":[{"start":{"line":2583,"column":8},"end":{"line":2583,"column":16}},{"start":{"line":2583,"column":20},"end":{"line":2583,"column":58}}]},"250":{"line":2589,"type":"if","locations":[{"start":{"line":2589,"column":6},"end":{"line":2589,"column":6}},{"start":{"line":2589,"column":6},"end":{"line":2589,"column":6}}]},"251":{"line":2591,"type":"binary-expr","locations":[{"start":{"line":2591,"column":8},"end":{"line":2591,"column":16}},{"start":{"line":2591,"column":20},"end":{"line":2591,"column":58}}]},"252":{"line":2598,"type":"if","locations":[{"start":{"line":2598,"column":8},"end":{"line":2598,"column":8}},{"start":{"line":2598,"column":8},"end":{"line":2598,"column":8}}]},"253":{"line":2598,"type":"binary-expr","locations":[{"start":{"line":2598,"column":12},"end":{"line":2598,"column":15}},{"start":{"line":2598,"column":19},"end":{"line":2598,"column":27}}]},"254":{"line":2601,"type":"binary-expr","locations":[{"start":{"line":2601,"column":10},"end":{"line":2601,"column":18}},{"start":{"line":2601,"column":22},"end":{"line":2601,"column":35}}]},"255":{"line":2604,"type":"if","locations":[{"start":{"line":2604,"column":8},"end":{"line":2604,"column":8}},{"start":{"line":2604,"column":8},"end":{"line":2604,"column":8}}]},"256":{"line":2606,"type":"binary-expr","locations":[{"start":{"line":2606,"column":10},"end":{"line":2606,"column":18}},{"start":{"line":2606,"column":22},"end":{"line":2606,"column":60}}]},"257":{"line":2617,"type":"if","locations":[{"start":{"line":2617,"column":4},"end":{"line":2617,"column":4}},{"start":{"line":2617,"column":4},"end":{"line":2617,"column":4}}]},"258":{"line":2618,"type":"if","locations":[{"start":{"line":2618,"column":6},"end":{"line":2618,"column":6}},{"start":{"line":2618,"column":6},"end":{"line":2618,"column":6}}]},"259":{"line":2622,"type":"binary-expr","locations":[{"start":{"line":2622,"column":8},"end":{"line":2622,"column":16}},{"start":{"line":2622,"column":20},"end":{"line":2622,"column":35}}]},"260":{"line":2629,"type":"if","locations":[{"start":{"line":2629,"column":6},"end":{"line":2629,"column":6}},{"start":{"line":2629,"column":6},"end":{"line":2629,"column":6}}]},"261":{"line":2629,"type":"binary-expr","locations":[{"start":{"line":2629,"column":10},"end":{"line":2629,"column":31}},{"start":{"line":2629,"column":35},"end":{"line":2629,"column":67}}]},"262":{"line":2633,"type":"binary-expr","locations":[{"start":{"line":2633,"column":8},"end":{"line":2633,"column":16}},{"start":{"line":2633,"column":20},"end":{"line":2633,"column":35}}]},"263":{"line":2686,"type":"if","locations":[{"start":{"line":2686,"column":2},"end":{"line":2686,"column":2}},{"start":{"line":2686,"column":2},"end":{"line":2686,"column":2}}]},"264":{"line":2690,"type":"if","locations":[{"start":{"line":2690,"column":2},"end":{"line":2690,"column":2}},{"start":{"line":2690,"column":2},"end":{"line":2690,"column":2}}]},"265":{"line":2690,"type":"binary-expr","locations":[{"start":{"line":2690,"column":6},"end":{"line":2690,"column":23}},{"start":{"line":2690,"column":27},"end":{"line":2690,"column":48}}]},"266":{"line":2698,"type":"if","locations":[{"start":{"line":2698,"column":2},"end":{"line":2698,"column":2}},{"start":{"line":2698,"column":2},"end":{"line":2698,"column":2}}]},"267":{"line":2702,"type":"if","locations":[{"start":{"line":2702,"column":2},"end":{"line":2702,"column":2}},{"start":{"line":2702,"column":2},"end":{"line":2702,"column":2}}]},"268":{"line":2735,"type":"if","locations":[{"start":{"line":2735,"column":2},"end":{"line":2735,"column":2}},{"start":{"line":2735,"column":2},"end":{"line":2735,"column":2}}]},"269":{"line":2739,"type":"if","locations":[{"start":{"line":2739,"column":2},"end":{"line":2739,"column":2}},{"start":{"line":2739,"column":2},"end":{"line":2739,"column":2}}]},"270":{"line":2747,"type":"if","locations":[{"start":{"line":2747,"column":4},"end":{"line":2747,"column":4}},{"start":{"line":2747,"column":4},"end":{"line":2747,"column":4}}]},"271":{"line":2747,"type":"binary-expr","locations":[{"start":{"line":2747,"column":8},"end":{"line":2747,"column":32}},{"start":{"line":2747,"column":36},"end":{"line":2747,"column":63}}]},"272":{"line":2749,"type":"if","locations":[{"start":{"line":2749,"column":11},"end":{"line":2749,"column":11}},{"start":{"line":2749,"column":11},"end":{"line":2749,"column":11}}]},"273":{"line":2751,"type":"if","locations":[{"start":{"line":2751,"column":11},"end":{"line":2751,"column":11}},{"start":{"line":2751,"column":11},"end":{"line":2751,"column":11}}]},"274":{"line":2755,"type":"if","locations":[{"start":{"line":2755,"column":4},"end":{"line":2755,"column":4}},{"start":{"line":2755,"column":4},"end":{"line":2755,"column":4}}]},"275":{"line":2756,"type":"binary-expr","locations":[{"start":{"line":2756,"column":6},"end":{"line":2756,"column":14}},{"start":{"line":2756,"column":18},"end":{"line":2756,"column":33}}]},"276":{"line":2767,"type":"if","locations":[{"start":{"line":2767,"column":6},"end":{"line":2767,"column":6}},{"start":{"line":2767,"column":6},"end":{"line":2767,"column":6}}]},"277":{"line":2768,"type":"binary-expr","locations":[{"start":{"line":2768,"column":8},"end":{"line":2768,"column":16}},{"start":{"line":2768,"column":20},"end":{"line":2768,"column":33}}]},"278":{"line":2774,"type":"if","locations":[{"start":{"line":2774,"column":6},"end":{"line":2774,"column":6}},{"start":{"line":2774,"column":6},"end":{"line":2774,"column":6}}]},"279":{"line":2774,"type":"binary-expr","locations":[{"start":{"line":2774,"column":10},"end":{"line":2774,"column":22}},{"start":{"line":2774,"column":26},"end":{"line":2774,"column":37}}]},"280":{"line":2775,"type":"binary-expr","locations":[{"start":{"line":2775,"column":8},"end":{"line":2775,"column":16}},{"start":{"line":2775,"column":20},"end":{"line":2775,"column":58}}]},"281":{"line":2783,"type":"if","locations":[{"start":{"line":2783,"column":8},"end":{"line":2783,"column":8}},{"start":{"line":2783,"column":8},"end":{"line":2783,"column":8}}]},"282":{"line":2783,"type":"binary-expr","locations":[{"start":{"line":2783,"column":12},"end":{"line":2783,"column":15}},{"start":{"line":2783,"column":19},"end":{"line":2783,"column":27}}]},"283":{"line":2784,"type":"binary-expr","locations":[{"start":{"line":2784,"column":10},"end":{"line":2784,"column":18}},{"start":{"line":2784,"column":22},"end":{"line":2784,"column":35}}]},"284":{"line":2789,"type":"if","locations":[{"start":{"line":2789,"column":8},"end":{"line":2789,"column":8}},{"start":{"line":2789,"column":8},"end":{"line":2789,"column":8}}]},"285":{"line":2789,"type":"binary-expr","locations":[{"start":{"line":2789,"column":12},"end":{"line":2789,"column":20}},{"start":{"line":2789,"column":24},"end":{"line":2789,"column":32}}]},"286":{"line":2790,"type":"binary-expr","locations":[{"start":{"line":2790,"column":10},"end":{"line":2790,"column":18}},{"start":{"line":2790,"column":22},"end":{"line":2790,"column":60}}]},"287":{"line":2873,"type":"if","locations":[{"start":{"line":2873,"column":2},"end":{"line":2873,"column":2}},{"start":{"line":2873,"column":2},"end":{"line":2873,"column":2}}]},"288":{"line":2878,"type":"binary-expr","locations":[{"start":{"line":2878,"column":18},"end":{"line":2878,"column":23}},{"start":{"line":2878,"column":27},"end":{"line":2878,"column":46}}]},"289":{"line":2884,"type":"if","locations":[{"start":{"line":2884,"column":2},"end":{"line":2884,"column":2}},{"start":{"line":2884,"column":2},"end":{"line":2884,"column":2}}]},"290":{"line":2890,"type":"if","locations":[{"start":{"line":2890,"column":8},"end":{"line":2890,"column":8}},{"start":{"line":2890,"column":8},"end":{"line":2890,"column":8}}]},"291":{"line":2891,"type":"binary-expr","locations":[{"start":{"line":2891,"column":10},"end":{"line":2891,"column":18}},{"start":{"line":2891,"column":22},"end":{"line":2891,"column":37}}]},"292":{"line":2894,"type":"binary-expr","locations":[{"start":{"line":2894,"column":10},"end":{"line":2894,"column":18}},{"start":{"line":2894,"column":22},"end":{"line":2894,"column":42}}]},"293":{"line":2916,"type":"if","locations":[{"start":{"line":2916,"column":2},"end":{"line":2916,"column":2}},{"start":{"line":2916,"column":2},"end":{"line":2916,"column":2}}]},"294":{"line":2929,"type":"if","locations":[{"start":{"line":2929,"column":4},"end":{"line":2929,"column":4}},{"start":{"line":2929,"column":4},"end":{"line":2929,"column":4}}]},"295":{"line":2932,"type":"if","locations":[{"start":{"line":2932,"column":4},"end":{"line":2932,"column":4}},{"start":{"line":2932,"column":4},"end":{"line":2932,"column":4}}]},"296":{"line":2949,"type":"if","locations":[{"start":{"line":2949,"column":2},"end":{"line":2949,"column":2}},{"start":{"line":2949,"column":2},"end":{"line":2949,"column":2}}]},"297":{"line":2953,"type":"if","locations":[{"start":{"line":2953,"column":2},"end":{"line":2953,"column":2}},{"start":{"line":2953,"column":2},"end":{"line":2953,"column":2}}]},"298":{"line":2953,"type":"binary-expr","locations":[{"start":{"line":2953,"column":6},"end":{"line":2953,"column":23}},{"start":{"line":2953,"column":27},"end":{"line":2953,"column":62}}]},"299":{"line":2958,"type":"if","locations":[{"start":{"line":2958,"column":2},"end":{"line":2958,"column":2}},{"start":{"line":2958,"column":2},"end":{"line":2958,"column":2}}]},"300":{"line":2978,"type":"if","locations":[{"start":{"line":2978,"column":4},"end":{"line":2978,"column":4}},{"start":{"line":2978,"column":4},"end":{"line":2978,"column":4}}]},"301":{"line":2987,"type":"if","locations":[{"start":{"line":2987,"column":4},"end":{"line":2987,"column":4}},{"start":{"line":2987,"column":4},"end":{"line":2987,"column":4}}]},"302":{"line":2987,"type":"binary-expr","locations":[{"start":{"line":2987,"column":8},"end":{"line":2987,"column":24}},{"start":{"line":2987,"column":28},"end":{"line":2987,"column":62}}]},"303":{"line":2993,"type":"if","locations":[{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}},{"start":{"line":2993,"column":4},"end":{"line":2993,"column":4}}]},"304":{"line":2993,"type":"binary-expr","locations":[{"start":{"line":2993,"column":8},"end":{"line":2993,"column":34}},{"start":{"line":2993,"column":38},"end":{"line":2993,"column":51}}]},"305":{"line":2998,"type":"binary-expr","locations":[{"start":{"line":2998,"column":26},"end":{"line":2998,"column":45}},{"start":{"line":2998,"column":49},"end":{"line":2998,"column":73}},{"start":{"line":2998,"column":77},"end":{"line":2998,"column":86}}]},"306":{"line":2999,"type":"binary-expr","locations":[{"start":{"line":2999,"column":31},"end":{"line":2999,"column":56}},{"start":{"line":2999,"column":61},"end":{"line":2999,"column":67}},{"start":{"line":2999,"column":71},"end":{"line":2999,"column":87}}]},"307":{"line":3001,"type":"if","locations":[{"start":{"line":3001,"column":4},"end":{"line":3001,"column":4}},{"start":{"line":3001,"column":4},"end":{"line":3001,"column":4}}]},"308":{"line":3005,"type":"if","locations":[{"start":{"line":3005,"column":6},"end":{"line":3005,"column":6}},{"start":{"line":3005,"column":6},"end":{"line":3005,"column":6}}]},"309":{"line":3014,"type":"if","locations":[{"start":{"line":3014,"column":4},"end":{"line":3014,"column":4}},{"start":{"line":3014,"column":4},"end":{"line":3014,"column":4}}]},"310":{"line":3014,"type":"binary-expr","locations":[{"start":{"line":3014,"column":8},"end":{"line":3014,"column":27}},{"start":{"line":3014,"column":31},"end":{"line":3014,"column":56}}]},"311":{"line":3026,"type":"if","locations":[{"start":{"line":3026,"column":4},"end":{"line":3026,"column":4}},{"start":{"line":3026,"column":4},"end":{"line":3026,"column":4}}]},"312":{"line":3026,"type":"binary-expr","locations":[{"start":{"line":3026,"column":8},"end":{"line":3026,"column":34}},{"start":{"line":3026,"column":38},"end":{"line":3026,"column":65}},{"start":{"line":3027,"column":6},"end":{"line":3027,"column":63}}]},"313":{"line":3032,"type":"if","locations":[{"start":{"line":3032,"column":4},"end":{"line":3032,"column":4}},{"start":{"line":3032,"column":4},"end":{"line":3032,"column":4}}]},"314":{"line":3039,"type":"if","locations":[{"start":{"line":3039,"column":2},"end":{"line":3039,"column":2}},{"start":{"line":3039,"column":2},"end":{"line":3039,"column":2}}]},"315":{"line":3044,"type":"if","locations":[{"start":{"line":3044,"column":4},"end":{"line":3044,"column":4}},{"start":{"line":3044,"column":4},"end":{"line":3044,"column":4}}]},"316":{"line":3047,"type":"if","locations":[{"start":{"line":3047,"column":4},"end":{"line":3047,"column":4}},{"start":{"line":3047,"column":4},"end":{"line":3047,"column":4}}]},"317":{"line":3053,"type":"if","locations":[{"start":{"line":3053,"column":4},"end":{"line":3053,"column":4}},{"start":{"line":3053,"column":4},"end":{"line":3053,"column":4}}]},"318":{"line":3059,"type":"binary-expr","locations":[{"start":{"line":3059,"column":15},"end":{"line":3059,"column":30}},{"start":{"line":3059,"column":34},"end":{"line":3059,"column":54}}]},"319":{"line":3071,"type":"if","locations":[{"start":{"line":3071,"column":6},"end":{"line":3071,"column":6}},{"start":{"line":3071,"column":6},"end":{"line":3071,"column":6}}]},"320":{"line":3073,"type":"if","locations":[{"start":{"line":3073,"column":8},"end":{"line":3073,"column":8}},{"start":{"line":3073,"column":8},"end":{"line":3073,"column":8}}]},"321":{"line":3077,"type":"if","locations":[{"start":{"line":3077,"column":12},"end":{"line":3077,"column":12}},{"start":{"line":3077,"column":12},"end":{"line":3077,"column":12}}]},"322":{"line":3081,"type":"if","locations":[{"start":{"line":3081,"column":12},"end":{"line":3081,"column":12}},{"start":{"line":3081,"column":12},"end":{"line":3081,"column":12}}]},"323":{"line":3082,"type":"if","locations":[{"start":{"line":3082,"column":14},"end":{"line":3082,"column":14}},{"start":{"line":3082,"column":14},"end":{"line":3082,"column":14}}]},"324":{"line":3090,"type":"if","locations":[{"start":{"line":3090,"column":14},"end":{"line":3090,"column":14}},{"start":{"line":3090,"column":14},"end":{"line":3090,"column":14}}]},"325":{"line":3090,"type":"binary-expr","locations":[{"start":{"line":3090,"column":18},"end":{"line":3090,"column":27}},{"start":{"line":3090,"column":31},"end":{"line":3090,"column":39}}]},"326":{"line":3100,"type":"if","locations":[{"start":{"line":3100,"column":10},"end":{"line":3100,"column":10}},{"start":{"line":3100,"column":10},"end":{"line":3100,"column":10}}]},"327":{"line":3104,"type":"if","locations":[{"start":{"line":3104,"column":10},"end":{"line":3104,"column":10}},{"start":{"line":3104,"column":10},"end":{"line":3104,"column":10}}]},"328":{"line":3105,"type":"if","locations":[{"start":{"line":3105,"column":12},"end":{"line":3105,"column":12}},{"start":{"line":3105,"column":12},"end":{"line":3105,"column":12}}]},"329":{"line":3118,"type":"if","locations":[{"start":{"line":3118,"column":8},"end":{"line":3118,"column":8}},{"start":{"line":3118,"column":8},"end":{"line":3118,"column":8}}]},"330":{"line":3163,"type":"if","locations":[{"start":{"line":3163,"column":4},"end":{"line":3163,"column":4}},{"start":{"line":3163,"column":4},"end":{"line":3163,"column":4}}]},"331":{"line":3163,"type":"binary-expr","locations":[{"start":{"line":3163,"column":8},"end":{"line":3163,"column":47}},{"start":{"line":3164,"column":6},"end":{"line":3164,"column":49}}]},"332":{"line":3168,"type":"if","locations":[{"start":{"line":3168,"column":4},"end":{"line":3168,"column":4}},{"start":{"line":3168,"column":4},"end":{"line":3168,"column":4}}]},"333":{"line":3168,"type":"binary-expr","locations":[{"start":{"line":3168,"column":8},"end":{"line":3168,"column":19}},{"start":{"line":3168,"column":23},"end":{"line":3168,"column":33}},{"start":{"line":3168,"column":37},"end":{"line":3168,"column":62}}]},"334":{"line":3198,"type":"binary-expr","locations":[{"start":{"line":3198,"column":16},"end":{"line":3198,"column":28}},{"start":{"line":3198,"column":32},"end":{"line":3198,"column":49}}]},"335":{"line":3206,"type":"if","locations":[{"start":{"line":3206,"column":4},"end":{"line":3206,"column":4}},{"start":{"line":3206,"column":4},"end":{"line":3206,"column":4}}]},"336":{"line":3213,"type":"if","locations":[{"start":{"line":3213,"column":4},"end":{"line":3213,"column":4}},{"start":{"line":3213,"column":4},"end":{"line":3213,"column":4}}]},"337":{"line":3213,"type":"binary-expr","locations":[{"start":{"line":3213,"column":8},"end":{"line":3213,"column":19}},{"start":{"line":3213,"column":23},"end":{"line":3213,"column":31}}]},"338":{"line":3222,"type":"if","locations":[{"start":{"line":3222,"column":4},"end":{"line":3222,"column":4}},{"start":{"line":3222,"column":4},"end":{"line":3222,"column":4}}]},"339":{"line":3227,"type":"if","locations":[{"start":{"line":3227,"column":6},"end":{"line":3227,"column":6}},{"start":{"line":3227,"column":6},"end":{"line":3227,"column":6}}]},"340":{"line":3228,"type":"if","locations":[{"start":{"line":3228,"column":8},"end":{"line":3228,"column":8}},{"start":{"line":3228,"column":8},"end":{"line":3228,"column":8}}]},"341":{"line":3238,"type":"binary-expr","locations":[{"start":{"line":3238,"column":26},"end":{"line":3238,"column":41}},{"start":{"line":3238,"column":45},"end":{"line":3238,"column":49}}]},"342":{"line":3243,"type":"if","locations":[{"start":{"line":3243,"column":2},"end":{"line":3243,"column":2}},{"start":{"line":3243,"column":2},"end":{"line":3243,"column":2}}]},"343":{"line":3250,"type":"if","locations":[{"start":{"line":3250,"column":6},"end":{"line":3250,"column":6}},{"start":{"line":3250,"column":6},"end":{"line":3250,"column":6}}]},"344":{"line":3262,"type":"binary-expr","locations":[{"start":{"line":3262,"column":27},"end":{"line":3262,"column":40}},{"start":{"line":3262,"column":44},"end":{"line":3262,"column":67}},{"start":{"line":3262,"column":71},"end":{"line":3262,"column":84}}]},"345":{"line":3270,"type":"binary-expr","locations":[{"start":{"line":3270,"column":29},"end":{"line":3270,"column":35}},{"start":{"line":3270,"column":39},"end":{"line":3270,"column":67}}]},"346":{"line":3271,"type":"if","locations":[{"start":{"line":3271,"column":2},"end":{"line":3271,"column":2}},{"start":{"line":3271,"column":2},"end":{"line":3271,"column":2}}]},"347":{"line":3271,"type":"binary-expr","locations":[{"start":{"line":3271,"column":6},"end":{"line":3271,"column":26}},{"start":{"line":3272,"column":6},"end":{"line":3272,"column":13}},{"start":{"line":3273,"column":6},"end":{"line":3273,"column":21}},{"start":{"line":3274,"column":6},"end":{"line":3274,"column":26}}]},"348":{"line":3279,"type":"if","locations":[{"start":{"line":3279,"column":2},"end":{"line":3279,"column":2}},{"start":{"line":3279,"column":2},"end":{"line":3279,"column":2}}]},"349":{"line":3279,"type":"binary-expr","locations":[{"start":{"line":3279,"column":6},"end":{"line":3279,"column":12}},{"start":{"line":3279,"column":16},"end":{"line":3279,"column":29}}]},"350":{"line":3283,"type":"if","locations":[{"start":{"line":3283,"column":2},"end":{"line":3283,"column":2}},{"start":{"line":3283,"column":2},"end":{"line":3283,"column":2}}]},"351":{"line":3283,"type":"binary-expr","locations":[{"start":{"line":3283,"column":6},"end":{"line":3283,"column":13}},{"start":{"line":3283,"column":17},"end":{"line":3283,"column":37}}]},"352":{"line":3287,"type":"binary-expr","locations":[{"start":{"line":3287,"column":12},"end":{"line":3287,"column":18}},{"start":{"line":3287,"column":22},"end":{"line":3287,"column":36}},{"start":{"line":3287,"column":40},"end":{"line":3287,"column":62}}]},"353":{"line":3292,"type":"if","locations":[{"start":{"line":3292,"column":4},"end":{"line":3292,"column":4}},{"start":{"line":3292,"column":4},"end":{"line":3292,"column":4}}]},"354":{"line":3295,"type":"if","locations":[{"start":{"line":3295,"column":6},"end":{"line":3295,"column":6}},{"start":{"line":3295,"column":6},"end":{"line":3295,"column":6}}]},"355":{"line":3301,"type":"if","locations":[{"start":{"line":3301,"column":6},"end":{"line":3301,"column":6}},{"start":{"line":3301,"column":6},"end":{"line":3301,"column":6}}]},"356":{"line":3305,"type":"if","locations":[{"start":{"line":3305,"column":8},"end":{"line":3305,"column":8}},{"start":{"line":3305,"column":8},"end":{"line":3305,"column":8}}]},"357":{"line":3305,"type":"binary-expr","locations":[{"start":{"line":3305,"column":12},"end":{"line":3305,"column":19}},{"start":{"line":3305,"column":23},"end":{"line":3305,"column":39}}]},"358":{"line":3308,"type":"if","locations":[{"start":{"line":3308,"column":10},"end":{"line":3308,"column":10}},{"start":{"line":3308,"column":10},"end":{"line":3308,"column":10}}]},"359":{"line":3312,"type":"if","locations":[{"start":{"line":3312,"column":12},"end":{"line":3312,"column":12}},{"start":{"line":3312,"column":12},"end":{"line":3312,"column":12}}]},"360":{"line":3312,"type":"binary-expr","locations":[{"start":{"line":3312,"column":16},"end":{"line":3312,"column":35}},{"start":{"line":3312,"column":39},"end":{"line":3312,"column":65}}]},"361":{"line":3321,"type":"if","locations":[{"start":{"line":3321,"column":8},"end":{"line":3321,"column":8}},{"start":{"line":3321,"column":8},"end":{"line":3321,"column":8}}]},"362":{"line":3321,"type":"binary-expr","locations":[{"start":{"line":3321,"column":12},"end":{"line":3321,"column":31}},{"start":{"line":3321,"column":35},"end":{"line":3321,"column":62}},{"start":{"line":3321,"column":66},"end":{"line":3321,"column":97}}]},"363":{"line":3323,"type":"if","locations":[{"start":{"line":3323,"column":15},"end":{"line":3323,"column":15}},{"start":{"line":3323,"column":15},"end":{"line":3323,"column":15}}]},"364":{"line":3323,"type":"binary-expr","locations":[{"start":{"line":3323,"column":19},"end":{"line":3323,"column":26}},{"start":{"line":3323,"column":30},"end":{"line":3323,"column":45}},{"start":{"line":3323,"column":49},"end":{"line":3323,"column":68}}]},"365":{"line":3324,"type":"binary-expr","locations":[{"start":{"line":3324,"column":24},"end":{"line":3324,"column":31}},{"start":{"line":3324,"column":35},"end":{"line":3324,"column":50}},{"start":{"line":3324,"column":54},"end":{"line":3324,"column":73}}]},"366":{"line":3329,"type":"cond-expr","locations":[{"start":{"line":3329,"column":42},"end":{"line":3329,"column":46}},{"start":{"line":3329,"column":49},"end":{"line":3329,"column":66}}]},"367":{"line":3336,"type":"if","locations":[{"start":{"line":3336,"column":4},"end":{"line":3336,"column":4}},{"start":{"line":3336,"column":4},"end":{"line":3336,"column":4}}]},"368":{"line":3340,"type":"if","locations":[{"start":{"line":3340,"column":4},"end":{"line":3340,"column":4}},{"start":{"line":3340,"column":4},"end":{"line":3340,"column":4}}]},"369":{"line":3345,"type":"cond-expr","locations":[{"start":{"line":3346,"column":6},"end":{"line":3346,"column":101}},{"start":{"line":3347,"column":6},"end":{"line":3347,"column":18}}]},"370":{"line":3345,"type":"binary-expr","locations":[{"start":{"line":3345,"column":21},"end":{"line":3345,"column":28}},{"start":{"line":3345,"column":32},"end":{"line":3345,"column":47}}]},"371":{"line":3346,"type":"cond-expr","locations":[{"start":{"line":3346,"column":35},"end":{"line":3346,"column":66}},{"start":{"line":3346,"column":69},"end":{"line":3346,"column":71}}]},"372":{"line":3348,"type":"cond-expr","locations":[{"start":{"line":3349,"column":6},"end":{"line":3349,"column":34}},{"start":{"line":3350,"column":6},"end":{"line":3350,"column":11}}]},"373":{"line":3348,"type":"binary-expr","locations":[{"start":{"line":3348,"column":23},"end":{"line":3348,"column":30}},{"start":{"line":3348,"column":34},"end":{"line":3348,"column":49}}]},"374":{"line":3351,"type":"binary-expr","locations":[{"start":{"line":3351,"column":18},"end":{"line":3351,"column":25}},{"start":{"line":3351,"column":29},"end":{"line":3351,"column":44}},{"start":{"line":3351,"column":48},"end":{"line":3351,"column":71}}]},"375":{"line":3352,"type":"if","locations":[{"start":{"line":3352,"column":4},"end":{"line":3352,"column":4}},{"start":{"line":3352,"column":4},"end":{"line":3352,"column":4}}]},"376":{"line":3352,"type":"binary-expr","locations":[{"start":{"line":3352,"column":8},"end":{"line":3352,"column":15}},{"start":{"line":3352,"column":19},"end":{"line":3352,"column":34}},{"start":{"line":3352,"column":38},"end":{"line":3352,"column":57}}]},"377":{"line":3356,"type":"if","locations":[{"start":{"line":3356,"column":4},"end":{"line":3356,"column":4}},{"start":{"line":3356,"column":4},"end":{"line":3356,"column":4}}]},"378":{"line":3356,"type":"binary-expr","locations":[{"start":{"line":3356,"column":8},"end":{"line":3356,"column":15}},{"start":{"line":3356,"column":20},"end":{"line":3356,"column":31}},{"start":{"line":3356,"column":35},"end":{"line":3356,"column":48}}]},"379":{"line":3364,"type":"cond-expr","locations":[{"start":{"line":3364,"column":45},"end":{"line":3364,"column":56}},{"start":{"line":3364,"column":59},"end":{"line":3364,"column":62}}]},"380":{"line":3365,"type":"if","locations":[{"start":{"line":3365,"column":4},"end":{"line":3365,"column":4}},{"start":{"line":3365,"column":4},"end":{"line":3365,"column":4}}]},"381":{"line":3372,"type":"cond-expr","locations":[{"start":{"line":3372,"column":56},"end":{"line":3372,"column":62}},{"start":{"line":3372,"column":65},"end":{"line":3372,"column":68}}]},"382":{"line":3372,"type":"binary-expr","locations":[{"start":{"line":3372,"column":17},"end":{"line":3372,"column":35}},{"start":{"line":3372,"column":39},"end":{"line":3372,"column":53}}]},"383":{"line":3373,"type":"cond-expr","locations":[{"start":{"line":3373,"column":56},"end":{"line":3373,"column":62}},{"start":{"line":3373,"column":65},"end":{"line":3373,"column":68}}]},"384":{"line":3373,"type":"binary-expr","locations":[{"start":{"line":3373,"column":17},"end":{"line":3373,"column":35}},{"start":{"line":3373,"column":39},"end":{"line":3373,"column":53}}]},"385":{"line":3374,"type":"cond-expr","locations":[{"start":{"line":3375,"column":8},"end":{"line":3375,"column":21}},{"start":{"line":3376,"column":8},"end":{"line":3376,"column":33}}]},"386":{"line":3374,"type":"binary-expr","locations":[{"start":{"line":3374,"column":14},"end":{"line":3374,"column":27}},{"start":{"line":3374,"column":31},"end":{"line":3374,"column":54}}]},"387":{"line":3378,"type":"if","locations":[{"start":{"line":3378,"column":6},"end":{"line":3378,"column":6}},{"start":{"line":3378,"column":6},"end":{"line":3378,"column":6}}]},"388":{"line":3383,"type":"if","locations":[{"start":{"line":3383,"column":8},"end":{"line":3383,"column":8}},{"start":{"line":3383,"column":8},"end":{"line":3383,"column":8}}]},"389":{"line":3383,"type":"binary-expr","locations":[{"start":{"line":3383,"column":12},"end":{"line":3383,"column":21}},{"start":{"line":3383,"column":25},"end":{"line":3383,"column":40}},{"start":{"line":3383,"column":44},"end":{"line":3383,"column":67}}]},"390":{"line":3389,"type":"if","locations":[{"start":{"line":3389,"column":8},"end":{"line":3389,"column":8}},{"start":{"line":3389,"column":8},"end":{"line":3389,"column":8}}]},"391":{"line":3389,"type":"binary-expr","locations":[{"start":{"line":3389,"column":12},"end":{"line":3389,"column":18}},{"start":{"line":3389,"column":22},"end":{"line":3389,"column":39}}]},"392":{"line":3426,"type":"if","locations":[{"start":{"line":3426,"column":2},"end":{"line":3426,"column":2}},{"start":{"line":3426,"column":2},"end":{"line":3426,"column":2}}]},"393":{"line":3428,"type":"if","locations":[{"start":{"line":3428,"column":2},"end":{"line":3428,"column":2}},{"start":{"line":3428,"column":2},"end":{"line":3428,"column":2}}]},"394":{"line":3430,"type":"if","locations":[{"start":{"line":3430,"column":6},"end":{"line":3430,"column":6}},{"start":{"line":3430,"column":6},"end":{"line":3430,"column":6}}]},"395":{"line":3434,"type":"if","locations":[{"start":{"line":3434,"column":4},"end":{"line":3434,"column":4}},{"start":{"line":3434,"column":4},"end":{"line":3434,"column":4}}]},"396":{"line":3463,"type":"if","locations":[{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}},{"start":{"line":3463,"column":2},"end":{"line":3463,"column":2}}]},"397":{"line":3469,"type":"if","locations":[{"start":{"line":3469,"column":6},"end":{"line":3469,"column":6}},{"start":{"line":3469,"column":6},"end":{"line":3469,"column":6}}]},"398":{"line":3472,"type":"if","locations":[{"start":{"line":3472,"column":6},"end":{"line":3472,"column":6}},{"start":{"line":3472,"column":6},"end":{"line":3472,"column":6}}]},"399":{"line":3472,"type":"binary-expr","locations":[{"start":{"line":3472,"column":10},"end":{"line":3472,"column":38}},{"start":{"line":3473,"column":10},"end":{"line":3473,"column":52}}]},"400":{"line":3490,"type":"if","locations":[{"start":{"line":3490,"column":2},"end":{"line":3490,"column":2}},{"start":{"line":3490,"column":2},"end":{"line":3490,"column":2}}]},"401":{"line":3503,"type":"if","locations":[{"start":{"line":3503,"column":2},"end":{"line":3503,"column":2}},{"start":{"line":3503,"column":2},"end":{"line":3503,"column":2}}]},"402":{"line":3504,"type":"if","locations":[{"start":{"line":3504,"column":4},"end":{"line":3504,"column":4}},{"start":{"line":3504,"column":4},"end":{"line":3504,"column":4}}]},"403":{"line":3518,"type":"if","locations":[{"start":{"line":3518,"column":2},"end":{"line":3518,"column":2}},{"start":{"line":3518,"column":2},"end":{"line":3518,"column":2}}]},"404":{"line":3523,"type":"if","locations":[{"start":{"line":3523,"column":2},"end":{"line":3523,"column":2}},{"start":{"line":3523,"column":2},"end":{"line":3523,"column":2}}]},"405":{"line":3527,"type":"if","locations":[{"start":{"line":3527,"column":2},"end":{"line":3527,"column":2}},{"start":{"line":3527,"column":2},"end":{"line":3527,"column":2}}]},"406":{"line":3531,"type":"if","locations":[{"start":{"line":3531,"column":2},"end":{"line":3531,"column":2}},{"start":{"line":3531,"column":2},"end":{"line":3531,"column":2}}]},"407":{"line":3535,"type":"if","locations":[{"start":{"line":3535,"column":2},"end":{"line":3535,"column":2}},{"start":{"line":3535,"column":2},"end":{"line":3535,"column":2}}]},"408":{"line":3570,"type":"if","locations":[{"start":{"line":3570,"column":2},"end":{"line":3570,"column":2}},{"start":{"line":3570,"column":2},"end":{"line":3570,"column":2}}]},"409":{"line":3570,"type":"binary-expr","locations":[{"start":{"line":3570,"column":6},"end":{"line":3570,"column":23}},{"start":{"line":3570,"column":27},"end":{"line":3570,"column":67}}]},"410":{"line":3578,"type":"if","locations":[{"start":{"line":3578,"column":2},"end":{"line":3578,"column":2}},{"start":{"line":3578,"column":2},"end":{"line":3578,"column":2}}]},"411":{"line":3578,"type":"binary-expr","locations":[{"start":{"line":3578,"column":6},"end":{"line":3578,"column":32}},{"start":{"line":3578,"column":36},"end":{"line":3578,"column":67}}]},"412":{"line":3586,"type":"if","locations":[{"start":{"line":3586,"column":6},"end":{"line":3586,"column":6}},{"start":{"line":3586,"column":6},"end":{"line":3586,"column":6}}]},"413":{"line":3596,"type":"if","locations":[{"start":{"line":3596,"column":2},"end":{"line":3596,"column":2}},{"start":{"line":3596,"column":2},"end":{"line":3596,"column":2}}]},"414":{"line":3638,"type":"if","locations":[{"start":{"line":3638,"column":4},"end":{"line":3638,"column":4}},{"start":{"line":3638,"column":4},"end":{"line":3638,"column":4}}]},"415":{"line":3644,"type":"if","locations":[{"start":{"line":3644,"column":8},"end":{"line":3644,"column":8}},{"start":{"line":3644,"column":8},"end":{"line":3644,"column":8}}]},"416":{"line":3645,"type":"binary-expr","locations":[{"start":{"line":3645,"column":10},"end":{"line":3645,"column":18}},{"start":{"line":3645,"column":22},"end":{"line":3645,"column":37}}]},"417":{"line":3648,"type":"binary-expr","locations":[{"start":{"line":3648,"column":8},"end":{"line":3648,"column":16}},{"start":{"line":3648,"column":20},"end":{"line":3648,"column":42}}]},"418":{"line":3684,"type":"if","locations":[{"start":{"line":3684,"column":4},"end":{"line":3684,"column":4}},{"start":{"line":3684,"column":4},"end":{"line":3684,"column":4}}]},"419":{"line":3694,"type":"cond-expr","locations":[{"start":{"line":3695,"column":8},"end":{"line":3695,"column":14}},{"start":{"line":3696,"column":8},"end":{"line":3696,"column":30}}]},"420":{"line":3694,"type":"binary-expr","locations":[{"start":{"line":3694,"column":10},"end":{"line":3694,"column":16}},{"start":{"line":3694,"column":20},"end":{"line":3694,"column":46}}]},"421":{"line":3698,"type":"binary-expr","locations":[{"start":{"line":3698,"column":16},"end":{"line":3698,"column":25}},{"start":{"line":3698,"column":29},"end":{"line":3698,"column":31}}]},"422":{"line":3700,"type":"if","locations":[{"start":{"line":3700,"column":2},"end":{"line":3700,"column":2}},{"start":{"line":3700,"column":2},"end":{"line":3700,"column":2}}]},"423":{"line":3701,"type":"binary-expr","locations":[{"start":{"line":3701,"column":17},"end":{"line":3701,"column":57}},{"start":{"line":3702,"column":11},"end":{"line":3702,"column":59}}]},"424":{"line":3706,"type":"cond-expr","locations":[{"start":{"line":3706,"column":24},"end":{"line":3706,"column":46}},{"start":{"line":3706,"column":49},"end":{"line":3706,"column":53}}]},"425":{"line":3707,"type":"binary-expr","locations":[{"start":{"line":3707,"column":12},"end":{"line":3707,"column":13}},{"start":{"line":3707,"column":17},"end":{"line":3707,"column":31}}]}},"code":["/*!"," * Module dependencies."," */","","var Aggregate = require('./aggregate');","var Document = require('./document');","var DocumentNotFoundError = require('./error/notFound');","var DivergentArrayError = require('./error').DivergentArrayError;","var EventEmitter = require('events').EventEmitter;","var OverwriteModelError = require('./error').OverwriteModelError;","var PromiseProvider = require('./promise_provider');","var Query = require('./query');","var Schema = require('./schema');","var VersionError = require('./error').VersionError;","var applyHooks = require('./services/model/applyHooks');","var applyMethods = require('./services/model/applyMethods');","var applyStatics = require('./services/model/applyStatics');","var cast = require('./cast');","var castUpdate = require('./services/query/castUpdate');","var discriminator = require('./services/model/discriminator');","var isPathSelectedInclusive = require('./services/projection/isPathSelectedInclusive');","var parallel = require('async/parallel');","var util = require('util');","var utils = require('./utils');","","var VERSION_WHERE = 1,","    VERSION_INC = 2,","    VERSION_ALL = VERSION_WHERE | VERSION_INC;","","var POJO_TO_OBJECT_OPTIONS = {","  depopulate: true,","  transform: false,","  _skipDepopulateTopLevel: true","};","","/**"," * Model constructor"," *"," * Provides the interface to MongoDB collections as well as creates document instances."," *"," * @param {Object} doc values with which to create the document"," * @inherits Document http://mongoosejs.com/docs/api.html#document-js"," * @event `error`: If listening to this event, it is emitted when a document was saved without passing a callback and an `error` occurred. If not listening, the event bubbles to the connection used to create this Model."," * @event `index`: Emitted after `Model#ensureIndexes` completes. If an error occurred it is passed with the event."," * @event `index-single-start`: Emitted when an individual index starts within `Model#ensureIndexes`. The fields and options being used to build the index are also passed with the event."," * @event `index-single-done`: Emitted when an individual index finishes within `Model#ensureIndexes`. If an error occurred it is passed with the event. The fields, options, and index name are also passed."," * @api public"," */","","function Model(doc, fields, skipId) {","  Document.call(this, doc, fields, skipId, true);","}","","/*!"," * Inherits from Document."," *"," * All Model.prototype features are available on"," * top level (non-sub) documents."," */","","Model.prototype.__proto__ = Document.prototype;","Model.prototype.$isMongooseModelPrototype = true;","","/**"," * Connection the model uses."," *"," * @api public"," * @property db"," */","","Model.prototype.db;","","/**"," * Collection the model uses."," *"," * @api public"," * @property collection"," */","","Model.prototype.collection;","","/**"," * The name of the model"," *"," * @api public"," * @property modelName"," */","","Model.prototype.modelName;","","/**"," * Additional properties to attach to the query when calling `save()` and"," * `isNew` is false."," *"," * @api public"," * @property $where"," */","","Model.prototype.$where;","","/**"," * If this is a discriminator model, `baseModelName` is the name of"," * the base model."," *"," * @api public"," * @property baseModelName"," */","","Model.prototype.baseModelName;","","Model.prototype.$__handleSave = function(options, callback) {","  var _this = this;","  var i;","  var keys;","  var len;","  if (!options.safe && this.schema.options.safe) {","    options.safe = this.schema.options.safe;","  }","  if (typeof options.safe === 'boolean') {","    options.safe = null;","  }","","  if (this.isNew) {","    // send entire doc","    var toObjectOptions = {};","","    toObjectOptions.retainKeyOrder = this.schema.options.retainKeyOrder;","    toObjectOptions.depopulate = 1;","    toObjectOptions._skipDepopulateTopLevel = true;","    toObjectOptions.transform = false;","    toObjectOptions.flattenDecimals = false;","","    var obj = this.toObject(toObjectOptions);","","    if (!utils.object.hasOwnProperty(obj || {}, '_id')) {","      // documents must have an _id else mongoose won't know","      // what to update later if more changes are made. the user","      // wouldn't know what _id was generated by mongodb either","      // nor would the ObjectId generated my mongodb necessarily","      // match the schema definition.","      setTimeout(function() {","        callback(new Error('document must have an _id before saving'));","      }, 0);","      return;","    }","","    this.$__version(true, obj);","    this.collection.insert(obj, options.safe, function(err, ret) {","      if (err) {","        _this.isNew = true;","        _this.emit('isNew', true);","        _this.constructor.emit('isNew', true);","","        callback(err);","        return;","      }","","      callback(null, ret);","    });","    this.$__reset();","    this.isNew = false;","    this.emit('isNew', false);","    this.constructor.emit('isNew', false);","    // Make it possible to retry the insert","    this.$__.inserting = true;","  } else {","    // Make sure we don't treat it as a new object on error,","    // since it already exists","    this.$__.inserting = false;","","    var delta = this.$__delta();","","    if (delta) {","      if (delta instanceof Error) {","        callback(delta);","        return;","      }","","      var where = this.$__where(delta[0]);","      if (where instanceof Error) {","        callback(where);","        return;","      }","","      if (this.$where) {","        keys = Object.keys(this.$where);","        len = keys.length;","        for (i = 0; i < len; ++i) {","          where[keys[i]] = this.$where[keys[i]];","        }","      }","","      this.collection.update(where, delta[1], options.safe, function(err, ret) {","        if (err) {","          callback(err);","          return;","        }","        ret.$where = where;","        callback(null, ret);","      });","    } else {","      this.$__reset();","      callback();","      return;","    }","","    this.emit('isNew', false);","    this.constructor.emit('isNew', false);","  }","};","","/*!"," * ignore"," */","","Model.prototype.$__save = function(options, callback) {","  var _this = this;","","  _this.$__handleSave(options, function(error, result) {","    if (error) {","      return _this.schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {","        callback(error);","      });","    }","","    _this.$__reset();","    _this.$__storeShard();","","    var numAffected = 0;","    if (result) {","      if (Array.isArray(result)) {","        numAffected = result.length;","      } else if (result.result && result.result.n !== undefined) {","        numAffected = result.result.n;","      } else if (result.result && result.result.nModified !== undefined) {","        numAffected = result.result.nModified;","      } else {","        numAffected = result;","      }","    }","","    // was this an update that required a version bump?","    if (_this.$__.version && !_this.$__.inserting) {","      var doIncrement = VERSION_INC === (VERSION_INC & _this.$__.version);","      _this.$__.version = undefined;","","      if (numAffected <= 0) {","        // the update failed. pass an error back","        var err = new VersionError(_this);","        return callback(err);","      }","","      // increment version if was successful","      if (doIncrement) {","        var key = _this.schema.options.versionKey;","        var version = _this.getValue(key) | 0;","        _this.setValue(key, version + 1);","      }","    }","","    if (_this.schema.options &&","        _this.schema.options.saveErrorIfNotFound &&","        numAffected <= 0) {","      error = new DocumentNotFoundError(result.$where);","      return _this.schema.s.hooks.execPost('save:error', _this, [_this], { error: error }, function(error) {","        callback(error);","      });","    }","","    _this.emit('save', _this, numAffected);","    _this.constructor.emit('save', _this, numAffected);","    callback(null, _this, numAffected);","  });","};","","/**"," * Saves this document."," *"," * ####Example:"," *"," *     product.sold = Date.now();"," *     product.save(function (err, product, numAffected) {"," *       if (err) .."," *     })"," *"," * The callback will receive three parameters"," *"," * 1. `err` if an error occurred"," * 2. `product` which is the saved `product`"," * 3. `numAffected` will be 1 when the document was successfully persisted to MongoDB, otherwise 0. Unless you tweak mongoose's internals, you don't need to worry about checking this parameter for errors - checking `err` is sufficient to make sure your document was properly saved."," *"," * As an extra measure of flow control, save will return a Promise."," * ####Example:"," *     product.save().then(function(product) {"," *        ..."," *     });"," *"," * For legacy reasons, mongoose stores object keys in reverse order on initial"," * save. That is, `{ a: 1, b: 2 }` will be saved as `{ b: 2, a: 1 }` in"," * MongoDB. To override this behavior, set"," * [the `toObject.retainKeyOrder` option](http://mongoosejs.com/docs/api.html#document_Document-toObject)"," * to true on your schema."," *"," * @param {Object} [options] options optional options"," * @param {Object} [options.safe] overrides [schema's safe option](http://mongoosejs.com//docs/guide.html#safe)"," * @param {Boolean} [options.validateBeforeSave] set to false to save without validating."," * @param {Function} [fn] optional callback"," * @return {Promise} Promise"," * @api public"," * @see middleware http://mongoosejs.com/docs/middleware.html"," */","","Model.prototype.save = function(options, fn) {","  if (typeof options === 'function') {","    fn = options;","    options = undefined;","  }","","  if (!options) {","    options = {};","  }","","  if (fn) {","    fn = this.constructor.$wrapCallback(fn);","  }","","  return this.$__save(options, fn);","};","","/*!"," * Determines whether versioning should be skipped for the given path"," *"," * @param {Document} self"," * @param {String} path"," * @return {Boolean} true if versioning should be skipped for the given path"," */","function shouldSkipVersioning(self, path) {","  var skipVersioning = self.schema.options.skipVersioning;","  if (!skipVersioning) return false;","","  // Remove any array indexes from the path","  path = path.replace(/\\.\\d+\\./, '.');","","  return skipVersioning[path];","}","","/*!"," * Apply the operation to the delta (update) clause as"," * well as track versioning for our where clause."," *"," * @param {Document} self"," * @param {Object} where"," * @param {Object} delta"," * @param {Object} data"," * @param {Mixed} val"," * @param {String} [operation]"," */","","function operand(self, where, delta, data, val, op) {","  // delta","  op || (op = '$set');","  if (!delta[op]) delta[op] = {};","  delta[op][data.path] = val;","","  // disabled versioning?","  if (self.schema.options.versionKey === false) return;","","  // path excluded from versioning?","  if (shouldSkipVersioning(self, data.path)) return;","","  // already marked for versioning?","  if (VERSION_ALL === (VERSION_ALL & self.$__.version)) return;","","  switch (op) {","    case '$set':","    case '$unset':","    case '$pop':","    case '$pull':","    case '$pullAll':","    case '$push':","    case '$pushAll':","    case '$addToSet':","      break;","    default:","      // nothing to do","      return;","  }","","  // ensure updates sent with positional notation are","  // editing the correct array element.","  // only increment the version if an array position changes.","  // modifying elements of an array is ok if position does not change.","","  if (op === '$push' || op === '$pushAll' || op === '$addToSet') {","    self.$__.version = VERSION_INC;","  } else if (/^\\$p/.test(op)) {","    // potentially changing array positions","    self.increment();","  } else if (Array.isArray(val)) {","    // $set an array","    self.increment();","  } else if (/\\.\\d+\\.|\\.\\d+$/.test(data.path)) {","    // now handling $set, $unset","    // subpath of array","    self.$__.version = VERSION_WHERE;","  }","}","","/*!"," * Compiles an update and where clause for a `val` with _atomics."," *"," * @param {Document} self"," * @param {Object} where"," * @param {Object} delta"," * @param {Object} data"," * @param {Array} value"," */","","function handleAtomics(self, where, delta, data, value) {","  if (delta.$set && delta.$set[data.path]) {","    // $set has precedence over other atomics","    return;","  }","","  if (typeof value.$__getAtomics === 'function') {","    value.$__getAtomics().forEach(function(atomic) {","      var op = atomic[0];","      var val = atomic[1];","      if (self.schema.options.usePushEach && op === '$pushAll') {","        op = '$push';","        val = { $each: val };","      }","      operand(self, where, delta, data, val, op);","    });","    return;","  }","","  // legacy support for plugins","","  var atomics = value._atomics,","      ops = Object.keys(atomics),","      i = ops.length,","      val,","      op;","","  if (i === 0) {","    // $set","","    if (utils.isMongooseObject(value)) {","      value = value.toObject({depopulate: 1, _isNested: true});","    } else if (value.valueOf) {","      value = value.valueOf();","    }","","    return operand(self, where, delta, data, value);","  }","","  function iter(mem) {","    return utils.isMongooseObject(mem)","        ? mem.toObject({depopulate: 1, _isNested: true})","        : mem;","  }","","  while (i--) {","    op = ops[i];","    val = atomics[op];","","    if (utils.isMongooseObject(val)) {","      val = val.toObject({depopulate: true, transform: false, _isNested: true});","    } else if (Array.isArray(val)) {","      val = val.map(iter);","    } else if (val.valueOf) {","      val = val.valueOf();","    }","","    if (op === '$addToSet') {","      val = {$each: val};","    }","","    operand(self, where, delta, data, val, op);","  }","}","","/**"," * Produces a special query document of the modified properties used in updates."," *"," * @api private"," * @method $__delta"," * @memberOf Model"," */","","Model.prototype.$__delta = function() {","  var dirty = this.$__dirty();","  if (!dirty.length && VERSION_ALL !== this.$__.version) return;","","  var where = {},","      delta = {},","      len = dirty.length,","      divergent = [],","      d = 0;","","  where._id = this._doc._id;","  if (where._id.toObject) {","    where._id = where._id.toObject({ transform: false, depopulate: true });","  }","","  for (; d < len; ++d) {","    var data = dirty[d];","    var value = data.value;","","    var match = checkDivergentArray(this, data.path, value);","    if (match) {","      divergent.push(match);","      continue;","    }","","    var pop = this.populated(data.path, true);","    if (!pop && this.$__.selected) {","      // If any array was selected using an $elemMatch projection, we alter the path and where clause","      // NOTE: MongoDB only supports projected $elemMatch on top level array.","      var pathSplit = data.path.split('.');","      var top = pathSplit[0];","      if (this.$__.selected[top] && this.$__.selected[top].$elemMatch) {","        // If the selected array entry was modified","        if (pathSplit.length > 1 && pathSplit[1] == 0 && typeof where[top] === 'undefined') {","          where[top] = this.$__.selected[top];","          pathSplit[1] = '$';","          data.path = pathSplit.join('.');","        }","        // if the selected array was modified in any other way throw an error","        else {","          divergent.push(data.path);","          continue;","        }","      }","    }","","    if (divergent.length) continue;","","    if (undefined === value) {","      operand(this, where, delta, data, 1, '$unset');","    } else if (value === null) {","      operand(this, where, delta, data, null);","    } else if (value._path && value._atomics) {","      // arrays and other custom types (support plugins etc)","      handleAtomics(this, where, delta, data, value);","    } else if (value._path && Buffer.isBuffer(value)) {","      // MongooseBuffer","      value = value.toObject();","      operand(this, where, delta, data, value);","    } else {","      value = utils.clone(value, {depopulate: 1, _isNested: true});","      operand(this, where, delta, data, value);","    }","  }","","  if (divergent.length) {","    return new DivergentArrayError(divergent);","  }","","  if (this.$__.version) {","    this.$__version(where, delta);","  }","","  return [where, delta];","};","","/*!"," * Determine if array was populated with some form of filter and is now"," * being updated in a manner which could overwrite data unintentionally."," *"," * @see https://github.com/Automattic/mongoose/issues/1334"," * @param {Document} doc"," * @param {String} path"," * @return {String|undefined}"," */","","function checkDivergentArray(doc, path, array) {","  // see if we populated this path","  var pop = doc.populated(path, true);","","  if (!pop && doc.$__.selected) {","    // If any array was selected using an $elemMatch projection, we deny the update.","    // NOTE: MongoDB only supports projected $elemMatch on top level array.","    var top = path.split('.')[0];","    if (doc.$__.selected[top + '.$']) {","      return top;","    }","  }","","  if (!(pop && array && array.isMongooseArray)) return;","","  // If the array was populated using options that prevented all","  // documents from being returned (match, skip, limit) or they","  // deselected the _id field, $pop and $set of the array are","  // not safe operations. If _id was deselected, we do not know","  // how to remove elements. $pop will pop off the _id from the end","  // of the array in the db which is not guaranteed to be the","  // same as the last element we have here. $set of the entire array","  // would be similarily destructive as we never received all","  // elements of the array and potentially would overwrite data.","  var check = pop.options.match ||","      pop.options.options && utils.object.hasOwnProperty(pop.options.options, 'limit') || // 0 is not permitted","      pop.options.options && pop.options.options.skip || // 0 is permitted","      pop.options.select && // deselected _id?","      (pop.options.select._id === 0 ||","      /\\s?-_id\\s?/.test(pop.options.select));","","  if (check) {","    var atomics = array._atomics;","    if (Object.keys(atomics).length === 0 || atomics.$set || atomics.$pop) {","      return path;","    }","  }","}","","/**"," * Appends versioning to the where and update clauses."," *"," * @api private"," * @method $__version"," * @memberOf Model"," */","","Model.prototype.$__version = function(where, delta) {","  var key = this.schema.options.versionKey;","","  if (where === true) {","    // this is an insert","    if (key) this.setValue(key, delta[key] = 0);","    return;","  }","","  // updates","","  // only apply versioning if our versionKey was selected. else","  // there is no way to select the correct version. we could fail","  // fast here and force them to include the versionKey but","  // thats a bit intrusive. can we do this automatically?","  if (!this.isSelected(key)) {","    return;","  }","","  // $push $addToSet don't need the where clause set","  if (VERSION_WHERE === (VERSION_WHERE & this.$__.version)) {","    where[key] = this.getValue(key);","  }","","  if (VERSION_INC === (VERSION_INC & this.$__.version)) {","    if (!delta.$set || typeof delta.$set[key] === 'undefined') {","      delta.$inc || (delta.$inc = {});","      delta.$inc[key] = 1;","    }","  }","};","","/**"," * Signal that we desire an increment of this documents version."," *"," * ####Example:"," *"," *     Model.findById(id, function (err, doc) {"," *       doc.increment();"," *       doc.save(function (err) { .. })"," *     })"," *"," * @see versionKeys http://mongoosejs.com/docs/guide.html#versionKey"," * @api public"," */","","Model.prototype.increment = function increment() {","  this.$__.version = VERSION_ALL;","  return this;","};","","/**"," * Returns a query object which applies shardkeys if they exist."," *"," * @api private"," * @method $__where"," * @memberOf Model"," */","","Model.prototype.$__where = function _where(where) {","  where || (where = {});","","  var paths,","      len;","","  if (!where._id) {","    where._id = this._doc._id;","  }","","  if (this.$__.shardval) {","    paths = Object.keys(this.$__.shardval);","    len = paths.length;","","    for (var i = 0; i < len; ++i) {","      where[paths[i]] = this.$__.shardval[paths[i]];","    }","  }","","  if (this._doc._id == null) {","    return new Error('No _id found on document!');","  }","","  return where;","};","","/**"," * Removes this document from the db."," *"," * ####Example:"," *     product.remove(function (err, product) {"," *       if (err) return handleError(err);"," *       Product.findById(product._id, function (err, product) {"," *         console.log(product) // null"," *       })"," *     })"," *"," *"," * As an extra measure of flow control, remove will return a Promise (bound to `fn` if passed) so it could be chained, or hooked to recive errors"," *"," * ####Example:"," *     product.remove().then(function (product) {"," *        ..."," *     }).onRejected(function (err) {"," *        assert.ok(err)"," *     })"," *"," * @param {function(err,product)} [fn] optional callback"," * @return {Promise} Promise"," * @api public"," */","","Model.prototype.remove = function remove(options, fn) {","  if (typeof options === 'function') {","    fn = options;","    options = undefined;","  }","","  if (!options) {","    options = {};","  }","","  if (this.$__.removing) {","    if (fn) {","      this.$__.removing.then(","          function(res) { fn(null, res); },","          function(err) { fn(err); });","    }","    return this;","  }","","  var _this = this;","  var Promise = PromiseProvider.get();","","  if (fn) {","    fn = this.constructor.$wrapCallback(fn);","  }","","  this.$__.removing = new Promise.ES6(function(resolve, reject) {","    var where = _this.$__where();","    if (where instanceof Error) {","      reject(where);","      fn && fn(where);","      return;","    }","","    if (!options.safe && _this.schema.options.safe) {","      options.safe = _this.schema.options.safe;","    }","","    _this.collection.remove(where, options, function(err) {","      if (!err) {","        _this.emit('remove', _this);","        _this.constructor.emit('remove', _this);","        resolve(_this);","        fn && fn(null, _this);","        return;","      }","      reject(err);","      fn && fn(err);","    });","  });","  return this.$__.removing;","};","","/**"," * Returns another Model instance."," *"," * ####Example:"," *"," *     var doc = new Tank;"," *     doc.model('User').findById(id, callback);"," *"," * @param {String} name model name"," * @api public"," */","","Model.prototype.model = function model(name) {","  return this.db.model(name);","};","","/**"," * Adds a discriminator type."," *"," * ####Example:"," *"," *     function BaseSchema() {"," *       Schema.apply(this, arguments);"," *"," *       this.add({"," *         name: String,"," *         createdAt: Date"," *       });"," *     }"," *     util.inherits(BaseSchema, Schema);"," *"," *     var PersonSchema = new BaseSchema();"," *     var BossSchema = new BaseSchema({ department: String });"," *"," *     var Person = mongoose.model('Person', PersonSchema);"," *     var Boss = Person.discriminator('Boss', BossSchema);"," *"," * @param {String} name   discriminator model name"," * @param {Schema} schema discriminator model schema"," * @api public"," */","","Model.discriminator = function(name, schema) {","  if (typeof name === 'function') {","    name = utils.getFunctionName(name);","  }","","  schema = discriminator(this, name, schema);","  if (this.db.models[name]) {","    throw new OverwriteModelError(name);","  }","","  schema.$isRootDiscriminator = true;","","  this.discriminators[name] = this.db.model(name, schema, this.collection.name);","  var d = this.discriminators[name];","  d.prototype.__proto__ = this.prototype;","  Object.defineProperty(d, 'baseModelName', {","    value: this.modelName,","    configurable: true,","    writable: false","  });","","  // apply methods and statics","  applyMethods(d, schema);","  applyStatics(d, schema);","","  return d;","};","","// Model (class) features","","/*!"," * Give the constructor the ability to emit events."," */","","for (var i in EventEmitter.prototype) {","  Model[i] = EventEmitter.prototype[i];","}","","/**"," * Called when the model compiles."," *"," * @api private"," */","","Model.init = function init() {","  if ((this.schema.options.autoIndex) ||","      (this.schema.options.autoIndex === null && this.db.config.autoIndex)) {","    this.ensureIndexes({ __noPromise: true, _automatic: true });","  }","","  this.schema.emit('init', this);","};","","/**"," * Sends `ensureIndex` commands to mongo for each index declared in the schema."," *"," * ####Example:"," *"," *     Event.ensureIndexes(function (err) {"," *       if (err) return handleError(err);"," *     });"," *"," * After completion, an `index` event is emitted on this `Model` passing an error if one occurred."," *"," * ####Example:"," *"," *     var eventSchema = new Schema({ thing: { type: 'string', unique: true }})"," *     var Event = mongoose.model('Event', eventSchema);"," *"," *     Event.on('index', function (err) {"," *       if (err) console.error(err); // error occurred during index creation"," *     })"," *"," * _NOTE: It is not recommended that you run this in production. Index creation may impact database performance depending on your load. Use with caution._"," *"," * The `ensureIndex` commands are not sent in parallel. This is to avoid the `MongoError: cannot add index with a background operation in progress` error. See [this ticket](https://github.com/Automattic/mongoose/issues/1365) for more information."," *"," * @param {Object} [options] internal options"," * @param {Function} [cb] optional callback"," * @return {Promise}"," * @api public"," */","","Model.ensureIndexes = function ensureIndexes(options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","","  if (options && options.__noPromise) {","    _ensureIndexes(this, options, callback);","    return;","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  var _this = this;","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve, reject) {","    _ensureIndexes(_this, options || {}, function(error) {","      if (error) {","        callback && callback(error);","        reject(error);","      }","      callback && callback();","      resolve();","    });","  });","};","","function _ensureIndexes(model, options, callback) {","  var indexes = model.schema.indexes();","  if (!indexes.length) {","    setImmediate(function() {","      callback && callback();","    });","    return;","  }","  // Indexes are created one-by-one to support how MongoDB < 2.4 deals","  // with background indexes.","","  var done = function(err) {","    if (err && model.schema.options.emitIndexErrors) {","      model.emit('error', err);","    }","    model.emit('index', err);","    callback && callback(err);","  };","","  var indexSingleDone = function(err, fields, options, name) {","    model.emit('index-single-done', err, fields, options, name);","  };","  var indexSingleStart = function(fields, options) {","    model.emit('index-single-start', fields, options);","  };","","  var create = function() {","    var index = indexes.shift();","    if (!index) return done();","","    var indexFields = index[0];","    var options = index[1];","    _handleSafe(options);","","    indexSingleStart(indexFields, options);","","    model.collection.ensureIndex(indexFields, options, utils.tick(function(err, name) {","      indexSingleDone(err, indexFields, options, name);","      if (err) {","        return done(err);","      }","      create();","    }));","  };","","  setImmediate(function() {","    // If buffering is off, do this manually.","    if (options._automatic && !model.collection.collection) {","      model.collection.addQueue(create, []);","    } else {","      create();","    }","  });","}","","function _handleSafe(options) {","  if (options.safe) {","    if (typeof options.safe === 'boolean') {","      options.w = options.safe;","      delete options.safe;","    }","    if (typeof options.safe === 'object') {","      options.w = options.safe.w;","      options.j = options.safe.j;","      options.wtimeout = options.safe.wtimeout;","      delete options.safe;","    }","  }","}","","/**"," * Schema the model uses."," *"," * @property schema"," * @receiver Model"," * @api public"," */","","Model.schema;","","/*!"," * Connection instance the model uses."," *"," * @property db"," * @receiver Model"," * @api public"," */","","Model.db;","","/*!"," * Collection the model uses."," *"," * @property collection"," * @receiver Model"," * @api public"," */","","Model.collection;","","/**"," * Base Mongoose instance the model uses."," *"," * @property base"," * @receiver Model"," * @api public"," */","","Model.base;","","/**"," * Registered discriminators for this model."," *"," * @property discriminators"," * @receiver Model"," * @api public"," */","","Model.discriminators;","","/**"," * Removes the first document that matches `conditions` from the collection."," * To remove all documents that match `conditions`, set the `justOne` option"," * to false."," *"," * ####Example:"," *"," *     Character.remove({ name: 'Eddard Stark' }, function (err) {});"," *"," * ####Note:"," *"," * This method sends a remove command directly to MongoDB, no Mongoose documents are involved. Because no Mongoose documents are involved, _no middleware (hooks) are executed_."," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.remove = function remove(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","","  // get the mongodb collection object","  var mq = new this.Query(conditions, {}, this, this.collection);","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.remove(callback);","};","","/**"," * Deletes the first document that matches `conditions` from the collection."," * Behaves like `remove()`, but deletes at most one document regardless of the"," * `justOne` option."," *"," * ####Example:"," *"," *     Character.deleteOne({ name: 'Eddard Stark' }, function (err) {});"," *"," * ####Note:"," *"," * Like `Model.remove()`, this function does **not** trigger `pre('remove')` or `post('remove')` hooks."," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.deleteOne = function deleteOne(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","","  // get the mongodb collection object","  var mq = new this.Query(conditions, {}, this, this.collection);","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.deleteOne(callback);","};","","/**"," * Deletes the first document that matches `conditions` from the collection."," * Behaves like `remove()`, but deletes all documents that match `conditions`"," * regardless of the `justOne` option."," *"," * ####Example:"," *"," *     Character.deleteMany({ name: /Stark/, age: { $gte: 18 } }, function (err) {});"," *"," * ####Note:"," *"," * Like `Model.remove()`, this function does **not** trigger `pre('remove')` or `post('remove')` hooks."," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.deleteMany = function deleteMany(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","","  // get the mongodb collection object","  var mq = new this.Query(conditions, {}, this, this.collection);","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.deleteMany(callback);","};","","/**"," * Finds documents"," *"," * The `conditions` are cast to their respective SchemaTypes before the command is sent."," *"," * ####Examples:"," *"," *     // named john and at least 18"," *     MyModel.find({ name: 'john', age: { $gte: 18 }});"," *"," *     // executes immediately, passing results to callback"," *     MyModel.find({ name: 'john', age: { $gte: 18 }}, function (err, docs) {});"," *"," *     // name LIKE john and only selecting the \"name\" and \"friends\" fields, executing immediately"," *     MyModel.find({ name: /john/i }, 'name friends', function (err, docs) { })"," *"," *     // passing options"," *     MyModel.find({ name: /john/i }, null, { skip: 10 })"," *"," *     // passing options and executing immediately"," *     MyModel.find({ name: /john/i }, null, { skip: 10 }, function (err, docs) {});"," *"," *     // executing a query explicitly"," *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 })"," *     query.exec(function (err, docs) {});"," *"," *     // using the promise returned from executing a query"," *     var query = MyModel.find({ name: /john/i }, null, { skip: 10 });"," *     var promise = query.exec();"," *     promise.addBack(function (err, docs) {});"," *"," * @param {Object} conditions"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see promise #promise-js"," * @api public"," */","","Model.find = function find(conditions, projection, options, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","    projection = null;","    options = null;","  } else if (typeof projection === 'function') {","    callback = projection;","    projection = null;","    options = null;","  } else if (typeof options === 'function') {","    callback = options;","    options = null;","  }","","  var mq = new this.Query({}, {}, this, this.collection);","  mq.select(projection);","  mq.setOptions(options);","  if (this.schema.discriminatorMapping && mq.selectedInclusively()) {","    mq.select(this.schema.options.discriminatorKey);","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.find(conditions, callback);","};","","/**"," * Finds a single document by its _id field. `findById(id)` is almost*"," * equivalent to `findOne({ _id: id })`. If you want to query by a document's"," * `_id`, use `findById()` instead of `findOne()`."," *"," * The `id` is cast based on the Schema before sending the command."," *"," * Note: `findById()` triggers `findOne` hooks."," *"," * * Except for how it treats `undefined`. If you use `findOne()`, you'll see"," * that `findOne(undefined)` and `findOne({ _id: undefined })` are equivalent"," * to `findOne({})` and return arbitrary documents. However, mongoose"," * translates `findById(undefined)` into `findOne({ _id: null })`."," *"," * ####Example:"," *"," *     // find adventure by id and execute immediately"," *     Adventure.findById(id, function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findById(id).exec(callback);"," *"," *     // select only the adventures name and length"," *     Adventure.findById(id, 'name length', function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findById(id, 'name length').exec(callback);"," *"," *     // include all properties except for `length`"," *     Adventure.findById(id, '-length').exec(function (err, adventure) {});"," *"," *     // passing options (in this case return the raw js objects, not mongoose documents by passing `lean`"," *     Adventure.findById(id, 'name', { lean: true }, function (err, doc) {});"," *"," *     // same as above"," *     Adventure.findById(id, 'name').lean().exec(function (err, doc) {});"," *"," * @param {Object|String|Number} id value of `_id` to query by"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see lean queries #query_Query-lean"," * @api public"," */","","Model.findById = function findById(id, projection, options, callback) {","  if (typeof id === 'undefined') {","    id = null;","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return this.findOne({_id: id}, projection, options, callback);","};","","/**"," * Finds one document."," *"," * The `conditions` are cast to their respective SchemaTypes before the command is sent."," *"," * *Note:* `conditions` is optional, and if `conditions` is null or undefined,"," * mongoose will send an empty `findOne` command to MongoDB, which will return"," * an arbitrary document. If you're querying by `_id`, use `findById()` instead."," *"," * ####Example:"," *"," *     // find one iphone adventures - iphone adventures??"," *     Adventure.findOne({ type: 'iphone' }, function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }).exec(function (err, adventure) {});"," *"," *     // select only the adventures name"," *     Adventure.findOne({ type: 'iphone' }, 'name', function (err, adventure) {});"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }, 'name').exec(function (err, adventure) {});"," *"," *     // specify options, in this case lean"," *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }, callback);"," *"," *     // same as above"," *     Adventure.findOne({ type: 'iphone' }, 'name', { lean: true }).exec(callback);"," *"," *     // chaining findOne queries (same as above)"," *     Adventure.findOne({ type: 'iphone' }).select('name').lean().exec(callback);"," *"," * @param {Object} [conditions]"," * @param {Object} [projection] optional fields to return (http://bit.ly/1HotzBo)"," * @param {Object} [options] optional"," * @param {Function} [callback]"," * @return {Query}"," * @see field selection #query_Query-select"," * @see lean queries #query_Query-lean"," * @api public"," */","","Model.findOne = function findOne(conditions, projection, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  } else if (typeof projection === 'function') {","    callback = projection;","    projection = null;","    options = null;","  } else if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","    projection = null;","    options = null;","  }","","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","  mq.select(projection);","  mq.setOptions(options);","  if (this.schema.discriminatorMapping && mq.selectedInclusively()) {","    mq.select(this.schema.options.discriminatorKey);","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.findOne(conditions, callback);","};","","/**"," * Counts number of matching documents in a database collection."," *"," * ####Example:"," *"," *     Adventure.count({ type: 'jungle' }, function (err, count) {"," *       if (err) .."," *       console.log('there are %d jungle adventures', count);"," *     });"," *"," * @param {Object} conditions"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.count = function count(conditions, callback) {","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.count(conditions, callback);","};","","/**"," * Creates a Query for a `distinct` operation."," *"," * Passing a `callback` immediately executes the query."," *"," * ####Example"," *"," *     Link.distinct('url', { clicks: {$gt: 100}}, function (err, result) {"," *       if (err) return handleError(err);"," *"," *       assert(Array.isArray(result));"," *       console.log('unique urls with more than 100 clicks', result);"," *     })"," *"," *     var query = Link.distinct('url');"," *     query.exec(callback);"," *"," * @param {String} field"," * @param {Object} [conditions] optional"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.distinct = function distinct(field, conditions, callback) {","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection);","","  if (typeof conditions === 'function') {","    callback = conditions;","    conditions = {};","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return mq.distinct(field, conditions, callback);","};","","/**"," * Creates a Query, applies the passed conditions, and returns the Query."," *"," * For example, instead of writing:"," *"," *     User.find({age: {$gte: 21, $lte: 65}}, callback);"," *"," * we can instead write:"," *"," *     User.where('age').gte(21).lte(65).exec(callback);"," *"," * Since the Query class also supports `where` you can continue chaining"," *"," *     User"," *     .where('age').gte(21).lte(65)"," *     .where('name', /^b/i)"," *     ... etc"," *"," * @param {String} path"," * @param {Object} [val] optional value"," * @return {Query}"," * @api public"," */","","Model.where = function where(path, val) {","  void val; // eslint","  // get the mongodb collection object","  var mq = new this.Query({}, {}, this, this.collection).find({});","  return mq.where.apply(mq, arguments);","};","","/**"," * Creates a `Query` and specifies a `$where` condition."," *"," * Sometimes you need to query for things in mongodb using a JavaScript expression. You can do so via `find({ $where: javascript })`, or you can use the mongoose shortcut method $where via a Query chain or from your mongoose Model."," *"," *     Blog.$where('this.username.indexOf(\"val\") !== -1').exec(function (err, docs) {});"," *"," * @param {String|Function} argument is a javascript string or anonymous function"," * @method $where"," * @memberOf Model"," * @return {Query}"," * @see Query.$where #query_Query-%24where"," * @api public"," */","","Model.$where = function $where() {","  var mq = new this.Query({}, {}, this, this.collection).find({});","  return mq.$where.apply(mq, arguments);","};","","/**"," * Issues a mongodb findAndModify update command."," *"," * Finds a matching document, updates it according to the `update` arg, passing any `options`, and returns the found document (if any) to the callback. The query executes immediately if `callback` is passed else a Query object is returned."," *"," * ####Options:"," *"," * - `new`: bool - if true, return the modified document rather than the original. defaults to false (changed in 4.0)"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `fields`: {Object|String} - Field selection. Equivalent to `.select(fields).findOneAndUpdate()`"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB >= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `strict`: overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict) for this update"," *"," *"," * ####Examples:"," *"," *     A.findOneAndUpdate(conditions, update, options, callback) // executes"," *     A.findOneAndUpdate(conditions, update, options)  // returns Query"," *     A.findOneAndUpdate(conditions, update, callback) // executes"," *     A.findOneAndUpdate(conditions, update)           // returns Query"," *     A.findOneAndUpdate()                             // returns Query"," *"," * ####Note:"," *"," * All top level update keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     var query = { name: 'borne' };"," *     Model.findOneAndUpdate(query, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.findOneAndUpdate(query, { $set: { name: 'jason borne' }}, options, callback)"," *"," * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object} [conditions]"," * @param {Object} [update]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findOneAndUpdate = function(conditions, update, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = null;","  } else if (arguments.length === 1) {","    if (typeof conditions === 'function') {","      var msg = 'Model.findOneAndUpdate(): First argument must not be a function.\\n\\n'","          + '  ' + this.modelName + '.findOneAndUpdate(conditions, update, options, callback)\\n'","          + '  ' + this.modelName + '.findOneAndUpdate(conditions, update, options)\\n'","          + '  ' + this.modelName + '.findOneAndUpdate(conditions, update)\\n'","          + '  ' + this.modelName + '.findOneAndUpdate(update)\\n'","          + '  ' + this.modelName + '.findOneAndUpdate()\\n';","      throw new TypeError(msg);","    }","    update = conditions;","    conditions = undefined;","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  var fields;","  if (options && options.fields) {","    fields = options.fields;","  }","","  update = utils.clone(update, {depopulate: 1, _isNested: true});","  if (this.schema.options.versionKey && options && options.upsert) {","    if (!update.$setOnInsert) {","      update.$setOnInsert = {};","    }","    update.$setOnInsert[this.schema.options.versionKey] = 0;","  }","","  var mq = new this.Query({}, {}, this, this.collection);","  mq.select(fields);","","  return mq.findOneAndUpdate(conditions, update, options, callback);","};","","/**"," * Issues a mongodb findAndModify update command by a document's _id field."," * `findByIdAndUpdate(id, ...)` is equivalent to `findOneAndUpdate({ _id: id }, ...)`."," *"," * Finds a matching document, updates it according to the `update` arg,"," * passing any `options`, and returns the found document (if any) to the"," * callback. The query executes immediately if `callback` is passed else a"," * Query object is returned."," *"," * This function triggers `findOneAndUpdate` middleware."," *"," * ####Options:"," *"," * - `new`: bool - true to return the modified document rather than the original. defaults to false"," * - `upsert`: bool - creates the object if it doesn't exist. defaults to false."," * - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," * - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB >= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `select`: sets the document fields to return"," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `strict`: overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict) for this update"," *"," * ####Examples:"," *"," *     A.findByIdAndUpdate(id, update, options, callback) // executes"," *     A.findByIdAndUpdate(id, update, options)  // returns Query"," *     A.findByIdAndUpdate(id, update, callback) // executes"," *     A.findByIdAndUpdate(id, update)           // returns Query"," *     A.findByIdAndUpdate()                     // returns Query"," *"," * ####Note:"," *"," * All top level update keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     Model.findByIdAndUpdate(id, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.findByIdAndUpdate(id, { $set: { name: 'jason borne' }}, options, callback)"," *"," * This helps prevent accidentally overwriting your document with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object|Number|String} id value of `_id` to query by"," * @param {Object} [update]"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see Model.findOneAndUpdate #model_Model.findOneAndUpdate"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findByIdAndUpdate = function(id, update, options, callback) {","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","  if (arguments.length === 1) {","    if (typeof id === 'function') {","      var msg = 'Model.findByIdAndUpdate(): First argument must not be a function.\\n\\n'","          + '  ' + this.modelName + '.findByIdAndUpdate(id, callback)\\n'","          + '  ' + this.modelName + '.findByIdAndUpdate(id)\\n'","          + '  ' + this.modelName + '.findByIdAndUpdate()\\n';","      throw new TypeError(msg);","    }","    return this.findOneAndUpdate({_id: id}, undefined);","  }","","  // if a model is passed in instead of an id","  if (id instanceof Document) {","    id = id._id;","  }","","  return this.findOneAndUpdate.call(this, {_id: id}, update, options, callback);","};","","/**"," * Issue a mongodb findAndModify remove command."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback."," *"," * Executes immediately if `callback` is passed else a Query object is returned."," *"," * ####Options:"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `maxTimeMS`: puts a time limit on the query - requires mongodb >= 2.6.0"," * - `select`: sets the document fields to return"," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `strict`: overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict) for this update"," *"," * ####Examples:"," *"," *     A.findOneAndRemove(conditions, options, callback) // executes"," *     A.findOneAndRemove(conditions, options)  // return Query"," *     A.findOneAndRemove(conditions, callback) // executes"," *     A.findOneAndRemove(conditions) // returns Query"," *     A.findOneAndRemove()           // returns Query"," *"," * Values are cast to their appropriate types when using the findAndModify helpers."," * However, the below are never executed."," *"," * - defaults"," * - setters"," *"," * `findAndModify` helpers support limited defaults and validation. You can"," * enable these by setting the `setDefaultsOnInsert` and `runValidators` options,"," * respectively."," *"," * If you need full-fledged validation, use the traditional approach of first"," * retrieving the document."," *"," *     Model.findById(id, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     });"," *"," * @param {Object} conditions"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," * @api public"," */","","Model.findOneAndRemove = function(conditions, options, callback) {","  if (arguments.length === 1 && typeof conditions === 'function') {","    var msg = 'Model.findOneAndRemove(): First argument must not be a function.\\n\\n'","        + '  ' + this.modelName + '.findOneAndRemove(conditions, callback)\\n'","        + '  ' + this.modelName + '.findOneAndRemove(conditions)\\n'","        + '  ' + this.modelName + '.findOneAndRemove()\\n';","    throw new TypeError(msg);","  }","","  if (typeof options === 'function') {","    callback = options;","    options = undefined;","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  var fields;","  if (options) {","    fields = options.select;","    options.select = undefined;","  }","","  var mq = new this.Query({}, {}, this, this.collection);","  mq.select(fields);","","  return mq.findOneAndRemove(conditions, options, callback);","};","","/**"," * Issue a mongodb findAndModify remove command by a document's _id field. `findByIdAndRemove(id, ...)` is equivalent to `findOneAndRemove({ _id: id }, ...)`."," *"," * Finds a matching document, removes it, passing the found document (if any) to the callback."," *"," * Executes immediately if `callback` is passed, else a `Query` object is returned."," *"," * ####Options:"," *"," * - `sort`: if multiple docs are found by the conditions, sets the sort order to choose which doc to update"," * - `select`: sets the document fields to return"," * - `passRawResult`: if true, passes the [raw result from the MongoDB driver as the third callback parameter](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#findAndModify)"," * - `strict`: overwrites the schema's [strict mode option](http://mongoosejs.com/docs/guide.html#strict) for this update"," *"," * ####Examples:"," *"," *     A.findByIdAndRemove(id, options, callback) // executes"," *     A.findByIdAndRemove(id, options)  // return Query"," *     A.findByIdAndRemove(id, callback) // executes"," *     A.findByIdAndRemove(id) // returns Query"," *     A.findByIdAndRemove()           // returns Query"," *"," * @param {Object|Number|String} id value of `_id` to query by"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @see Model.findOneAndRemove #model_Model.findOneAndRemove"," * @see mongodb http://www.mongodb.org/display/DOCS/findAndModify+Command"," */","","Model.findByIdAndRemove = function(id, options, callback) {","  if (arguments.length === 1 && typeof id === 'function') {","    var msg = 'Model.findByIdAndRemove(): First argument must not be a function.\\n\\n'","        + '  ' + this.modelName + '.findByIdAndRemove(id, callback)\\n'","        + '  ' + this.modelName + '.findByIdAndRemove(id)\\n'","        + '  ' + this.modelName + '.findByIdAndRemove()\\n';","    throw new TypeError(msg);","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  return this.findOneAndRemove({_id: id}, options, callback);","};","","/**"," * Shortcut for saving one or more documents to the database."," * `MyModel.create(docs)` does `new MyModel(doc).save()` for every doc in"," * docs."," *"," * Hooks Triggered:"," * - `save()`"," *"," * ####Example:"," *"," *     // pass individual docs"," *     Candy.create({ type: 'jelly bean' }, { type: 'snickers' }, function (err, jellybean, snickers) {"," *       if (err) // ..."," *     });"," *"," *     // pass an array"," *     var array = [{ type: 'jelly bean' }, { type: 'snickers' }];"," *     Candy.create(array, function (err, candies) {"," *       if (err) // ..."," *"," *       var jellybean = candies[0];"," *       var snickers = candies[1];"," *       // ..."," *     });"," *"," *     // callback is optional; use the returned promise if you like:"," *     var promise = Candy.create({ type: 'jawbreaker' });"," *     promise.then(function (jawbreaker) {"," *       // ..."," *     })"," *"," * @param {Array|Object|*} doc(s)"," * @param {Function} [callback] callback"," * @return {Promise}"," * @api public"," */","","Model.create = function create(doc, callback) {","  var args;","  var cb;","  var discriminatorKey = this.schema.options.discriminatorKey;","","  if (Array.isArray(doc)) {","    args = doc;","    cb = callback;","  } else {","    var last = arguments[arguments.length - 1];","    // Handle falsy callbacks re: #5061","    if (typeof last === 'function' || !last) {","      cb = last;","      args = utils.args(arguments, 0, arguments.length - 1);","    } else {","      args = utils.args(arguments);","    }","  }","","  var Promise = PromiseProvider.get();","  var _this = this;","  if (cb) {","    cb = this.$wrapCallback(cb);","  }","","  var promise = new Promise.ES6(function(resolve, reject) {","    if (args.length === 0) {","      setImmediate(function() {","        cb && cb(null);","        resolve(null);","      });","      return;","    }","","    var toExecute = [];","    args.forEach(function(doc) {","      toExecute.push(function(callback) {","        var Model = _this.discriminators && doc[discriminatorKey] ?","          _this.discriminators[doc[discriminatorKey]] :","          _this;","        var toSave = doc instanceof Model ? doc : new Model(doc);","        var callbackWrapper = function(error, doc) {","          if (error) {","            return callback(error);","          }","          callback(null, doc);","        };","","        // Hack to avoid getting a promise because of","        // $__registerHooksFromSchema","        if (toSave.$__original_save) {","          toSave.$__original_save({ __noPromise: true }, callbackWrapper);","        } else {","          toSave.save({ __noPromise: true }, callbackWrapper);","        }","      });","    });","","    parallel(toExecute, function(error, savedDocs) {","      if (error) {","        if (cb) {","          cb(error);","        } else {","          reject(error);","        }","        return;","      }","","      if (doc instanceof Array) {","        resolve(savedDocs);","        cb && cb.call(_this, null, savedDocs);","      } else {","        resolve.apply(promise, savedDocs);","        if (cb) {","          savedDocs.unshift(null);","          cb.apply(_this, savedDocs);","        }","      }","    });","  });","","  return promise;","};","","/**"," * Shortcut for validating an array of documents and inserting them into"," * MongoDB if they're all valid. This function is faster than `.create()`"," * because it only sends one operation to the server, rather than one for each"," * document."," *"," * This function does **not** trigger save middleware."," *"," * ####Example:"," *"," *     var arr = [{ name: 'Star Wars' }, { name: 'The Empire Strikes Back' }];"," *     Movies.insertMany(arr, function(error, docs) {});"," *"," * @param {Array|Object|*} doc(s)"," * @param {Object} [options] see the [mongodb driver options](http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#insertMany)"," * @param {Function} [callback] callback"," * @return {Promise}"," * @api public"," */","","Model.insertMany = function(arr, options, callback) {","  var _this = this;","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  if (!Array.isArray(arr)) {","    arr = [arr];","  }","","  var toExecute = [];","  arr.forEach(function(doc) {","    toExecute.push(function(callback) {","      doc = new _this(doc);","      doc.validate({ __noPromise: true }, function(error) {","        if (error) {","          // Option `ordered` signals that insert should be continued after reaching","          // a failing insert. Therefore we delegate \"null\", meaning the validation","          // failed. It's up to the next function to filter out all failed models","          if (options != null && typeof options === 'object' && options['ordered'] === false) {","            return callback(null, null);","          }","          return callback(error);","        }","        callback(null, doc);","      });","    });","  });","","  parallel(toExecute, function(error, docs) {","    if (error) {","      callback && callback(error);","      return;","    }","    // We filter all failed pre-validations by removing nulls","    var docAttributes = docs.filter(function(doc) {","      return doc != null;","    });","    // Quickly escape while there aren't any valid docAttributes","    if (docAttributes.length < 1) {","      callback && callback(null, []);","      return;","    }","    var docObjects = docAttributes.map(function(doc) {","      if (doc.schema.options.versionKey) {","        doc[doc.schema.options.versionKey] = 0;","      }","      if (doc.initializeTimestamps) {","        return doc.initializeTimestamps().toObject(POJO_TO_OBJECT_OPTIONS);","      }","      return doc.toObject(POJO_TO_OBJECT_OPTIONS);","    });","    _this.collection.insertMany(docObjects, options, function(error) {","      if (error) {","        callback && callback(error);","        return;","      }","      for (var i = 0; i < docAttributes.length; ++i) {","        docAttributes[i].isNew = false;","        docAttributes[i].emit('isNew', false);","        docAttributes[i].constructor.emit('isNew', false);","      }","      callback && callback(null, docAttributes);","    });","  });","};","","/**"," * Sends multiple `insertOne`, `updateOne`, `updateMany`, `replaceOne`,"," * `deleteOne`, and/or `deleteMany` operations to the MongoDB server in one"," * command. This is faster than sending multiple independent operations because"," * with `bulkWrite()` there is only one round trip to the server."," *"," * Mongoose will perform casting on all operations you provide."," *"," * This function does **not** trigger any middleware."," *"," * ####Example:"," *"," *     Character.bulkWrite(["," *       {"," *         insertOne: {"," *           document: {"," *             name: 'Eddard Stark',"," *             title: 'Warden of the North'"," *           }"," *         }"," *       },"," *       {"," *         updateOne: {"," *           filter: { name: 'Eddard Stark' },"," *           // Mongoose inserts `$set` for you in the update below"," *           update: { title: 'Hand of the King' }"," *         }"," *       },"," *       {"," *         deleteOne: {"," *           { name: 'Eddard Stark' }"," *         }"," *       }"," *     ]).then(handleResult);"," *"," * @param {Array} ops"," * @param {Object} [options]"," * @param {Function} [callback] callback `function(error, bulkWriteOpResult) {}`"," * @return {Promise} resolves to a `BulkWriteOpResult` if the operation succeeds"," * @see writeOpResult http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#~BulkWriteOpResult"," * @api public"," */","","Model.bulkWrite = function(ops, options, callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","  if (typeof options === 'function') {","    callback = options;","    options = null;","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","  options = options || {};","","  var validations = ops.map(function(op) {","    if (op['insertOne']) {","      return function(callback) {","        op['insertOne']['document'] = new _this(op['insertOne']['document']);","        op['insertOne']['document'].validate({ __noPromise: true }, function(error) {","          if (error) {","            return callback(error);","          }","          callback(null);","        });","      };","    } else if (op['updateOne']) {","      return function(callback) {","        try {","          op['updateOne']['filter'] = cast(_this.schema,","            op['updateOne']['filter']);","          op['updateOne']['update'] = castUpdate(_this.schema,","            op['updateOne']['update'], _this.schema.options.strict);","        } catch (error) {","          return callback(error);","        }","","        callback(null);","      };","    } else if (op['updateMany']) {","      return function(callback) {","        try {","          op['updateMany']['filter'] = cast(_this.schema,","            op['updateMany']['filter']);","          op['updateMany']['update'] = castUpdate(_this.schema, op['updateMany']['filter'], {","            strict: _this.schema.options.strict,","            overwrite: false","          });","        } catch (error) {","          return callback(error);","        }","","        callback(null);","      };","    } else if (op['replaceOne']) {","      return function(callback) {","        try {","          op['replaceOne']['filter'] = cast(_this.schema,","            op['replaceOne']['filter']);","        } catch (error) {","          return callback(error);","        }","","        // set `skipId`, otherwise we get \"_id field cannot be changed\"","        op['replaceOne']['replacement'] =","          new _this(op['replaceOne']['replacement'], null, true);","        op['replaceOne']['replacement'].validate({ __noPromise: true }, function(error) {","          if (error) {","            return callback(error);","          }","          callback(null);","        });","      };","    } else if (op['deleteOne']) {","      return function(callback) {","        try {","          op['deleteOne']['filter'] = cast(_this.schema,","            op['deleteOne']['filter']);","        } catch (error) {","          return callback(error);","        }","","        callback(null);","      };","    } else if (op['deleteMany']) {","      return function(callback) {","        try {","          op['deleteMany']['filter'] = cast(_this.schema,","            op['deleteMany']['filter']);","        } catch (error) {","          return callback(error);","        }","","        callback(null);","      };","    } else {","      return function(callback) {","        callback(new Error('Invalid op passed to `bulkWrite()`'));","      };","    }","  });","","  var promise = new Promise.ES6(function(resolve, reject) {","    parallel(validations, function(error) {","      if (error) {","        callback && callback(error);","        return reject(error);","      }","","      _this.collection.bulkWrite(ops, options, function(error, res) {","        if (error) {","          callback && callback(error);","          return reject(error);","        }","","        callback && callback(null, res);","        resolve(res);","      });","    });","  });","","  return promise;","};","","/**"," * Shortcut for creating a new Document from existing raw data, pre-saved in the DB."," * The document returned has no paths marked as modified initially."," *"," * ####Example:"," *"," *     // hydrate previous data into a Mongoose document"," *     var mongooseCandy = Candy.hydrate({ _id: '54108337212ffb6d459f854c', type: 'jelly bean' });"," *"," * @param {Object} obj"," * @return {Document}"," * @api public"," */","","Model.hydrate = function(obj) {","  var model = require('./queryhelpers').createModel(this, obj);","  model.init(obj);","  return model;","};","","/**"," * Updates one document in the database without returning it."," *"," * ####Examples:"," *"," *     MyModel.update({ age: { $gt: 18 } }, { oldEnough: true }, fn);"," *     MyModel.update({ name: 'Tobi' }, { ferret: true }, { multi: true }, function (err, raw) {"," *       if (err) return handleError(err);"," *       console.log('The raw response from Mongo was ', raw);"," *     });"," *"," * ####Valid options:"," *"," *  - `safe` (boolean) safe mode (defaults to value set in schema (true))"," *  - `upsert` (boolean) whether to create the doc if it doesn't match (false)"," *  - `multi` (boolean) whether multiple documents should be updated (false)"," *  - `runValidators`: if true, runs [update validators](/docs/validation.html#update-validators) on this command. Update validators validate the update operation against the model's schema."," *  - `setDefaultsOnInsert`: if this and `upsert` are true, mongoose will apply the [defaults](http://mongoosejs.com/docs/defaults.html) specified in the model's schema if a new document is created. This option only works on MongoDB >= 2.4 because it relies on [MongoDB's `$setOnInsert` operator](https://docs.mongodb.org/v2.4/reference/operator/update/setOnInsert/)."," *  - `strict` (boolean) overrides the `strict` option for this update"," *  - `overwrite` (boolean) disables update-only mode, allowing you to overwrite the doc (false)"," *"," * All `update` values are cast to their appropriate SchemaTypes before being sent."," *"," * The `callback` function receives `(err, rawResponse)`."," *"," * - `err` is the error if any occurred"," * - `rawResponse` is the full response from Mongo"," *"," * ####Note:"," *"," * All top level keys which are not `atomic` operation names are treated as set operations:"," *"," * ####Example:"," *"," *     var query = { name: 'borne' };"," *     Model.update(query, { name: 'jason borne' }, options, callback)"," *"," *     // is sent as"," *     Model.update(query, { $set: { name: 'jason borne' }}, options, callback)"," *     // if overwrite option is false. If overwrite is true, sent without the $set wrapper."," *"," * This helps prevent accidentally overwriting all documents in your collection with `{ name: 'jason borne' }`."," *"," * ####Note:"," *"," * Be careful to not use an existing model instance for the update clause (this won't work and can cause weird behavior like infinite loops). Also, ensure that the update clause does not have an _id property, which causes Mongo to return a \"Mod on _id not allowed\" error."," *"," * ####Note:"," *"," * To update documents without waiting for a response from MongoDB, do not pass a `callback`, then call `exec` on the returned [Query](#query-js):"," *"," *     Comment.update({ _id: id }, { $set: { text: 'changed' }}).exec();"," *"," * ####Note:"," *"," * Although values are casted to their appropriate types when using update, the following are *not* applied:"," *"," * - defaults"," * - setters"," * - validators"," * - middleware"," *"," * If you need those features, use the traditional approach of first retrieving the document."," *"," *     Model.findOne({ name: 'borne' }, function (err, doc) {"," *       if (err) .."," *       doc.name = 'jason borne';"," *       doc.save(callback);"," *     })"," *"," * @see strict http://mongoosejs.com/docs/guide.html#strict"," * @see response http://docs.mongodb.org/v2.6/reference/command/update/#output"," * @param {Object} conditions"," * @param {Object} doc"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.update = function update(conditions, doc, options, callback) {","  return _update(this, 'update', conditions, doc, options, callback);","};","","/**"," * Same as `update()`, except MongoDB will update _all_ documents that match"," * `criteria` (as opposed to just the first one) regardless of the value of"," * the `multi` option."," *"," * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`"," * and `post('updateMany')` instead."," *"," * @param {Object} conditions"," * @param {Object} doc"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.updateMany = function updateMany(conditions, doc, options, callback) {","  return _update(this, 'updateMany', conditions, doc, options, callback);","};","","/**"," * Same as `update()`, except MongoDB will update _only_ the first document that"," * matches `criteria` regardless of the value of the `multi` option."," *"," * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`"," * and `post('updateMany')` instead."," *"," * @param {Object} conditions"," * @param {Object} doc"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.updateOne = function updateOne(conditions, doc, options, callback) {","  return _update(this, 'updateOne', conditions, doc, options, callback);","};","","/**"," * Same as `update()`, except MongoDB replace the existing document with the"," * given document (no atomic operators like `$set`)."," *"," * **Note** updateMany will _not_ fire update middleware. Use `pre('updateMany')`"," * and `post('updateMany')` instead."," *"," * @param {Object} conditions"," * @param {Object} doc"," * @param {Object} [options]"," * @param {Function} [callback]"," * @return {Query}"," * @api public"," */","","Model.replaceOne = function replaceOne(conditions, doc, options, callback) {","  return _update(this, 'replaceOne', conditions, doc, options, callback);","};","","/*!"," * ignore"," */","","function _update(model, op, conditions, doc, options, callback) {","  var mq = new model.Query({}, {}, model, model.collection);","  if (callback) {","    callback = model.$wrapCallback(callback);","  }","  // gh-2406","  // make local deep copy of conditions","  if (conditions instanceof Document) {","    conditions = conditions.toObject();","  } else {","    conditions = utils.clone(conditions, {retainKeyOrder: true});","  }","  options = typeof options === 'function' ? options : utils.clone(options);","","  if (model.schema.options.versionKey && options && options.upsert) {","    if (options.overwrite) {","      doc[model.schema.options.versionKey] = 0;","    } else {","      if (!doc.$setOnInsert) {","        doc.$setOnInsert = {};","      }","      doc.$setOnInsert[model.schema.options.versionKey] = 0;","    }","  }","","  return mq[op](conditions, doc, options, callback);","}","","/**"," * Executes a mapReduce command."," *"," * `o` is an object specifying all mapReduce options as well as the map and reduce functions. All options are delegated to the driver implementation. See [node-mongodb-native mapReduce() documentation](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html#mapreduce) for more detail about options."," *"," * ####Example:"," *"," *     var o = {};"," *     o.map = function () { emit(this.name, 1) }"," *     o.reduce = function (k, vals) { return vals.length }"," *     User.mapReduce(o, function (err, results) {"," *       console.log(results)"," *     })"," *"," * ####Other options:"," *"," * - `query` {Object} query filter object."," * - `sort` {Object} sort input objects using this key"," * - `limit` {Number} max number of documents"," * - `keeptemp` {Boolean, default:false} keep temporary data"," * - `finalize` {Function} finalize function"," * - `scope` {Object} scope variables exposed to map/reduce/finalize during execution"," * - `jsMode` {Boolean, default:false} it is possible to make the execution stay in JS. Provided in MongoDB > 2.0.X"," * - `verbose` {Boolean, default:false} provide statistics on job execution time."," * - `readPreference` {String}"," * - `out*` {Object, default: {inline:1}} sets the output target for the map reduce job."," *"," * ####* out options:"," *"," * - `{inline:1}` the results are returned in an array"," * - `{replace: 'collectionName'}` add the results to collectionName: the results replace the collection"," * - `{reduce: 'collectionName'}` add the results to collectionName: if dups are detected, uses the reducer / finalize functions"," * - `{merge: 'collectionName'}` add the results to collectionName: if dups exist the new docs overwrite the old"," *"," * If `options.out` is set to `replace`, `merge`, or `reduce`, a Model instance is returned that can be used for further querying. Queries run against this model are all executed with the `lean` option; meaning only the js object is returned and no Mongoose magic is applied (getters, setters, etc)."," *"," * ####Example:"," *"," *     var o = {};"," *     o.map = function () { emit(this.name, 1) }"," *     o.reduce = function (k, vals) { return vals.length }"," *     o.out = { replace: 'createdCollectionNameForResults' }"," *     o.verbose = true;"," *"," *     User.mapReduce(o, function (err, model, stats) {"," *       console.log('map reduce took %d ms', stats.processtime)"," *       model.find().where('value').gt(10).exec(function (err, docs) {"," *         console.log(docs);"," *       });"," *     })"," *"," *     // `mapReduce()` returns a promise. However, ES6 promises can only"," *     // resolve to exactly one value,"," *     o.resolveToObject = true;"," *     var promise = User.mapReduce(o);"," *     promise.then(function (res) {"," *       var model = res.model;"," *       var stats = res.stats;"," *       console.log('map reduce took %d ms', stats.processtime)"," *       return model.find().where('value').gt(10).exec();"," *     }).then(function (docs) {"," *        console.log(docs);"," *     }).then(null, handleError).end()"," *"," * @param {Object} o an object specifying map-reduce options"," * @param {Function} [callback] optional callback"," * @see http://www.mongodb.org/display/DOCS/MapReduce"," * @return {Promise}"," * @api public"," */","","Model.mapReduce = function mapReduce(o, callback) {","  var _this = this;","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","  var resolveToObject = o.resolveToObject;","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve, reject) {","    if (!Model.mapReduce.schema) {","      var opts = {noId: true, noVirtualId: true, strict: false};","      Model.mapReduce.schema = new Schema({}, opts);","    }","","    if (!o.out) o.out = {inline: 1};","    if (o.verbose !== false) o.verbose = true;","","    o.map = String(o.map);","    o.reduce = String(o.reduce);","","    if (o.query) {","      var q = new _this.Query(o.query);","      q.cast(_this);","      o.query = q._conditions;","      q = undefined;","    }","","    _this.collection.mapReduce(null, null, o, function(err, ret, stats) {","      if (err) {","        callback && callback(err);","        reject(err);","        return;","      }","","      if (ret.findOne && ret.mapReduce) {","        // returned a collection, convert to Model","        var model = Model.compile(","            '_mapreduce_' + ret.collectionName","            , Model.mapReduce.schema","            , ret.collectionName","            , _this.db","            , _this.base);","","        model._mapreduce = true;","","        callback && callback(null, model, stats);","        return resolveToObject ? resolve({","          model: model,","          stats: stats","        }) : resolve(model, stats);","      }","","      callback && callback(null, ret, stats);","      if (resolveToObject) {","        return resolve({ model: ret, stats: stats });","      }","      resolve(ret, stats);","    });","  });","};","","/**"," * geoNear support for Mongoose"," *"," * ####Options:"," * - `lean` {Boolean} return the raw object"," * - All options supported by the driver are also supported"," *"," * ####Example:"," *"," *     // Legacy point"," *     Model.geoNear([1,3], { maxDistance : 5, spherical : true }, function(err, results, stats) {"," *        console.log(results);"," *     });"," *"," *     // geoJson"," *     var point = { type : \"Point\", coordinates : [9,9] };"," *     Model.geoNear(point, { maxDistance : 5, spherical : true }, function(err, results, stats) {"," *        console.log(results);"," *     });"," *"," * @param {Object|Array} GeoJSON point or legacy coordinate pair [x,y] to search near"," * @param {Object} options for the query"," * @param {Function} [callback] optional callback for the query"," * @return {Promise}"," * @see http://docs.mongodb.org/manual/core/2dsphere/"," * @see http://mongodb.github.io/node-mongodb-native/api-generated/collection.html?highlight=geonear#geoNear"," * @api public"," */","","Model.geoNear = function(near, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  var _this = this;","  var Promise = PromiseProvider.get();","  if (!near) {","    return new Promise.ES6(function(resolve, reject) {","      var error = new Error('Must pass a near option to geoNear');","      reject(error);","      callback && callback(error);","    });","  }","","  var x, y;","","  return new Promise.ES6(function(resolve, reject) {","    var handler = function(err, res) {","      if (err) {","        reject(err);","        callback && callback(err);","        return;","      }","      if (options.lean) {","        resolve(res.results, res.stats);","        callback && callback(null, res.results, res.stats);","        return;","      }","","      var count = res.results.length;","      // if there are no results, fulfill the promise now","      if (count === 0) {","        resolve(res.results, res.stats);","        callback && callback(null, res.results, res.stats);","        return;","      }","","      var errSeen = false;","","      function init(err) {","        if (err && !errSeen) {","          errSeen = true;","          reject(err);","          callback && callback(err);","          return;","        }","        if (--count <= 0) {","          resolve(res.results, res.stats);","          callback && callback(null, res.results, res.stats);","        }","      }","","      for (var i = 0; i < res.results.length; i++) {","        var temp = res.results[i].obj;","        res.results[i].obj = new _this();","        res.results[i].obj.init(temp, init);","      }","    };","","    if (Array.isArray(near)) {","      if (near.length !== 2) {","        var error = new Error('If using legacy coordinates, must be an array ' +","            'of size 2 for geoNear');","        reject(error);","        callback && callback(error);","        return;","      }","      x = near[0];","      y = near[1];","      _this.collection.geoNear(x, y, options, handler);","    } else {","      if (near.type !== 'Point' || !Array.isArray(near.coordinates)) {","        error = new Error('Must pass either a legacy coordinate array or ' +","            'GeoJSON Point to geoNear');","        reject(error);","        callback && callback(error);","        return;","      }","","      _this.collection.geoNear(near, options, handler);","    }","  });","};","","/**"," * Performs [aggregations](http://docs.mongodb.org/manual/applications/aggregation/) on the models collection."," *"," * If a `callback` is passed, the `aggregate` is executed and a `Promise` is returned. If a callback is not passed, the `aggregate` itself is returned."," *"," * ####Example:"," *"," *     // Find the max balance of all accounts"," *     Users.aggregate("," *       { $group: { _id: null, maxBalance: { $max: '$balance' }}},"," *       { $project: { _id: 0, maxBalance: 1 }},"," *       function (err, res) {"," *         if (err) return handleError(err);"," *         console.log(res); // [ { maxBalance: 98000 } ]"," *       });"," *"," *     // Or use the aggregation pipeline builder."," *     Users.aggregate()"," *       .group({ _id: null, maxBalance: { $max: '$balance' } })"," *       .select('-id maxBalance')"," *       .exec(function (err, res) {"," *         if (err) return handleError(err);"," *         console.log(res); // [ { maxBalance: 98 } ]"," *     });"," *"," * ####NOTE:"," *"," * - Arguments are not cast to the model's schema because `$project` operators allow redefining the \"shape\" of the documents at any stage of the pipeline, which may leave documents in an incompatible format."," * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned)."," * - Requires MongoDB >= 2.1"," *"," * @see Aggregate #aggregate_Aggregate"," * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/"," * @param {Object|Array} [...] aggregation pipeline operator(s) or operator array"," * @param {Function} [callback]"," * @return {Aggregate|Promise}"," * @api public"," */","","Model.aggregate = function aggregate() {","  var args = [].slice.call(arguments),","      aggregate,","      callback;","","  if (typeof args[args.length - 1] === 'function') {","    callback = args.pop();","  }","","  if (args.length === 1 && util.isArray(args[0])) {","    aggregate = new Aggregate(args[0]);","  } else {","    aggregate = new Aggregate(args);","  }","","  aggregate.model(this);","","  if (typeof callback === 'undefined') {","    return aggregate;","  }","","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  aggregate.exec(callback);","};","","/**"," * Implements `$geoSearch` functionality for Mongoose"," *"," * ####Example:"," *"," *     var options = { near: [10, 10], maxDistance: 5 };"," *     Locations.geoSearch({ type : \"house\" }, options, function(err, res) {"," *       console.log(res);"," *     });"," *"," * ####Options:"," * - `near` {Array} x,y point to search for"," * - `maxDistance` {Number} the maximum distance from the point near that a result can be"," * - `limit` {Number} The maximum number of results to return"," * - `lean` {Boolean} return the raw object instead of the Mongoose Model"," *"," * @param {Object} conditions an object that specifies the match condition (required)"," * @param {Object} options for the geoSearch, some (near, maxDistance) are required"," * @param {Function} [callback] optional callback"," * @return {Promise}"," * @see http://docs.mongodb.org/manual/reference/command/geoSearch/"," * @see http://docs.mongodb.org/manual/core/geohaystack/"," * @api public"," */","","Model.geoSearch = function(conditions, options, callback) {","  if (typeof options === 'function') {","    callback = options;","    options = {};","  }","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  var _this = this;","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve, reject) {","    var error;","    if (conditions === undefined || !utils.isObject(conditions)) {","      error = new Error('Must pass conditions to geoSearch');","    } else if (!options.near) {","      error = new Error('Must specify the near option in geoSearch');","    } else if (!Array.isArray(options.near)) {","      error = new Error('near option must be an array [x, y]');","    }","","    if (error) {","      callback && callback(error);","      reject(error);","      return;","    }","","    // send the conditions in the options object","    options.search = conditions;","","    _this.collection.geoHaystackSearch(options.near[0], options.near[1], options, function(err, res) {","      // have to deal with driver problem. Should be fixed in a soon-ish release","      // (7/8/2013)","      if (err) {","        callback && callback(err);","        reject(err);","        return;","      }","","      var count = res.results.length;","      if (options.lean || count === 0) {","        callback && callback(null, res.results, res.stats);","        resolve(res.results, res.stats);","        return;","      }","","      var errSeen = false;","","      function init(err) {","        if (err && !errSeen) {","          callback && callback(err);","          reject(err);","          return;","        }","","        if (!--count && !errSeen) {","          callback && callback(null, res.results, res.stats);","          resolve(res.results, res.stats);","        }","      }","","      for (var i = 0; i < res.results.length; i++) {","        var temp = res.results[i];","        res.results[i] = new _this();","        res.results[i].init(temp, {}, init);","      }","    });","  });","};","","/**"," * Populates document references."," *"," * ####Available options:"," *"," * - path: space delimited path(s) to populate"," * - select: optional fields to select"," * - match: optional query conditions to match"," * - model: optional name of the model to use for population"," * - options: optional query options like sort, limit, etc"," *"," * ####Examples:"," *"," *     // populates a single object"," *     User.findById(id, function (err, user) {"," *       var opts = ["," *           { path: 'company', match: { x: 1 }, select: 'name' }"," *         , { path: 'notes', options: { limit: 10 }, model: 'override' }"," *       ]"," *"," *       User.populate(user, opts, function (err, user) {"," *         console.log(user);"," *       });"," *     });"," *"," *     // populates an array of objects"," *     User.find(match, function (err, users) {"," *       var opts = [{ path: 'company', match: { x: 1 }, select: 'name' }]"," *"," *       var promise = User.populate(users, opts);"," *       promise.then(console.log).end();"," *     })"," *"," *     // imagine a Weapon model exists with two saved documents:"," *     //   { _id: 389, name: 'whip' }"," *     //   { _id: 8921, name: 'boomerang' }"," *     // and this schema:"," *     // new Schema({"," *     //   name: String,"," *     //   weapon: { type: ObjectId, ref: 'Weapon' }"," *     // });"," *"," *     var user = { name: 'Indiana Jones', weapon: 389 }"," *     Weapon.populate(user, { path: 'weapon', model: 'Weapon' }, function (err, user) {"," *       console.log(user.weapon.name) // whip"," *     })"," *"," *     // populate many plain objects"," *     var users = [{ name: 'Indiana Jones', weapon: 389 }]"," *     users.push({ name: 'Batman', weapon: 8921 })"," *     Weapon.populate(users, { path: 'weapon' }, function (err, users) {"," *       users.forEach(function (user) {"," *         console.log('%s uses a %s', users.name, user.weapon.name)"," *         // Indiana Jones uses a whip"," *         // Batman uses a boomerang"," *       });"," *     });"," *     // Note that we didn't need to specify the Weapon model because"," *     // it is in the schema's ref"," *"," * @param {Document|Array} docs Either a single document or array of documents to populate."," * @param {Object} options A hash of key/val (path, options) used for population."," * @param {Function} [callback(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`."," * @return {Promise}"," * @api public"," */","","Model.populate = function(docs, paths, callback) {","  var _this = this;","  if (callback) {","    callback = this.$wrapCallback(callback);","  }","","  // normalized paths","  var noPromise = paths && !!paths.__noPromise;","  paths = utils.populate(paths);","","  // data that should persist across subPopulate calls","  var cache = {};","","  if (noPromise) {","    _populate(this, docs, paths, cache, callback);","  } else {","    var Promise = PromiseProvider.get();","    return new Promise.ES6(function(resolve, reject) {","      _populate(_this, docs, paths, cache, function(error, docs) {","        if (error) {","          callback && callback(error);","          reject(error);","        } else {","          callback && callback(null, docs);","          resolve(docs);","        }","      });","    });","  }","};","","/*!"," * Populate helper"," *"," * @param {Model} model the model to use"," * @param {Document|Array} docs Either a single document or array of documents to populate."," * @param {Object} paths"," * @param {Function} [cb(err,doc)] Optional callback, executed upon completion. Receives `err` and the `doc(s)`."," * @return {Function}"," * @api private"," */","","function _populate(model, docs, paths, cache, callback) {","  var pending = paths.length;","","  if (pending === 0) {","    return callback(null, docs);","  }","","  // each path has its own query options and must be executed separately","  var i = pending;","  var path;","  while (i--) {","    path = paths[i];","    populate(model, docs, path, next);","  }","","  function next(err) {","    if (err) {","      return callback(err);","    }","    if (--pending) {","      return;","    }","    callback(null, docs);","  }","}","","/*!"," * Populates `docs`"," */","var excludeIdReg = /\\s?-_id\\s?/,","    excludeIdRegGlobal = /\\s?-_id\\s?/g;","","function populate(model, docs, options, callback) {","  var modelsMap;","","  // normalize single / multiple docs passed","  if (!Array.isArray(docs)) {","    docs = [docs];","  }","","  if (docs.length === 0 || docs.every(utils.isNullOrUndefined)) {","    return callback();","  }","","  modelsMap = getModelsMapForPopulate(model, docs, options);","  if (modelsMap instanceof Error) {","    return setImmediate(function() {","      callback(modelsMap);","    });","  }","","  var i, len = modelsMap.length,","      mod, match, select, vals = [];","","  function flatten(item) {","    // no need to include undefined values in our query","    return undefined !== item;","  }","","  var _remaining = len;","  var hasOne = false;","  for (i = 0; i < len; i++) {","    mod = modelsMap[i];","    select = mod.options.select;","","    if (mod.options.match) {","      match = utils.object.shallowCopy(mod.options.match);","    } else {","      match = {};","    }","","    var ids = utils.array.flatten(mod.ids, flatten);","    ids = utils.array.unique(ids);","","    if (ids.length === 0 || ids.every(utils.isNullOrUndefined)) {","      --_remaining;","      continue;","    }","","    hasOne = true;","    if (mod.foreignField !== '_id' || !match['_id']) {","      match[mod.foreignField] = { $in: ids };","    }","","    var assignmentOpts = {};","    assignmentOpts.sort = mod.options.options && mod.options.options.sort || undefined;","    assignmentOpts.excludeId = excludeIdReg.test(select) || (select && select._id === 0);","","    if (assignmentOpts.excludeId) {","      // override the exclusion from the query so we can use the _id","      // for document matching during assignment. we'll delete the","      // _id back off before returning the result.","      if (typeof select === 'string') {","        select = select.replace(excludeIdRegGlobal, ' ');","      } else {","        // preserve original select conditions by copying","        select = utils.object.shallowCopy(select);","        delete select._id;","      }","    }","","    if (mod.options.options && mod.options.options.limit) {","      assignmentOpts.originalLimit = mod.options.options.limit;","      mod.options.options.limit = mod.options.options.limit * ids.length;","    }","","    var subPopulate = mod.options.populate;","    var query = mod.Model.find(match, select, mod.options.options);","","    /* If we're doing virtual populate and projection is inclusive and foreign","     * field is not selected, automatically select it because mongoose needs it.","     * If projection is exclusive and client explicitly unselected the foreign","     * field, that's the client's fault. */","    if (mod.foreignField !== '_id' && query.selectedInclusively() &&","      !isPathSelectedInclusive(query._fields, mod.foreignField)) {","      query.select(mod.foreignField);","    }","","    // If we need to sub-populate, call populate recursively","    if (subPopulate) {","      query.populate(subPopulate);","    }","","    query.exec(next.bind(this, mod, assignmentOpts));","  }","","  if (!hasOne) {","    return callback();","  }","","  function next(options, assignmentOpts, err, valsFromDb) {","    if (err) return callback(err);","    vals = vals.concat(valsFromDb);","    _assign(null, vals, options, assignmentOpts);","    if (--_remaining === 0) {","      callback();","    }","  }","","  function _assign(err, vals, mod, assignmentOpts) {","    if (err) return callback(err);","","    var options = mod.options;","    var isVirtual = mod.isVirtual;","    var justOne = mod.justOne;","    var _val;","    var lean = options.options && options.options.lean;","    var len = vals.length;","    var rawOrder = {};","    var rawDocs = {};","    var key;","    var val;","","    // optimization:","    // record the document positions as returned by","    // the query result.","    for (var i = 0; i < len; i++) {","      val = vals[i];","      if (val) {","        _val = utils.getValue(mod.foreignField, val);","        if (Array.isArray(_val)) {","          var _valLength = _val.length;","          for (var j = 0; j < _valLength; ++j) {","            var __val = _val[j];","            if (__val instanceof Document) {","              __val = __val._id;","            }","            key = String(__val);","            if (rawDocs[key]) {","              if (Array.isArray(rawDocs[key])) {","                rawDocs[key].push(val);","                rawOrder[key].push(i);","              } else {","                rawDocs[key] = [rawDocs[key], val];","                rawOrder[key] = [rawOrder[key], i];","              }","            } else {","              if (isVirtual && !justOne) {","                rawDocs[key] = [val];","                rawOrder[key] = [i];","              } else {","                rawDocs[key] = val;","                rawOrder[key] = i;","              }","            }","          }","        } else {","          if (_val instanceof Document) {","            _val = _val._id;","          }","          key = String(_val);","          if (rawDocs[key]) {","            if (Array.isArray(rawDocs[key])) {","              rawDocs[key].push(val);","              rawOrder[key].push(i);","            } else {","              rawDocs[key] = [rawDocs[key], val];","              rawOrder[key] = [rawOrder[key], i];","            }","          } else {","            rawDocs[key] = val;","            rawOrder[key] = i;","          }","        }","        // flag each as result of population","        if (!lean) {","          val.$__.wasPopulated = true;","        }","      }","    }","","    assignVals({","      originalModel: model,","      rawIds: mod.allIds,","      localField: mod.localField,","      foreignField: mod.foreignField,","      rawDocs: rawDocs,","      rawOrder: rawOrder,","      docs: mod.docs,","      path: options.path,","      options: assignmentOpts,","      justOne: mod.justOne,","      isVirtual: mod.isVirtual","    });","  }","}","","/*!"," * Assigns documents returned from a population query back"," * to the original document path."," */","","function assignVals(o) {","  // replace the original ids in our intermediate _ids structure","  // with the documents found by query","  assignRawDocsToIdStructure(o.rawIds, o.rawDocs, o.rawOrder, o.options,","    o.localField, o.foreignField);","","  // now update the original documents being populated using the","  // result structure that contains real documents.","","  var docs = o.docs;","  var rawIds = o.rawIds;","  var options = o.options;","","  function setValue(val) {","    return valueFilter(val, options);","  }","","  for (var i = 0; i < docs.length; ++i) {","    if (utils.getValue(o.path, docs[i]) == null &&","      !o.originalModel.schema._getVirtual(o.path)) {","      continue;","    }","","    if (o.isVirtual && !o.justOne && !Array.isArray(rawIds[i])) {","      rawIds[i] = [rawIds[i]];","    }","    utils.setValue(o.path, rawIds[i], docs[i], setValue);","  }","}","","/*!"," * Assign `vals` returned by mongo query to the `rawIds`"," * structure returned from utils.getVals() honoring"," * query sort order if specified by user."," *"," * This can be optimized."," *"," * Rules:"," *"," *   if the value of the path is not an array, use findOne rules, else find."," *   for findOne the results are assigned directly to doc path (including null results)."," *   for find, if user specified sort order, results are assigned directly"," *   else documents are put back in original order of array if found in results"," *"," * @param {Array} rawIds"," * @param {Array} vals"," * @param {Boolean} sort"," * @api private"," */","","function assignRawDocsToIdStructure(rawIds, resultDocs, resultOrder, options, localFields, foreignFields, recursed) {","  // honor user specified sort order","  var newOrder = [];","  var sorting = options.sort && rawIds.length > 1;","  var doc;","  var sid;","  var id;","","  for (var i = 0; i < rawIds.length; ++i) {","    id = rawIds[i];","","    if (Array.isArray(id)) {","      // handle [ [id0, id2], [id3] ]","      assignRawDocsToIdStructure(id, resultDocs, resultOrder, options, localFields, foreignFields, true);","      newOrder.push(id);","      continue;","    }","","    if (id === null && !sorting) {","      // keep nulls for findOne unless sorting, which always","      // removes them (backward compat)","      newOrder.push(id);","      continue;","    }","","    sid = String(id);","","    if (recursed) {","      // apply find behavior","","      // assign matching documents in original order unless sorting","      doc = resultDocs[sid];","      if (doc) {","        if (sorting) {","          newOrder[resultOrder[sid]] = doc;","        } else {","          newOrder.push(doc);","        }","      } else {","        newOrder.push(id);","      }","    } else {","      // apply findOne behavior - if document in results, assign, else assign null","      newOrder[i] = doc = resultDocs[sid] || null;","    }","  }","","  rawIds.length = 0;","  if (newOrder.length) {","    // reassign the documents based on corrected order","","    // forEach skips over sparse entries in arrays so we","    // can safely use this to our advantage dealing with sorted","    // result sets too.","    newOrder.forEach(function(doc, i) {","      if (!doc) {","        return;","      }","      rawIds[i] = doc;","    });","  }","}","","function getModelsMapForPopulate(model, docs, options) {","  var i, doc, len = docs.length,","      available = {},","      map = [],","      modelNameFromQuery = options.model && options.model.modelName || options.model,","      schema, refPath, Model, currentOptions, modelNames, modelName, discriminatorKey, modelForFindSchema;","","  var originalModel = options.model;","  var isVirtual = false;","  var isRefPathArray = false;","","  schema = model._getSchema(options.path);","  var isUnderneathDocArray = schema && schema.$isUnderneathDocArray;","  if (isUnderneathDocArray &&","      options &&","      options.options &&","      options.options.sort) {","    return new Error('Cannot populate with `sort` on path ' + options.path +","      ' because it is a subproperty of a document array');","  }","","  if (schema && schema.caster) {","    schema = schema.caster;","  }","","  if (!schema && model.discriminators) {","    discriminatorKey = model.schema.discriminatorMapping.key;","  }","","  refPath = schema && schema.options && schema.options.refPath;","","  for (i = 0; i < len; i++) {","    doc = docs[i];","","    if (refPath) {","      modelNames = utils.getValue(refPath, doc);","      isRefPathArray = Array.isArray(modelNames);","      if (isRefPathArray) {","        modelNames = modelNames.filter(function(v) {","          return v != null;","        });","      }","    } else {","      if (!modelNameFromQuery) {","        var modelForCurrentDoc = model;","        var schemaForCurrentDoc;","","        if (!schema && discriminatorKey) {","          modelForFindSchema = utils.getValue(discriminatorKey, doc);","","          if (modelForFindSchema) {","            modelForCurrentDoc = model.db.model(modelForFindSchema);","            schemaForCurrentDoc = modelForCurrentDoc._getSchema(options.path);","","            if (schemaForCurrentDoc && schemaForCurrentDoc.caster) {","              schemaForCurrentDoc = schemaForCurrentDoc.caster;","            }","          }","        } else {","          schemaForCurrentDoc = schema;","        }","        var virtual = modelForCurrentDoc.schema._getVirtual(options.path);","","        if (schemaForCurrentDoc && schemaForCurrentDoc.options && schemaForCurrentDoc.options.ref) {","          modelNames = [schemaForCurrentDoc.options.ref];","        } else if (virtual && virtual.options && virtual.options.ref) {","          modelNames = [virtual && virtual.options && virtual.options.ref];","          isVirtual = true;","        } else {","          // We may have a discriminator, in which case we don't want to","          // populate using the base model by default","          modelNames = discriminatorKey ? null : [model.modelName];","        }","      } else {","        modelNames = [modelNameFromQuery];  // query options","      }","    }","","    if (!modelNames) {","      continue;","    }","","    if (!Array.isArray(modelNames)) {","      modelNames = [modelNames];","    }","","    virtual = model.schema._getVirtual(options.path);","    var localField = virtual && virtual.options ?","      (virtual.$nestedSchemaPath ? virtual.$nestedSchemaPath + '.' : '') + virtual.options.localField :","      options.path;","    var foreignField = virtual && virtual.options ?","      virtual.options.foreignField :","      '_id';","    var justOne = virtual && virtual.options && virtual.options.justOne;","    if (virtual && virtual.options && virtual.options.ref) {","      isVirtual = true;","    }","","    if (virtual && (!localField || !foreignField)) {","      throw new Error('If you are populating a virtual, you must set the ' +","        'localField and foreignField options');","    }","","    options.isVirtual = isVirtual;","    var ret = convertTo_id(utils.getValue(localField, doc));","    var id = String(utils.getValue(foreignField, doc));","    options._docs[id] = Array.isArray(ret) ? ret.slice() : ret;","    if (doc.$__) {","      doc.populated(options.path, options._docs[id], options);","    }","","    var k = modelNames.length;","    while (k--) {","      modelName = modelNames[k];","      var _doc = Array.isArray(doc) && isRefPathArray ? doc[k] : doc;","      var _ret = Array.isArray(ret) && isRefPathArray ? ret[k] : ret;","      Model = originalModel && originalModel.modelName ?","        originalModel :","        model.db.model(modelName);","","      if (!available[modelName]) {","        currentOptions = {","          model: Model","        };","","        if (isVirtual && virtual.options && virtual.options.options) {","          currentOptions.options = utils.clone(virtual.options.options, {","            retainKeyOrder: true","          });","        }","        utils.merge(currentOptions, options);","        if (schema && !discriminatorKey) {","          currentOptions.model = Model;","        }","        options.model = Model;","","        available[modelName] = {","          Model: Model,","          options: currentOptions,","          docs: [_doc],","          ids: [_ret],","          allIds: [ret],","          // Assume only 1 localField + foreignField","          localField: localField,","          foreignField: foreignField,","          justOne: justOne,","          isVirtual: isVirtual","        };","        map.push(available[modelName]);","      } else {","        available[modelName].docs.push(_doc);","        available[modelName].ids.push(_ret);","        available[modelName].allIds.push(ret);","      }","    }","  }","","  return map;","}","","/*!"," * Retrieve the _id of `val` if a Document or Array of Documents."," *"," * @param {Array|Document|Any} val"," * @return {Array|Document|Any}"," */","","function convertTo_id(val) {","  if (val instanceof Model) return val._id;","","  if (Array.isArray(val)) {","    for (var i = 0; i < val.length; ++i) {","      if (val[i] instanceof Model) {","        val[i] = val[i]._id;","      }","    }","    if (val.isMongooseArray) {","      return val._schema.cast(val, val._parent);","    }","","    return [].concat(val);","  }","","  return val;","}","","/*!"," * 1) Apply backwards compatible find/findOne behavior to sub documents"," *"," *    find logic:"," *      a) filter out non-documents"," *      b) remove _id from sub docs when user specified"," *"," *    findOne"," *      a) if no doc found, set to null"," *      b) remove _id from sub docs when user specified"," *"," * 2) Remove _ids when specified by users query."," *"," * background:"," * _ids are left in the query even when user excludes them so"," * that population mapping can occur."," */","","function valueFilter(val, assignmentOpts) {","  if (Array.isArray(val)) {","    // find logic","    var ret = [];","    var numValues = val.length;","    for (var i = 0; i < numValues; ++i) {","      var subdoc = val[i];","      if (!isDoc(subdoc)) continue;","      maybeRemoveId(subdoc, assignmentOpts);","      ret.push(subdoc);","      if (assignmentOpts.originalLimit &&","          ret.length >= assignmentOpts.originalLimit) {","        break;","      }","    }","","    // Since we don't want to have to create a new mongoosearray, make sure to","    // modify the array in place","    while (val.length > ret.length) {","      Array.prototype.pop.apply(val, []);","    }","    for (i = 0; i < ret.length; ++i) {","      val[i] = ret[i];","    }","    return val;","  }","","  // findOne","  if (isDoc(val)) {","    maybeRemoveId(val, assignmentOpts);","    return val;","  }","","  return null;","}","","/*!"," * Remove _id from `subdoc` if user specified \"lean\" query option"," */","","function maybeRemoveId(subdoc, assignmentOpts) {","  if (assignmentOpts.excludeId) {","    if (typeof subdoc.setValue === 'function') {","      delete subdoc._doc._id;","    } else {","      delete subdoc._id;","    }","  }","}","","/*!"," * Determine if `doc` is a document returned"," * by a populate query."," */","","function isDoc(doc) {","  if (doc == null) {","    return false;","  }","","  var type = typeof doc;","  if (type === 'string') {","    return false;","  }","","  if (type === 'number') {","    return false;","  }","","  if (Buffer.isBuffer(doc)) {","    return false;","  }","","  if (doc.constructor.name === 'ObjectID') {","    return false;","  }","","  // only docs","  return true;","}","","/**"," * Finds the schema for `path`. This is different than"," * calling `schema.path` as it also resolves paths with"," * positional selectors (something.$.another.$.path)."," *"," * @param {String} path"," * @return {Schema}"," * @api private"," */","","Model._getSchema = function _getSchema(path) {","  return this.schema._getSchema(path);","};","","/*!"," * Compiler utility."," *"," * @param {String|Function} name model name or class extending Model"," * @param {Schema} schema"," * @param {String} collectionName"," * @param {Connection} connection"," * @param {Mongoose} base mongoose instance"," */","","Model.compile = function compile(name, schema, collectionName, connection, base) {","  var versioningEnabled = schema.options.versionKey !== false;","","  if (versioningEnabled && !schema.paths[schema.options.versionKey]) {","    // add versioning to top level documents only","    var o = {};","    o[schema.options.versionKey] = Number;","    schema.add(o);","  }","","  var model;","  if (typeof name === 'function' && name.prototype instanceof Model) {","    model = name;","    name = model.name;","    schema.loadClass(model, true);","    model.prototype.$isMongooseModelPrototype = true;","  } else {","    // generate new class","    model = function model(doc, fields, skipId) {","      if (!(this instanceof model)) {","        return new model(doc, fields, skipId);","      }","      Model.call(this, doc, fields, skipId);","    };","  }","","  model.hooks = schema.s.hooks.clone();","  model.base = base;","  model.modelName = name;","  if (!(model.prototype instanceof Model)) {","    model.__proto__ = Model;","    model.prototype.__proto__ = Model.prototype;","  }","  model.model = Model.prototype.model;","  model.db = model.prototype.db = connection;","  model.discriminators = model.prototype.discriminators = undefined;","","  model.prototype.$__setSchema(schema);","","  var collectionOptions = {","    bufferCommands: schema.options.bufferCommands,","    capped: schema.options.capped","  };","","  model.prototype.collection = connection.collection(","      collectionName","      , collectionOptions","  );","","  // apply methods and statics","  applyMethods(model, schema);","  applyStatics(model, schema);","  applyHooks(model, schema);","","  model.schema = model.prototype.schema;","  model.collection = model.prototype.collection;","","  // Create custom query constructor","  model.Query = function() {","    Query.apply(this, arguments);","    this.options.retainKeyOrder = model.schema.options.retainKeyOrder;","  };","  model.Query.prototype = Object.create(Query.prototype);","  model.Query.base = Query.base;","  applyQueryMethods(model, schema.query);","","  var kareemOptions = { useErrorHandlers: true };","  model.$__insertMany = model.hooks.createWrapper('insertMany',","    model.insertMany, model, kareemOptions);","  model.insertMany = function(arr, options, callback) {","    var Promise = PromiseProvider.get();","    if (typeof options === 'function') {","      callback = options;","      options = null;","    }","    return new Promise.ES6(function(resolve, reject) {","      model.$__insertMany(arr, options, function(error, result) {","        if (error) {","          callback && callback(error);","          return reject(error);","        }","        callback && callback(null, result);","        resolve(result);","      });","    });","  };","","  return model;","};","","/*!"," * Register custom query methods for this model"," *"," * @param {Model} model"," * @param {Schema} schema"," */","","function applyQueryMethods(model, methods) {","  for (var i in methods) {","    model.Query.prototype[i] = methods[i];","  }","}","","/*!"," * Subclass this model with `conn`, `schema`, and `collection` settings."," *"," * @param {Connection} conn"," * @param {Schema} [schema]"," * @param {String} [collection]"," * @return {Model}"," */","","Model.__subclass = function subclass(conn, schema, collection) {","  // subclass model using this connection and collection name","  var _this = this;","","  var Model = function Model(doc, fields, skipId) {","    if (!(this instanceof Model)) {","      return new Model(doc, fields, skipId);","    }","    _this.call(this, doc, fields, skipId);","  };","","  Model.__proto__ = _this;","  Model.prototype.__proto__ = _this.prototype;","  Model.db = Model.prototype.db = conn;","","  var s = schema && typeof schema !== 'string'","      ? schema","      : _this.prototype.schema;","","  var options = s.options || {};","","  if (!collection) {","    collection = _this.prototype.schema.get('collection')","        || utils.toCollectionName(_this.modelName, options);","  }","","  var collectionOptions = {","    bufferCommands: s ? options.bufferCommands : true,","    capped: s && options.capped","  };","","  Model.prototype.collection = conn.collection(collection, collectionOptions);","  Model.collection = Model.prototype.collection;","  Model.init();","  return Model;","};","","Model.$wrapCallback = function(callback) {","  var _this = this;","  return function() {","    try {","      callback.apply(null, arguments);","    } catch (error) {","      _this.emit('error', error);","    }","  };","};","","/*!"," * Module exports."," */","","module.exports = exports = Model;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"30":1,"50":1,"51":0,"61":1,"62":1,"71":1,"80":1,"89":1,"99":1,"109":1,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"123":0,"125":0,"127":0,"128":0,"129":0,"130":0,"131":0,"133":0,"135":0,"141":0,"142":0,"144":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"154":0,"155":0,"158":0,"160":0,"161":0,"162":0,"163":0,"165":0,"169":0,"171":0,"173":0,"174":0,"175":0,"176":0,"179":0,"180":0,"181":0,"182":0,"185":0,"186":0,"187":0,"188":0,"189":0,"193":0,"194":0,"195":0,"196":0,"198":0,"199":0,"202":0,"203":0,"204":0,"207":0,"208":0,"216":1,"217":0,"219":0,"220":0,"221":0,"222":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"238":0,"243":0,"244":0,"245":0,"247":0,"249":0,"250":0,"254":0,"255":0,"256":0,"257":0,"261":0,"264":0,"265":0,"266":0,"270":0,"271":0,"272":0,"313":1,"314":0,"315":0,"316":0,"319":0,"320":0,"323":0,"324":0,"327":0,"337":1,"338":0,"339":0,"342":0,"344":0,"359":1,"361":0,"362":0,"363":0,"366":0,"369":0,"372":0,"374":0,"383":0,"386":0,"394":0,"395":0,"396":0,"398":0,"399":0,"401":0,"402":0,"405":0,"419":1,"420":0,"422":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"433":0,"435":0,"440":0,"446":0,"449":0,"450":0,"451":0,"452":0,"455":0,"458":1,"459":0,"464":0,"465":0,"466":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"476":0,"477":0,"480":0,"492":1,"493":0,"494":0,"496":0,"502":0,"503":0,"504":0,"507":0,"508":0,"509":0,"511":0,"512":0,"513":0,"514":0,"517":0,"518":0,"521":0,"522":0,"523":0,"525":0,"526":0,"527":0,"528":0,"532":0,"533":0,"538":0,"540":0,"541":0,"542":0,"543":0,"544":0,"546":0,"547":0,"549":0,"550":0,"552":0,"553":0,"557":0,"558":0,"561":0,"562":0,"565":0,"578":1,"580":0,"582":0,"585":0,"586":0,"587":0,"591":0,"602":0,"609":0,"610":0,"611":0,"612":0,"625":1,"626":0,"628":0,"630":0,"631":0,"640":0,"641":0,"645":0,"646":0,"649":0,"650":0,"651":0,"652":0,"671":1,"672":0,"673":0,"684":1,"685":0,"687":0,"690":0,"691":0,"694":0,"695":0,"696":0,"698":0,"699":0,"703":0,"704":0,"707":0,"736":1,"737":0,"738":0,"739":0,"742":0,"743":0,"746":0,"747":0,"748":0,"749":0,"750":0,"752":0,"755":0,"756":0,"758":0,"759":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"770":0,"771":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"782":0,"783":0,"786":0,"801":1,"802":0,"831":1,"832":0,"833":0,"836":0,"837":0,"838":0,"841":0,"843":0,"844":0,"845":0,"846":0,"853":0,"854":0,"856":0,"865":1,"866":16,"875":1,"876":0,"878":0,"881":0,"914":1,"915":0,"916":0,"917":0,"920":0,"921":0,"922":0,"925":0,"926":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"937":0,"938":0,"943":1,"944":0,"945":0,"946":0,"947":0,"949":0,"954":0,"955":0,"956":0,"958":0,"959":0,"962":0,"963":0,"965":0,"966":0,"969":0,"970":0,"971":0,"973":0,"974":0,"975":0,"977":0,"979":0,"980":0,"981":0,"982":0,"984":0,"988":0,"990":0,"991":0,"993":0,"998":1,"999":0,"1000":0,"1001":0,"1002":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1021":1,"1031":1,"1041":1,"1051":1,"1061":1,"1082":1,"1083":0,"1084":0,"1085":0,"1089":0,"1091":0,"1092":0,"1095":0,"1117":1,"1118":0,"1119":0,"1120":0,"1124":0,"1126":0,"1127":0,"1130":0,"1152":1,"1153":0,"1154":0,"1155":0,"1159":0,"1161":0,"1162":0,"1165":0,"1209":1,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1231":0,"1232":0,"1235":0,"1285":1,"1286":0,"1287":0,"1290":0,"1291":0,"1294":0,"1339":1,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1362":0,"1363":0,"1366":0,"1385":1,"1386":0,"1387":0,"1388":0,"1392":0,"1394":0,"1395":0,"1398":0,"1425":1,"1427":0,"1429":0,"1430":0,"1431":0,"1433":0,"1434":0,"1437":0,"1464":1,"1465":0,"1467":0,"1468":0,"1486":1,"1487":0,"1488":0,"1561":1,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1573":0,"1575":0,"1576":0,"1578":0,"1579":0,"1582":0,"1583":0,"1584":0,"1587":0,"1588":0,"1589":0,"1590":0,"1592":0,"1595":0,"1596":0,"1598":0,"1675":1,"1676":0,"1677":0,"1679":0,"1680":0,"1681":0,"1685":0,"1687":0,"1691":0,"1692":0,"1695":0,"1748":1,"1749":0,"1750":0,"1754":0,"1757":0,"1758":0,"1759":0,"1761":0,"1762":0,"1765":0,"1766":0,"1767":0,"1768":0,"1771":0,"1772":0,"1774":0,"1807":1,"1808":0,"1809":0,"1813":0,"1815":0,"1816":0,"1819":0,"1859":1,"1860":0,"1861":0,"1862":0,"1864":0,"1865":0,"1866":0,"1868":0,"1870":0,"1871":0,"1872":0,"1874":0,"1878":0,"1879":0,"1880":0,"1881":0,"1884":0,"1885":0,"1886":0,"1887":0,"1888":0,"1890":0,"1893":0,"1894":0,"1895":0,"1896":0,"1899":0,"1900":0,"1901":0,"1902":0,"1904":0,"1909":0,"1910":0,"1912":0,"1917":0,"1918":0,"1919":0,"1920":0,"1922":0,"1924":0,"1927":0,"1928":0,"1929":0,"1931":0,"1932":0,"1933":0,"1934":0,"1940":0,"1963":1,"1964":0,"1965":0,"1966":0,"1967":0,"1969":0,"1970":0,"1973":0,"1974":0,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1982":0,"1986":0,"1987":0,"1989":0,"1991":0,"1996":0,"1997":0,"1998":0,"1999":0,"2002":0,"2003":0,"2006":0,"2007":0,"2008":0,"2010":0,"2011":0,"2012":0,"2014":0,"2015":0,"2017":0,"2019":0,"2020":0,"2021":0,"2022":0,"2024":0,"2025":0,"2026":0,"2027":0,"2029":0,"2077":1,"2078":0,"2079":0,"2080":0,"2081":0,"2082":0,"2084":0,"2085":0,"2087":0,"2089":0,"2090":0,"2091":0,"2092":0,"2093":0,"2094":0,"2095":0,"2097":0,"2100":0,"2101":0,"2102":0,"2103":0,"2105":0,"2108":0,"2111":0,"2113":0,"2114":0,"2115":0,"2116":0,"2118":0,"2123":0,"2126":0,"2128":0,"2129":0,"2130":0,"2131":0,"2134":0,"2138":0,"2140":0,"2141":0,"2142":0,"2144":0,"2147":0,"2148":0,"2149":0,"2150":0,"2153":0,"2156":0,"2158":0,"2159":0,"2160":0,"2161":0,"2164":0,"2167":0,"2170":0,"2171":0,"2176":0,"2177":0,"2178":0,"2179":0,"2180":0,"2183":0,"2184":0,"2185":0,"2186":0,"2189":0,"2190":0,"2195":0,"2212":1,"2213":0,"2214":0,"2215":0,"2298":1,"2299":0,"2318":1,"2319":0,"2337":1,"2338":0,"2356":1,"2357":0,"2364":1,"2365":0,"2366":0,"2367":0,"2371":0,"2372":0,"2374":0,"2376":0,"2378":0,"2379":0,"2380":0,"2382":0,"2383":0,"2385":0,"2389":0,"2463":1,"2464":0,"2465":0,"2466":0,"2468":0,"2469":0,"2470":0,"2471":0,"2472":0,"2473":0,"2476":0,"2477":0,"2479":0,"2480":0,"2482":0,"2483":0,"2484":0,"2485":0,"2486":0,"2489":0,"2490":0,"2491":0,"2492":0,"2493":0,"2496":0,"2498":0,"2505":0,"2507":0,"2508":0,"2514":0,"2515":0,"2516":0,"2518":0,"2552":1,"2553":0,"2554":0,"2555":0,"2558":0,"2559":0,"2562":0,"2563":0,"2564":0,"2565":0,"2566":0,"2567":0,"2568":0,"2572":0,"2574":0,"2575":0,"2576":0,"2577":0,"2578":0,"2579":0,"2581":0,"2582":0,"2583":0,"2584":0,"2587":0,"2589":0,"2590":0,"2591":0,"2592":0,"2595":0,"2597":1,"2598":0,"2599":0,"2600":0,"2601":0,"2602":0,"2604":0,"2605":0,"2606":0,"2610":0,"2611":0,"2612":0,"2613":0,"2617":0,"2618":0,"2619":0,"2621":0,"2622":0,"2623":0,"2625":0,"2626":0,"2627":0,"2629":0,"2630":0,"2632":0,"2633":0,"2634":0,"2637":0,"2681":1,"2682":0,"2686":0,"2687":0,"2690":0,"2691":0,"2693":0,"2696":0,"2698":0,"2699":0,"2702":0,"2703":0,"2706":0,"2734":1,"2735":0,"2736":0,"2737":0,"2739":0,"2740":0,"2743":0,"2744":0,"2745":0,"2746":0,"2747":0,"2748":0,"2749":0,"2750":0,"2751":0,"2752":0,"2755":0,"2756":0,"2757":0,"2758":0,"2762":0,"2764":0,"2767":0,"2768":0,"2769":0,"2770":0,"2773":0,"2774":0,"2775":0,"2776":0,"2777":0,"2780":0,"2782":1,"2783":0,"2784":0,"2785":0,"2786":0,"2789":0,"2790":0,"2791":0,"2795":0,"2796":0,"2797":0,"2798":0,"2871":1,"2872":0,"2873":0,"2874":0,"2878":0,"2879":0,"2882":0,"2884":0,"2885":0,"2887":0,"2888":0,"2889":0,"2890":0,"2891":0,"2892":0,"2894":0,"2895":0,"2913":1,"2914":0,"2916":0,"2917":0,"2921":0,"2922":0,"2923":0,"2924":0,"2925":0,"2928":1,"2929":0,"2930":0,"2932":0,"2933":0,"2935":0,"2942":1,"2945":1,"2946":0,"2949":0,"2950":0,"2953":0,"2954":0,"2957":0,"2958":0,"2959":0,"2960":0,"2964":0,"2967":1,"2969":0,"2972":0,"2973":0,"2974":0,"2975":0,"2976":0,"2978":0,"2979":0,"2981":0,"2984":0,"2985":0,"2987":0,"2988":0,"2989":0,"2992":0,"2993":0,"2994":0,"2997":0,"2998":0,"2999":0,"3001":0,"3005":0,"3006":0,"3009":0,"3010":0,"3014":0,"3015":0,"3016":0,"3019":0,"3020":0,"3026":0,"3028":0,"3032":0,"3033":0,"3036":0,"3039":0,"3040":0,"3043":1,"3044":0,"3045":0,"3046":0,"3047":0,"3048":0,"3052":1,"3053":0,"3055":0,"3056":0,"3057":0,"3058":0,"3059":0,"3060":0,"3061":0,"3062":0,"3063":0,"3064":0,"3069":0,"3070":0,"3071":0,"3072":0,"3073":0,"3074":0,"3075":0,"3076":0,"3077":0,"3078":0,"3080":0,"3081":0,"3082":0,"3083":0,"3084":0,"3086":0,"3087":0,"3090":0,"3091":0,"3092":0,"3094":0,"3095":0,"3100":0,"3101":0,"3103":0,"3104":0,"3105":0,"3106":0,"3107":0,"3109":0,"3110":0,"3113":0,"3114":0,"3118":0,"3119":0,"3124":0,"3145":1,"3148":0,"3154":0,"3155":0,"3156":0,"3158":1,"3159":0,"3162":0,"3163":0,"3165":0,"3168":0,"3169":0,"3171":0,"3195":1,"3197":0,"3198":0,"3199":0,"3200":0,"3201":0,"3203":0,"3204":0,"3206":0,"3208":0,"3209":0,"3210":0,"3213":0,"3216":0,"3217":0,"3220":0,"3222":0,"3226":0,"3227":0,"3228":0,"3229":0,"3231":0,"3234":0,"3238":0,"3242":0,"3243":0,"3249":0,"3250":0,"3251":0,"3253":0,"3258":1,"3259":0,"3265":0,"3266":0,"3267":0,"3269":0,"3270":0,"3271":0,"3275":0,"3279":0,"3280":0,"3283":0,"3284":0,"3287":0,"3289":0,"3290":0,"3292":0,"3293":0,"3294":0,"3295":0,"3296":0,"3297":0,"3301":0,"3302":0,"3303":0,"3305":0,"3306":0,"3308":0,"3309":0,"3310":0,"3312":0,"3313":0,"3317":0,"3319":0,"3321":0,"3322":0,"3323":0,"3324":0,"3325":0,"3329":0,"3332":0,"3336":0,"3337":0,"3340":0,"3341":0,"3344":0,"3345":0,"3348":0,"3351":0,"3352":0,"3353":0,"3356":0,"3357":0,"3361":0,"3362":0,"3363":0,"3364":0,"3365":0,"3366":0,"3369":0,"3370":0,"3371":0,"3372":0,"3373":0,"3374":0,"3378":0,"3379":0,"3383":0,"3384":0,"3388":0,"3389":0,"3390":0,"3392":0,"3394":0,"3406":0,"3408":0,"3409":0,"3410":0,"3415":0,"3425":1,"3426":0,"3428":0,"3429":0,"3430":0,"3431":0,"3434":0,"3435":0,"3438":0,"3441":0,"3462":1,"3463":0,"3465":0,"3466":0,"3467":0,"3468":0,"3469":0,"3470":0,"3471":0,"3472":0,"3474":0,"3480":0,"3481":0,"3483":0,"3484":0,"3486":0,"3490":0,"3491":0,"3492":0,"3495":0,"3502":1,"3503":0,"3504":0,"3505":0,"3507":0,"3517":1,"3518":0,"3519":0,"3522":0,"3523":0,"3524":0,"3527":0,"3528":0,"3531":0,"3532":0,"3535":0,"3536":0,"3540":0,"3553":1,"3554":0,"3567":1,"3568":0,"3570":0,"3572":0,"3573":0,"3574":0,"3577":0,"3578":0,"3579":0,"3580":0,"3581":0,"3582":0,"3585":0,"3586":0,"3587":0,"3589":0,"3593":0,"3594":0,"3595":0,"3596":0,"3597":0,"3598":0,"3600":0,"3601":0,"3602":0,"3604":0,"3606":0,"3611":0,"3617":0,"3618":0,"3619":0,"3621":0,"3622":0,"3625":0,"3626":0,"3627":0,"3629":0,"3630":0,"3631":0,"3633":0,"3634":0,"3636":0,"3637":0,"3638":0,"3639":0,"3640":0,"3642":0,"3643":0,"3644":0,"3645":0,"3646":0,"3648":0,"3649":0,"3654":0,"3664":1,"3665":0,"3666":0,"3679":1,"3681":0,"3683":0,"3684":0,"3685":0,"3687":0,"3690":0,"3691":0,"3692":0,"3694":0,"3698":0,"3700":0,"3701":0,"3705":0,"3710":0,"3711":0,"3712":0,"3713":0,"3716":1,"3717":0,"3718":0,"3719":0,"3720":0,"3722":0,"3731":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/aggregate.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/aggregate.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":1,"42":5,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":1,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":1,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":1,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0,0],"73":[0,0],"74":[0,0],"75":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":5,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"fnMap":{"1":{"name":"Aggregate","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":21}}},"2":{"name":"(anonymous_2)","line":62,"loc":{"start":{"line":62,"column":28},"end":{"line":62,"column":44}}},"3":{"name":"(anonymous_3)","line":83,"loc":{"start":{"line":83,"column":29},"end":{"line":83,"column":40}}},"4":{"name":"(anonymous_4)","line":129,"loc":{"start":{"line":129,"column":30},"end":{"line":129,"column":44}}},"5":{"name":"(anonymous_5)","line":133,"loc":{"start":{"line":133,"column":29},"end":{"line":133,"column":45}}},"6":{"name":"(anonymous_6)","line":137,"loc":{"start":{"line":137,"column":29},"end":{"line":137,"column":45}}},"7":{"name":"(anonymous_7)","line":241,"loc":{"start":{"line":241,"column":27},"end":{"line":241,"column":41}}},"8":{"name":"(anonymous_8)","line":251,"loc":{"start":{"line":251,"column":48},"end":{"line":251,"column":68}}},"9":{"name":"(anonymous_9)","line":252,"loc":{"start":{"line":252,"column":35},"end":{"line":252,"column":49}}},"10":{"name":"(anonymous_10)","line":276,"loc":{"start":{"line":276,"column":29},"end":{"line":276,"column":40}}},"11":{"name":"(anonymous_11)","line":310,"loc":{"start":{"line":310,"column":29},"end":{"line":310,"column":47}}},"12":{"name":"(anonymous_12)","line":329,"loc":{"start":{"line":329,"column":34},"end":{"line":329,"column":52}}},"13":{"name":"(anonymous_13)","line":362,"loc":{"start":{"line":362,"column":29},"end":{"line":362,"column":44}}},"14":{"name":"(anonymous_14)","line":385,"loc":{"start":{"line":385,"column":27},"end":{"line":385,"column":41}}},"15":{"name":"(anonymous_15)","line":392,"loc":{"start":{"line":392,"column":29},"end":{"line":392,"column":45}}},"16":{"name":"(anonymous_16)","line":396,"loc":{"start":{"line":396,"column":29},"end":{"line":396,"column":45}}},"17":{"name":"(anonymous_17)","line":426,"loc":{"start":{"line":426,"column":27},"end":{"line":426,"column":48}}},"18":{"name":"(anonymous_18)","line":445,"loc":{"start":{"line":445,"column":30},"end":{"line":445,"column":49}}},"19":{"name":"(anonymous_19)","line":448,"loc":{"start":{"line":448,"column":25},"end":{"line":448,"column":51}}},"20":{"name":"(anonymous_20)","line":463,"loc":{"start":{"line":463,"column":17},"end":{"line":463,"column":41}}},"21":{"name":"(anonymous_21)","line":492,"loc":{"start":{"line":492,"column":35},"end":{"line":492,"column":51}}},"22":{"name":"(anonymous_22)","line":516,"loc":{"start":{"line":516,"column":29},"end":{"line":516,"column":47}}},"23":{"name":"(anonymous_23)","line":536,"loc":{"start":{"line":536,"column":36},"end":{"line":536,"column":58}}},"24":{"name":"(anonymous_24)","line":556,"loc":{"start":{"line":556,"column":32},"end":{"line":556,"column":52}}},"25":{"name":"(anonymous_25)","line":583,"loc":{"start":{"line":583,"column":28},"end":{"line":583,"column":46}}},"26":{"name":"(anonymous_26)","line":604,"loc":{"start":{"line":604,"column":27},"end":{"line":604,"column":46}}},"27":{"name":"(anonymous_27)","line":615,"loc":{"start":{"line":615,"column":29},"end":{"line":615,"column":47}}},"28":{"name":"(anonymous_28)","line":617,"loc":{"start":{"line":617,"column":27},"end":{"line":617,"column":38}}},"29":{"name":"(anonymous_29)","line":626,"loc":{"start":{"line":626,"column":54},"end":{"line":626,"column":65}}},"30":{"name":"(anonymous_30)","line":641,"loc":{"start":{"line":641,"column":25},"end":{"line":641,"column":51}}},"31":{"name":"(anonymous_31)","line":655,"loc":{"start":{"line":655,"column":57},"end":{"line":655,"column":81}}},"32":{"name":"decorateCursor","line":676,"loc":{"start":{"line":676,"column":0},"end":{"line":676,"column":32}}},"33":{"name":"(anonymous_33)","line":677,"loc":{"start":{"line":677,"column":21},"end":{"line":677,"column":44}}},"34":{"name":"(anonymous_34)","line":680,"loc":{"start":{"line":680,"column":27},"end":{"line":680,"column":51}}},"35":{"name":"(anonymous_35)","line":684,"loc":{"start":{"line":684,"column":10},"end":{"line":684,"column":21}}},"36":{"name":"(anonymous_36)","line":685,"loc":{"start":{"line":685,"column":10},"end":{"line":685,"column":26}}},"37":{"name":"(anonymous_37)","line":691,"loc":{"start":{"line":691,"column":18},"end":{"line":691,"column":37}}},"38":{"name":"(anonymous_38)","line":692,"loc":{"start":{"line":692,"column":25},"end":{"line":692,"column":46}}},"39":{"name":"(anonymous_39)","line":699,"loc":{"start":{"line":699,"column":30},"end":{"line":699,"column":46}}},"40":{"name":"(anonymous_40)","line":703,"loc":{"start":{"line":703,"column":21},"end":{"line":703,"column":32}}},"41":{"name":"(anonymous_41)","line":710,"loc":{"start":{"line":710,"column":27},"end":{"line":710,"column":53}}},"42":{"name":"(anonymous_42)","line":711,"loc":{"start":{"line":711,"column":14},"end":{"line":711,"column":30}}},"43":{"name":"(anonymous_43)","line":735,"loc":{"start":{"line":735,"column":27},"end":{"line":735,"column":53}}},"44":{"name":"isOperator","line":751,"loc":{"start":{"line":751,"column":0},"end":{"line":751,"column":25}}},"45":{"name":"(anonymous_45)","line":761,"loc":{"start":{"line":761,"column":16},"end":{"line":761,"column":30}}},"46":{"name":"prepareDiscriminatorPipeline","line":774,"loc":{"start":{"line":774,"column":0},"end":{"line":774,"column":49}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":31}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":32}},"6":{"start":{"line":42,"column":0},"end":{"line":52,"column":1}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":22}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":26}},"9":{"start":{"line":45,"column":2},"end":{"line":45,"column":27}},"10":{"start":{"line":47,"column":2},"end":{"line":51,"column":3}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":42}},"12":{"start":{"line":50,"column":4},"end":{"line":50,"column":39}},"13":{"start":{"line":62,"column":0},"end":{"line":65,"column":2}},"14":{"start":{"line":63,"column":2},"end":{"line":63,"column":22}},"15":{"start":{"line":64,"column":2},"end":{"line":64,"column":14}},"16":{"start":{"line":83,"column":0},"end":{"line":95,"column":2}},"17":{"start":{"line":84,"column":2},"end":{"line":86,"column":30}},"18":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"19":{"start":{"line":89,"column":4},"end":{"line":89,"column":70}},"20":{"start":{"line":92,"column":2},"end":{"line":92,"column":47}},"21":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"22":{"start":{"line":129,"column":0},"end":{"line":152,"column":2}},"23":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"24":{"start":{"line":132,"column":2},"end":{"line":149,"column":3}},"25":{"start":{"line":133,"column":4},"end":{"line":135,"column":7}},"26":{"start":{"line":134,"column":6},"end":{"line":134,"column":33}},"27":{"start":{"line":136,"column":9},"end":{"line":149,"column":3}},"28":{"start":{"line":137,"column":4},"end":{"line":146,"column":7}},"29":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"30":{"start":{"line":139,"column":8},"end":{"line":139,"column":15}},"31":{"start":{"line":141,"column":6},"end":{"line":141,"column":45}},"32":{"start":{"line":142,"column":6},"end":{"line":144,"column":7}},"33":{"start":{"line":143,"column":8},"end":{"line":143,"column":35}},"34":{"start":{"line":145,"column":6},"end":{"line":145,"column":30}},"35":{"start":{"line":148,"column":4},"end":{"line":148,"column":76}},"36":{"start":{"line":151,"column":2},"end":{"line":151,"column":41}},"37":{"start":{"line":241,"column":0},"end":{"line":245,"column":2}},"38":{"start":{"line":242,"column":2},"end":{"line":242,"column":14}},"39":{"start":{"line":243,"column":2},"end":{"line":243,"column":20}},"40":{"start":{"line":244,"column":2},"end":{"line":244,"column":25}},"41":{"start":{"line":251,"column":0},"end":{"line":257,"column":3}},"42":{"start":{"line":252,"column":2},"end":{"line":256,"column":4}},"43":{"start":{"line":253,"column":4},"end":{"line":253,"column":16}},"44":{"start":{"line":254,"column":4},"end":{"line":254,"column":30}},"45":{"start":{"line":255,"column":4},"end":{"line":255,"column":27}},"46":{"start":{"line":276,"column":0},"end":{"line":295,"column":2}},"47":{"start":{"line":277,"column":2},"end":{"line":277,"column":35}},"48":{"start":{"line":279,"column":2},"end":{"line":279,"column":15}},"49":{"start":{"line":280,"column":2},"end":{"line":292,"column":3}},"50":{"start":{"line":281,"column":4},"end":{"line":281,"column":22}},"51":{"start":{"line":282,"column":4},"end":{"line":291,"column":5}},"52":{"start":{"line":283,"column":6},"end":{"line":283,"column":33}},"53":{"start":{"line":284,"column":11},"end":{"line":291,"column":5}},"54":{"start":{"line":285,"column":6},"end":{"line":287,"column":9}},"55":{"start":{"line":289,"column":6},"end":{"line":290,"column":36}},"56":{"start":{"line":294,"column":2},"end":{"line":294,"column":38}},"57":{"start":{"line":310,"column":0},"end":{"line":312,"column":2}},"58":{"start":{"line":311,"column":2},"end":{"line":311,"column":41}},"59":{"start":{"line":329,"column":0},"end":{"line":347,"column":2}},"60":{"start":{"line":330,"column":2},"end":{"line":330,"column":24}},"61":{"start":{"line":331,"column":2},"end":{"line":345,"column":3}},"62":{"start":{"line":332,"column":4},"end":{"line":334,"column":5}},"63":{"start":{"line":333,"column":6},"end":{"line":333,"column":80}},"64":{"start":{"line":336,"column":4},"end":{"line":336,"column":44}},"65":{"start":{"line":337,"column":4},"end":{"line":337,"column":43}},"66":{"start":{"line":339,"column":4},"end":{"line":343,"column":5}},"67":{"start":{"line":340,"column":6},"end":{"line":342,"column":37}},"68":{"start":{"line":346,"column":2},"end":{"line":346,"column":53}},"69":{"start":{"line":362,"column":0},"end":{"line":364,"column":2}},"70":{"start":{"line":363,"column":2},"end":{"line":363,"column":46}},"71":{"start":{"line":385,"column":0},"end":{"line":411,"column":2}},"72":{"start":{"line":388,"column":2},"end":{"line":388,"column":16}},"73":{"start":{"line":390,"column":2},"end":{"line":408,"column":3}},"74":{"start":{"line":391,"column":4},"end":{"line":391,"column":42}},"75":{"start":{"line":392,"column":4},"end":{"line":394,"column":7}},"76":{"start":{"line":393,"column":6},"end":{"line":393,"column":61}},"77":{"start":{"line":395,"column":9},"end":{"line":408,"column":3}},"78":{"start":{"line":396,"column":4},"end":{"line":405,"column":7}},"79":{"start":{"line":397,"column":6},"end":{"line":399,"column":7}},"80":{"start":{"line":398,"column":8},"end":{"line":398,"column":15}},"81":{"start":{"line":400,"column":6},"end":{"line":400,"column":45}},"82":{"start":{"line":401,"column":6},"end":{"line":403,"column":7}},"83":{"start":{"line":402,"column":8},"end":{"line":402,"column":35}},"84":{"start":{"line":404,"column":6},"end":{"line":404,"column":27}},"85":{"start":{"line":407,"column":4},"end":{"line":407,"column":80}},"86":{"start":{"line":410,"column":2},"end":{"line":410,"column":36}},"87":{"start":{"line":426,"column":0},"end":{"line":432,"column":2}},"88":{"start":{"line":427,"column":2},"end":{"line":429,"column":3}},"89":{"start":{"line":428,"column":4},"end":{"line":428,"column":22}},"90":{"start":{"line":430,"column":2},"end":{"line":430,"column":30}},"91":{"start":{"line":431,"column":2},"end":{"line":431,"column":14}},"92":{"start":{"line":445,"column":0},"end":{"line":478,"column":2}},"93":{"start":{"line":446,"column":2},"end":{"line":446,"column":19}},"94":{"start":{"line":447,"column":2},"end":{"line":447,"column":38}},"95":{"start":{"line":448,"column":2},"end":{"line":477,"column":5}},"96":{"start":{"line":449,"column":4},"end":{"line":456,"column":5}},"97":{"start":{"line":450,"column":6},"end":{"line":450,"column":58}},"98":{"start":{"line":451,"column":6},"end":{"line":453,"column":7}},"99":{"start":{"line":452,"column":8},"end":{"line":452,"column":22}},"100":{"start":{"line":454,"column":6},"end":{"line":454,"column":18}},"101":{"start":{"line":455,"column":6},"end":{"line":455,"column":13}},"102":{"start":{"line":458,"column":4},"end":{"line":458,"column":40}},"103":{"start":{"line":460,"column":4},"end":{"line":476,"column":11}},"104":{"start":{"line":464,"column":10},"end":{"line":470,"column":11}},"105":{"start":{"line":465,"column":12},"end":{"line":467,"column":13}},"106":{"start":{"line":466,"column":14},"end":{"line":466,"column":30}},"107":{"start":{"line":468,"column":12},"end":{"line":468,"column":26}},"108":{"start":{"line":469,"column":12},"end":{"line":469,"column":19}},"109":{"start":{"line":472,"column":10},"end":{"line":474,"column":11}},"110":{"start":{"line":473,"column":12},"end":{"line":473,"column":35}},"111":{"start":{"line":475,"column":10},"end":{"line":475,"column":26}},"112":{"start":{"line":492,"column":0},"end":{"line":498,"column":2}},"113":{"start":{"line":493,"column":2},"end":{"line":495,"column":3}},"114":{"start":{"line":494,"column":4},"end":{"line":494,"column":22}},"115":{"start":{"line":496,"column":2},"end":{"line":496,"column":36}},"116":{"start":{"line":497,"column":2},"end":{"line":497,"column":14}},"117":{"start":{"line":516,"column":0},"end":{"line":522,"column":2}},"118":{"start":{"line":517,"column":2},"end":{"line":519,"column":3}},"119":{"start":{"line":518,"column":4},"end":{"line":518,"column":22}},"120":{"start":{"line":520,"column":2},"end":{"line":520,"column":38}},"121":{"start":{"line":521,"column":2},"end":{"line":521,"column":14}},"122":{"start":{"line":536,"column":0},"end":{"line":542,"column":2}},"123":{"start":{"line":537,"column":2},"end":{"line":539,"column":3}},"124":{"start":{"line":538,"column":4},"end":{"line":538,"column":22}},"125":{"start":{"line":540,"column":2},"end":{"line":540,"column":29}},"126":{"start":{"line":541,"column":2},"end":{"line":541,"column":14}},"127":{"start":{"line":556,"column":0},"end":{"line":562,"column":2}},"128":{"start":{"line":557,"column":2},"end":{"line":559,"column":3}},"129":{"start":{"line":558,"column":4},"end":{"line":558,"column":22}},"130":{"start":{"line":560,"column":2},"end":{"line":560,"column":37}},"131":{"start":{"line":561,"column":2},"end":{"line":561,"column":14}},"132":{"start":{"line":583,"column":0},"end":{"line":585,"column":2}},"133":{"start":{"line":584,"column":2},"end":{"line":584,"column":40}},"134":{"start":{"line":604,"column":0},"end":{"line":670,"column":2}},"135":{"start":{"line":605,"column":2},"end":{"line":607,"column":3}},"136":{"start":{"line":606,"column":4},"end":{"line":606,"column":56}},"137":{"start":{"line":608,"column":2},"end":{"line":608,"column":19}},"138":{"start":{"line":609,"column":2},"end":{"line":609,"column":38}},"139":{"start":{"line":610,"column":2},"end":{"line":610,"column":42}},"140":{"start":{"line":612,"column":2},"end":{"line":639,"column":3}},"141":{"start":{"line":613,"column":4},"end":{"line":634,"column":5}},"142":{"start":{"line":614,"column":6},"end":{"line":614,"column":34}},"143":{"start":{"line":615,"column":6},"end":{"line":633,"column":9}},"144":{"start":{"line":616,"column":8},"end":{"line":625,"column":9}},"145":{"start":{"line":617,"column":10},"end":{"line":623,"column":13}},"146":{"start":{"line":618,"column":12},"end":{"line":619,"column":56}},"147":{"start":{"line":620,"column":12},"end":{"line":620,"column":35}},"148":{"start":{"line":621,"column":12},"end":{"line":621,"column":28}},"149":{"start":{"line":622,"column":12},"end":{"line":622,"column":47}},"150":{"start":{"line":624,"column":10},"end":{"line":624,"column":17}},"151":{"start":{"line":626,"column":8},"end":{"line":632,"column":11}},"152":{"start":{"line":627,"column":10},"end":{"line":628,"column":54}},"153":{"start":{"line":629,"column":10},"end":{"line":629,"column":33}},"154":{"start":{"line":630,"column":10},"end":{"line":630,"column":26}},"155":{"start":{"line":631,"column":10},"end":{"line":631,"column":45}},"156":{"start":{"line":635,"column":4},"end":{"line":636,"column":52}},"157":{"start":{"line":637,"column":4},"end":{"line":637,"column":27}},"158":{"start":{"line":638,"column":4},"end":{"line":638,"column":18}},"159":{"start":{"line":641,"column":2},"end":{"line":669,"column":5}},"160":{"start":{"line":642,"column":4},"end":{"line":649,"column":5}},"161":{"start":{"line":643,"column":6},"end":{"line":643,"column":58}},"162":{"start":{"line":644,"column":6},"end":{"line":646,"column":7}},"163":{"start":{"line":645,"column":8},"end":{"line":645,"column":22}},"164":{"start":{"line":647,"column":6},"end":{"line":647,"column":18}},"165":{"start":{"line":648,"column":6},"end":{"line":648,"column":13}},"166":{"start":{"line":651,"column":4},"end":{"line":651,"column":40}},"167":{"start":{"line":653,"column":4},"end":{"line":668,"column":11}},"168":{"start":{"line":656,"column":10},"end":{"line":662,"column":11}},"169":{"start":{"line":657,"column":12},"end":{"line":659,"column":13}},"170":{"start":{"line":658,"column":14},"end":{"line":658,"column":30}},"171":{"start":{"line":660,"column":12},"end":{"line":660,"column":26}},"172":{"start":{"line":661,"column":12},"end":{"line":661,"column":19}},"173":{"start":{"line":664,"column":10},"end":{"line":666,"column":11}},"174":{"start":{"line":665,"column":12},"end":{"line":665,"column":35}},"175":{"start":{"line":667,"column":10},"end":{"line":667,"column":26}},"176":{"start":{"line":676,"column":0},"end":{"line":721,"column":1}},"177":{"start":{"line":677,"column":2},"end":{"line":720,"column":4}},"178":{"start":{"line":678,"column":4},"end":{"line":678,"column":40}},"179":{"start":{"line":680,"column":4},"end":{"line":689,"column":6}},"180":{"start":{"line":681,"column":6},"end":{"line":681,"column":28}},"181":{"start":{"line":682,"column":6},"end":{"line":688,"column":7}},"182":{"start":{"line":683,"column":8},"end":{"line":685,"column":48}},"183":{"start":{"line":684,"column":23},"end":{"line":684,"column":38}},"184":{"start":{"line":685,"column":28},"end":{"line":685,"column":44}},"185":{"start":{"line":687,"column":8},"end":{"line":687,"column":23}},"186":{"start":{"line":691,"column":4},"end":{"line":708,"column":6}},"187":{"start":{"line":692,"column":6},"end":{"line":707,"column":9}},"188":{"start":{"line":693,"column":8},"end":{"line":695,"column":9}},"189":{"start":{"line":694,"column":10},"end":{"line":694,"column":33}},"190":{"start":{"line":696,"column":8},"end":{"line":698,"column":9}},"191":{"start":{"line":697,"column":10},"end":{"line":697,"column":32}},"192":{"start":{"line":699,"column":8},"end":{"line":706,"column":11}},"193":{"start":{"line":700,"column":10},"end":{"line":702,"column":11}},"194":{"start":{"line":701,"column":12},"end":{"line":701,"column":35}},"195":{"start":{"line":703,"column":10},"end":{"line":705,"column":16}},"196":{"start":{"line":704,"column":12},"end":{"line":704,"column":30}},"197":{"start":{"line":710,"column":4},"end":{"line":719,"column":7}},"198":{"start":{"line":711,"column":6},"end":{"line":718,"column":9}},"199":{"start":{"line":712,"column":8},"end":{"line":715,"column":9}},"200":{"start":{"line":713,"column":10},"end":{"line":713,"column":38}},"201":{"start":{"line":714,"column":10},"end":{"line":714,"column":31}},"202":{"start":{"line":716,"column":8},"end":{"line":716,"column":35}},"203":{"start":{"line":717,"column":8},"end":{"line":717,"column":25}},"204":{"start":{"line":735,"column":0},"end":{"line":737,"column":2}},"205":{"start":{"line":736,"column":2},"end":{"line":736,"column":43}},"206":{"start":{"line":751,"column":0},"end":{"line":764,"column":1}},"207":{"start":{"line":752,"column":2},"end":{"line":752,"column":8}},"208":{"start":{"line":754,"column":2},"end":{"line":756,"column":3}},"209":{"start":{"line":755,"column":4},"end":{"line":755,"column":17}},"210":{"start":{"line":758,"column":2},"end":{"line":758,"column":23}},"211":{"start":{"line":760,"column":2},"end":{"line":763,"column":13}},"212":{"start":{"line":762,"column":12},"end":{"line":762,"column":34}},"213":{"start":{"line":774,"column":0},"end":{"line":800,"column":1}},"214":{"start":{"line":775,"column":2},"end":{"line":776,"column":67}},"215":{"start":{"line":778,"column":2},"end":{"line":799,"column":3}},"216":{"start":{"line":779,"column":4},"end":{"line":781,"column":56}},"217":{"start":{"line":786,"column":4},"end":{"line":798,"column":5}},"218":{"start":{"line":787,"column":6},"end":{"line":787,"column":72}},"219":{"start":{"line":790,"column":11},"end":{"line":798,"column":5}},"220":{"start":{"line":791,"column":6},"end":{"line":792,"column":51}},"221":{"start":{"line":793,"column":6},"end":{"line":793,"column":80}},"222":{"start":{"line":795,"column":6},"end":{"line":795,"column":21}},"223":{"start":{"line":796,"column":6},"end":{"line":796,"column":51}},"224":{"start":{"line":797,"column":6},"end":{"line":797,"column":71}},"225":{"start":{"line":807,"column":0},"end":{"line":807,"column":27}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":28}},{"start":{"line":47,"column":32},"end":{"line":47,"column":58}}]},"3":{"line":84,"type":"cond-expr","locations":[{"start":{"line":85,"column":8},"end":{"line":85,"column":20}},{"start":{"line":86,"column":8},"end":{"line":86,"column":29}}]},"4":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":14},"end":{"line":84,"column":36}},{"start":{"line":84,"column":40},"end":{"line":84,"column":66}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"6":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":2},"end":{"line":132,"column":2}},{"start":{"line":132,"column":2},"end":{"line":132,"column":2}}]},"7":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":6},"end":{"line":132,"column":29}},{"start":{"line":132,"column":33},"end":{"line":132,"column":51}}]},"8":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":9},"end":{"line":136,"column":9}},{"start":{"line":136,"column":9},"end":{"line":136,"column":9}}]},"9":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":13},"end":{"line":136,"column":35}},{"start":{"line":136,"column":39},"end":{"line":136,"column":62}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"11":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":39},"end":{"line":141,"column":40}},{"start":{"line":141,"column":43},"end":{"line":141,"column":44}}]},"12":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":6}},{"start":{"line":142,"column":6},"end":{"line":142,"column":6}}]},"13":{"line":282,"type":"if","locations":[{"start":{"line":282,"column":4},"end":{"line":282,"column":4}},{"start":{"line":282,"column":4},"end":{"line":282,"column":4}}]},"14":{"line":282,"type":"binary-expr","locations":[{"start":{"line":282,"column":8},"end":{"line":282,"column":11}},{"start":{"line":282,"column":15},"end":{"line":282,"column":38}}]},"15":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":11},"end":{"line":284,"column":11}},{"start":{"line":284,"column":11},"end":{"line":284,"column":11}}]},"16":{"line":286,"type":"cond-expr","locations":[{"start":{"line":286,"column":50},"end":{"line":286,"column":53}},{"start":{"line":286,"column":56},"end":{"line":286,"column":65}}]},"17":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":18},"end":{"line":286,"column":21}},{"start":{"line":286,"column":25},"end":{"line":286,"column":46}}]},"18":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"19":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":4},"end":{"line":332,"column":4}},{"start":{"line":332,"column":4},"end":{"line":332,"column":4}}]},"20":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":4},"end":{"line":339,"column":4}},{"start":{"line":339,"column":4},"end":{"line":339,"column":4}}]},"21":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":17}},{"start":{"line":339,"column":21},"end":{"line":339,"column":50}}]},"22":{"line":340,"type":"cond-expr","locations":[{"start":{"line":341,"column":8},"end":{"line":341,"column":30}},{"start":{"line":342,"column":8},"end":{"line":342,"column":36}}]},"23":{"line":390,"type":"if","locations":[{"start":{"line":390,"column":2},"end":{"line":390,"column":2}},{"start":{"line":390,"column":2},"end":{"line":390,"column":2}}]},"24":{"line":393,"type":"cond-expr","locations":[{"start":{"line":393,"column":54},"end":{"line":393,"column":55}},{"start":{"line":393,"column":58},"end":{"line":393,"column":60}}]},"25":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":9},"end":{"line":395,"column":9}},{"start":{"line":395,"column":9},"end":{"line":395,"column":9}}]},"26":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":13},"end":{"line":395,"column":35}},{"start":{"line":395,"column":39},"end":{"line":395,"column":62}}]},"27":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":6},"end":{"line":397,"column":6}},{"start":{"line":397,"column":6},"end":{"line":397,"column":6}}]},"28":{"line":400,"type":"cond-expr","locations":[{"start":{"line":400,"column":38},"end":{"line":400,"column":40}},{"start":{"line":400,"column":43},"end":{"line":400,"column":44}}]},"29":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":6},"end":{"line":401,"column":6}},{"start":{"line":401,"column":6},"end":{"line":401,"column":6}}]},"30":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":2},"end":{"line":427,"column":2}},{"start":{"line":427,"column":2},"end":{"line":427,"column":2}}]},"31":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":4},"end":{"line":449,"column":4}},{"start":{"line":449,"column":4},"end":{"line":449,"column":4}}]},"32":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":6},"end":{"line":451,"column":6}},{"start":{"line":451,"column":6},"end":{"line":451,"column":6}}]},"33":{"line":462,"type":"binary-expr","locations":[{"start":{"line":462,"column":36},"end":{"line":462,"column":49}},{"start":{"line":462,"column":53},"end":{"line":462,"column":55}}]},"34":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":10},"end":{"line":464,"column":10}},{"start":{"line":464,"column":10},"end":{"line":464,"column":10}}]},"35":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":12},"end":{"line":465,"column":12}},{"start":{"line":465,"column":12},"end":{"line":465,"column":12}}]},"36":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":10},"end":{"line":472,"column":10}},{"start":{"line":472,"column":10},"end":{"line":472,"column":10}}]},"37":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"38":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":2},"end":{"line":517,"column":2}},{"start":{"line":517,"column":2},"end":{"line":517,"column":2}}]},"39":{"line":520,"type":"binary-expr","locations":[{"start":{"line":520,"column":24},"end":{"line":520,"column":31}},{"start":{"line":520,"column":35},"end":{"line":520,"column":37}}]},"40":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":2},"end":{"line":537,"column":2}},{"start":{"line":537,"column":2},"end":{"line":537,"column":2}}]},"41":{"line":557,"type":"if","locations":[{"start":{"line":557,"column":2},"end":{"line":557,"column":2}},{"start":{"line":557,"column":2},"end":{"line":557,"column":2}}]},"42":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":2},"end":{"line":605,"column":2}},{"start":{"line":605,"column":2},"end":{"line":605,"column":2}}]},"43":{"line":612,"type":"if","locations":[{"start":{"line":612,"column":2},"end":{"line":612,"column":2}},{"start":{"line":612,"column":2},"end":{"line":612,"column":2}}]},"44":{"line":612,"type":"binary-expr","locations":[{"start":{"line":612,"column":6},"end":{"line":612,"column":13}},{"start":{"line":612,"column":17},"end":{"line":612,"column":31}}]},"45":{"line":613,"type":"if","locations":[{"start":{"line":613,"column":4},"end":{"line":613,"column":4}},{"start":{"line":613,"column":4},"end":{"line":613,"column":4}}]},"46":{"line":616,"type":"if","locations":[{"start":{"line":616,"column":8},"end":{"line":616,"column":8}},{"start":{"line":616,"column":8},"end":{"line":616,"column":8}}]},"47":{"line":619,"type":"binary-expr","locations":[{"start":{"line":619,"column":41},"end":{"line":619,"column":48}},{"start":{"line":619,"column":52},"end":{"line":619,"column":54}}]},"48":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":12},"end":{"line":622,"column":20}},{"start":{"line":622,"column":24},"end":{"line":622,"column":46}}]},"49":{"line":628,"type":"binary-expr","locations":[{"start":{"line":628,"column":39},"end":{"line":628,"column":46}},{"start":{"line":628,"column":50},"end":{"line":628,"column":52}}]},"50":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":10},"end":{"line":631,"column":18}},{"start":{"line":631,"column":22},"end":{"line":631,"column":44}}]},"51":{"line":636,"type":"binary-expr","locations":[{"start":{"line":636,"column":32},"end":{"line":636,"column":44}},{"start":{"line":636,"column":48},"end":{"line":636,"column":50}}]},"52":{"line":642,"type":"if","locations":[{"start":{"line":642,"column":4},"end":{"line":642,"column":4}},{"start":{"line":642,"column":4},"end":{"line":642,"column":4}}]},"53":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":6},"end":{"line":644,"column":6}},{"start":{"line":644,"column":6},"end":{"line":644,"column":6}}]},"54":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":36},"end":{"line":655,"column":49}},{"start":{"line":655,"column":53},"end":{"line":655,"column":55}}]},"55":{"line":656,"type":"if","locations":[{"start":{"line":656,"column":10},"end":{"line":656,"column":10}},{"start":{"line":656,"column":10},"end":{"line":656,"column":10}}]},"56":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":12},"end":{"line":657,"column":12}},{"start":{"line":657,"column":12},"end":{"line":657,"column":12}}]},"57":{"line":664,"type":"if","locations":[{"start":{"line":664,"column":10},"end":{"line":664,"column":10}},{"start":{"line":664,"column":10},"end":{"line":664,"column":10}}]},"58":{"line":682,"type":"if","locations":[{"start":{"line":682,"column":6},"end":{"line":682,"column":6}},{"start":{"line":682,"column":6},"end":{"line":682,"column":6}}]},"59":{"line":682,"type":"binary-expr","locations":[{"start":{"line":682,"column":10},"end":{"line":682,"column":17}},{"start":{"line":682,"column":21},"end":{"line":682,"column":55}}]},"60":{"line":693,"type":"if","locations":[{"start":{"line":693,"column":8},"end":{"line":693,"column":8}},{"start":{"line":693,"column":8},"end":{"line":693,"column":8}}]},"61":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":8}},{"start":{"line":696,"column":8},"end":{"line":696,"column":8}}]},"62":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":10},"end":{"line":700,"column":10}},{"start":{"line":700,"column":10},"end":{"line":700,"column":10}}]},"63":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":8},"end":{"line":712,"column":8}},{"start":{"line":712,"column":8},"end":{"line":712,"column":8}}]},"64":{"line":713,"type":"binary-expr","locations":[{"start":{"line":713,"column":10},"end":{"line":713,"column":18}},{"start":{"line":713,"column":22},"end":{"line":713,"column":37}}]},"65":{"line":716,"type":"binary-expr","locations":[{"start":{"line":716,"column":8},"end":{"line":716,"column":16}},{"start":{"line":716,"column":20},"end":{"line":716,"column":34}}]},"66":{"line":754,"type":"if","locations":[{"start":{"line":754,"column":2},"end":{"line":754,"column":2}},{"start":{"line":754,"column":2},"end":{"line":754,"column":2}}]},"67":{"line":760,"type":"binary-expr","locations":[{"start":{"line":760,"column":9},"end":{"line":760,"column":23}},{"start":{"line":760,"column":27},"end":{"line":763,"column":12}}]},"68":{"line":776,"type":"binary-expr","locations":[{"start":{"line":776,"column":29},"end":{"line":776,"column":35}},{"start":{"line":776,"column":39},"end":{"line":776,"column":66}}]},"69":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":2},"end":{"line":778,"column":2}},{"start":{"line":778,"column":2},"end":{"line":778,"column":2}}]},"70":{"line":778,"type":"binary-expr","locations":[{"start":{"line":778,"column":6},"end":{"line":778,"column":26}},{"start":{"line":778,"column":30},"end":{"line":778,"column":58}}]},"71":{"line":786,"type":"if","locations":[{"start":{"line":786,"column":4},"end":{"line":786,"column":4}},{"start":{"line":786,"column":4},"end":{"line":786,"column":4}}]},"72":{"line":786,"type":"binary-expr","locations":[{"start":{"line":786,"column":8},"end":{"line":786,"column":27}},{"start":{"line":786,"column":31},"end":{"line":786,"column":57}},{"start":{"line":786,"column":61},"end":{"line":786,"column":106}}]},"73":{"line":790,"type":"if","locations":[{"start":{"line":790,"column":11},"end":{"line":790,"column":11}},{"start":{"line":790,"column":11},"end":{"line":790,"column":11}}]},"74":{"line":790,"type":"binary-expr","locations":[{"start":{"line":790,"column":15},"end":{"line":790,"column":34}},{"start":{"line":790,"column":38},"end":{"line":790,"column":66}}]},"75":{"line":792,"type":"binary-expr","locations":[{"start":{"line":792,"column":10},"end":{"line":792,"column":44}},{"start":{"line":792,"column":48},"end":{"line":792,"column":50}}]}},"code":["/*!"," * Module dependencies"," */","","var util = require('util');","var utils = require('./utils');","var PromiseProvider = require('./promise_provider');","var Query = require('./query');","var read = Query.prototype.read;","","/**"," * Aggregate constructor used for building aggregation pipelines."," *"," * ####Example:"," *"," *     new Aggregate();"," *     new Aggregate({ $project: { a: 1, b: 1 } });"," *     new Aggregate({ $project: { a: 1, b: 1 } }, { $skip: 5 });"," *     new Aggregate([{ $project: { a: 1, b: 1 } }, { $skip: 5 }]);"," *"," * Returned when calling Model.aggregate()."," *"," * ####Example:"," *"," *     Model"," *     .aggregate({ $match: { age: { $gte: 21 }}})"," *     .unwind('tags')"," *     .exec(callback)"," *"," * ####Note:"," *"," * - The documents returned are plain javascript objects, not mongoose documents (since any shape of document can be returned)."," * - Requires MongoDB >= 2.1"," * - Mongoose does **not** cast pipeline stages. `new Aggregate({ $match: { _id: '00000000000000000000000a' } });` will not work unless `_id` is a string in the database. Use `new Aggregate({ $match: { _id: mongoose.Types.ObjectId('00000000000000000000000a') } });` instead."," *"," * @see MongoDB http://docs.mongodb.org/manual/applications/aggregation/"," * @see driver http://mongodb.github.com/node-mongodb-native/api-generated/collection.html#aggregate"," * @param {Object|Array} [ops] aggregation operator(s) or operator array"," * @api public"," */","","function Aggregate() {","  this._pipeline = [];","  this._model = undefined;","  this.options = undefined;","","  if (arguments.length === 1 && util.isArray(arguments[0])) {","    this.append.apply(this, arguments[0]);","  } else {","    this.append.apply(this, arguments);","  }","}","","/**"," * Binds this aggregate to a model."," *"," * @param {Model} model the model to which the aggregate is to be bound"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.model = function(model) {","  this._model = model;","  return this;","};","","/**"," * Appends new operators to this aggregate pipeline"," *"," * ####Examples:"," *"," *     aggregate.append({ $project: { field: 1 }}, { $limit: 2 });"," *"," *     // or pass an array"," *     var pipeline = [{ $match: { daw: 'Logic Audio X' }} ];"," *     aggregate.append(pipeline);"," *"," * @param {Object} ops operator(s) to append"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.append = function() {","  var args = (arguments.length === 1 && util.isArray(arguments[0]))","      ? arguments[0]","      : utils.args(arguments);","","  if (!args.every(isOperator)) {","    throw new Error('Arguments must be aggregate pipeline operators');","  }","","  this._pipeline = this._pipeline.concat(args);","","  return this;","};","","/**"," * Appends a new $project operator to this aggregate pipeline."," *"," * Mongoose query [selection syntax](#query_Query-select) is also supported."," *"," * ####Examples:"," *"," *     // include a, include b, exclude _id"," *     aggregate.project(\"a b -_id\");"," *"," *     // or you may use object notation, useful when"," *     // you have keys already prefixed with a \"-\""," *     aggregate.project({a: 1, b: 1, _id: 0});"," *"," *     // reshaping documents"," *     aggregate.project({"," *         newField: '$b.nested'"," *       , plusTen: { $add: ['$val', 10]}"," *       , sub: {"," *            name: '$a'"," *         }"," *     })"," *"," *     // etc"," *     aggregate.project({ salary_k: { $divide: [ \"$salary\", 1000 ] } });"," *"," * @param {Object|String} arg field specification"," * @see projection http://docs.mongodb.org/manual/reference/aggregation/project/"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.project = function(arg) {","  var fields = {};","","  if (typeof arg === 'object' && !util.isArray(arg)) {","    Object.keys(arg).forEach(function(field) {","      fields[field] = arg[field];","    });","  } else if (arguments.length === 1 && typeof arg === 'string') {","    arg.split(/\\s+/).forEach(function(field) {","      if (!field) {","        return;","      }","      var include = field[0] === '-' ? 0 : 1;","      if (include === 0) {","        field = field.substring(1);","      }","      fields[field] = include;","    });","  } else {","    throw new Error('Invalid project() argument. Must be string or object');","  }","","  return this.append({$project: fields});","};","","/**"," * Appends a new custom $group operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.group({ _id: \"$department\" });"," *"," * @see $group http://docs.mongodb.org/manual/reference/aggregation/group/"," * @method group"," * @memberOf Aggregate"," * @param {Object} arg $group operator contents"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new custom $match operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.match({ department: { $in: [ \"sales\", \"engineering\" ] } });"," *"," * @see $match http://docs.mongodb.org/manual/reference/aggregation/match/"," * @method match"," * @memberOf Aggregate"," * @param {Object} arg $match operator contents"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $skip operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.skip(10);"," *"," * @see $skip http://docs.mongodb.org/manual/reference/aggregation/skip/"," * @method skip"," * @memberOf Aggregate"," * @param {Number} num number of records to skip before next stage"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $limit operator to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.limit(10);"," *"," * @see $limit http://docs.mongodb.org/manual/reference/aggregation/limit/"," * @method limit"," * @memberOf Aggregate"," * @param {Number} num maximum number of records to pass to the next stage"," * @return {Aggregate}"," * @api public"," */","","/**"," * Appends a new $geoNear operator to this aggregate pipeline."," *"," * ####NOTE:"," *"," * **MUST** be used as the first operator in the pipeline."," *"," * ####Examples:"," *"," *     aggregate.near({"," *       near: [40.724, -73.997],"," *       distanceField: \"dist.calculated\", // required"," *       maxDistance: 0.008,"," *       query: { type: \"public\" },"," *       includeLocs: \"dist.location\","," *       uniqueDocs: true,"," *       num: 5"," *     });"," *"," * @see $geoNear http://docs.mongodb.org/manual/reference/aggregation/geoNear/"," * @method near"," * @memberOf Aggregate"," * @param {Object} parameters"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.near = function(arg) {","  var op = {};","  op.$geoNear = arg;","  return this.append(op);","};","","/*!"," * define methods"," */","","'group match skip limit out'.split(' ').forEach(function($operator) {","  Aggregate.prototype[$operator] = function(arg) {","    var op = {};","    op['$' + $operator] = arg;","    return this.append(op);","  };","});","","/**"," * Appends new custom $unwind operator(s) to this aggregate pipeline."," *"," * Note that the `$unwind` operator requires the path name to start with '$'."," * Mongoose will prepend '$' if the specified field doesn't start '$'."," *"," * ####Examples:"," *"," *     aggregate.unwind(\"tags\");"," *     aggregate.unwind(\"a\", \"b\", \"c\");"," *"," * @see $unwind http://docs.mongodb.org/manual/reference/aggregation/unwind/"," * @param {String} fields the field(s) to unwind"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.unwind = function() {","  var args = utils.args(arguments);","","  var res = [];","  for (var i = 0; i < args.length; ++i) {","    var arg = args[i];","    if (arg && typeof arg === 'object') {","      res.push({ $unwind: arg });","    } else if (typeof arg === 'string') {","      res.push({","        $unwind: (arg && arg.charAt(0) === '$') ? arg : '$' + arg","      });","    } else {","      throw new Error('Invalid arg \"' + arg + '\" to unwind(), ' +","        'must be string or object');","    }","  }","","  return this.append.apply(this, res);","};","","/**"," * Appends new custom $lookup operator(s) to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.lookup({ from: 'users', localField: 'userId', foreignField: '_id', as: 'users' });"," *"," * @see $lookup https://docs.mongodb.org/manual/reference/operator/aggregation/lookup/#pipe._S_lookup"," * @param {Object} options to $lookup as described in the above link"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.lookup = function(options) {","  return this.append({$lookup: options});","};","","/**"," * Appends new custom $graphLookup operator(s) to this aggregate pipeline, performing a recursive search on a collection."," *"," * Note that graphLookup can only consume at most 100MB of memory, and does not allow disk use even if `{ allowDiskUse: true }` is specified."," *"," * #### Examples:"," *      // Suppose we have a collection of courses, where a document might look like `{ _id: 0, name: 'Calculus', prerequisite: 'Trigonometry'}` and `{ _id: 0, name: 'Trigonometry', prerequisite: 'Algebra' }`"," *      aggregate.graphLookup({ from: 'courses', startWith: '$prerequisite', connectFromField: 'prerequisite', connectToField: 'name', as: 'prerequisites', maxDepth: 3 }) // this will recursively search the 'courses' collection up to 3 prerequisites"," *"," * @see $graphLookup https://docs.mongodb.com/manual/reference/operator/aggregation/graphLookup/#pipe._S_graphLookup"," * @param {Object} options to $graphLookup as described in the above link"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.graphLookup = function(options) {","  var cloneOptions = {};","  if (options) {","    if (!utils.isObject(options)) {","      throw new TypeError('Invalid graphLookup() argument. Must be an object.');","    }","","    utils.mergeClone(cloneOptions, options);","    var startWith = cloneOptions.startWith;","","    if (startWith && typeof startWith === 'string') {","      cloneOptions.startWith = cloneOptions.startWith.charAt(0) === '$' ?","        cloneOptions.startWith :","        '$' + cloneOptions.startWith;","    }","","  }","  return this.append({ $graphLookup: cloneOptions });","};","","/**"," * Appepnds new custom $sample operator(s) to this aggregate pipeline."," *"," * ####Examples:"," *"," *     aggregate.sample(3); // Add a pipeline that picks 3 random documents"," *"," * @see $sample https://docs.mongodb.org/manual/reference/operator/aggregation/sample/#pipe._S_sample"," * @param {Number} size number of random documents to pick"," * @return {Aggregate}"," * @api public"," */","","Aggregate.prototype.sample = function(size) {","  return this.append({$sample: {size: size}});","};","","/**"," * Appends a new $sort operator to this aggregate pipeline."," *"," * If an object is passed, values allowed are `asc`, `desc`, `ascending`, `descending`, `1`, and `-1`."," *"," * If a string is passed, it must be a space delimited list of path names. The sort order of each path is ascending unless the path name is prefixed with `-` which will be treated as descending."," *"," * ####Examples:"," *"," *     // these are equivalent"," *     aggregate.sort({ field: 'asc', test: -1 });"," *     aggregate.sort('field -test');"," *"," * @see $sort http://docs.mongodb.org/manual/reference/aggregation/sort/"," * @param {Object|String} arg"," * @return {Aggregate} this"," * @api public"," */","","Aggregate.prototype.sort = function(arg) {","  // TODO refactor to reuse the query builder logic","","  var sort = {};","","  if (arg.constructor.name === 'Object') {","    var desc = ['desc', 'descending', -1];","    Object.keys(arg).forEach(function(field) {","      sort[field] = desc.indexOf(arg[field]) === -1 ? 1 : -1;","    });","  } else if (arguments.length === 1 && typeof arg === 'string') {","    arg.split(/\\s+/).forEach(function(field) {","      if (!field) {","        return;","      }","      var ascend = field[0] === '-' ? -1 : 1;","      if (ascend === -1) {","        field = field.substring(1);","      }","      sort[field] = ascend;","    });","  } else {","    throw new TypeError('Invalid sort() argument. Must be a string or object.');","  }","","  return this.append({$sort: sort});","};","","/**"," * Sets the readPreference option for the aggregation query."," *"," * ####Example:"," *"," *     Model.aggregate(..).read('primaryPreferred').exec(callback)"," *"," * @param {String} pref one of the listed preference options or their aliases"," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/applications/replication/#read-preference"," * @see driver http://mongodb.github.com/node-mongodb-native/driver-articles/anintroductionto1_1and2_2.html#read-preferences"," */","","Aggregate.prototype.read = function(pref, tags) {","  if (!this.options) {","    this.options = {};","  }","  read.call(this, pref, tags);","  return this;","};","","/**"," * Execute the aggregation with explain"," *"," * ####Example:"," *"," *     Model.aggregate(..).explain(callback)"," *"," * @param {Function} callback"," * @return {Promise}"," */","","Aggregate.prototype.explain = function(callback) {","  var _this = this;","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve, reject) {","    if (!_this._pipeline.length) {","      var err = new Error('Aggregate has empty pipeline');","      if (callback) {","        callback(err);","      }","      reject(err);","      return;","    }","","    prepareDiscriminatorPipeline(_this);","","    _this._model","        .collection","        .aggregate(_this._pipeline, _this.options || {})","        .explain(function(error, result) {","          if (error) {","            if (callback) {","              callback(error);","            }","            reject(error);","            return;","          }","","          if (callback) {","            callback(null, result);","          }","          resolve(result);","        });","  });","};","","/**"," * Sets the allowDiskUse option for the aggregation query (ignored for < 2.6.0)"," *"," * ####Example:"," *"," *     Model.aggregate(..).allowDiskUse(true).exec(callback)"," *"," * @param {Boolean} value Should tell server it can use hard drive to store data during aggregation."," * @param {Array} [tags] optional tags for this query"," * @see mongodb http://docs.mongodb.org/manual/reference/command/aggregate/"," */","","Aggregate.prototype.allowDiskUse = function(value) {","  if (!this.options) {","    this.options = {};","  }","  this.options.allowDiskUse = value;","  return this;","};","","/**"," * Sets the cursor option option for the aggregation query (ignored for < 2.6.0)."," * Note the different syntax below: .exec() returns a cursor object, and no callback"," * is necessary."," *"," * ####Example:"," *"," *     var cursor = Model.aggregate(..).cursor({ batchSize: 1000 }).exec();"," *     cursor.each(function(error, doc) {"," *       // use doc"," *     });"," *"," * @param {Object} options set the cursor batch size"," * @see mongodb http://mongodb.github.io/node-mongodb-native/2.0/api/AggregationCursor.html"," */","","Aggregate.prototype.cursor = function(options) {","  if (!this.options) {","    this.options = {};","  }","  this.options.cursor = options || {};","  return this;","};","","/**"," * Adds a [cursor flag](http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag)"," *"," * ####Example:"," *"," *     Model.aggregate(..).addCursorFlag('noCursorTimeout', true).exec();"," *"," * @param {String} flag"," * @param {Boolean} value"," * @see mongodb http://mongodb.github.io/node-mongodb-native/2.1/api/Cursor.html#addCursorFlag"," */","","Aggregate.prototype.addCursorFlag = function(flag, value) {","  if (!this.options) {","    this.options = {};","  }","  this.options[flag] = value;","  return this;","};","","/**"," * Adds a collation"," *"," * ####Example:"," *"," *     Model.aggregate(..).collation({ locale: 'en_US', strength: 1 }).exec();"," *"," * @param {Object} collation options"," * @param {Boolean} value"," * @see mongodb http://mongodb.github.io/node-mongodb-native/2.2/api/Collection.html#aggregate"," */","","Aggregate.prototype.collation = function(collation) {","  if (!this.options) {","    this.options = {};","  }","  this.options.collation = collation;","  return this;","};","","/**"," * Combines multiple aggregation pipelines."," *"," * ####Example:"," *     Model.aggregate(...)"," *      .facet({"," *        books: [{ groupBy: '$author' }],"," *        price: [{ $bucketAuto: { groupBy: '$price', buckets: 2 } }]"," *      })"," *      .exec();"," *"," *     // Output: { books: [...], price: [{...}, {...}] }"," *"," * @param {Object} facet options"," * @return {Aggregate} this"," * @see $facet https://docs.mongodb.com/v3.4/reference/operator/aggregation/facet/"," * @api public"," */","","Aggregate.prototype.facet = function(options) {","  return this.append({$facet: options});","};","","/**"," * Executes the aggregate pipeline on the currently bound Model."," *"," * ####Example:"," *"," *     aggregate.exec(callback);"," *"," *     // Because a promise is returned, the `callback` is optional."," *     var promise = aggregate.exec();"," *     promise.then(..);"," *"," * @see Promise #promise_Promise"," * @param {Function} [callback]"," * @return {Promise}"," * @api public"," */","","Aggregate.prototype.exec = function(callback) {","  if (!this._model) {","    throw new Error('Aggregate not bound to any Model');","  }","  var _this = this;","  var Promise = PromiseProvider.get();","  var options = utils.clone(this.options);","","  if (options && options.cursor) {","    if (options.cursor.async) {","      delete options.cursor.async;","      return new Promise.ES6(function(resolve) {","        if (!_this._model.collection.buffer) {","          process.nextTick(function() {","            var cursor = _this._model.collection.","              aggregate(_this._pipeline, options || {});","            decorateCursor(cursor);","            resolve(cursor);","            callback && callback(null, cursor);","          });","          return;","        }","        _this._model.collection.emitter.once('queue', function() {","          var cursor = _this._model.collection.","            aggregate(_this._pipeline, options || {});","          decorateCursor(cursor);","          resolve(cursor);","          callback && callback(null, cursor);","        });","      });","    }","    var cursor = this._model.collection.","      aggregate(this._pipeline, this.options || {});","    decorateCursor(cursor);","    return cursor;","  }","","  return new Promise.ES6(function(resolve, reject) {","    if (!_this._pipeline.length) {","      var err = new Error('Aggregate has empty pipeline');","      if (callback) {","        callback(err);","      }","      reject(err);","      return;","    }","","    prepareDiscriminatorPipeline(_this);","","    _this._model","        .collection","        .aggregate(_this._pipeline, _this.options || {}, function(error, result) {","          if (error) {","            if (callback) {","              callback(error);","            }","            reject(error);","            return;","          }","","          if (callback) {","            callback(null, result);","          }","          resolve(result);","        });","  });","};","","/*!"," * Add `eachAsync()` to aggregation cursors"," */","","function decorateCursor(cursor) {","  cursor.eachAsync = function(fn, callback) {","    var Promise = PromiseProvider.get();","","    var handleNextResult = function(doc, callback) {","      var promise = fn(doc);","      if (promise && typeof promise.then === 'function') {","        promise.then(","          function() { callback(null); },","          function(error) { callback(error); });","      } else {","        callback(null);","      }","    };","","    var iterate = function(callback) {","      return cursor.next(function(error, doc) {","        if (error) {","          return callback(error);","        }","        if (!doc) {","          return callback(null);","        }","        handleNextResult(doc, function(error) {","          if (error) {","            return callback(error);","          }","          setTimeout(function() {","            iterate(callback);","          }, 0);","        });","      });","    };","","    return new Promise.ES6(function(resolve, reject) {","      iterate(function(error) {","        if (error) {","          callback && callback(error);","          return reject(error);","        }","        callback && callback(null);","        return resolve();","      });","    });","  };","}","","/**"," * Provides promise for aggregate."," *"," * ####Example:"," *"," *     Model.aggregate(..).then(successCallback, errorCallback);"," *"," * @see Promise #promise_Promise"," * @param {Function} [resolve] successCallback"," * @param {Function} [reject]  errorCallback"," * @return {Promise}"," */","Aggregate.prototype.then = function(resolve, reject) {","  return this.exec().then(resolve, reject);","};","","/*!"," * Helpers"," */","","/**"," * Checks whether an object is likely a pipeline operator"," *"," * @param {Object} obj object to check"," * @return {Boolean}"," * @api private"," */","","function isOperator(obj) {","  var k;","","  if (typeof obj !== 'object') {","    return false;","  }","","  k = Object.keys(obj);","","  return k.length === 1 && k","          .some(function(key) {","            return key[0] === '$';","          });","}","","/*!"," * Adds the appropriate `$match` pipeline step to the top of an aggregate's"," * pipeline, should it's model is a non-root discriminator type. This is"," * analogous to the `prepareDiscriminatorCriteria` function in `lib/query.js`."," *"," * @param {Aggregate} aggregate Aggregate to prepare"," */","","function prepareDiscriminatorPipeline(aggregate) {","  var schema = aggregate._model.schema,","      discriminatorMapping = schema && schema.discriminatorMapping;","","  if (discriminatorMapping && !discriminatorMapping.isRoot) {","    var originalPipeline = aggregate._pipeline,","        discriminatorKey = discriminatorMapping.key,","        discriminatorValue = discriminatorMapping.value;","","    // If the first pipeline stage is a match and it doesn't specify a `__t`","    // key, add the discriminator key to it. This allows for potential","    // aggregation query optimizations not to be disturbed by this feature.","    if (originalPipeline[0] && originalPipeline[0].$match && !originalPipeline[0].$match[discriminatorKey]) {","      originalPipeline[0].$match[discriminatorKey] = discriminatorValue;","      // `originalPipeline` is a ref, so there's no need for","      // aggregate._pipeline = originalPipeline","    } else if (originalPipeline[0] && originalPipeline[0].$geoNear) {","      originalPipeline[0].$geoNear.query =","          originalPipeline[0].$geoNear.query || {};","      originalPipeline[0].$geoNear.query[discriminatorKey] = discriminatorValue;","    } else {","      var match = {};","      match[discriminatorKey] = discriminatorValue;","      aggregate._pipeline = [{$match: match}].concat(originalPipeline);","    }","  }","}","","","/*!"," * Exports"," */","","module.exports = Aggregate;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"42":1,"43":0,"44":0,"45":0,"47":0,"48":0,"50":0,"62":1,"63":0,"64":0,"83":1,"84":0,"88":0,"89":0,"92":0,"94":0,"129":1,"130":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"141":0,"142":0,"143":0,"145":0,"148":0,"151":0,"241":1,"242":0,"243":0,"244":0,"251":1,"252":5,"253":0,"254":0,"255":0,"276":1,"277":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"289":0,"294":0,"310":1,"311":0,"329":1,"330":0,"331":0,"332":0,"333":0,"336":0,"337":0,"339":0,"340":0,"346":0,"362":1,"363":0,"385":1,"388":0,"390":0,"391":0,"392":0,"393":0,"395":0,"396":0,"397":0,"398":0,"400":0,"401":0,"402":0,"404":0,"407":0,"410":0,"426":1,"427":0,"428":0,"430":0,"431":0,"445":1,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"454":0,"455":0,"458":0,"460":0,"464":0,"465":0,"466":0,"468":0,"469":0,"472":0,"473":0,"475":0,"492":1,"493":0,"494":0,"496":0,"497":0,"516":1,"517":0,"518":0,"520":0,"521":0,"536":1,"537":0,"538":0,"540":0,"541":0,"556":1,"557":0,"558":0,"560":0,"561":0,"583":1,"584":0,"604":1,"605":0,"606":0,"608":0,"609":0,"610":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"620":0,"621":0,"622":0,"624":0,"626":0,"627":0,"629":0,"630":0,"631":0,"635":0,"637":0,"638":0,"641":0,"642":0,"643":0,"644":0,"645":0,"647":0,"648":0,"651":0,"653":0,"656":0,"657":0,"658":0,"660":0,"661":0,"664":0,"665":0,"667":0,"676":1,"677":0,"678":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"687":0,"691":0,"692":0,"693":0,"694":0,"696":0,"697":0,"699":0,"700":0,"701":0,"703":0,"704":0,"710":0,"711":0,"712":0,"713":0,"714":0,"716":0,"717":0,"735":1,"736":0,"751":1,"752":0,"754":0,"755":0,"758":0,"760":0,"762":0,"774":1,"775":0,"778":0,"779":0,"786":0,"787":0,"790":0,"791":0,"793":0,"795":0,"796":0,"797":0,"807":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyMethods.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyMethods.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"applyMethods","line":10,"loc":{"start":{"line":10,"column":17},"end":{"line":10,"column":54}}},"2":{"name":"apply","line":11,"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":33}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":11},"end":{"line":13,"column":22}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":34,"column":2}},"2":{"start":{"line":11,"column":2},"end":{"line":22,"column":3}},"3":{"start":{"line":12,"column":4},"end":{"line":21,"column":7}},"4":{"start":{"line":14,"column":8},"end":{"line":14,"column":19}},"5":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"6":{"start":{"line":16,"column":10},"end":{"line":16,"column":54}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":17}},"8":{"start":{"line":23,"column":2},"end":{"line":33,"column":3}},"9":{"start":{"line":24,"column":4},"end":{"line":27,"column":5}},"10":{"start":{"line":25,"column":6},"end":{"line":26,"column":34}},"11":{"start":{"line":28,"column":4},"end":{"line":32,"column":5}},"12":{"start":{"line":29,"column":6},"end":{"line":29,"column":55}},"13":{"start":{"line":31,"column":6},"end":{"line":31,"column":28}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":4}},{"start":{"line":28,"column":4},"end":{"line":28,"column":4}}]}},"code":["'use strict';","","/*!"," * Register methods for this model"," *"," * @param {Model} model"," * @param {Schema} schema"," */","","module.exports = function applyMethods(model, schema) {","  function apply(method, schema) {","    Object.defineProperty(model.prototype, method, {","      get: function() {","        var h = {};","        for (var k in schema.methods[method]) {","          h[k] = schema.methods[method][k].bind(this);","        }","        return h;","      },","      configurable: true","    });","  }","  for (var method in schema.methods) {","    if (schema.tree.hasOwnProperty(method)) {","      throw new Error('You have a method and a property in your schema both ' +","        'named \"' + method + '\"');","    }","    if (typeof schema.methods[method] === 'function') {","      model.prototype[method] = schema.methods[method];","    } else {","      apply(method, schema);","    }","  }","};",""],"l":{"10":1,"11":1,"12":0,"14":0,"15":0,"16":0,"18":0,"23":0,"24":0,"25":0,"28":0,"29":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyStatics.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/model/applyStatics.js","s":{"1":1,"2":0,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"applyStatics","line":8,"loc":{"start":{"line":8,"column":17},"end":{"line":8,"column":54}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"2":{"start":{"line":9,"column":2},"end":{"line":11,"column":3}},"3":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}},"branchMap":{},"code":["'use strict';","","/*!"," * Register statics for this model"," * @param {Model} model"," * @param {Schema} schema"," */","module.exports = function applyStatics(model, schema) {","  for (var i in schema.statics) {","    model[i] = schema.statics[i];","  }","};",""],"l":{"8":1,"9":0,"10":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/projection/isPathSelectedInclusive.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/services/projection/isPathSelectedInclusive.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isPathSelectedInclusive","line":7,"loc":{"start":{"line":7,"column":17},"end":{"line":7,"column":64}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":28,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":31}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":15}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":8}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":11}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":14}},"7":{"start":{"line":13,"column":2},"end":{"line":25,"column":3}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":45}},"9":{"start":{"line":15,"column":4},"end":{"line":24,"column":5}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":33}},"11":{"start":{"line":17,"column":6},"end":{"line":17,"column":28}},"12":{"start":{"line":18,"column":6},"end":{"line":22,"column":7}},"13":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"14":{"start":{"line":20,"column":10},"end":{"line":20,"column":19}},"15":{"start":{"line":23,"column":6},"end":{"line":23,"column":18}},"16":{"start":{"line":27,"column":2},"end":{"line":27,"column":15}}},"branchMap":{"1":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":24},"end":{"line":14,"column":27}},{"start":{"line":14,"column":30},"end":{"line":14,"column":44}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":8}},{"start":{"line":19,"column":8},"end":{"line":19,"column":8}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":44}},{"start":{"line":19,"column":48},"end":{"line":19,"column":75}}]}},"code":["'use strict';","","/*!"," * ignore"," */","","module.exports = function isPathSelectedInclusive(fields, path) {","  var chunks = path.split('.');","  var cur = '';","  var j;","  var keys;","  var numKeys;","  for (var i = 0; i < chunks.length; ++i) {","    cur += cur.length ? '.' : '' + chunks[i];","    if (fields[cur]) {","      keys = Object.keys(fields);","      numKeys = keys.length;","      for (j = 0; j < numKeys; ++j) {","        if (keys[i].indexOf(cur + '.') === 0 && keys[i].indexOf(path) !== 0) {","          continue;","        }","      }","      return true;","    }","  }","","  return false;","};",""],"l":{"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"23":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"11":2,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":0,"180":0,"181":0,"182":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"NativeConnection","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":28}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":36},"end":{"line":47,"column":49}}},"3":{"name":"(anonymous_3)","line":58,"loc":{"start":{"line":58,"column":15},"end":{"line":58,"column":29}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":34},"end":{"line":62,"column":50}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":35},"end":{"line":87,"column":50}}},"6":{"name":"wireup","line":121,"loc":{"start":{"line":121,"column":2},"end":{"line":121,"column":20}}},"7":{"name":"listen","line":141,"loc":{"start":{"line":141,"column":0},"end":{"line":141,"column":22}}},"8":{"name":"(anonymous_8)","line":147,"loc":{"start":{"line":147,"column":22},"end":{"line":147,"column":33}}},"9":{"name":"(anonymous_9)","line":160,"loc":{"start":{"line":160,"column":22},"end":{"line":160,"column":36}}},"10":{"name":"(anonymous_10)","line":163,"loc":{"start":{"line":163,"column":26},"end":{"line":163,"column":37}}},"11":{"name":"(anonymous_11)","line":168,"loc":{"start":{"line":168,"column":24},"end":{"line":168,"column":38}}},"12":{"name":"(anonymous_12)","line":171,"loc":{"start":{"line":171,"column":21},"end":{"line":171,"column":39}}},"13":{"name":"(anonymous_13)","line":177,"loc":{"start":{"line":177,"column":27},"end":{"line":177,"column":41}}},"14":{"name":"(anonymous_14)","line":192,"loc":{"start":{"line":192,"column":39},"end":{"line":192,"column":52}}},"15":{"name":"(anonymous_15)","line":196,"loc":{"start":{"line":196,"column":21},"end":{"line":196,"column":38}}},"16":{"name":"(anonymous_16)","line":207,"loc":{"start":{"line":207,"column":26},"end":{"line":207,"column":37}}},"17":{"name":"(anonymous_17)","line":211,"loc":{"start":{"line":211,"column":20},"end":{"line":211,"column":31}}},"18":{"name":"(anonymous_18)","line":215,"loc":{"start":{"line":215,"column":15},"end":{"line":215,"column":29}}},"19":{"name":"(anonymous_19)","line":232,"loc":{"start":{"line":232,"column":37},"end":{"line":232,"column":50}}},"20":{"name":"(anonymous_20)","line":247,"loc":{"start":{"line":247,"column":42},"end":{"line":247,"column":72}}},"21":{"name":"(anonymous_21)","line":259,"loc":{"start":{"line":259,"column":28},"end":{"line":259,"column":43}}},"22":{"name":"validate","line":377,"loc":{"start":{"line":377,"column":0},"end":{"line":377,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":53}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":26}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":26}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":46}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":60}},"9":{"start":{"line":21,"column":0},"end":{"line":24,"column":1}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":44}},"11":{"start":{"line":23,"column":2},"end":{"line":23,"column":26}},"12":{"start":{"line":31,"column":0},"end":{"line":31,"column":33}},"13":{"start":{"line":37,"column":0},"end":{"line":37,"column":68}},"14":{"start":{"line":47,"column":0},"end":{"line":75,"column":2}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":19}},"16":{"start":{"line":49,"column":2},"end":{"line":49,"column":69}},"17":{"start":{"line":51,"column":2},"end":{"line":56,"column":3}},"18":{"start":{"line":52,"column":4},"end":{"line":52,"column":59}},"19":{"start":{"line":53,"column":4},"end":{"line":53,"column":57}},"20":{"start":{"line":55,"column":4},"end":{"line":55,"column":57}},"21":{"start":{"line":58,"column":2},"end":{"line":72,"column":5}},"22":{"start":{"line":59,"column":4},"end":{"line":59,"column":18}},"23":{"start":{"line":61,"column":4},"end":{"line":67,"column":5}},"24":{"start":{"line":62,"column":6},"end":{"line":66,"column":9}},"25":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"26":{"start":{"line":64,"column":10},"end":{"line":64,"column":75}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":28}},"28":{"start":{"line":69,"column":13},"end":{"line":69,"column":28}},"29":{"start":{"line":71,"column":4},"end":{"line":71,"column":9}},"30":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"31":{"start":{"line":87,"column":0},"end":{"line":135,"column":2}},"32":{"start":{"line":89,"column":2},"end":{"line":89,"column":39}},"33":{"start":{"line":90,"column":2},"end":{"line":90,"column":22}},"34":{"start":{"line":91,"column":2},"end":{"line":91,"column":27}},"35":{"start":{"line":92,"column":2},"end":{"line":92,"column":27}},"36":{"start":{"line":93,"column":2},"end":{"line":93,"column":22}},"37":{"start":{"line":94,"column":2},"end":{"line":94,"column":33}},"38":{"start":{"line":95,"column":2},"end":{"line":95,"column":29}},"39":{"start":{"line":96,"column":2},"end":{"line":96,"column":27}},"40":{"start":{"line":97,"column":2},"end":{"line":97,"column":27}},"41":{"start":{"line":98,"column":2},"end":{"line":98,"column":27}},"42":{"start":{"line":99,"column":2},"end":{"line":99,"column":27}},"43":{"start":{"line":100,"column":2},"end":{"line":100,"column":33}},"44":{"start":{"line":101,"column":2},"end":{"line":101,"column":41}},"45":{"start":{"line":102,"column":2},"end":{"line":102,"column":43}},"46":{"start":{"line":103,"column":2},"end":{"line":103,"column":39}},"47":{"start":{"line":104,"column":2},"end":{"line":104,"column":29}},"48":{"start":{"line":113,"column":2},"end":{"line":113,"column":19}},"49":{"start":{"line":115,"column":2},"end":{"line":119,"column":3}},"50":{"start":{"line":116,"column":4},"end":{"line":116,"column":13}},"51":{"start":{"line":118,"column":4},"end":{"line":118,"column":35}},"52":{"start":{"line":121,"column":2},"end":{"line":126,"column":3}},"53":{"start":{"line":122,"column":4},"end":{"line":122,"column":35}},"54":{"start":{"line":123,"column":4},"end":{"line":123,"column":21}},"55":{"start":{"line":125,"column":4},"end":{"line":125,"column":20}},"56":{"start":{"line":128,"column":2},"end":{"line":128,"column":22}},"57":{"start":{"line":131,"column":2},"end":{"line":131,"column":30}},"58":{"start":{"line":132,"column":2},"end":{"line":132,"column":30}},"59":{"start":{"line":134,"column":2},"end":{"line":134,"column":17}},"60":{"start":{"line":141,"column":0},"end":{"line":180,"column":1}},"61":{"start":{"line":142,"column":2},"end":{"line":144,"column":3}},"62":{"start":{"line":143,"column":4},"end":{"line":143,"column":11}},"63":{"start":{"line":145,"column":2},"end":{"line":145,"column":28}},"64":{"start":{"line":147,"column":2},"end":{"line":159,"column":5}},"65":{"start":{"line":148,"column":4},"end":{"line":148,"column":34}},"66":{"start":{"line":148,"column":27},"end":{"line":148,"column":34}},"67":{"start":{"line":153,"column":4},"end":{"line":157,"column":5}},"68":{"start":{"line":154,"column":6},"end":{"line":154,"column":44}},"69":{"start":{"line":155,"column":6},"end":{"line":155,"column":25}},"70":{"start":{"line":156,"column":6},"end":{"line":156,"column":13}},"71":{"start":{"line":158,"column":4},"end":{"line":158,"column":19}},"72":{"start":{"line":160,"column":2},"end":{"line":162,"column":5}},"73":{"start":{"line":161,"column":4},"end":{"line":161,"column":28}},"74":{"start":{"line":163,"column":2},"end":{"line":167,"column":5}},"75":{"start":{"line":164,"column":4},"end":{"line":164,"column":39}},"76":{"start":{"line":165,"column":4},"end":{"line":165,"column":29}},"77":{"start":{"line":166,"column":4},"end":{"line":166,"column":18}},"78":{"start":{"line":168,"column":2},"end":{"line":170,"column":5}},"79":{"start":{"line":169,"column":4},"end":{"line":169,"column":30}},"80":{"start":{"line":171,"column":2},"end":{"line":176,"column":5}},"81":{"start":{"line":172,"column":4},"end":{"line":175,"column":5}},"82":{"start":{"line":173,"column":6},"end":{"line":173,"column":41}},"83":{"start":{"line":174,"column":6},"end":{"line":174,"column":31}},"84":{"start":{"line":177,"column":2},"end":{"line":179,"column":5}},"85":{"start":{"line":178,"column":4},"end":{"line":178,"column":33}},"86":{"start":{"line":192,"column":0},"end":{"line":222,"column":2}},"87":{"start":{"line":193,"column":2},"end":{"line":194,"column":19}},"88":{"start":{"line":196,"column":2},"end":{"line":200,"column":5}},"89":{"start":{"line":197,"column":4},"end":{"line":197,"column":41}},"90":{"start":{"line":198,"column":4},"end":{"line":198,"column":36}},"91":{"start":{"line":199,"column":4},"end":{"line":199,"column":63}},"92":{"start":{"line":202,"column":2},"end":{"line":204,"column":80}},"93":{"start":{"line":205,"column":2},"end":{"line":205,"column":55}},"94":{"start":{"line":207,"column":2},"end":{"line":209,"column":5}},"95":{"start":{"line":208,"column":4},"end":{"line":208,"column":28}},"96":{"start":{"line":211,"column":2},"end":{"line":213,"column":5}},"97":{"start":{"line":212,"column":4},"end":{"line":212,"column":22}},"98":{"start":{"line":215,"column":2},"end":{"line":219,"column":5}},"99":{"start":{"line":216,"column":4},"end":{"line":216,"column":28}},"100":{"start":{"line":216,"column":13},"end":{"line":216,"column":28}},"101":{"start":{"line":217,"column":4},"end":{"line":217,"column":9}},"102":{"start":{"line":218,"column":4},"end":{"line":218,"column":18}},"103":{"start":{"line":221,"column":2},"end":{"line":221,"column":14}},"104":{"start":{"line":232,"column":0},"end":{"line":235,"column":2}},"105":{"start":{"line":233,"column":2},"end":{"line":233,"column":20}},"106":{"start":{"line":234,"column":2},"end":{"line":234,"column":14}},"107":{"start":{"line":247,"column":0},"end":{"line":369,"column":2}},"108":{"start":{"line":248,"column":2},"end":{"line":248,"column":23}},"109":{"start":{"line":249,"column":2},"end":{"line":249,"column":22}},"110":{"start":{"line":250,"column":2},"end":{"line":250,"column":26}},"111":{"start":{"line":251,"column":2},"end":{"line":251,"column":30}},"112":{"start":{"line":252,"column":2},"end":{"line":252,"column":59}},"113":{"start":{"line":253,"column":2},"end":{"line":253,"column":58}},"114":{"start":{"line":254,"column":2},"end":{"line":254,"column":60}},"115":{"start":{"line":255,"column":2},"end":{"line":255,"column":63}},"116":{"start":{"line":256,"column":2},"end":{"line":256,"column":41}},"117":{"start":{"line":258,"column":2},"end":{"line":258,"column":31}},"118":{"start":{"line":259,"column":2},"end":{"line":348,"column":5}},"119":{"start":{"line":260,"column":4},"end":{"line":347,"column":5}},"120":{"start":{"line":262,"column":8},"end":{"line":262,"column":32}},"121":{"start":{"line":263,"column":8},"end":{"line":263,"column":33}},"122":{"start":{"line":264,"column":8},"end":{"line":264,"column":46}},"123":{"start":{"line":265,"column":8},"end":{"line":265,"column":14}},"124":{"start":{"line":267,"column":8},"end":{"line":269,"column":9}},"125":{"start":{"line":268,"column":10},"end":{"line":268,"column":56}},"126":{"start":{"line":270,"column":8},"end":{"line":270,"column":14}},"127":{"start":{"line":272,"column":8},"end":{"line":274,"column":9}},"128":{"start":{"line":273,"column":10},"end":{"line":273,"column":41}},"129":{"start":{"line":275,"column":8},"end":{"line":275,"column":14}},"130":{"start":{"line":277,"column":8},"end":{"line":279,"column":9}},"131":{"start":{"line":278,"column":10},"end":{"line":278,"column":47}},"132":{"start":{"line":280,"column":8},"end":{"line":280,"column":14}},"133":{"start":{"line":283,"column":8},"end":{"line":285,"column":9}},"134":{"start":{"line":284,"column":10},"end":{"line":284,"column":84}},"135":{"start":{"line":286,"column":8},"end":{"line":286,"column":14}},"136":{"start":{"line":288,"column":8},"end":{"line":290,"column":9}},"137":{"start":{"line":289,"column":10},"end":{"line":289,"column":37}},"138":{"start":{"line":291,"column":8},"end":{"line":291,"column":14}},"139":{"start":{"line":293,"column":8},"end":{"line":295,"column":9}},"140":{"start":{"line":294,"column":10},"end":{"line":294,"column":41}},"141":{"start":{"line":296,"column":8},"end":{"line":296,"column":14}},"142":{"start":{"line":298,"column":8},"end":{"line":300,"column":9}},"143":{"start":{"line":299,"column":10},"end":{"line":299,"column":44}},"144":{"start":{"line":301,"column":8},"end":{"line":301,"column":14}},"145":{"start":{"line":305,"column":8},"end":{"line":307,"column":9}},"146":{"start":{"line":306,"column":10},"end":{"line":306,"column":39}},"147":{"start":{"line":308,"column":8},"end":{"line":308,"column":14}},"148":{"start":{"line":310,"column":8},"end":{"line":312,"column":9}},"149":{"start":{"line":311,"column":10},"end":{"line":311,"column":41}},"150":{"start":{"line":313,"column":8},"end":{"line":313,"column":14}},"151":{"start":{"line":315,"column":8},"end":{"line":317,"column":9}},"152":{"start":{"line":316,"column":10},"end":{"line":316,"column":48}},"153":{"start":{"line":318,"column":8},"end":{"line":318,"column":14}},"154":{"start":{"line":320,"column":8},"end":{"line":322,"column":9}},"155":{"start":{"line":321,"column":10},"end":{"line":321,"column":42}},"156":{"start":{"line":323,"column":8},"end":{"line":323,"column":14}},"157":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"158":{"start":{"line":330,"column":10},"end":{"line":330,"column":34}},"159":{"start":{"line":332,"column":8},"end":{"line":332,"column":14}},"160":{"start":{"line":334,"column":8},"end":{"line":336,"column":9}},"161":{"start":{"line":335,"column":10},"end":{"line":335,"column":43}},"162":{"start":{"line":337,"column":8},"end":{"line":337,"column":14}},"163":{"start":{"line":339,"column":8},"end":{"line":341,"column":9}},"164":{"start":{"line":340,"column":10},"end":{"line":340,"column":49}},"165":{"start":{"line":342,"column":8},"end":{"line":342,"column":14}},"166":{"start":{"line":344,"column":8},"end":{"line":344,"column":48}},"167":{"start":{"line":345,"column":8},"end":{"line":345,"column":49}},"168":{"start":{"line":346,"column":8},"end":{"line":346,"column":62}},"169":{"start":{"line":350,"column":2},"end":{"line":352,"column":3}},"170":{"start":{"line":351,"column":4},"end":{"line":351,"column":35}},"171":{"start":{"line":355,"column":2},"end":{"line":355,"column":35}},"172":{"start":{"line":358,"column":2},"end":{"line":361,"column":3}},"173":{"start":{"line":360,"column":4},"end":{"line":360,"column":15}},"174":{"start":{"line":363,"column":2},"end":{"line":365,"column":3}},"175":{"start":{"line":364,"column":4},"end":{"line":364,"column":43}},"176":{"start":{"line":367,"column":2},"end":{"line":367,"column":14}},"177":{"start":{"line":368,"column":2},"end":{"line":368,"column":11}},"178":{"start":{"line":377,"column":0},"end":{"line":385,"column":1}},"179":{"start":{"line":378,"column":2},"end":{"line":384,"column":3}},"180":{"start":{"line":379,"column":4},"end":{"line":383,"column":5}},"181":{"start":{"line":380,"column":6},"end":{"line":382,"column":73}},"182":{"start":{"line":391,"column":0},"end":{"line":391,"column":34}}},"branchMap":{"1":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":2},"end":{"line":51,"column":2}},{"start":{"line":51,"column":2},"end":{"line":51,"column":2}}]},"2":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":6},"end":{"line":51,"column":18}},{"start":{"line":51,"column":22},"end":{"line":51,"column":41}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"4":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":8}},{"start":{"line":63,"column":8},"end":{"line":63,"column":8}}]},"5":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"7":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":13}},{"start":{"line":115,"column":17},"end":{"line":115,"column":54}}]},"8":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"9":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":4},"end":{"line":148,"column":4}},{"start":{"line":148,"column":4},"end":{"line":148,"column":4}}]},"10":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"11":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"12":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":8},"end":{"line":172,"column":47}},{"start":{"line":172,"column":51},"end":{"line":172,"column":53}},{"start":{"line":172,"column":57},"end":{"line":172,"column":72}}]},"13":{"line":197,"type":"binary-expr","locations":[{"start":{"line":197,"column":15},"end":{"line":197,"column":26}},{"start":{"line":197,"column":30},"end":{"line":197,"column":40}}]},"14":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":15},"end":{"line":198,"column":26}},{"start":{"line":198,"column":30},"end":{"line":198,"column":35}}]},"15":{"line":202,"type":"cond-expr","locations":[{"start":{"line":203,"column":6},"end":{"line":203,"column":46}},{"start":{"line":204,"column":6},"end":{"line":204,"column":79}}]},"16":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":34},"end":{"line":204,"column":54}},{"start":{"line":204,"column":58},"end":{"line":204,"column":78}}]},"17":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"18":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":16}},{"start":{"line":248,"column":20},"end":{"line":248,"column":22}}]},"19":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":2},"end":{"line":249,"column":6}},{"start":{"line":249,"column":11},"end":{"line":249,"column":20}}]},"20":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":8}},{"start":{"line":250,"column":13},"end":{"line":250,"column":24}}]},"21":{"line":251,"type":"binary-expr","locations":[{"start":{"line":251,"column":2},"end":{"line":251,"column":10}},{"start":{"line":251,"column":15},"end":{"line":251,"column":28}}]},"22":{"line":252,"type":"binary-expr","locations":[{"start":{"line":252,"column":2},"end":{"line":252,"column":11}},{"start":{"line":252,"column":16},"end":{"line":252,"column":37}},{"start":{"line":252,"column":43},"end":{"line":252,"column":57}}]},"23":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":24}},{"start":{"line":253,"column":29},"end":{"line":253,"column":56}}]},"24":{"line":254,"type":"binary-expr","locations":[{"start":{"line":254,"column":2},"end":{"line":254,"column":25}},{"start":{"line":254,"column":30},"end":{"line":254,"column":58}}]},"25":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":2},"end":{"line":255,"column":10}},{"start":{"line":255,"column":15},"end":{"line":255,"column":61}}]},"26":{"line":255,"type":"binary-expr","locations":[{"start":{"line":255,"column":27},"end":{"line":255,"column":38}},{"start":{"line":255,"column":42},"end":{"line":255,"column":60}}]},"27":{"line":256,"type":"binary-expr","locations":[{"start":{"line":256,"column":3},"end":{"line":256,"column":20}},{"start":{"line":256,"column":26},"end":{"line":256,"column":39}}]},"28":{"line":258,"type":"binary-expr","locations":[{"start":{"line":258,"column":13},"end":{"line":258,"column":24}},{"start":{"line":258,"column":28},"end":{"line":258,"column":30}}]},"29":{"line":260,"type":"switch","locations":[{"start":{"line":261,"column":6},"end":{"line":265,"column":14}},{"start":{"line":266,"column":6},"end":{"line":270,"column":14}},{"start":{"line":271,"column":6},"end":{"line":275,"column":14}},{"start":{"line":276,"column":6},"end":{"line":280,"column":14}},{"start":{"line":281,"column":6},"end":{"line":281,"column":29}},{"start":{"line":282,"column":6},"end":{"line":286,"column":14}},{"start":{"line":287,"column":6},"end":{"line":291,"column":14}},{"start":{"line":292,"column":6},"end":{"line":296,"column":14}},{"start":{"line":297,"column":6},"end":{"line":301,"column":14}},{"start":{"line":302,"column":6},"end":{"line":302,"column":21}},{"start":{"line":303,"column":6},"end":{"line":303,"column":27}},{"start":{"line":304,"column":6},"end":{"line":308,"column":14}},{"start":{"line":309,"column":6},"end":{"line":313,"column":14}},{"start":{"line":314,"column":6},"end":{"line":318,"column":14}},{"start":{"line":319,"column":6},"end":{"line":323,"column":14}},{"start":{"line":324,"column":6},"end":{"line":324,"column":15}},{"start":{"line":325,"column":6},"end":{"line":325,"column":18}},{"start":{"line":326,"column":6},"end":{"line":326,"column":19}},{"start":{"line":327,"column":6},"end":{"line":327,"column":21}},{"start":{"line":328,"column":6},"end":{"line":332,"column":14}},{"start":{"line":333,"column":6},"end":{"line":337,"column":14}},{"start":{"line":338,"column":6},"end":{"line":342,"column":14}},{"start":{"line":343,"column":6},"end":{"line":346,"column":62}}]},"30":{"line":264,"type":"binary-expr","locations":[{"start":{"line":264,"column":8},"end":{"line":264,"column":16}},{"start":{"line":264,"column":21},"end":{"line":264,"column":44}}]},"31":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":8},"end":{"line":267,"column":8}},{"start":{"line":267,"column":8},"end":{"line":267,"column":8}}]},"32":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"33":{"line":277,"type":"if","locations":[{"start":{"line":277,"column":8},"end":{"line":277,"column":8}},{"start":{"line":277,"column":8},"end":{"line":277,"column":8}}]},"34":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":8},"end":{"line":283,"column":8}},{"start":{"line":283,"column":8},"end":{"line":283,"column":8}}]},"35":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8}},{"start":{"line":288,"column":8},"end":{"line":288,"column":8}}]},"36":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":8},"end":{"line":293,"column":8}},{"start":{"line":293,"column":8},"end":{"line":293,"column":8}}]},"37":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":8},"end":{"line":298,"column":8}},{"start":{"line":298,"column":8},"end":{"line":298,"column":8}}]},"38":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8}},{"start":{"line":305,"column":8},"end":{"line":305,"column":8}}]},"39":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8}},{"start":{"line":310,"column":8},"end":{"line":310,"column":8}}]},"40":{"line":315,"type":"if","locations":[{"start":{"line":315,"column":8},"end":{"line":315,"column":8}},{"start":{"line":315,"column":8},"end":{"line":315,"column":8}}]},"41":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":8}},{"start":{"line":320,"column":8},"end":{"line":320,"column":8}}]},"42":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":8},"end":{"line":329,"column":8}},{"start":{"line":329,"column":8},"end":{"line":329,"column":8}}]},"43":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":8},"end":{"line":334,"column":8}},{"start":{"line":334,"column":8},"end":{"line":334,"column":8}}]},"44":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":8}},{"start":{"line":339,"column":8},"end":{"line":339,"column":8}}]},"45":{"line":346,"type":"binary-expr","locations":[{"start":{"line":346,"column":8},"end":{"line":346,"column":16}},{"start":{"line":346,"column":21},"end":{"line":346,"column":60}}]},"46":{"line":350,"type":"if","locations":[{"start":{"line":350,"column":2},"end":{"line":350,"column":2}},{"start":{"line":350,"column":2},"end":{"line":350,"column":2}}]},"47":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":2},"end":{"line":358,"column":2}},{"start":{"line":358,"column":2},"end":{"line":358,"column":2}}]},"48":{"line":358,"type":"binary-expr","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":25}},{"start":{"line":358,"column":29},"end":{"line":358,"column":40}},{"start":{"line":359,"column":8},"end":{"line":359,"column":23}},{"start":{"line":359,"column":27},"end":{"line":359,"column":41}},{"start":{"line":359,"column":45},"end":{"line":359,"column":56}}]},"49":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":2},"end":{"line":363,"column":2}},{"start":{"line":363,"column":2},"end":{"line":363,"column":2}}]},"50":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":2},"end":{"line":378,"column":2}},{"start":{"line":378,"column":2},"end":{"line":378,"column":2}}]},"51":{"line":378,"type":"binary-expr","locations":[{"start":{"line":378,"column":6},"end":{"line":378,"column":19}},{"start":{"line":378,"column":23},"end":{"line":378,"column":35}}]},"52":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":4},"end":{"line":379,"column":4}},{"start":{"line":379,"column":4},"end":{"line":379,"column":4}}]},"53":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":8},"end":{"line":379,"column":20}},{"start":{"line":379,"column":24},"end":{"line":379,"column":34}},{"start":{"line":379,"column":38},"end":{"line":379,"column":47}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseConnection = require('../../connection');","var mongo = require('mongodb');","var Db = mongo.Db;","var Server = mongo.Server;","var Mongos = mongo.Mongos;","var STATES = require('../../connectionstate');","var ReplSetServers = mongo.ReplSet;","var DisconnectedError = require('../../error/disconnected');","","/**"," * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) connection implementation."," *"," * @inherits Connection"," * @api private"," */","","function NativeConnection() {","  MongooseConnection.apply(this, arguments);","  this._listening = false;","}","","/**"," * Expose the possible connection states."," * @api public"," */","","NativeConnection.STATES = STATES;","","/*!"," * Inherits from Connection."," */","","NativeConnection.prototype.__proto__ = MongooseConnection.prototype;","","/**"," * Opens the connection to MongoDB."," *"," * @param {Function} fn"," * @return {Connection} this"," * @api private"," */","","NativeConnection.prototype.doOpen = function(fn) {","  var _this = this;","  var server = new Server(this.host, this.port, this.options.server);","","  if (this.options && this.options.mongos) {","    var mongos = new Mongos([server], this.options.mongos);","    this.db = new Db(this.name, mongos, this.options.db);","  } else {","    this.db = new Db(this.name, server, this.options.db);","  }","","  this.db.open(function(err) {","    listen(_this);","","    if (!mongos) {","      server.s.server.on('error', function(error) {","        if (/after \\d+ attempts/.test(error.message)) {","          _this.emit('error', new DisconnectedError(server.s.server.name));","        }","      });","    }","","    if (err) return fn(err);","","    fn();","  });","","  return this;","};","","/**"," * Switches to a different database using the same connection pool."," *"," * Returns a new connection object, with the new db."," *"," * @param {String} name The database name"," * @return {Connection} New Connection Object"," * @api public"," */","","NativeConnection.prototype.useDb = function(name) {","  // we have to manually copy all of the attributes...","  var newConn = new this.constructor();","  newConn.name = name;","  newConn.base = this.base;","  newConn.collections = {};","  newConn.models = {};","  newConn.replica = this.replica;","  newConn.hosts = this.hosts;","  newConn.host = this.host;","  newConn.port = this.port;","  newConn.user = this.user;","  newConn.pass = this.pass;","  newConn.options = this.options;","  newConn._readyState = this._readyState;","  newConn._closeCalled = this._closeCalled;","  newConn._hasOpened = this._hasOpened;","  newConn._listening = false;","","  // First, when we create another db object, we are not guaranteed to have a","  // db object to work with. So, in the case where we have a db object and it","  // is connected, we can just proceed with setting everything up. However, if","  // we do not have a db or the state is not connected, then we need to wait on","  // the 'open' event of the connection before doing the rest of the setup","  // the 'connected' event is the first time we'll have access to the db object","","  var _this = this;","","  if (this.db && this._readyState === STATES.connected) {","    wireup();","  } else {","    this.once('connected', wireup);","  }","","  function wireup() {","    newConn.db = _this.db.db(name);","    newConn.onOpen();","    // setup the events appropriately","    listen(newConn);","  }","","  newConn.name = name;","","  // push onto the otherDbs stack, this is used when state changes","  this.otherDbs.push(newConn);","  newConn.otherDbs.push(this);","","  return newConn;","};","","/*!"," * Register listeners for important events and bubble appropriately."," */","","function listen(conn) {","  if (conn.db._listening) {","    return;","  }","  conn.db._listening = true;","","  conn.db.on('close', function() {","    if (conn._closeCalled) return;","","    // the driver never emits an `open` event. auto_reconnect still","    // emits a `close` event but since we never get another","    // `open` we can't emit close","    if (conn.db.serverConfig.autoReconnect) {","      conn.readyState = STATES.disconnected;","      conn.emit('close');","      return;","    }","    conn.onClose();","  });","  conn.db.on('error', function(err) {","    conn.emit('error', err);","  });","  conn.db.on('reconnect', function() {","    conn.readyState = STATES.connected;","    conn.emit('reconnected');","    conn.onOpen();","  });","  conn.db.on('timeout', function(err) {","    conn.emit('timeout', err);","  });","  conn.db.on('open', function(err, db) {","    if (STATES.disconnected === conn.readyState && db && db.databaseName) {","      conn.readyState = STATES.connected;","      conn.emit('reconnected');","    }","  });","  conn.db.on('parseError', function(err) {","    conn.emit('parseError', err);","  });","}","","/**"," * Opens a connection to a MongoDB ReplicaSet."," *"," * See description of [doOpen](#NativeConnection-doOpen) for server options. In this case `options.replset` is also passed to ReplSetServers."," *"," * @param {Function} fn"," * @api private"," * @return {Connection} this"," */","","NativeConnection.prototype.doOpenSet = function(fn) {","  var servers = [],","      _this = this;","","  this.hosts.forEach(function(server) {","    var host = server.host || server.ipc;","    var port = server.port || 27017;","    servers.push(new Server(host, port, _this.options.server));","  });","","  var server = this.options.mongos","    ? new Mongos(servers, this.options.mongos)","    : new ReplSetServers(servers, this.options.replset || this.options.replSet);","  this.db = new Db(this.name, server, this.options.db);","","  this.db.on('fullsetup', function() {","    _this.emit('fullsetup');","  });","","  this.db.on('all', function() {","    _this.emit('all');","  });","","  this.db.open(function(err) {","    if (err) return fn(err);","    fn();","    listen(_this);","  });","","  return this;","};","","/**"," * Closes the connection"," *"," * @param {Function} fn"," * @return {Connection} this"," * @api private"," */","","NativeConnection.prototype.doClose = function(fn) {","  this.db.close(fn);","  return this;","};","","/**"," * Prepares default connection options for the node-mongodb-native driver."," *"," * _NOTE: `passed` options take precedence over connection string options._"," *"," * @param {Object} passed options that were passed directly during connection"," * @param {Object} [connStrOptions] options that were passed in the connection string"," * @api private"," */","","NativeConnection.prototype.parseOptions = function(passed, connStrOpts) {","  var o = passed || {};","  o.db || (o.db = {});","  o.auth || (o.auth = {});","  o.server || (o.server = {});","  o.replset || (o.replset = o.replSet) || (o.replset = {});","  o.server.socketOptions || (o.server.socketOptions = {});","  o.replset.socketOptions || (o.replset.socketOptions = {});","  o.mongos || (o.mongos = (connStrOpts && connStrOpts.mongos));","  (o.mongos === true) && (o.mongos = {});","","  var opts = connStrOpts || {};","  Object.keys(opts).forEach(function(name) {","    switch (name) {","      case 'ssl':","        o.server.ssl = opts.ssl;","        o.replset.ssl = opts.ssl;","        o.mongos && (o.mongos.ssl = opts.ssl);","        break;","      case 'poolSize':","        if (typeof o.server[name] === 'undefined') {","          o.server[name] = o.replset[name] = opts[name];","        }","        break;","      case 'slaveOk':","        if (typeof o.server.slave_ok === 'undefined') {","          o.server.slave_ok = opts[name];","        }","        break;","      case 'autoReconnect':","        if (typeof o.server.auto_reconnect === 'undefined') {","          o.server.auto_reconnect = opts[name];","        }","        break;","      case 'socketTimeoutMS':","      case 'connectTimeoutMS':","        if (typeof o.server.socketOptions[name] === 'undefined') {","          o.server.socketOptions[name] = o.replset.socketOptions[name] = opts[name];","        }","        break;","      case 'authdb':","        if (typeof o.auth.authdb === 'undefined') {","          o.auth.authdb = opts[name];","        }","        break;","      case 'authSource':","        if (typeof o.auth.authSource === 'undefined') {","          o.auth.authSource = opts[name];","        }","        break;","      case 'authMechanism':","        if (typeof o.auth.authMechanism === 'undefined') {","          o.auth.authMechanism = opts[name];","        }","        break;","      case 'retries':","      case 'reconnectWait':","      case 'rs_name':","        if (typeof o.replset[name] === 'undefined') {","          o.replset[name] = opts[name];","        }","        break;","      case 'replicaSet':","        if (typeof o.replset.rs_name === 'undefined') {","          o.replset.rs_name = opts[name];","        }","        break;","      case 'readSecondary':","        if (typeof o.replset.read_secondary === 'undefined') {","          o.replset.read_secondary = opts[name];","        }","        break;","      case 'nativeParser':","        if (typeof o.db.native_parser === 'undefined') {","          o.db.native_parser = opts[name];","        }","        break;","      case 'w':","      case 'safe':","      case 'fsync':","      case 'journal':","      case 'wtimeoutMS':","        if (typeof o.db[name] === 'undefined') {","          o.db[name] = opts[name];","        }","        break;","      case 'readPreference':","        if (typeof o.db.readPreference === 'undefined') {","          o.db.readPreference = opts[name];","        }","        break;","      case 'readPreferenceTags':","        if (typeof o.db.read_preference_tags === 'undefined') {","          o.db.read_preference_tags = opts[name];","        }","        break;","      case 'sslValidate':","        o.server.sslValidate = opts.sslValidate;","        o.replset.sslValidate = opts.sslValidate;","        o.mongos && (o.mongos.sslValidate = opts.sslValidate);","    }","  });","","  if (!('auto_reconnect' in o.server)) {","    o.server.auto_reconnect = true;","  }","","  // mongoose creates its own ObjectIds","  o.db.forceServerObjectId = false;","","  // default safe using new nomenclature","  if (!('journal' in o.db || 'j' in o.db ||","        'fsync' in o.db || 'safe' in o.db || 'w' in o.db)) {","    o.db.w = 1;","  }","","  if (o.promiseLibrary) {","    o.db.promiseLibrary = o.promiseLibrary;","  }","","  validate(o);","  return o;","};","","/*!"," * Validates the driver db options."," *"," * @param {Object} o"," */","","function validate(o) {","  if (o.db.w === -1 || o.db.w === 0) {","    if (o.db.journal || o.db.fsync || o.db.safe) {","      throw new Error(","          'Invalid writeConcern: '","        + 'w set to -1 or 0 cannot be combined with safe|fsync|journal');","    }","  }","}","","/*!"," * Module exports."," */","","module.exports = NativeConnection;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"21":1,"22":2,"23":2,"31":1,"37":1,"47":1,"48":0,"49":0,"51":0,"52":0,"53":0,"55":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"69":0,"71":0,"74":0,"87":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"113":0,"115":0,"116":0,"118":0,"121":1,"122":0,"123":0,"125":0,"128":0,"131":0,"132":0,"134":0,"141":1,"142":0,"143":0,"145":0,"147":0,"148":0,"153":0,"154":0,"155":0,"156":0,"158":0,"160":0,"161":0,"163":0,"164":0,"165":0,"166":0,"168":0,"169":0,"171":0,"172":0,"173":0,"174":0,"177":0,"178":0,"192":1,"193":0,"196":0,"197":0,"198":0,"199":0,"202":0,"205":0,"207":0,"208":0,"211":0,"212":0,"215":0,"216":0,"217":0,"218":0,"221":0,"232":1,"233":0,"234":0,"247":1,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"265":0,"267":0,"268":0,"270":0,"272":0,"273":0,"275":0,"277":0,"278":0,"280":0,"283":0,"284":0,"286":0,"288":0,"289":0,"291":0,"293":0,"294":0,"296":0,"298":0,"299":0,"301":0,"305":0,"306":0,"308":0,"310":0,"311":0,"313":0,"315":0,"316":0,"318":0,"320":0,"321":0,"323":0,"329":0,"330":0,"332":0,"334":0,"335":0,"337":0,"339":0,"340":0,"342":0,"344":0,"345":0,"346":0,"350":0,"351":0,"355":0,"358":0,"360":0,"363":0,"364":0,"367":0,"368":0,"377":1,"378":0,"379":0,"380":0,"391":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/connection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/connection.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":2,"14":2,"15":2,"16":2,"17":2,"18":2,"19":2,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":2,"27":2,"28":2,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":1,"43":1,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":1,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":1,"222":0,"223":0,"224":0,"225":1,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":1,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":1,"289":0,"290":0,"291":0,"292":0,"293":0,"294":1,"295":0,"296":0,"297":0,"298":1,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":1,"335":0,"336":1,"337":0,"338":0,"339":0,"340":1,"341":0,"342":1,"343":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0,0,0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0,0,0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"fnMap":{"1":{"name":"Connection","line":53,"loc":{"start":{"line":53,"column":0},"end":{"line":53,"column":26}}},"2":{"name":"(anonymous_2)","line":98,"loc":{"start":{"line":98,"column":7},"end":{"line":98,"column":18}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":7},"end":{"line":101,"column":21}}},"4":{"name":"(anonymous_4)","line":177,"loc":{"start":{"line":177,"column":28},"end":{"line":177,"column":78}}},"5":{"name":"(anonymous_5)","line":226,"loc":{"start":{"line":226,"column":29},"end":{"line":226,"column":55}}},"6":{"name":"(anonymous_6)","line":243,"loc":{"start":{"line":243,"column":27},"end":{"line":243,"column":53}}},"7":{"name":"(anonymous_7)","line":251,"loc":{"start":{"line":251,"column":27},"end":{"line":251,"column":53}}},"8":{"name":"(anonymous_8)","line":259,"loc":{"start":{"line":259,"column":27},"end":{"line":259,"column":53}}},"9":{"name":"(anonymous_9)","line":279,"loc":{"start":{"line":279,"column":29},"end":{"line":279,"column":55}}},"10":{"name":"(anonymous_10)","line":288,"loc":{"start":{"line":288,"column":29},"end":{"line":288,"column":55}}},"11":{"name":"(anonymous_11)","line":309,"loc":{"start":{"line":309,"column":32},"end":{"line":309,"column":58}}},"12":{"name":"(anonymous_12)","line":310,"loc":{"start":{"line":310,"column":22},"end":{"line":310,"column":38}}},"13":{"name":"(anonymous_13)","line":314,"loc":{"start":{"line":314,"column":21},"end":{"line":314,"column":32}}},"14":{"name":"(anonymous_14)","line":336,"loc":{"start":{"line":336,"column":36},"end":{"line":336,"column":55}}},"15":{"name":"(anonymous_15)","line":339,"loc":{"start":{"line":339,"column":32},"end":{"line":339,"column":58}}},"16":{"name":"(anonymous_16)","line":341,"loc":{"start":{"line":341,"column":23},"end":{"line":341,"column":34}}},"17":{"name":"(anonymous_17)","line":342,"loc":{"start":{"line":342,"column":30},"end":{"line":342,"column":46}}},"18":{"name":"(anonymous_18)","line":351,"loc":{"start":{"line":351,"column":28},"end":{"line":351,"column":44}}},"19":{"name":"(anonymous_19)","line":361,"loc":{"start":{"line":361,"column":17},"end":{"line":361,"column":28}}},"20":{"name":"(anonymous_20)","line":410,"loc":{"start":{"line":410,"column":31},"end":{"line":410,"column":75}}},"21":{"name":"(anonymous_21)","line":460,"loc":{"start":{"line":460,"column":27},"end":{"line":460,"column":53}}},"22":{"name":"(anonymous_22)","line":476,"loc":{"start":{"line":476,"column":27},"end":{"line":476,"column":53}}},"23":{"name":"(anonymous_23)","line":499,"loc":{"start":{"line":499,"column":32},"end":{"line":499,"column":58}}},"24":{"name":"(anonymous_24)","line":500,"loc":{"start":{"line":500,"column":22},"end":{"line":500,"column":38}}},"25":{"name":"(anonymous_25)","line":527,"loc":{"start":{"line":527,"column":29},"end":{"line":527,"column":53}}},"26":{"name":"(anonymous_26)","line":541,"loc":{"start":{"line":541,"column":29},"end":{"line":541,"column":54}}},"27":{"name":"(anonymous_27)","line":552,"loc":{"start":{"line":552,"column":15},"end":{"line":552,"column":29}}},"28":{"name":"(anonymous_28)","line":575,"loc":{"start":{"line":575,"column":30},"end":{"line":575,"column":49}}},"29":{"name":"open","line":578,"loc":{"start":{"line":578,"column":2},"end":{"line":578,"column":29}}},"30":{"name":"(anonymous_30)","line":601,"loc":{"start":{"line":601,"column":70},"end":{"line":601,"column":84}}},"31":{"name":"(anonymous_31)","line":617,"loc":{"start":{"line":617,"column":29},"end":{"line":617,"column":48}}},"32":{"name":"(anonymous_32)","line":620,"loc":{"start":{"line":620,"column":25},"end":{"line":620,"column":51}}},"33":{"name":"(anonymous_33)","line":621,"loc":{"start":{"line":621,"column":17},"end":{"line":621,"column":33}}},"34":{"name":"(anonymous_34)","line":638,"loc":{"start":{"line":638,"column":30},"end":{"line":638,"column":49}}},"35":{"name":"(anonymous_35)","line":650,"loc":{"start":{"line":650,"column":19},"end":{"line":650,"column":33}}},"36":{"name":"(anonymous_36)","line":661,"loc":{"start":{"line":661,"column":24},"end":{"line":661,"column":35}}},"37":{"name":"(anonymous_37)","line":670,"loc":{"start":{"line":670,"column":25},"end":{"line":670,"column":36}}},"38":{"name":"(anonymous_38)","line":685,"loc":{"start":{"line":685,"column":31},"end":{"line":685,"column":42}}},"39":{"name":"(anonymous_39)","line":710,"loc":{"start":{"line":710,"column":34},"end":{"line":710,"column":58}}},"40":{"name":"(anonymous_40)","line":749,"loc":{"start":{"line":749,"column":29},"end":{"line":749,"column":64}}},"41":{"name":"(anonymous_41)","line":827,"loc":{"start":{"line":827,"column":34},"end":{"line":827,"column":45}}},"42":{"name":"(anonymous_42)","line":838,"loc":{"start":{"line":838,"column":42},"end":{"line":838,"column":53}}},"43":{"name":"(anonymous_43)","line":850,"loc":{"start":{"line":850,"column":59},"end":{"line":850,"column":70}}},"44":{"name":"(anonymous_44)","line":867,"loc":{"start":{"line":867,"column":56},"end":{"line":867,"column":74}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":50}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":76}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":33}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":49}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":42}},"7":{"start":{"line":11,"column":0},"end":{"line":11,"column":39}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"9":{"start":{"line":13,"column":0},"end":{"line":13,"column":52}},"10":{"start":{"line":21,"column":0},"end":{"line":21,"column":33}},"11":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}},"12":{"start":{"line":53,"column":0},"end":{"line":70,"column":1}},"13":{"start":{"line":54,"column":2},"end":{"line":54,"column":19}},"14":{"start":{"line":55,"column":2},"end":{"line":55,"column":24}},"15":{"start":{"line":56,"column":2},"end":{"line":56,"column":19}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":34}},"17":{"start":{"line":58,"column":2},"end":{"line":58,"column":23}},"18":{"start":{"line":59,"column":2},"end":{"line":59,"column":20}},"19":{"start":{"line":60,"column":2},"end":{"line":60,"column":19}},"20":{"start":{"line":61,"column":2},"end":{"line":61,"column":19}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":19}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":19}},"23":{"start":{"line":64,"column":2},"end":{"line":64,"column":19}},"24":{"start":{"line":65,"column":2},"end":{"line":65,"column":22}},"25":{"start":{"line":66,"column":2},"end":{"line":66,"column":21}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":41}},"27":{"start":{"line":68,"column":2},"end":{"line":68,"column":28}},"28":{"start":{"line":69,"column":2},"end":{"line":69,"column":26}},"29":{"start":{"line":76,"column":0},"end":{"line":76,"column":56}},"30":{"start":{"line":97,"column":0},"end":{"line":120,"column":3}},"31":{"start":{"line":99,"column":4},"end":{"line":99,"column":28}},"32":{"start":{"line":102,"column":4},"end":{"line":104,"column":5}},"33":{"start":{"line":103,"column":6},"end":{"line":103,"column":58}},"34":{"start":{"line":106,"column":4},"end":{"line":118,"column":5}},"35":{"start":{"line":107,"column":6},"end":{"line":107,"column":29}},"36":{"start":{"line":109,"column":6},"end":{"line":111,"column":7}},"37":{"start":{"line":110,"column":8},"end":{"line":110,"column":42}},"38":{"start":{"line":113,"column":6},"end":{"line":115,"column":7}},"39":{"start":{"line":114,"column":8},"end":{"line":114,"column":31}},"40":{"start":{"line":117,"column":6},"end":{"line":117,"column":29}},"41":{"start":{"line":128,"column":0},"end":{"line":128,"column":33}},"42":{"start":{"line":136,"column":0},"end":{"line":136,"column":24}},"43":{"start":{"line":144,"column":0},"end":{"line":144,"column":28}},"44":{"start":{"line":177,"column":0},"end":{"line":326,"column":2}},"45":{"start":{"line":178,"column":2},"end":{"line":178,"column":13}},"46":{"start":{"line":179,"column":2},"end":{"line":179,"column":38}},"47":{"start":{"line":180,"column":2},"end":{"line":180,"column":10}},"48":{"start":{"line":182,"column":2},"end":{"line":234,"column":3}},"49":{"start":{"line":183,"column":4},"end":{"line":204,"column":5}},"50":{"start":{"line":185,"column":8},"end":{"line":185,"column":21}},"51":{"start":{"line":186,"column":8},"end":{"line":186,"column":14}},"52":{"start":{"line":188,"column":8},"end":{"line":197,"column":9}},"53":{"start":{"line":190,"column":12},"end":{"line":190,"column":28}},"54":{"start":{"line":191,"column":12},"end":{"line":191,"column":25}},"55":{"start":{"line":192,"column":12},"end":{"line":192,"column":18}},"56":{"start":{"line":194,"column":12},"end":{"line":194,"column":27}},"57":{"start":{"line":195,"column":12},"end":{"line":195,"column":25}},"58":{"start":{"line":196,"column":12},"end":{"line":196,"column":18}},"59":{"start":{"line":198,"column":8},"end":{"line":198,"column":14}},"60":{"start":{"line":200,"column":8},"end":{"line":203,"column":9}},"61":{"start":{"line":201,"column":10},"end":{"line":201,"column":29}},"62":{"start":{"line":202,"column":10},"end":{"line":202,"column":23}},"63":{"start":{"line":206,"column":4},"end":{"line":216,"column":5}},"64":{"start":{"line":208,"column":8},"end":{"line":208,"column":28}},"65":{"start":{"line":209,"column":8},"end":{"line":209,"column":29}},"66":{"start":{"line":210,"column":8},"end":{"line":210,"column":14}},"67":{"start":{"line":212,"column":8},"end":{"line":212,"column":27}},"68":{"start":{"line":213,"column":8},"end":{"line":213,"column":29}},"69":{"start":{"line":214,"column":8},"end":{"line":214,"column":24}},"70":{"start":{"line":215,"column":8},"end":{"line":215,"column":14}},"71":{"start":{"line":218,"column":4},"end":{"line":220,"column":5}},"72":{"start":{"line":219,"column":6},"end":{"line":219,"column":33}},"73":{"start":{"line":222,"column":4},"end":{"line":229,"column":5}},"74":{"start":{"line":223,"column":6},"end":{"line":223,"column":26}},"75":{"start":{"line":225,"column":6},"end":{"line":225,"column":32}},"76":{"start":{"line":226,"column":6},"end":{"line":228,"column":9}},"77":{"start":{"line":227,"column":8},"end":{"line":227,"column":20}},"78":{"start":{"line":231,"column":4},"end":{"line":231,"column":25}},"79":{"start":{"line":232,"column":4},"end":{"line":232,"column":55}},"80":{"start":{"line":233,"column":4},"end":{"line":233,"column":41}},"81":{"start":{"line":236,"column":2},"end":{"line":236,"column":70}},"82":{"start":{"line":239,"column":2},"end":{"line":246,"column":3}},"83":{"start":{"line":240,"column":4},"end":{"line":240,"column":59}},"84":{"start":{"line":241,"column":4},"end":{"line":241,"column":32}},"85":{"start":{"line":242,"column":4},"end":{"line":242,"column":30}},"86":{"start":{"line":243,"column":4},"end":{"line":245,"column":7}},"87":{"start":{"line":244,"column":6},"end":{"line":244,"column":18}},"88":{"start":{"line":248,"column":2},"end":{"line":254,"column":3}},"89":{"start":{"line":249,"column":4},"end":{"line":249,"column":41}},"90":{"start":{"line":250,"column":4},"end":{"line":250,"column":30}},"91":{"start":{"line":251,"column":4},"end":{"line":253,"column":7}},"92":{"start":{"line":252,"column":6},"end":{"line":252,"column":18}},"93":{"start":{"line":256,"column":2},"end":{"line":262,"column":3}},"94":{"start":{"line":257,"column":4},"end":{"line":257,"column":46}},"95":{"start":{"line":258,"column":4},"end":{"line":258,"column":30}},"96":{"start":{"line":259,"column":4},"end":{"line":261,"column":7}},"97":{"start":{"line":260,"column":6},"end":{"line":260,"column":18}},"98":{"start":{"line":265,"column":2},"end":{"line":297,"column":3}},"99":{"start":{"line":266,"column":4},"end":{"line":266,"column":29}},"100":{"start":{"line":267,"column":4},"end":{"line":267,"column":29}},"101":{"start":{"line":268,"column":9},"end":{"line":297,"column":3}},"102":{"start":{"line":269,"column":4},"end":{"line":269,"column":33}},"103":{"start":{"line":270,"column":4},"end":{"line":270,"column":33}},"104":{"start":{"line":273,"column":9},"end":{"line":297,"column":3}},"105":{"start":{"line":274,"column":4},"end":{"line":274,"column":27}},"106":{"start":{"line":275,"column":4},"end":{"line":282,"column":5}},"107":{"start":{"line":276,"column":6},"end":{"line":277,"column":50}},"108":{"start":{"line":278,"column":6},"end":{"line":278,"column":32}},"109":{"start":{"line":279,"column":6},"end":{"line":281,"column":9}},"110":{"start":{"line":280,"column":8},"end":{"line":280,"column":20}},"111":{"start":{"line":283,"column":4},"end":{"line":283,"column":39}},"112":{"start":{"line":284,"column":4},"end":{"line":291,"column":5}},"113":{"start":{"line":285,"column":6},"end":{"line":286,"column":50}},"114":{"start":{"line":287,"column":6},"end":{"line":287,"column":32}},"115":{"start":{"line":288,"column":6},"end":{"line":290,"column":9}},"116":{"start":{"line":289,"column":8},"end":{"line":289,"column":20}},"117":{"start":{"line":292,"column":4},"end":{"line":292,"column":22}},"118":{"start":{"line":293,"column":4},"end":{"line":293,"column":24}},"119":{"start":{"line":294,"column":4},"end":{"line":294,"column":24}},"120":{"start":{"line":296,"column":4},"end":{"line":296,"column":38}},"121":{"start":{"line":300,"column":2},"end":{"line":302,"column":3}},"122":{"start":{"line":301,"column":4},"end":{"line":301,"column":63}},"123":{"start":{"line":304,"column":2},"end":{"line":304,"column":23}},"124":{"start":{"line":305,"column":2},"end":{"line":305,"column":19}},"125":{"start":{"line":306,"column":2},"end":{"line":306,"column":19}},"126":{"start":{"line":308,"column":2},"end":{"line":308,"column":19}},"127":{"start":{"line":309,"column":2},"end":{"line":324,"column":5}},"128":{"start":{"line":310,"column":4},"end":{"line":323,"column":7}},"129":{"start":{"line":311,"column":6},"end":{"line":311,"column":34}},"130":{"start":{"line":312,"column":6},"end":{"line":321,"column":7}},"131":{"start":{"line":314,"column":8},"end":{"line":319,"column":11}},"132":{"start":{"line":315,"column":10},"end":{"line":315,"column":24}},"133":{"start":{"line":316,"column":10},"end":{"line":318,"column":11}},"134":{"start":{"line":317,"column":12},"end":{"line":317,"column":39}},"135":{"start":{"line":320,"column":8},"end":{"line":320,"column":15}},"136":{"start":{"line":322,"column":6},"end":{"line":322,"column":16}},"137":{"start":{"line":325,"column":2},"end":{"line":325,"column":17}},"138":{"start":{"line":336,"column":0},"end":{"line":364,"column":2}},"139":{"start":{"line":337,"column":2},"end":{"line":337,"column":38}},"140":{"start":{"line":338,"column":2},"end":{"line":338,"column":19}},"141":{"start":{"line":339,"column":2},"end":{"line":359,"column":5}},"142":{"start":{"line":340,"column":4},"end":{"line":358,"column":5}},"143":{"start":{"line":341,"column":6},"end":{"line":349,"column":9}},"144":{"start":{"line":342,"column":8},"end":{"line":348,"column":11}},"145":{"start":{"line":343,"column":10},"end":{"line":347,"column":11}},"146":{"start":{"line":344,"column":12},"end":{"line":344,"column":26}},"147":{"start":{"line":346,"column":12},"end":{"line":346,"column":22}},"148":{"start":{"line":351,"column":6},"end":{"line":357,"column":9}},"149":{"start":{"line":352,"column":8},"end":{"line":356,"column":9}},"150":{"start":{"line":353,"column":10},"end":{"line":353,"column":24}},"151":{"start":{"line":355,"column":10},"end":{"line":355,"column":20}},"152":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"153":{"start":{"line":361,"column":4},"end":{"line":361,"column":55}},"154":{"start":{"line":361,"column":30},"end":{"line":361,"column":41}},"155":{"start":{"line":363,"column":2},"end":{"line":363,"column":17}},"156":{"start":{"line":410,"column":0},"end":{"line":514,"column":2}},"157":{"start":{"line":411,"column":2},"end":{"line":413,"column":3}},"158":{"start":{"line":412,"column":4},"end":{"line":412,"column":31}},"159":{"start":{"line":415,"column":2},"end":{"line":415,"column":38}},"160":{"start":{"line":417,"column":2},"end":{"line":449,"column":3}},"161":{"start":{"line":419,"column":6},"end":{"line":428,"column":7}},"162":{"start":{"line":421,"column":10},"end":{"line":421,"column":31}},"163":{"start":{"line":422,"column":10},"end":{"line":422,"column":16}},"164":{"start":{"line":424,"column":10},"end":{"line":424,"column":29}},"165":{"start":{"line":425,"column":10},"end":{"line":425,"column":29}},"166":{"start":{"line":426,"column":10},"end":{"line":426,"column":26}},"167":{"start":{"line":427,"column":10},"end":{"line":427,"column":16}},"168":{"start":{"line":430,"column":6},"end":{"line":433,"column":7}},"169":{"start":{"line":431,"column":8},"end":{"line":431,"column":27}},"170":{"start":{"line":432,"column":8},"end":{"line":432,"column":21}},"171":{"start":{"line":434,"column":6},"end":{"line":434,"column":12}},"172":{"start":{"line":436,"column":6},"end":{"line":448,"column":7}},"173":{"start":{"line":438,"column":10},"end":{"line":438,"column":31}},"174":{"start":{"line":439,"column":10},"end":{"line":439,"column":16}},"175":{"start":{"line":441,"column":10},"end":{"line":441,"column":30}},"176":{"start":{"line":442,"column":10},"end":{"line":442,"column":26}},"177":{"start":{"line":443,"column":10},"end":{"line":443,"column":16}},"178":{"start":{"line":445,"column":10},"end":{"line":445,"column":29}},"179":{"start":{"line":446,"column":10},"end":{"line":446,"column":26}},"180":{"start":{"line":447,"column":10},"end":{"line":447,"column":16}},"181":{"start":{"line":451,"column":2},"end":{"line":453,"column":3}},"182":{"start":{"line":452,"column":4},"end":{"line":452,"column":25}},"183":{"start":{"line":455,"column":2},"end":{"line":455,"column":13}},"184":{"start":{"line":456,"column":2},"end":{"line":463,"column":3}},"185":{"start":{"line":457,"column":4},"end":{"line":457,"column":24}},"186":{"start":{"line":459,"column":4},"end":{"line":459,"column":30}},"187":{"start":{"line":460,"column":4},"end":{"line":462,"column":7}},"188":{"start":{"line":461,"column":6},"end":{"line":461,"column":18}},"189":{"start":{"line":465,"column":2},"end":{"line":467,"column":3}},"190":{"start":{"line":466,"column":4},"end":{"line":466,"column":26}},"191":{"start":{"line":469,"column":2},"end":{"line":469,"column":28}},"192":{"start":{"line":470,"column":2},"end":{"line":470,"column":70}},"193":{"start":{"line":471,"column":2},"end":{"line":471,"column":22}},"194":{"start":{"line":473,"column":2},"end":{"line":479,"column":3}},"195":{"start":{"line":474,"column":4},"end":{"line":474,"column":69}},"196":{"start":{"line":475,"column":4},"end":{"line":475,"column":30}},"197":{"start":{"line":476,"column":4},"end":{"line":478,"column":7}},"198":{"start":{"line":477,"column":6},"end":{"line":477,"column":18}},"199":{"start":{"line":482,"column":2},"end":{"line":490,"column":3}},"200":{"start":{"line":483,"column":4},"end":{"line":483,"column":29}},"201":{"start":{"line":484,"column":4},"end":{"line":484,"column":29}},"202":{"start":{"line":485,"column":9},"end":{"line":490,"column":3}},"203":{"start":{"line":486,"column":4},"end":{"line":486,"column":33}},"204":{"start":{"line":487,"column":4},"end":{"line":487,"column":33}},"205":{"start":{"line":489,"column":4},"end":{"line":489,"column":38}},"206":{"start":{"line":493,"column":2},"end":{"line":495,"column":3}},"207":{"start":{"line":494,"column":4},"end":{"line":494,"column":63}},"208":{"start":{"line":497,"column":2},"end":{"line":497,"column":19}},"209":{"start":{"line":498,"column":2},"end":{"line":498,"column":22}},"210":{"start":{"line":499,"column":2},"end":{"line":512,"column":5}},"211":{"start":{"line":500,"column":4},"end":{"line":511,"column":7}},"212":{"start":{"line":501,"column":6},"end":{"line":501,"column":34}},"213":{"start":{"line":502,"column":6},"end":{"line":509,"column":7}},"214":{"start":{"line":503,"column":8},"end":{"line":503,"column":22}},"215":{"start":{"line":504,"column":8},"end":{"line":507,"column":9}},"216":{"start":{"line":505,"column":10},"end":{"line":505,"column":25}},"217":{"start":{"line":506,"column":10},"end":{"line":506,"column":37}},"218":{"start":{"line":508,"column":8},"end":{"line":508,"column":15}},"219":{"start":{"line":510,"column":6},"end":{"line":510,"column":16}},"220":{"start":{"line":513,"column":2},"end":{"line":513,"column":17}},"221":{"start":{"line":527,"column":0},"end":{"line":532,"column":2}},"222":{"start":{"line":528,"column":2},"end":{"line":530,"column":3}},"223":{"start":{"line":529,"column":4},"end":{"line":529,"column":25}},"224":{"start":{"line":531,"column":2},"end":{"line":531,"column":26}},"225":{"start":{"line":541,"column":0},"end":{"line":567,"column":2}},"226":{"start":{"line":542,"column":2},"end":{"line":542,"column":38}},"227":{"start":{"line":543,"column":2},"end":{"line":543,"column":28}},"228":{"start":{"line":545,"column":2},"end":{"line":545,"column":19}},"229":{"start":{"line":547,"column":2},"end":{"line":549,"column":17}},"230":{"start":{"line":552,"column":2},"end":{"line":566,"column":5}},"231":{"start":{"line":553,"column":4},"end":{"line":563,"column":5}},"232":{"start":{"line":554,"column":6},"end":{"line":554,"column":45}},"233":{"start":{"line":555,"column":6},"end":{"line":561,"column":7}},"234":{"start":{"line":556,"column":8},"end":{"line":558,"column":9}},"235":{"start":{"line":557,"column":10},"end":{"line":557,"column":24}},"236":{"start":{"line":560,"column":8},"end":{"line":560,"column":43}},"237":{"start":{"line":562,"column":6},"end":{"line":562,"column":13}},"238":{"start":{"line":565,"column":4},"end":{"line":565,"column":27}},"239":{"start":{"line":575,"column":0},"end":{"line":607,"column":2}},"240":{"start":{"line":576,"column":2},"end":{"line":576,"column":19}},"241":{"start":{"line":578,"column":2},"end":{"line":597,"column":3}},"242":{"start":{"line":579,"column":4},"end":{"line":583,"column":5}},"243":{"start":{"line":580,"column":6},"end":{"line":580,"column":76}},"244":{"start":{"line":581,"column":6},"end":{"line":581,"column":33}},"245":{"start":{"line":582,"column":6},"end":{"line":582,"column":13}},"246":{"start":{"line":585,"column":4},"end":{"line":585,"column":40}},"247":{"start":{"line":589,"column":4},"end":{"line":593,"column":5}},"248":{"start":{"line":590,"column":6},"end":{"line":592,"column":7}},"249":{"start":{"line":591,"column":8},"end":{"line":591,"column":38}},"250":{"start":{"line":595,"column":4},"end":{"line":595,"column":27}},"251":{"start":{"line":596,"column":4},"end":{"line":596,"column":23}},"252":{"start":{"line":600,"column":2},"end":{"line":606,"column":3}},"253":{"start":{"line":601,"column":4},"end":{"line":603,"column":7}},"254":{"start":{"line":602,"column":6},"end":{"line":602,"column":22}},"255":{"start":{"line":605,"column":4},"end":{"line":605,"column":11}},"256":{"start":{"line":617,"column":0},"end":{"line":630,"column":2}},"257":{"start":{"line":618,"column":2},"end":{"line":618,"column":19}},"258":{"start":{"line":619,"column":2},"end":{"line":619,"column":38}},"259":{"start":{"line":620,"column":2},"end":{"line":629,"column":5}},"260":{"start":{"line":621,"column":4},"end":{"line":628,"column":7}},"261":{"start":{"line":622,"column":6},"end":{"line":622,"column":34}},"262":{"start":{"line":623,"column":6},"end":{"line":626,"column":7}},"263":{"start":{"line":624,"column":8},"end":{"line":624,"column":22}},"264":{"start":{"line":625,"column":8},"end":{"line":625,"column":15}},"265":{"start":{"line":627,"column":6},"end":{"line":627,"column":16}},"266":{"start":{"line":638,"column":0},"end":{"line":677,"column":2}},"267":{"start":{"line":639,"column":2},"end":{"line":639,"column":19}},"268":{"start":{"line":640,"column":2},"end":{"line":640,"column":27}},"269":{"start":{"line":642,"column":2},"end":{"line":674,"column":3}},"270":{"start":{"line":644,"column":6},"end":{"line":644,"column":29}},"271":{"start":{"line":645,"column":6},"end":{"line":645,"column":12}},"272":{"start":{"line":649,"column":6},"end":{"line":649,"column":45}},"273":{"start":{"line":650,"column":6},"end":{"line":657,"column":9}},"274":{"start":{"line":651,"column":8},"end":{"line":656,"column":9}},"275":{"start":{"line":652,"column":10},"end":{"line":652,"column":37}},"276":{"start":{"line":654,"column":10},"end":{"line":654,"column":26}},"277":{"start":{"line":655,"column":10},"end":{"line":655,"column":33}},"278":{"start":{"line":658,"column":6},"end":{"line":658,"column":12}},"279":{"start":{"line":661,"column":6},"end":{"line":663,"column":9}},"280":{"start":{"line":662,"column":8},"end":{"line":662,"column":30}},"281":{"start":{"line":664,"column":6},"end":{"line":664,"column":12}},"282":{"start":{"line":667,"column":6},"end":{"line":669,"column":7}},"283":{"start":{"line":668,"column":8},"end":{"line":668,"column":14}},"284":{"start":{"line":670,"column":6},"end":{"line":672,"column":9}},"285":{"start":{"line":671,"column":8},"end":{"line":671,"column":19}},"286":{"start":{"line":673,"column":6},"end":{"line":673,"column":12}},"287":{"start":{"line":676,"column":2},"end":{"line":676,"column":14}},"288":{"start":{"line":685,"column":0},"end":{"line":697,"column":2}},"289":{"start":{"line":686,"column":2},"end":{"line":686,"column":40}},"290":{"start":{"line":690,"column":2},"end":{"line":694,"column":3}},"291":{"start":{"line":691,"column":4},"end":{"line":693,"column":5}},"292":{"start":{"line":692,"column":6},"end":{"line":692,"column":36}},"293":{"start":{"line":696,"column":2},"end":{"line":696,"column":21}},"294":{"start":{"line":710,"column":0},"end":{"line":715,"column":2}},"295":{"start":{"line":711,"column":2},"end":{"line":713,"column":3}},"296":{"start":{"line":712,"column":4},"end":{"line":712,"column":65}},"297":{"start":{"line":714,"column":2},"end":{"line":714,"column":32}},"298":{"start":{"line":749,"column":0},"end":{"line":819,"column":2}},"299":{"start":{"line":751,"column":2},"end":{"line":754,"column":3}},"300":{"start":{"line":752,"column":4},"end":{"line":752,"column":24}},"301":{"start":{"line":753,"column":4},"end":{"line":753,"column":19}},"302":{"start":{"line":756,"column":2},"end":{"line":758,"column":3}},"303":{"start":{"line":757,"column":4},"end":{"line":757,"column":32}},"304":{"start":{"line":759,"column":2},"end":{"line":762,"column":3}},"305":{"start":{"line":760,"column":4},"end":{"line":761,"column":26}},"306":{"start":{"line":764,"column":2},"end":{"line":770,"column":3}},"307":{"start":{"line":766,"column":4},"end":{"line":768,"column":5}},"308":{"start":{"line":767,"column":6},"end":{"line":767,"column":56}},"309":{"start":{"line":769,"column":4},"end":{"line":769,"column":29}},"310":{"start":{"line":772,"column":2},"end":{"line":772,"column":46}},"311":{"start":{"line":773,"column":2},"end":{"line":773,"column":12}},"312":{"start":{"line":775,"column":2},"end":{"line":787,"column":3}},"313":{"start":{"line":777,"column":4},"end":{"line":777,"column":60}},"314":{"start":{"line":781,"column":4},"end":{"line":783,"column":5}},"315":{"start":{"line":782,"column":6},"end":{"line":782,"column":32}},"316":{"start":{"line":785,"column":4},"end":{"line":785,"column":17}},"317":{"start":{"line":786,"column":4},"end":{"line":786,"column":17}},"318":{"start":{"line":789,"column":2},"end":{"line":796,"column":3}},"319":{"start":{"line":791,"column":4},"end":{"line":791,"column":30}},"320":{"start":{"line":792,"column":4},"end":{"line":792,"column":36}},"321":{"start":{"line":793,"column":4},"end":{"line":793,"column":57}},"322":{"start":{"line":795,"column":4},"end":{"line":795,"column":15}},"323":{"start":{"line":799,"column":2},"end":{"line":799,"column":33}},"324":{"start":{"line":801,"column":2},"end":{"line":803,"column":3}},"325":{"start":{"line":802,"column":4},"end":{"line":802,"column":53}},"326":{"start":{"line":805,"column":2},"end":{"line":816,"column":3}},"327":{"start":{"line":811,"column":4},"end":{"line":813,"column":5}},"328":{"start":{"line":812,"column":6},"end":{"line":812,"column":32}},"329":{"start":{"line":815,"column":4},"end":{"line":815,"column":17}},"330":{"start":{"line":817,"column":2},"end":{"line":817,"column":65}},"331":{"start":{"line":818,"column":2},"end":{"line":818,"column":27}},"332":{"start":{"line":827,"column":0},"end":{"line":829,"column":2}},"333":{"start":{"line":828,"column":2},"end":{"line":828,"column":34}},"334":{"start":{"line":838,"column":0},"end":{"line":841,"column":2}},"335":{"start":{"line":839,"column":2},"end":{"line":840,"column":99}},"336":{"start":{"line":850,"column":0},"end":{"line":855,"column":2}},"337":{"start":{"line":851,"column":2},"end":{"line":853,"column":3}},"338":{"start":{"line":852,"column":4},"end":{"line":852,"column":96}},"339":{"start":{"line":854,"column":2},"end":{"line":854,"column":14}},"340":{"start":{"line":867,"column":0},"end":{"line":871,"column":2}},"341":{"start":{"line":868,"column":2},"end":{"line":870,"column":69}},"342":{"start":{"line":877,"column":0},"end":{"line":877,"column":27}},"343":{"start":{"line":878,"column":0},"end":{"line":878,"column":28}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":13},"end":{"line":7,"column":40}},{"start":{"line":7,"column":44},"end":{"line":7,"column":75}}]},"2":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"3":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"4":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"5":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"6":{"line":183,"type":"switch","locations":[{"start":{"line":184,"column":6},"end":{"line":186,"column":14}},{"start":{"line":187,"column":6},"end":{"line":198,"column":14}},{"start":{"line":199,"column":6},"end":{"line":203,"column":9}}]},"7":{"line":188,"type":"switch","locations":[{"start":{"line":189,"column":10},"end":{"line":192,"column":18}},{"start":{"line":193,"column":10},"end":{"line":196,"column":18}}]},"8":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":8},"end":{"line":200,"column":8}},{"start":{"line":200,"column":8},"end":{"line":200,"column":8}}]},"9":{"line":206,"type":"switch","locations":[{"start":{"line":207,"column":6},"end":{"line":210,"column":14}},{"start":{"line":211,"column":6},"end":{"line":215,"column":14}}]},"10":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":4},"end":{"line":218,"column":4}},{"start":{"line":218,"column":4},"end":{"line":218,"column":4}}]},"11":{"line":232,"type":"binary-expr","locations":[{"start":{"line":232,"column":11},"end":{"line":232,"column":31}},{"start":{"line":232,"column":35},"end":{"line":232,"column":54}}]},"12":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":11},"end":{"line":233,"column":31}},{"start":{"line":233,"column":35},"end":{"line":233,"column":40}}]},"13":{"line":236,"type":"binary-expr","locations":[{"start":{"line":236,"column":44},"end":{"line":236,"column":50}},{"start":{"line":236,"column":54},"end":{"line":236,"column":68}}]},"14":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":2},"end":{"line":239,"column":2}},{"start":{"line":239,"column":2},"end":{"line":239,"column":2}}]},"15":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":2},"end":{"line":248,"column":2}},{"start":{"line":248,"column":2},"end":{"line":248,"column":2}}]},"16":{"line":256,"type":"if","locations":[{"start":{"line":256,"column":2},"end":{"line":256,"column":2}},{"start":{"line":256,"column":2},"end":{"line":256,"column":2}}]},"17":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"18":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":9},"end":{"line":268,"column":9}},{"start":{"line":268,"column":9},"end":{"line":268,"column":9}}]},"19":{"line":268,"type":"binary-expr","locations":[{"start":{"line":268,"column":13},"end":{"line":268,"column":19}},{"start":{"line":268,"column":23},"end":{"line":268,"column":34}}]},"20":{"line":273,"type":"if","locations":[{"start":{"line":273,"column":9},"end":{"line":273,"column":9}},{"start":{"line":273,"column":9},"end":{"line":273,"column":9}}]},"21":{"line":273,"type":"binary-expr","locations":[{"start":{"line":273,"column":13},"end":{"line":273,"column":27}},{"start":{"line":273,"column":31},"end":{"line":273,"column":59}}]},"22":{"line":275,"type":"if","locations":[{"start":{"line":275,"column":4},"end":{"line":275,"column":4}},{"start":{"line":275,"column":4},"end":{"line":275,"column":4}}]},"23":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"24":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":2},"end":{"line":300,"column":2}},{"start":{"line":300,"column":2},"end":{"line":300,"column":2}}]},"25":{"line":300,"type":"binary-expr","locations":[{"start":{"line":300,"column":6},"end":{"line":300,"column":13}},{"start":{"line":300,"column":17},"end":{"line":300,"column":31}}]},"26":{"line":311,"type":"binary-expr","locations":[{"start":{"line":311,"column":6},"end":{"line":311,"column":14}},{"start":{"line":311,"column":18},"end":{"line":311,"column":33}}]},"27":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":6},"end":{"line":312,"column":6}},{"start":{"line":312,"column":6},"end":{"line":312,"column":6}}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":10},"end":{"line":316,"column":10}},{"start":{"line":316,"column":10},"end":{"line":316,"column":10}}]},"29":{"line":316,"type":"binary-expr","locations":[{"start":{"line":316,"column":14},"end":{"line":316,"column":23}},{"start":{"line":316,"column":27},"end":{"line":316,"column":47}}]},"30":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"31":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":10},"end":{"line":343,"column":10}},{"start":{"line":343,"column":10},"end":{"line":343,"column":10}}]},"32":{"line":352,"type":"if","locations":[{"start":{"line":352,"column":8},"end":{"line":352,"column":8}},{"start":{"line":352,"column":8},"end":{"line":352,"column":8}}]},"33":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"34":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":2},"end":{"line":411,"column":2}},{"start":{"line":411,"column":2},"end":{"line":411,"column":2}}]},"35":{"line":417,"type":"switch","locations":[{"start":{"line":418,"column":4},"end":{"line":434,"column":12}},{"start":{"line":435,"column":4},"end":{"line":448,"column":7}}]},"36":{"line":419,"type":"switch","locations":[{"start":{"line":420,"column":8},"end":{"line":422,"column":16}},{"start":{"line":423,"column":8},"end":{"line":427,"column":16}}]},"37":{"line":430,"type":"if","locations":[{"start":{"line":430,"column":6},"end":{"line":430,"column":6}},{"start":{"line":430,"column":6},"end":{"line":430,"column":6}}]},"38":{"line":436,"type":"switch","locations":[{"start":{"line":437,"column":8},"end":{"line":439,"column":16}},{"start":{"line":440,"column":8},"end":{"line":443,"column":16}},{"start":{"line":444,"column":8},"end":{"line":447,"column":16}}]},"39":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":2},"end":{"line":451,"column":2}},{"start":{"line":451,"column":2},"end":{"line":451,"column":2}}]},"40":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":2},"end":{"line":465,"column":2}},{"start":{"line":465,"column":2},"end":{"line":465,"column":2}}]},"41":{"line":470,"type":"binary-expr","locations":[{"start":{"line":470,"column":44},"end":{"line":470,"column":50}},{"start":{"line":470,"column":54},"end":{"line":470,"column":68}}]},"42":{"line":473,"type":"if","locations":[{"start":{"line":473,"column":2},"end":{"line":473,"column":2}},{"start":{"line":473,"column":2},"end":{"line":473,"column":2}}]},"43":{"line":482,"type":"if","locations":[{"start":{"line":482,"column":2},"end":{"line":482,"column":2}},{"start":{"line":482,"column":2},"end":{"line":482,"column":2}}]},"44":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":9},"end":{"line":485,"column":9}},{"start":{"line":485,"column":9},"end":{"line":485,"column":9}}]},"45":{"line":485,"type":"binary-expr","locations":[{"start":{"line":485,"column":13},"end":{"line":485,"column":19}},{"start":{"line":485,"column":23},"end":{"line":485,"column":34}}]},"46":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":2},"end":{"line":493,"column":2}},{"start":{"line":493,"column":2},"end":{"line":493,"column":2}}]},"47":{"line":493,"type":"binary-expr","locations":[{"start":{"line":493,"column":6},"end":{"line":493,"column":13}},{"start":{"line":493,"column":17},"end":{"line":493,"column":31}}]},"48":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":6},"end":{"line":501,"column":14}},{"start":{"line":501,"column":18},"end":{"line":501,"column":33}}]},"49":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":6},"end":{"line":502,"column":6}},{"start":{"line":502,"column":6},"end":{"line":502,"column":6}}]},"50":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":8},"end":{"line":504,"column":8}},{"start":{"line":504,"column":8},"end":{"line":504,"column":8}}]},"51":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":12},"end":{"line":504,"column":21}},{"start":{"line":504,"column":25},"end":{"line":504,"column":45}},{"start":{"line":504,"column":49},"end":{"line":504,"column":57}}]},"52":{"line":528,"type":"if","locations":[{"start":{"line":528,"column":2},"end":{"line":528,"column":2}},{"start":{"line":528,"column":2},"end":{"line":528,"column":2}}]},"53":{"line":547,"type":"cond-expr","locations":[{"start":{"line":548,"column":8},"end":{"line":548,"column":19}},{"start":{"line":549,"column":8},"end":{"line":549,"column":16}}]},"54":{"line":553,"type":"if","locations":[{"start":{"line":553,"column":4},"end":{"line":553,"column":4}},{"start":{"line":553,"column":4},"end":{"line":553,"column":4}}]},"55":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":6},"end":{"line":555,"column":6}},{"start":{"line":555,"column":6},"end":{"line":555,"column":6}}]},"56":{"line":556,"type":"if","locations":[{"start":{"line":556,"column":8},"end":{"line":556,"column":8}},{"start":{"line":556,"column":8},"end":{"line":556,"column":8}}]},"57":{"line":560,"type":"binary-expr","locations":[{"start":{"line":560,"column":25},"end":{"line":560,"column":29}},{"start":{"line":560,"column":33},"end":{"line":560,"column":41}}]},"58":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":4},"end":{"line":579,"column":4}},{"start":{"line":579,"column":4},"end":{"line":579,"column":4}}]},"59":{"line":580,"type":"cond-expr","locations":[{"start":{"line":580,"column":34},"end":{"line":580,"column":53}},{"start":{"line":580,"column":56},"end":{"line":580,"column":75}}]},"60":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":6},"end":{"line":590,"column":6}},{"start":{"line":590,"column":6},"end":{"line":590,"column":6}}]},"61":{"line":595,"type":"binary-expr","locations":[{"start":{"line":595,"column":4},"end":{"line":595,"column":12}},{"start":{"line":595,"column":16},"end":{"line":595,"column":26}}]},"62":{"line":600,"type":"if","locations":[{"start":{"line":600,"column":2},"end":{"line":600,"column":2}},{"start":{"line":600,"column":2},"end":{"line":600,"column":2}}]},"63":{"line":600,"type":"binary-expr","locations":[{"start":{"line":600,"column":6},"end":{"line":600,"column":43}},{"start":{"line":600,"column":47},"end":{"line":600,"column":72}}]},"64":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":6},"end":{"line":622,"column":14}},{"start":{"line":622,"column":18},"end":{"line":622,"column":33}}]},"65":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":6},"end":{"line":623,"column":6}},{"start":{"line":623,"column":6},"end":{"line":623,"column":6}}]},"66":{"line":642,"type":"switch","locations":[{"start":{"line":643,"column":4},"end":{"line":645,"column":12}},{"start":{"line":647,"column":4},"end":{"line":647,"column":11}},{"start":{"line":648,"column":4},"end":{"line":658,"column":12}},{"start":{"line":660,"column":4},"end":{"line":664,"column":12}},{"start":{"line":666,"column":4},"end":{"line":673,"column":12}}]},"67":{"line":644,"type":"binary-expr","locations":[{"start":{"line":644,"column":6},"end":{"line":644,"column":14}},{"start":{"line":644,"column":18},"end":{"line":644,"column":28}}]},"68":{"line":651,"type":"if","locations":[{"start":{"line":651,"column":8},"end":{"line":651,"column":8}},{"start":{"line":651,"column":8},"end":{"line":651,"column":8}}]},"69":{"line":655,"type":"binary-expr","locations":[{"start":{"line":655,"column":10},"end":{"line":655,"column":18}},{"start":{"line":655,"column":22},"end":{"line":655,"column":32}}]},"70":{"line":667,"type":"if","locations":[{"start":{"line":667,"column":6},"end":{"line":667,"column":6}},{"start":{"line":667,"column":6},"end":{"line":667,"column":6}}]},"71":{"line":691,"type":"if","locations":[{"start":{"line":691,"column":4},"end":{"line":691,"column":4}},{"start":{"line":691,"column":4},"end":{"line":691,"column":4}}]},"72":{"line":711,"type":"if","locations":[{"start":{"line":711,"column":2},"end":{"line":711,"column":2}},{"start":{"line":711,"column":2},"end":{"line":711,"column":2}}]},"73":{"line":751,"type":"if","locations":[{"start":{"line":751,"column":2},"end":{"line":751,"column":2}},{"start":{"line":751,"column":2},"end":{"line":751,"column":2}}]},"74":{"line":756,"type":"if","locations":[{"start":{"line":756,"column":2},"end":{"line":756,"column":2}},{"start":{"line":756,"column":2},"end":{"line":756,"column":2}}]},"75":{"line":756,"type":"binary-expr","locations":[{"start":{"line":756,"column":6},"end":{"line":756,"column":28}},{"start":{"line":756,"column":32},"end":{"line":756,"column":56}}]},"76":{"line":759,"type":"if","locations":[{"start":{"line":759,"column":2},"end":{"line":759,"column":2}},{"start":{"line":759,"column":2},"end":{"line":759,"column":2}}]},"77":{"line":759,"type":"binary-expr","locations":[{"start":{"line":759,"column":6},"end":{"line":759,"column":12}},{"start":{"line":759,"column":16},"end":{"line":759,"column":40}}]},"78":{"line":764,"type":"if","locations":[{"start":{"line":764,"column":2},"end":{"line":764,"column":2}},{"start":{"line":764,"column":2},"end":{"line":764,"column":2}}]},"79":{"line":764,"type":"binary-expr","locations":[{"start":{"line":764,"column":6},"end":{"line":764,"column":23}},{"start":{"line":764,"column":27},"end":{"line":764,"column":38}}]},"80":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"81":{"line":766,"type":"binary-expr","locations":[{"start":{"line":766,"column":8},"end":{"line":766,"column":14}},{"start":{"line":766,"column":18},"end":{"line":766,"column":41}},{"start":{"line":766,"column":45},"end":{"line":766,"column":80}}]},"82":{"line":775,"type":"if","locations":[{"start":{"line":775,"column":2},"end":{"line":775,"column":2}},{"start":{"line":775,"column":2},"end":{"line":775,"column":2}}]},"83":{"line":775,"type":"binary-expr","locations":[{"start":{"line":775,"column":6},"end":{"line":775,"column":12}},{"start":{"line":775,"column":16},"end":{"line":775,"column":39}}]},"84":{"line":781,"type":"if","locations":[{"start":{"line":781,"column":4},"end":{"line":781,"column":4}},{"start":{"line":781,"column":4},"end":{"line":781,"column":4}}]},"85":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":2},"end":{"line":789,"column":2}},{"start":{"line":789,"column":2},"end":{"line":789,"column":2}}]},"86":{"line":789,"type":"binary-expr","locations":[{"start":{"line":789,"column":6},"end":{"line":789,"column":23}},{"start":{"line":789,"column":27},"end":{"line":789,"column":37}}]},"87":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":2},"end":{"line":801,"column":2}},{"start":{"line":801,"column":2},"end":{"line":801,"column":2}}]},"88":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":2},"end":{"line":805,"column":2}},{"start":{"line":805,"column":2},"end":{"line":805,"column":2}}]},"89":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":6},"end":{"line":805,"column":33}},{"start":{"line":806,"column":10},"end":{"line":806,"column":21}},{"start":{"line":806,"column":25},"end":{"line":806,"column":61}}]},"90":{"line":811,"type":"if","locations":[{"start":{"line":811,"column":4},"end":{"line":811,"column":4}},{"start":{"line":811,"column":4},"end":{"line":811,"column":4}}]},"91":{"line":839,"type":"binary-expr","locations":[{"start":{"line":839,"column":10},"end":{"line":839,"column":28}},{"start":{"line":839,"column":32},"end":{"line":839,"column":52}},{"start":{"line":840,"column":8},"end":{"line":840,"column":26}},{"start":{"line":840,"column":30},"end":{"line":840,"column":50}},{"start":{"line":840,"column":55},"end":{"line":840,"column":97}}]},"92":{"line":851,"type":"if","locations":[{"start":{"line":851,"column":2},"end":{"line":851,"column":2}},{"start":{"line":851,"column":2},"end":{"line":851,"column":2}}]},"93":{"line":851,"type":"binary-expr","locations":[{"start":{"line":851,"column":6},"end":{"line":851,"column":18}},{"start":{"line":851,"column":22},"end":{"line":851,"column":39}}]},"94":{"line":868,"type":"binary-expr","locations":[{"start":{"line":868,"column":10},"end":{"line":868,"column":17}},{"start":{"line":869,"column":7},"end":{"line":869,"column":19}},{"start":{"line":870,"column":8},"end":{"line":870,"column":20}},{"start":{"line":870,"column":25},"end":{"line":870,"column":67}}]}},"code":["/*!"," * Module dependencies."," */","","var utils = require('./utils');","var EventEmitter = require('events').EventEmitter;","var driver = global.MONGOOSE_DRIVER_PATH || './drivers/node-mongodb-native';","var Schema = require('./schema');","var Collection = require(driver + '/collection');","var STATES = require('./connectionstate');","var MongooseError = require('./error');","var muri = require('muri');","var PromiseProvider = require('./promise_provider');","","/*!"," * Protocol prefix regexp."," *"," * @api private"," */","","var rgxProtocol = /^(?:.)+:\\/\\//;","","/*!"," * A list of authentication mechanisms that don't require a password for authentication."," * This is used by the authMechanismDoesNotRequirePassword method."," *"," * @api private"," */","var authMechanismsWhichDontRequirePassword = [","  'MONGODB-X509'","];","","/**"," * Connection constructor"," *"," * For practical reasons, a Connection equals a Db."," *"," * @param {Mongoose} base a mongoose instance"," * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter"," * @event `connecting`: Emitted when `connection.{open,openSet}()` is executed on this connection."," * @event `connected`: Emitted when this connection successfully connects to the db. May be emitted _multiple_ times in `reconnected` scenarios."," * @event `open`: Emitted after we `connected` and `onOpen` is executed on all of this connections models."," * @event `disconnecting`: Emitted when `connection.close()` was executed."," * @event `disconnected`: Emitted after getting disconnected from the db."," * @event `close`: Emitted after we `disconnected` and `onClose` executed on all of this connections models."," * @event `reconnected`: Emitted after we `connected` and subsequently `disconnected`, followed by successfully another successfull connection."," * @event `error`: Emitted when an error occurs on this connection."," * @event `fullsetup`: Emitted in a replica-set scenario, when primary and at least one seconaries specified in the connection string are connected."," * @event `all`: Emitted in a replica-set scenario, when all nodes specified in the connection string are connected."," * @api public"," */","","function Connection(base) {","  this.base = base;","  this.collections = {};","  this.models = {};","  this.config = {autoIndex: true};","  this.replica = false;","  this.hosts = null;","  this.host = null;","  this.port = null;","  this.user = null;","  this.pass = null;","  this.name = null;","  this.options = null;","  this.otherDbs = [];","  this._readyState = STATES.disconnected;","  this._closeCalled = false;","  this._hasOpened = false;","}","","/*!"," * Inherit from EventEmitter"," */","","Connection.prototype.__proto__ = EventEmitter.prototype;","","/**"," * Connection ready state"," *"," * - 0 = disconnected"," * - 1 = connected"," * - 2 = connecting"," * - 3 = disconnecting"," *"," * Each state change emits its associated event name."," *"," * ####Example"," *"," *     conn.on('connected', callback);"," *     conn.on('disconnected', callback);"," *"," * @property readyState"," * @api public"," */","","Object.defineProperty(Connection.prototype, 'readyState', {","  get: function() {","    return this._readyState;","  },","  set: function(val) {","    if (!(val in STATES)) {","      throw new Error('Invalid connection state: ' + val);","    }","","    if (this._readyState !== val) {","      this._readyState = val;","      // loop over the otherDbs on this connection and change their state","      for (var i = 0; i < this.otherDbs.length; i++) {","        this.otherDbs[i].readyState = val;","      }","","      if (STATES.connected === val) {","        this._hasOpened = true;","      }","","      this.emit(STATES[val]);","    }","  }","});","","/**"," * A hash of the collections associated with this connection"," *"," * @property collections"," */","","Connection.prototype.collections;","","/**"," * The mongodb.Db instance, set when the connection is opened"," *"," * @property db"," */","","Connection.prototype.db;","","/**"," * A hash of the global options that are associated with this connection"," *"," * @property config"," */","","Connection.prototype.config;","","/**"," * Opens the connection to MongoDB."," *"," * `options` is a hash with the following possible properties:"," *"," *     config  - passed to the connection config instance"," *     db      - passed to the connection db instance"," *     server  - passed to the connection server instance(s)"," *     replset - passed to the connection ReplSet instance"," *     user    - username for authentication"," *     pass    - password for authentication"," *     auth    - options for authentication (see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate)"," *"," * ####Notes:"," *"," * Mongoose forces the db option `forceServerObjectId` false and cannot be overridden."," * Mongoose defaults the server `auto_reconnect` options to true which can be overridden."," * See the node-mongodb-native driver instance for options that it understands."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * @param {String} connection_string mongodb://uri or the host to which you are connecting"," * @param {String} [database] database name"," * @param {Number} [port] database port"," * @param {Object} [options] options"," * @param {Function} [callback]"," * @see node-mongodb-native https://github.com/mongodb/node-mongodb-native"," * @see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate"," * @api public"," */","","Connection.prototype.open = function(host, database, port, options, callback) {","  var parsed;","  var Promise = PromiseProvider.get();","  var err;","","  if (typeof database === 'string') {","    switch (arguments.length) {","      case 2:","        port = 27017;","        break;","      case 3:","        switch (typeof port) {","          case 'function':","            callback = port;","            port = 27017;","            break;","          case 'object':","            options = port;","            port = 27017;","            break;","        }","        break;","      case 4:","        if (typeof options === 'function') {","          callback = options;","          options = {};","        }","    }","  } else {","    switch (typeof database) {","      case 'function':","        callback = database;","        database = undefined;","        break;","      case 'object':","        options = database;","        database = undefined;","        callback = port;","        break;","    }","","    if (!rgxProtocol.test(host)) {","      host = 'mongodb://' + host;","    }","","    try {","      parsed = muri(host);","    } catch (err) {","      this.error(err, callback);","      return new Promise.ES6(function(resolve, reject) {","        reject(err);","      });","    }","","    database = parsed.db;","    host = parsed.hosts[0].host || parsed.hosts[0].ipc;","    port = parsed.hosts[0].port || 27017;","  }","","  this.options = this.parseOptions(options, parsed && parsed.options);","","  // make sure we can open","  if (STATES.disconnected !== this.readyState) {","    err = new Error('Trying to open unclosed connection.');","    err.state = this.readyState;","    this.error(err, callback);","    return new Promise.ES6(function(resolve, reject) {","      reject(err);","    });","  }","","  if (!host) {","    err = new Error('Missing hostname.');","    this.error(err, callback);","    return new Promise.ES6(function(resolve, reject) {","      reject(err);","    });","  }","","  if (!database) {","    err = new Error('Missing database name.');","    this.error(err, callback);","    return new Promise.ES6(function(resolve, reject) {","      reject(err);","    });","  }","","  // authentication","  if (this.optionsProvideAuthenticationData(options)) {","    this.user = options.user;","    this.pass = options.pass;","  } else if (parsed && parsed.auth) {","    this.user = parsed.auth.user;","    this.pass = parsed.auth.pass;","","    // Check hostname for user/pass","  } else if (/@/.test(host) && /:/.test(host.split('@')[0])) {","    host = host.split('@');","    if (host.length > 2) {","      err = new Error('Username and password must be URI encoded if they ' +","        'contain \"@\", see http://bit.ly/2nRYRyq');","      this.error(err, callback);","      return new Promise.ES6(function(resolve, reject) {","        reject(err);","      });","    }","    var auth = host.shift().split(':');","    if (auth.length > 2) {","      err = new Error('Username and password must be URI encoded if they ' +","        'contain \":\", see http://bit.ly/2nRYRyq');","      this.error(err, callback);","      return new Promise.ES6(function(resolve, reject) {","        reject(err);","      });","    }","    host = host.pop();","    this.user = auth[0];","    this.pass = auth[1];","  } else {","    this.user = this.pass = undefined;","  }","","  // global configuration options","  if (options && options.config) {","    this.config.autoIndex = options.config.autoIndex !== false;","  }","","  this.name = database;","  this.host = host;","  this.port = port;","","  var _this = this;","  var promise = new Promise.ES6(function(resolve, reject) {","    _this._open(true, function(error) {","      callback && callback(error);","      if (error) {","        // Error can be on same tick re: christkv/mongodb-core#157","        setImmediate(function() {","          reject(error);","          if (!callback && !promise.$hasHandler) {","            _this.emit('error', error);","          }","        });","        return;","      }","      resolve();","    });","  });","  return promise;","};","","/**"," * Helper for `dropDatabase()`."," *"," * @param {Function} callback"," * @return {Promise}"," * @api public"," */","","Connection.prototype.dropDatabase = function(callback) {","  var Promise = PromiseProvider.get();","  var _this = this;","  var promise = new Promise.ES6(function(resolve, reject) {","    if (_this.readyState !== STATES.connected) {","      _this.on('open', function() {","        _this.db.dropDatabase(function(error) {","          if (error) {","            reject(error);","          } else {","            resolve();","          }","        });","      });","    } else {","      _this.db.dropDatabase(function(error) {","        if (error) {","          reject(error);","        } else {","          resolve();","        }","      });","    }","  });","  if (callback) {","    promise.then(function() { callback(); }, callback);","  }","  return promise;","};","","/**"," * Opens the connection to a replica set."," *"," * ####Example:"," *"," *     var db = mongoose.createConnection();"," *     db.openSet(\"mongodb://user:pwd@localhost:27020,localhost:27021,localhost:27012/mydb\");"," *"," * The database name and/or auth need only be included in one URI."," * The `options` is a hash which is passed to the internal driver connection object."," *"," * Valid `options`"," *"," *     db      - passed to the connection db instance"," *     server  - passed to the connection server instance(s)"," *     replset - passed to the connection ReplSetServer instance"," *     user    - username for authentication"," *     pass    - password for authentication"," *     auth    - options for authentication (see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate)"," *     mongos  - Boolean - if true, enables High Availability support for mongos"," *"," * _Options passed take precedence over options included in connection strings._"," *"," * ####Notes:"," *"," * _If connecting to multiple mongos servers, set the `mongos` option to true._"," *"," *     conn.open('mongodb://mongosA:27501,mongosB:27501', { mongos: true }, cb);"," *"," * Mongoose forces the db option `forceServerObjectId` false and cannot be overridden."," * Mongoose defaults the server `auto_reconnect` options to true which can be overridden."," * See the node-mongodb-native driver instance for options that it understands."," *"," * _Options passed take precedence over options included in connection strings._"," *"," * @param {String} uris MongoDB connection string"," * @param {String} [database] database name if not included in `uris`"," * @param {Object} [options] passed to the internal driver"," * @param {Function} [callback]"," * @see node-mongodb-native https://github.com/mongodb/node-mongodb-native"," * @see http://mongodb.github.com/node-mongodb-native/api-generated/db.html#authenticate"," * @api public"," */","","Connection.prototype.openSet = function(uris, database, options, callback) {","  if (!rgxProtocol.test(uris)) {","    uris = 'mongodb://' + uris;","  }","","  var Promise = PromiseProvider.get();","","  switch (arguments.length) {","    case 3:","      switch (typeof database) {","        case 'string':","          this.name = database;","          break;","        case 'object':","          callback = options;","          options = database;","          database = null;","          break;","      }","","      if (typeof options === 'function') {","        callback = options;","        options = {};","      }","      break;","    case 2:","      switch (typeof database) {","        case 'string':","          this.name = database;","          break;","        case 'function':","          callback = database;","          database = null;","          break;","        case 'object':","          options = database;","          database = null;","          break;","      }","  }","","  if (typeof database === 'string') {","    this.name = database;","  }","","  var parsed;","  try {","    parsed = muri(uris);","  } catch (err) {","    this.error(err, callback);","    return new Promise.ES6(function(resolve, reject) {","      reject(err);","    });","  }","","  if (!this.name) {","    this.name = parsed.db;","  }","","  this.hosts = parsed.hosts;","  this.options = this.parseOptions(options, parsed && parsed.options);","  this.replica = true;","","  if (!this.name) {","    var err = new Error('No database name provided for replica set');","    this.error(err, callback);","    return new Promise.ES6(function(resolve, reject) {","      reject(err);","    });","  }","","  // authentication","  if (this.optionsProvideAuthenticationData(options)) {","    this.user = options.user;","    this.pass = options.pass;","  } else if (parsed && parsed.auth) {","    this.user = parsed.auth.user;","    this.pass = parsed.auth.pass;","  } else {","    this.user = this.pass = undefined;","  }","","  // global configuration options","  if (options && options.config) {","    this.config.autoIndex = options.config.autoIndex !== false;","  }","","  var _this = this;","  var emitted = false;","  var promise = new Promise.ES6(function(resolve, reject) {","    _this._open(true, function(error) {","      callback && callback(error);","      if (error) {","        reject(error);","        if (!callback && !promise.$hasHandler && !emitted) {","          emitted = true;","          _this.emit('error', error);","        }","        return;","      }","      resolve();","    });","  });","  return promise;","};","","/**"," * error"," *"," * Graceful error handling, passes error to callback"," * if available, else emits error on the connection."," *"," * @param {Error} err"," * @param {Function} callback optional"," * @api private"," */","","Connection.prototype.error = function(err, callback) {","  if (callback) {","    return callback(err);","  }","  this.emit('error', err);","};","","/**"," * Handles opening the connection with the appropriate method based on connection type."," *"," * @param {Function} callback"," * @api private"," */","","Connection.prototype._open = function(emit, callback) {","  this.readyState = STATES.connecting;","  this._closeCalled = false;","","  var _this = this;","","  var method = this.replica","      ? 'doOpenSet'","      : 'doOpen';","","  // open connection","  this[method](function(err) {","    if (err) {","      _this.readyState = STATES.disconnected;","      if (_this._hasOpened) {","        if (callback) {","          callback(err);","        }","      } else {","        _this.error(err, emit && callback);","      }","      return;","    }","","    _this.onOpen(callback);","  });","};","","/**"," * Called when the connection is opened"," *"," * @api private"," */","","Connection.prototype.onOpen = function(callback) {","  var _this = this;","","  function open(err, isAuth) {","    if (err) {","      _this.readyState = isAuth ? STATES.unauthorized : STATES.disconnected;","      _this.error(err, callback);","      return;","    }","","    _this.readyState = STATES.connected;","","    // avoid having the collection subscribe to our event emitter","    // to prevent 0.3 warning","    for (var i in _this.collections) {","      if (utils.object.hasOwnProperty(_this.collections, i)) {","        _this.collections[i].onOpen();","      }","    }","","    callback && callback();","    _this.emit('open');","  }","","  // re-authenticate if we're not already connected #3871","  if (this._readyState !== STATES.connected && this.shouldAuthenticate()) {","    _this.db.authenticate(_this.user, _this.pass, _this.options.auth, function(err) {","      open(err, true);","    });","  } else {","    open();","  }","};","","/**"," * Closes the connection"," *"," * @param {Function} [callback] optional"," * @return {Connection} self"," * @api public"," */","","Connection.prototype.close = function(callback) {","  var _this = this;","  var Promise = PromiseProvider.get();","  return new Promise.ES6(function(resolve, reject) {","    _this._close(function(error) {","      callback && callback(error);","      if (error) {","        reject(error);","        return;","      }","      resolve();","    });","  });","};","","/**"," * Handles closing the connection"," *"," * @param {Function} callback"," * @api private"," */","Connection.prototype._close = function(callback) {","  var _this = this;","  this._closeCalled = true;","","  switch (this.readyState) {","    case 0: // disconnected","      callback && callback();","      break;","","    case 1: // connected","    case 4: // unauthorized","      this.readyState = STATES.disconnecting;","      this.doClose(function(err) {","        if (err) {","          _this.error(err, callback);","        } else {","          _this.onClose();","          callback && callback();","        }","      });","      break;","","    case 2: // connecting","      this.once('open', function() {","        _this.close(callback);","      });","      break;","","    case 3: // disconnecting","      if (!callback) {","        break;","      }","      this.once('close', function() {","        callback();","      });","      break;","  }","","  return this;","};","","/**"," * Called when the connection closes"," *"," * @api private"," */","","Connection.prototype.onClose = function() {","  this.readyState = STATES.disconnected;","","  // avoid having the collection subscribe to our event emitter","  // to prevent 0.3 warning","  for (var i in this.collections) {","    if (utils.object.hasOwnProperty(this.collections, i)) {","      this.collections[i].onClose();","    }","  }","","  this.emit('close');","};","","/**"," * Retrieves a collection, creating it if not cached."," *"," * Not typically needed by applications. Just talk to your collection through your model."," *"," * @param {String} name of the collection"," * @param {Object} [options] optional collection options"," * @return {Collection} collection instance"," * @api public"," */","","Connection.prototype.collection = function(name, options) {","  if (!(name in this.collections)) {","    this.collections[name] = new Collection(name, this, options);","  }","  return this.collections[name];","};","","/**"," * Defines or retrieves a model."," *"," *     var mongoose = require('mongoose');"," *     var db = mongoose.createConnection(..);"," *     db.model('Venue', new Schema(..));"," *     var Ticket = db.model('Ticket', new Schema(..));"," *     var Venue = db.model('Venue');"," *"," * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._"," *"," * ####Example:"," *"," *     var schema = new Schema({ name: String }, { collection: 'actor' });"," *"," *     // or"," *"," *     schema.set('collection', 'actor');"," *"," *     // or"," *"," *     var collectionName = 'actor'"," *     var M = conn.model('Actor', schema, collectionName)"," *"," * @param {String} name the model name"," * @param {Schema} [schema] a schema. necessary when defining a model"," * @param {String} [collection] name of mongodb collection (optional) if not given it will be induced from model name"," * @see Mongoose#model #index_Mongoose-model"," * @return {Model} The compiled model"," * @api public"," */","","Connection.prototype.model = function(name, schema, collection) {","  // collection name discovery","  if (typeof schema === 'string') {","    collection = schema;","    schema = false;","  }","","  if (utils.isObject(schema) && !schema.instanceOfSchema) {","    schema = new Schema(schema);","  }","  if (schema && !schema.instanceOfSchema) {","    throw new Error('The 2nd parameter to `mongoose.model()` should be a ' +","      'schema or a POJO');","  }","","  if (this.models[name] && !collection) {","    // model exists but we are not subclassing with custom collection","    if (schema && schema.instanceOfSchema && schema !== this.models[name].schema) {","      throw new MongooseError.OverwriteModelError(name);","    }","    return this.models[name];","  }","","  var opts = {cache: false, connection: this};","  var model;","","  if (schema && schema.instanceOfSchema) {","    // compile a model","    model = this.base.model(name, schema, collection, opts);","","    // only the first model with this name is cached to allow","    // for one-offs with custom collection names etc.","    if (!this.models[name]) {","      this.models[name] = model;","    }","","    model.init();","    return model;","  }","","  if (this.models[name] && collection) {","    // subclassing current model with alternate collection","    model = this.models[name];","    schema = model.prototype.schema;","    var sub = model.__subclass(this, schema, collection);","    // do not cache the sub model","    return sub;","  }","","  // lookup model in mongoose module","  model = this.base.models[name];","","  if (!model) {","    throw new MongooseError.MissingSchemaError(name);","  }","","  if (this === model.prototype.db","      && (!collection || collection === model.collection.name)) {","    // model already uses this connection.","","    // only the first model with this name is cached to allow","    // for one-offs with custom collection names etc.","    if (!this.models[name]) {","      this.models[name] = model;","    }","","    return model;","  }","  this.models[name] = model.__subclass(this, schema, collection);","  return this.models[name];","};","","/**"," * Returns an array of model names created on this connection."," * @api public"," * @return {Array}"," */","","Connection.prototype.modelNames = function() {","  return Object.keys(this.models);","};","","/**"," * @brief Returns if the connection requires authentication after it is opened. Generally if a"," * username and password are both provided than authentication is needed, but in some cases a"," * password is not required."," * @api private"," * @return {Boolean} true if the connection should be authenticated after it is opened, otherwise false."," */","Connection.prototype.shouldAuthenticate = function() {","  return (this.user !== null && this.user !== void 0) &&","      ((this.pass !== null || this.pass !== void 0) || this.authMechanismDoesNotRequirePassword());","};","","/**"," * @brief Returns a boolean value that specifies if the current authentication mechanism needs a"," * password to authenticate according to the auth objects passed into the open/openSet methods."," * @api private"," * @return {Boolean} true if the authentication mechanism specified in the options object requires"," *  a password, otherwise false."," */","Connection.prototype.authMechanismDoesNotRequirePassword = function() {","  if (this.options && this.options.auth) {","    return authMechanismsWhichDontRequirePassword.indexOf(this.options.auth.authMechanism) >= 0;","  }","  return true;","};","","/**"," * @brief Returns a boolean value that specifies if the provided objects object provides enough"," * data to authenticate with. Generally this is true if the username and password are both specified"," * but in some authentication methods, a password is not required for authentication so only a username"," * is required."," * @param {Object} [options] the options object passed into the open/openSet methods."," * @api private"," * @return {Boolean} true if the provided options object provides enough data to authenticate with,"," *   otherwise false."," */","Connection.prototype.optionsProvideAuthenticationData = function(options) {","  return (options) &&","      (options.user) &&","      ((options.pass) || this.authMechanismDoesNotRequirePassword());","};","","/*!"," * Module exports."," */","","Connection.STATES = STATES;","module.exports = Connection;",""],"l":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"21":1,"29":1,"53":1,"54":2,"55":2,"56":2,"57":2,"58":2,"59":2,"60":2,"61":2,"62":2,"63":2,"64":2,"65":2,"66":2,"67":2,"68":2,"69":2,"76":1,"97":1,"99":0,"102":0,"103":0,"106":0,"107":0,"109":0,"110":0,"113":0,"114":0,"117":0,"128":1,"136":1,"144":1,"177":1,"178":0,"179":0,"180":0,"182":0,"183":0,"185":0,"186":0,"188":0,"190":0,"191":0,"192":0,"194":0,"195":0,"196":0,"198":0,"200":0,"201":0,"202":0,"206":0,"208":0,"209":0,"210":0,"212":0,"213":0,"214":0,"215":0,"218":0,"219":0,"222":0,"223":0,"225":0,"226":0,"227":0,"231":0,"232":0,"233":0,"236":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"248":0,"249":0,"250":0,"251":0,"252":0,"256":0,"257":0,"258":0,"259":0,"260":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"273":0,"274":0,"275":0,"276":0,"278":0,"279":0,"280":0,"283":0,"284":0,"285":0,"287":0,"288":0,"289":0,"292":0,"293":0,"294":0,"296":0,"300":0,"301":0,"304":0,"305":0,"306":0,"308":0,"309":0,"310":0,"311":0,"312":0,"314":0,"315":0,"316":0,"317":0,"320":0,"322":0,"325":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"346":0,"351":0,"352":0,"353":0,"355":0,"360":0,"361":0,"363":0,"410":1,"411":0,"412":0,"415":0,"417":0,"419":0,"421":0,"422":0,"424":0,"425":0,"426":0,"427":0,"430":0,"431":0,"432":0,"434":0,"436":0,"438":0,"439":0,"441":0,"442":0,"443":0,"445":0,"446":0,"447":0,"451":0,"452":0,"455":0,"456":0,"457":0,"459":0,"460":0,"461":0,"465":0,"466":0,"469":0,"470":0,"471":0,"473":0,"474":0,"475":0,"476":0,"477":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"489":0,"493":0,"494":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"508":0,"510":0,"513":0,"527":1,"528":0,"529":0,"531":0,"541":1,"542":0,"543":0,"545":0,"547":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"560":0,"562":0,"565":0,"575":1,"576":0,"578":1,"579":0,"580":0,"581":0,"582":0,"585":0,"589":0,"590":0,"591":0,"595":0,"596":0,"600":0,"601":0,"602":0,"605":0,"617":1,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"627":0,"638":1,"639":0,"640":0,"642":0,"644":0,"645":0,"649":0,"650":0,"651":0,"652":0,"654":0,"655":0,"658":0,"661":0,"662":0,"664":0,"667":0,"668":0,"670":0,"671":0,"673":0,"676":0,"685":1,"686":0,"690":0,"691":0,"692":0,"696":0,"710":1,"711":0,"712":0,"714":0,"749":1,"751":0,"752":0,"753":0,"756":0,"757":0,"759":0,"760":0,"764":0,"766":0,"767":0,"769":0,"772":0,"773":0,"775":0,"777":0,"781":0,"782":0,"785":0,"786":0,"789":0,"791":0,"792":0,"793":0,"795":0,"799":0,"801":0,"802":0,"805":0,"811":0,"812":0,"815":0,"817":0,"818":0,"827":1,"828":0,"838":1,"839":0,"850":1,"851":0,"852":0,"854":0,"867":1,"868":0,"877":1,"878":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1,"36":47,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":52,"55":52,"56":0,"57":5,"58":47,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":1,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,47],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":47,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"NativeCollection","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":28}}},"2":{"name":"(anonymous_2)","line":35,"loc":{"start":{"line":35,"column":36},"end":{"line":35,"column":47}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":46},"end":{"line":48,"column":63}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":62},"end":{"line":52,"column":82}}},"5":{"name":"callback","line":79,"loc":{"start":{"line":79,"column":2},"end":{"line":79,"column":37}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":37},"end":{"line":96,"column":48}}},"7":{"name":"iter","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":17}}},"8":{"name":"(anonymous_8)","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":45}}},"9":{"name":"(anonymous_9)","line":161,"loc":{"start":{"line":161,"column":36},"end":{"line":161,"column":60}}},"10":{"name":"(anonymous_10)","line":182,"loc":{"start":{"line":182,"column":37},"end":{"line":182,"column":51}}},"11":{"name":"map","line":192,"loc":{"start":{"line":192,"column":0},"end":{"line":192,"column":16}}},"12":{"name":"formatObjectId","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":32}}},"13":{"name":"(anonymous_13)","line":197,"loc":{"start":{"line":197,"column":21},"end":{"line":197,"column":32}}},"14":{"name":"formatDate","line":199,"loc":{"start":{"line":199,"column":0},"end":{"line":199,"column":28}}},"15":{"name":"(anonymous_15)","line":201,"loc":{"start":{"line":201,"column":21},"end":{"line":201,"column":32}}},"16":{"name":"format","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":26}}},"17":{"name":"(anonymous_17)","line":215,"loc":{"start":{"line":215,"column":20},"end":{"line":215,"column":31}}},"18":{"name":"(anonymous_18)","line":218,"loc":{"start":{"line":218,"column":20},"end":{"line":218,"column":31}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":18,"column":0},"end":{"line":21,"column":1}},"3":{"start":{"line":19,"column":2},"end":{"line":19,"column":25}},"4":{"start":{"line":20,"column":2},"end":{"line":20,"column":44}},"5":{"start":{"line":27,"column":0},"end":{"line":27,"column":68}},"6":{"start":{"line":35,"column":0},"end":{"line":88,"column":2}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":19}},"8":{"start":{"line":41,"column":2},"end":{"line":45,"column":3}},"9":{"start":{"line":43,"column":4},"end":{"line":43,"column":57}},"10":{"start":{"line":44,"column":4},"end":{"line":44,"column":28}},"11":{"start":{"line":48,"column":2},"end":{"line":77,"column":5}},"12":{"start":{"line":49,"column":4},"end":{"line":49,"column":34}},"13":{"start":{"line":49,"column":13},"end":{"line":49,"column":34}},"14":{"start":{"line":52,"column":4},"end":{"line":76,"column":7}},"15":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"16":{"start":{"line":54,"column":8},"end":{"line":54,"column":29}},"17":{"start":{"line":56,"column":6},"end":{"line":56,"column":24}},"18":{"start":{"line":57,"column":6},"end":{"line":57,"column":25}},"19":{"start":{"line":59,"column":6},"end":{"line":75,"column":7}},"20":{"start":{"line":60,"column":8},"end":{"line":69,"column":9}},"21":{"start":{"line":61,"column":10},"end":{"line":61,"column":28}},"22":{"start":{"line":63,"column":10},"end":{"line":66,"column":122}},"23":{"start":{"line":67,"column":10},"end":{"line":67,"column":31}},"24":{"start":{"line":68,"column":10},"end":{"line":68,"column":24}},"25":{"start":{"line":72,"column":8},"end":{"line":72,"column":50}},"26":{"start":{"line":73,"column":8},"end":{"line":73,"column":27}},"27":{"start":{"line":74,"column":8},"end":{"line":74,"column":67}},"28":{"start":{"line":79,"column":2},"end":{"line":87,"column":3}},"29":{"start":{"line":80,"column":4},"end":{"line":86,"column":5}},"30":{"start":{"line":82,"column":6},"end":{"line":82,"column":36}},"31":{"start":{"line":84,"column":6},"end":{"line":84,"column":36}},"32":{"start":{"line":85,"column":6},"end":{"line":85,"column":54}},"33":{"start":{"line":96,"column":0},"end":{"line":98,"column":2}},"34":{"start":{"line":97,"column":2},"end":{"line":97,"column":50}},"35":{"start":{"line":104,"column":0},"end":{"line":138,"column":1}},"36":{"start":{"line":105,"column":2},"end":{"line":137,"column":4}},"37":{"start":{"line":106,"column":4},"end":{"line":109,"column":5}},"38":{"start":{"line":107,"column":6},"end":{"line":107,"column":34}},"39":{"start":{"line":108,"column":6},"end":{"line":108,"column":13}},"40":{"start":{"line":111,"column":4},"end":{"line":111,"column":37}},"41":{"start":{"line":112,"column":4},"end":{"line":112,"column":25}},"42":{"start":{"line":113,"column":4},"end":{"line":113,"column":21}},"43":{"start":{"line":114,"column":4},"end":{"line":114,"column":46}},"44":{"start":{"line":116,"column":4},"end":{"line":123,"column":5}},"45":{"start":{"line":117,"column":6},"end":{"line":122,"column":7}},"46":{"start":{"line":118,"column":8},"end":{"line":119,"column":72}},"47":{"start":{"line":121,"column":8},"end":{"line":121,"column":41}},"48":{"start":{"line":125,"column":4},"end":{"line":136,"column":5}},"49":{"start":{"line":126,"column":6},"end":{"line":126,"column":51}},"50":{"start":{"line":130,"column":6},"end":{"line":135,"column":7}},"51":{"start":{"line":132,"column":8},"end":{"line":132,"column":37}},"52":{"start":{"line":134,"column":8},"end":{"line":134,"column":20}},"53":{"start":{"line":140,"column":0},"end":{"line":152,"column":1}},"54":{"start":{"line":143,"column":2},"end":{"line":149,"column":3}},"55":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"56":{"start":{"line":145,"column":6},"end":{"line":145,"column":15}},"57":{"start":{"line":148,"column":4},"end":{"line":148,"column":13}},"58":{"start":{"line":151,"column":2},"end":{"line":151,"column":10}},"59":{"start":{"line":161,"column":0},"end":{"line":173,"column":2}},"60":{"start":{"line":162,"column":2},"end":{"line":162,"column":49}},"61":{"start":{"line":163,"column":2},"end":{"line":163,"column":41}},"62":{"start":{"line":164,"column":2},"end":{"line":164,"column":17}},"63":{"start":{"line":165,"column":2},"end":{"line":169,"column":3}},"64":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"65":{"start":{"line":167,"column":6},"end":{"line":167,"column":43}},"66":{"start":{"line":170,"column":2},"end":{"line":170,"column":44}},"67":{"start":{"line":172,"column":2},"end":{"line":172,"column":52}},"68":{"start":{"line":182,"column":0},"end":{"line":186,"column":2}},"69":{"start":{"line":183,"column":2},"end":{"line":183,"column":24}},"70":{"start":{"line":184,"column":2},"end":{"line":184,"column":61}},"71":{"start":{"line":184,"column":51},"end":{"line":184,"column":61}},"72":{"start":{"line":185,"column":2},"end":{"line":185,"column":21}},"73":{"start":{"line":192,"column":0},"end":{"line":194,"column":1}},"74":{"start":{"line":193,"column":2},"end":{"line":193,"column":25}},"75":{"start":{"line":195,"column":0},"end":{"line":198,"column":1}},"76":{"start":{"line":196,"column":2},"end":{"line":196,"column":66}},"77":{"start":{"line":197,"column":2},"end":{"line":197,"column":60}},"78":{"start":{"line":197,"column":34},"end":{"line":197,"column":56}},"79":{"start":{"line":199,"column":0},"end":{"line":202,"column":1}},"80":{"start":{"line":200,"column":2},"end":{"line":200,"column":66}},"81":{"start":{"line":201,"column":2},"end":{"line":201,"column":60}},"82":{"start":{"line":201,"column":34},"end":{"line":201,"column":56}},"83":{"start":{"line":203,"column":0},"end":{"line":251,"column":1}},"84":{"start":{"line":204,"column":2},"end":{"line":206,"column":3}},"85":{"start":{"line":205,"column":4},"end":{"line":205,"column":23}},"86":{"start":{"line":207,"column":2},"end":{"line":207,"column":66}},"87":{"start":{"line":208,"column":2},"end":{"line":208,"column":21}},"88":{"start":{"line":210,"column":2},"end":{"line":245,"column":3}},"89":{"start":{"line":211,"column":4},"end":{"line":243,"column":5}},"90":{"start":{"line":212,"column":6},"end":{"line":212,"column":72}},"91":{"start":{"line":213,"column":11},"end":{"line":243,"column":5}},"92":{"start":{"line":214,"column":6},"end":{"line":214,"column":61}},"93":{"start":{"line":215,"column":6},"end":{"line":215,"column":59}},"94":{"start":{"line":215,"column":33},"end":{"line":215,"column":55}},"95":{"start":{"line":216,"column":11},"end":{"line":243,"column":5}},"96":{"start":{"line":217,"column":6},"end":{"line":217,"column":61}},"97":{"start":{"line":218,"column":6},"end":{"line":218,"column":59}},"98":{"start":{"line":218,"column":33},"end":{"line":218,"column":55}},"99":{"start":{"line":219,"column":11},"end":{"line":243,"column":5}},"100":{"start":{"line":220,"column":6},"end":{"line":220,"column":32}},"101":{"start":{"line":221,"column":6},"end":{"line":221,"column":32}},"102":{"start":{"line":222,"column":6},"end":{"line":222,"column":14}},"103":{"start":{"line":223,"column":6},"end":{"line":242,"column":7}},"104":{"start":{"line":224,"column":8},"end":{"line":224,"column":22}},"105":{"start":{"line":225,"column":8},"end":{"line":241,"column":9}},"106":{"start":{"line":226,"column":10},"end":{"line":228,"column":11}},"107":{"start":{"line":227,"column":12},"end":{"line":227,"column":37}},"108":{"start":{"line":229,"column":10},"end":{"line":240,"column":11}},"109":{"start":{"line":230,"column":12},"end":{"line":231,"column":54}},"110":{"start":{"line":232,"column":17},"end":{"line":240,"column":11}},"111":{"start":{"line":233,"column":12},"end":{"line":233,"column":42}},"112":{"start":{"line":234,"column":17},"end":{"line":240,"column":11}},"113":{"start":{"line":235,"column":12},"end":{"line":235,"column":35}},"114":{"start":{"line":236,"column":17},"end":{"line":240,"column":11}},"115":{"start":{"line":237,"column":12},"end":{"line":237,"column":31}},"116":{"start":{"line":238,"column":17},"end":{"line":240,"column":11}},"117":{"start":{"line":239,"column":12},"end":{"line":239,"column":37}},"118":{"start":{"line":244,"column":4},"end":{"line":244,"column":22}},"119":{"start":{"line":244,"column":13},"end":{"line":244,"column":22}},"120":{"start":{"line":247,"column":2},"end":{"line":250,"column":27}},"121":{"start":{"line":261,"column":0},"end":{"line":261,"column":84}},"122":{"start":{"line":267,"column":0},"end":{"line":267,"column":34}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"4":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":59,"column":6}},{"start":{"line":59,"column":6},"end":{"line":59,"column":6}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]},"6":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":23}},{"start":{"line":60,"column":27},"end":{"line":60,"column":45}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"8":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"9":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"10":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"11":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"12":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":10},"end":{"line":130,"column":25}},{"start":{"line":131,"column":10},"end":{"line":131,"column":53}}]},"13":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"14":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"15":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":8},"end":{"line":166,"column":29}},{"start":{"line":166,"column":33},"end":{"line":166,"column":45}}]},"16":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"17":{"line":184,"type":"binary-expr","locations":[{"start":{"line":184,"column":6},"end":{"line":184,"column":25}},{"start":{"line":184,"column":29},"end":{"line":184,"column":49}}]},"18":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"19":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":6},"end":{"line":204,"column":9}},{"start":{"line":204,"column":13},"end":{"line":204,"column":45}}]},"20":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"21":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"22":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":11},"end":{"line":213,"column":11}},{"start":{"line":213,"column":11},"end":{"line":213,"column":11}}]},"23":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":11},"end":{"line":216,"column":11}},{"start":{"line":216,"column":11},"end":{"line":216,"column":11}}]},"24":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":11},"end":{"line":219,"column":11}},{"start":{"line":219,"column":11},"end":{"line":219,"column":11}}]},"25":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":225,"column":8}},{"start":{"line":225,"column":8},"end":{"line":225,"column":8}}]},"26":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":10},"end":{"line":226,"column":10}},{"start":{"line":226,"column":10},"end":{"line":226,"column":10}}]},"27":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":10},"end":{"line":229,"column":10}},{"start":{"line":229,"column":10},"end":{"line":229,"column":10}}]},"28":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":17},"end":{"line":232,"column":17}},{"start":{"line":232,"column":17},"end":{"line":232,"column":17}}]},"29":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":17},"end":{"line":234,"column":17}},{"start":{"line":234,"column":17},"end":{"line":234,"column":17}}]},"30":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":17},"end":{"line":236,"column":17}},{"start":{"line":236,"column":17},"end":{"line":236,"column":17}}]},"31":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":17},"end":{"line":238,"column":17}},{"start":{"line":238,"column":17},"end":{"line":238,"column":17}}]},"32":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseCollection = require('../../collection'),","    Collection = require('mongodb').Collection,","    utils = require('../../utils');","","/**"," * A [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) collection implementation."," *"," * All methods methods from the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver are copied and wrapped in queue management."," *"," * @inherits Collection"," * @api private"," */","","function NativeCollection() {","  this.collection = null;","  MongooseCollection.apply(this, arguments);","}","","/*!"," * Inherit from abstract Collection."," */","","NativeCollection.prototype.__proto__ = MongooseCollection.prototype;","","/**"," * Called when the connection opens."," *"," * @api private"," */","","NativeCollection.prototype.onOpen = function() {","  var _this = this;","","  // always get a new collection in case the user changed host:port","  // of parent db instance when re-opening the connection.","","  if (!_this.opts.capped.size) {","    // non-capped","    callback(null, _this.conn.db.collection(_this.name));","    return _this.collection;","  }","","  // capped","  return _this.conn.db.collection(_this.name, function(err, c) {","    if (err) return callback(err);","","    // discover if this collection exists and if it is capped","    _this.conn.db.listCollections({name: _this.name}).toArray(function(err, docs) {","      if (err) {","        return callback(err);","      }","      var doc = docs[0];","      var exists = !!doc;","","      if (exists) {","        if (doc.options && doc.options.capped) {","          callback(null, c);","        } else {","          var msg = 'A non-capped collection exists with the name: ' + _this.name + '\\n\\n'","              + ' To use this collection as a capped collection, please '","              + 'first convert it.\\n'","              + ' http://www.mongodb.org/display/DOCS/Capped+Collections#CappedCollections-Convertingacollectiontocapped';","          err = new Error(msg);","          callback(err);","        }","      } else {","        // create","        var opts = utils.clone(_this.opts.capped);","        opts.capped = true;","        _this.conn.db.createCollection(_this.name, opts, callback);","      }","    });","  });","","  function callback(err, collection) {","    if (err) {","      // likely a strict mode error","      _this.conn.emit('error', err);","    } else {","      _this.collection = collection;","      MongooseCollection.prototype.onOpen.call(_this);","    }","  }","};","","/**"," * Called when the connection closes"," *"," * @api private"," */","","NativeCollection.prototype.onClose = function() {","  MongooseCollection.prototype.onClose.call(this);","};","","/*!"," * Copy the collection methods and make them subject to queues"," */","","function iter(i) {","  NativeCollection.prototype[i] = function() {","    if (this.buffer) {","      this.addQueue(i, arguments);","      return;","    }","","    var collection = this.collection;","    var args = arguments;","    var _this = this;","    var debug = _this.conn.base.options.debug;","","    if (debug) {","      if (typeof debug === 'function') {","        debug.apply(_this,","          [_this.name, i].concat(utils.args(args, 0, args.length - 1)));","      } else {","        this.$print(_this.name, i, args);","      }","    }","","    try {","      return collection[i].apply(collection, args);","    } catch (error) {","      // Collection operation may throw because of max bson size, catch it here","      // See gh-3906","      if (args.length > 0 &&","          typeof args[args.length - 1] === 'function') {","        args[args.length - 1](error);","      } else {","        throw error;","      }","    }","  };","}","","for (var i in Collection.prototype) {","  // Janky hack to work around gh-3005 until we can get rid of the mongoose","  // collection abstraction","  try {","    if (typeof Collection.prototype[i] !== 'function') {","      continue;","    }","  } catch (e) {","    continue;","  }","","  iter(i);","}","","/**"," * Debug print helper"," *"," * @api public"," * @method $print"," */","","NativeCollection.prototype.$print = function(name, i, args) {","  var moduleName = '\\x1B[0;36mMongoose:\\x1B[0m ';","  var functionCall = [name, i].join('.');","  var _args = [];","  for (var j = args.length - 1; j >= 0; --j) {","    if (this.$format(args[j]) || _args.length) {","      _args.unshift(this.$format(args[j]));","    }","  }","  var params = '(' + _args.join(', ') + ')';","","  console.error(moduleName + functionCall + params);","};","","/**"," * Formatter for debug print args"," *"," * @api public"," * @method $format"," */","","NativeCollection.prototype.$format = function(arg) {","  var type = typeof arg;","  if (type === 'function' || type === 'undefined') return '';","  return format(arg);","};","","/*!"," * Debug print helper"," */","","function map(o) {","  return format(o, true);","}","function formatObjectId(x, key) {","  var representation = 'ObjectId(\"' + x[key].toHexString() + '\")';","  x[key] = {inspect: function() { return representation; }};","}","function formatDate(x, key) {","  var representation = 'new Date(\"' + x[key].toUTCString() + '\")';","  x[key] = {inspect: function() { return representation; }};","}","function format(obj, sub) {","  if (obj && typeof obj.toBSON === 'function') {","    obj = obj.toBSON();","  }","  var x = utils.clone(obj, {retainKeyOrder: 1, transform: false});","  var representation;","","  if (x != null) {","    if (x.constructor.name === 'Binary') {","      x = 'BinData(' + x.sub_type + ', \"' + x.toString('base64') + '\")';","    } else if (x.constructor.name === 'ObjectID') {","      representation = 'ObjectId(\"' + x.toHexString() + '\")';","      x = {inspect: function() { return representation; }};","    } else if (x.constructor.name === 'Date') {","      representation = 'new Date(\"' + x.toUTCString() + '\")';","      x = {inspect: function() { return representation; }};","    } else if (x.constructor.name === 'Object') {","      var keys = Object.keys(x);","      var numKeys = keys.length;","      var key;","      for (var i = 0; i < numKeys; ++i) {","        key = keys[i];","        if (x[key]) {","          if (typeof x[key].toBSON === 'function') {","            x[key] = x[key].toBSON();","          }","          if (x[key].constructor.name === 'Binary') {","            x[key] = 'BinData(' + x[key].sub_type + ', \"' +","              x[key].buffer.toString('base64') + '\")';","          } else if (x[key].constructor.name === 'Object') {","            x[key] = format(x[key], true);","          } else if (x[key].constructor.name === 'ObjectID') {","            formatObjectId(x, key);","          } else if (x[key].constructor.name === 'Date') {","            formatDate(x, key);","          } else if (Array.isArray(x[key])) {","            x[key] = x[key].map(map);","          }","        }","      }","    }","    if (sub) return x;","  }","","  return require('util')","  .inspect(x, false, 10, true)","  .replace(/\\n/g, '')","  .replace(/\\s{2,}/g, ' ');","}","","/**"," * Retreives information about this collections indexes."," *"," * @param {Function} callback"," * @method getIndexes"," * @api public"," */","","NativeCollection.prototype.getIndexes = NativeCollection.prototype.indexInformation;","","/*!"," * Module exports."," */","","module.exports = NativeCollection;",""],"l":{"5":1,"18":1,"19":0,"20":0,"27":1,"35":1,"36":0,"41":0,"43":0,"44":0,"48":0,"49":0,"52":0,"53":0,"54":0,"56":0,"57":0,"59":0,"60":0,"61":0,"63":0,"67":0,"68":0,"72":0,"73":0,"74":0,"79":1,"80":0,"82":0,"84":0,"85":0,"96":1,"97":0,"104":1,"105":47,"106":0,"107":0,"108":0,"111":0,"112":0,"113":0,"114":0,"116":0,"117":0,"118":0,"121":0,"125":0,"126":0,"130":0,"132":0,"134":0,"140":1,"143":52,"144":52,"145":0,"148":5,"151":47,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"170":0,"172":0,"182":1,"183":0,"184":0,"185":0,"192":1,"193":0,"195":1,"196":0,"197":0,"199":1,"200":0,"201":0,"203":1,"204":0,"205":0,"207":0,"208":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"229":0,"230":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"244":0,"247":0,"261":1,"267":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/collection.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1,"49":0,"50":1,"51":0,"52":1,"53":0,"54":1,"55":0,"56":1,"57":0,"58":1,"59":0,"60":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"fnMap":{"1":{"name":"Collection","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":38}}},"2":{"name":"(anonymous_2)","line":81,"loc":{"start":{"line":81,"column":30},"end":{"line":81,"column":41}}},"3":{"name":"(anonymous_3)","line":92,"loc":{"start":{"line":92,"column":31},"end":{"line":92,"column":42}}},"4":{"name":"(anonymous_4)","line":107,"loc":{"start":{"line":107,"column":32},"end":{"line":107,"column":53}}},"5":{"name":"(anonymous_5)","line":118,"loc":{"start":{"line":118,"column":31},"end":{"line":118,"column":42}}},"6":{"name":"(anonymous_6)","line":128,"loc":{"start":{"line":128,"column":19},"end":{"line":128,"column":30}}},"7":{"name":"(anonymous_7)","line":138,"loc":{"start":{"line":138,"column":35},"end":{"line":138,"column":46}}},"8":{"name":"(anonymous_8)","line":146,"loc":{"start":{"line":146,"column":37},"end":{"line":146,"column":48}}},"9":{"name":"(anonymous_9)","line":154,"loc":{"start":{"line":154,"column":31},"end":{"line":154,"column":42}}},"10":{"name":"(anonymous_10)","line":162,"loc":{"start":{"line":162,"column":28},"end":{"line":162,"column":39}}},"11":{"name":"(anonymous_11)","line":170,"loc":{"start":{"line":170,"column":30},"end":{"line":170,"column":41}}},"12":{"name":"(anonymous_12)","line":178,"loc":{"start":{"line":178,"column":28},"end":{"line":178,"column":39}}},"13":{"name":"(anonymous_13)","line":186,"loc":{"start":{"line":186,"column":30},"end":{"line":186,"column":41}}},"14":{"name":"(anonymous_14)","line":194,"loc":{"start":{"line":194,"column":34},"end":{"line":194,"column":45}}},"15":{"name":"(anonymous_15)","line":202,"loc":{"start":{"line":202,"column":33},"end":{"line":202,"column":44}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"3":{"start":{"line":19,"column":0},"end":{"line":46,"column":1}},"4":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":14}},"6":{"start":{"line":23,"column":2},"end":{"line":25,"column":3}},"7":{"start":{"line":24,"column":4},"end":{"line":24,"column":21}},"8":{"start":{"line":27,"column":2},"end":{"line":29,"column":28}},"9":{"start":{"line":31,"column":2},"end":{"line":33,"column":3}},"10":{"start":{"line":32,"column":4},"end":{"line":32,"column":38}},"11":{"start":{"line":35,"column":2},"end":{"line":35,"column":19}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":19}},"13":{"start":{"line":37,"column":2},"end":{"line":37,"column":29}},"14":{"start":{"line":38,"column":2},"end":{"line":38,"column":19}},"15":{"start":{"line":39,"column":2},"end":{"line":39,"column":18}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":41}},"17":{"start":{"line":41,"column":2},"end":{"line":41,"column":36}},"18":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"19":{"start":{"line":44,"column":4},"end":{"line":44,"column":18}},"20":{"start":{"line":55,"column":0},"end":{"line":55,"column":26}},"21":{"start":{"line":64,"column":0},"end":{"line":64,"column":36}},"22":{"start":{"line":73,"column":0},"end":{"line":73,"column":26}},"23":{"start":{"line":81,"column":0},"end":{"line":84,"column":2}},"24":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"25":{"start":{"line":83,"column":2},"end":{"line":83,"column":17}},"26":{"start":{"line":92,"column":0},"end":{"line":96,"column":2}},"27":{"start":{"line":93,"column":2},"end":{"line":95,"column":3}},"28":{"start":{"line":94,"column":4},"end":{"line":94,"column":23}},"29":{"start":{"line":107,"column":0},"end":{"line":110,"column":2}},"30":{"start":{"line":108,"column":2},"end":{"line":108,"column":32}},"31":{"start":{"line":109,"column":2},"end":{"line":109,"column":14}},"32":{"start":{"line":118,"column":0},"end":{"line":132,"column":2}},"33":{"start":{"line":119,"column":2},"end":{"line":125,"column":3}},"34":{"start":{"line":120,"column":4},"end":{"line":124,"column":5}},"35":{"start":{"line":121,"column":6},"end":{"line":121,"column":53}},"36":{"start":{"line":123,"column":6},"end":{"line":123,"column":59}},"37":{"start":{"line":126,"column":2},"end":{"line":126,"column":18}},"38":{"start":{"line":127,"column":2},"end":{"line":127,"column":19}},"39":{"start":{"line":128,"column":2},"end":{"line":130,"column":5}},"40":{"start":{"line":129,"column":4},"end":{"line":129,"column":32}},"41":{"start":{"line":131,"column":2},"end":{"line":131,"column":14}},"42":{"start":{"line":138,"column":0},"end":{"line":140,"column":2}},"43":{"start":{"line":139,"column":2},"end":{"line":139,"column":68}},"44":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"45":{"start":{"line":147,"column":2},"end":{"line":147,"column":70}},"46":{"start":{"line":154,"column":0},"end":{"line":156,"column":2}},"47":{"start":{"line":155,"column":2},"end":{"line":155,"column":64}},"48":{"start":{"line":162,"column":0},"end":{"line":164,"column":2}},"49":{"start":{"line":163,"column":2},"end":{"line":163,"column":61}},"50":{"start":{"line":170,"column":0},"end":{"line":172,"column":2}},"51":{"start":{"line":171,"column":2},"end":{"line":171,"column":63}},"52":{"start":{"line":178,"column":0},"end":{"line":180,"column":2}},"53":{"start":{"line":179,"column":2},"end":{"line":179,"column":61}},"54":{"start":{"line":186,"column":0},"end":{"line":188,"column":2}},"55":{"start":{"line":187,"column":2},"end":{"line":187,"column":63}},"56":{"start":{"line":194,"column":0},"end":{"line":196,"column":2}},"57":{"start":{"line":195,"column":2},"end":{"line":195,"column":67}},"58":{"start":{"line":202,"column":0},"end":{"line":204,"column":2}},"59":{"start":{"line":203,"column":2},"end":{"line":203,"column":66}},"60":{"start":{"line":210,"column":0},"end":{"line":210,"column":28}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"3":{"line":27,"type":"cond-expr","locations":[{"start":{"line":28,"column":8},"end":{"line":28,"column":12}},{"start":{"line":29,"column":8},"end":{"line":29,"column":27}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":2},"end":{"line":31,"column":2}},{"start":{"line":31,"column":2},"end":{"line":31,"column":2}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":2},"end":{"line":93,"column":2}},{"start":{"line":93,"column":2},"end":{"line":93,"column":2}}]},"7":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]}},"code":["/*!"," * Module dependencies."," */","","var EventEmitter = require('events').EventEmitter;","var STATES = require('./connectionstate');","","/**"," * Abstract Collection constructor"," *"," * This is the base class that drivers inherit from and implement."," *"," * @param {String} name name of the collection"," * @param {Connection} conn A MongooseConnection instance"," * @param {Object} opts optional collection options"," * @api public"," */","","function Collection(name, conn, opts) {","  if (opts === void 0) {","    opts = {};","  }","  if (opts.capped === void 0) {","    opts.capped = {};","  }","","  opts.bufferCommands = undefined === opts.bufferCommands","      ? true","      : opts.bufferCommands;","","  if (typeof opts.capped === 'number') {","    opts.capped = {size: opts.capped};","  }","","  this.opts = opts;","  this.name = name;","  this.collectionName = name;","  this.conn = conn;","  this.queue = [];","  this.buffer = this.opts.bufferCommands;","  this.emitter = new EventEmitter();","","  if (STATES.connected === this.conn.readyState) {","    this.onOpen();","  }","}","","/**"," * The collection name"," *"," * @api public"," * @property name"," */","","Collection.prototype.name;","","/**"," * The collection name"," *"," * @api public"," * @property collectionName"," */","","Collection.prototype.collectionName;","","/**"," * The Connection instance"," *"," * @api public"," * @property conn"," */","","Collection.prototype.conn;","","/**"," * Called when the database connects"," *"," * @api private"," */","","Collection.prototype.onOpen = function() {","  this.buffer = false;","  this.doQueue();","};","","/**"," * Called when the database disconnects"," *"," * @api private"," */","","Collection.prototype.onClose = function() {","  if (this.opts.bufferCommands) {","    this.buffer = true;","  }","};","","/**"," * Queues a method for later execution when its"," * database connection opens."," *"," * @param {String} name name of the method to queue"," * @param {Array} args arguments to pass to the method when executed"," * @api private"," */","","Collection.prototype.addQueue = function(name, args) {","  this.queue.push([name, args]);","  return this;","};","","/**"," * Executes all queued methods and clears the queue."," *"," * @api private"," */","","Collection.prototype.doQueue = function() {","  for (var i = 0, l = this.queue.length; i < l; i++) {","    if (typeof this.queue[i][0] === 'function') {","      this.queue[i][0].apply(this, this.queue[i][1]);","    } else {","      this[this.queue[i][0]].apply(this, this.queue[i][1]);","    }","  }","  this.queue = [];","  var _this = this;","  process.nextTick(function() {","    _this.emitter.emit('queue');","  });","  return this;","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.ensureIndex = function() {","  throw new Error('Collection#ensureIndex unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.findAndModify = function() {","  throw new Error('Collection#findAndModify unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.findOne = function() {","  throw new Error('Collection#findOne unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.find = function() {","  throw new Error('Collection#find unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.insert = function() {","  throw new Error('Collection#insert unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.save = function() {","  throw new Error('Collection#save unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.update = function() {","  throw new Error('Collection#update unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.getIndexes = function() {","  throw new Error('Collection#getIndexes unimplemented by driver');","};","","/**"," * Abstract method that drivers must implement."," */","","Collection.prototype.mapReduce = function() {","  throw new Error('Collection#mapReduce unimplemented by driver');","};","","/*!"," * Module exports."," */","","module.exports = Collection;",""],"l":{"5":1,"6":1,"19":1,"20":0,"21":0,"23":0,"24":0,"27":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"43":0,"44":0,"55":1,"64":1,"73":1,"81":1,"82":0,"83":0,"92":1,"93":0,"94":0,"107":1,"108":0,"109":0,"118":1,"119":0,"120":0,"121":0,"123":0,"126":0,"127":0,"128":0,"129":0,"131":0,"138":1,"139":0,"146":1,"147":0,"154":1,"155":0,"162":1,"163":0,"170":1,"171":0,"178":1,"179":0,"186":1,"187":0,"194":1,"195":0,"202":1,"203":0,"210":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/disconnected.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/error/disconnected.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"DisconnectedError","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":45}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}},"2":{"start":{"line":16,"column":0},"end":{"line":26,"column":1}},"3":{"start":{"line":17,"column":2},"end":{"line":19,"column":55}},"4":{"start":{"line":20,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":34}},"6":{"start":{"line":23,"column":4},"end":{"line":23,"column":35}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":34}},"8":{"start":{"line":32,"column":0},"end":{"line":32,"column":69}},"9":{"start":{"line":33,"column":0},"end":{"line":33,"column":56}},"10":{"start":{"line":40,"column":0},"end":{"line":40,"column":35}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]}},"code":["/*!"," * Module dependencies."," */","","var MongooseError = require('../error.js');","","/**"," * Casting Error constructor."," *"," * @param {String} type"," * @param {String} value"," * @inherits MongooseError"," * @api private"," */","","function DisconnectedError(connectionString) {","  MongooseError.call(this, 'Ran out of retries trying to reconnect to \"' +","    connectionString + '\". Try setting `server.reconnectTries` and ' +","    '`server.reconnectInterval` to something higher.');","  if (Error.captureStackTrace) {","    Error.captureStackTrace(this);","  } else {","    this.stack = new Error().stack;","  }","  this.name = 'DisconnectedError';","}","","/*!"," * Inherits from MongooseError."," */","","DisconnectedError.prototype = Object.create(MongooseError.prototype);","DisconnectedError.prototype.constructor = MongooseError;","","","/*!"," * exports"," */","","module.exports = DisconnectedError;",""],"l":{"5":1,"16":1,"17":0,"20":0,"21":0,"23":0,"25":0,"32":1,"33":1,"40":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/ES6Promise.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/ES6Promise.js","s":{"1":1,"2":0,"3":1,"4":0,"5":1},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"ES6Promise","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":35}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":20,"column":1}},"2":{"start":{"line":19,"column":2},"end":{"line":19,"column":76}},"3":{"start":{"line":22,"column":0},"end":{"line":24,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":27}},"5":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}}},"branchMap":{},"code":["/**"," * ES6 Promise wrapper constructor."," *"," * Promises are returned from executed queries. Example:"," *"," *     var query = Candy.find({ bar: true });"," *     var promise = query.exec();"," *"," * DEPRECATED. Mongoose 5.0 will use native promises by default (or bluebird,"," * if native promises are not present) but still"," * support plugging in your own ES6-compatible promises library. Mongoose 5.0"," * will **not** support mpromise."," *"," * @param {Function} fn a function which will be called when the promise is resolved that accepts `fn(err, ...){}` as signature"," * @api public"," */","","function ES6Promise() {","  throw new Error('Can\\'t use ES6 promise with mpromise style constructor');","}","","ES6Promise.use = function(Promise) {","  ES6Promise.ES6 = Promise;","};","","module.exports = ES6Promise;",""],"l":{"18":1,"19":0,"22":1,"23":0,"26":1}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/browser.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/browser.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0},"b":{"1":[0,1]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":7},"end":{"line":13,"column":18}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":7},"end":{"line":16,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":12,"column":0},"end":{"line":19,"column":3}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":33}},"4":{"start":{"line":17,"column":4},"end":{"line":17,"column":29}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":42}},"6":{"start":{"line":37,"column":0},"end":{"line":37,"column":35}},"7":{"start":{"line":52,"column":0},"end":{"line":52,"column":37}},"8":{"start":{"line":78,"column":0},"end":{"line":78,"column":35}},"9":{"start":{"line":86,"column":0},"end":{"line":86,"column":47}},"10":{"start":{"line":100,"column":0},"end":{"line":100,"column":48}},"11":{"start":{"line":109,"column":0},"end":{"line":109,"column":38}},"12":{"start":{"line":117,"column":0},"end":{"line":117,"column":55}},"13":{"start":{"line":123,"column":0},"end":{"line":126,"column":1}},"14":{"start":{"line":124,"column":2},"end":{"line":124,"column":35}},"15":{"start":{"line":125,"column":2},"end":{"line":125,"column":25}}},"branchMap":{"1":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":0},"end":{"line":123,"column":0}},{"start":{"line":123,"column":0},"end":{"line":123,"column":0}}]}},"code":["/* eslint-env browser */","","var PromiseProvider = require('./promise_provider');","","/**"," * The Mongoose [Promise](#promise_Promise) constructor."," *"," * @method Promise"," * @api public"," */","","Object.defineProperty(exports, 'Promise', {","  get: function() {","    return PromiseProvider.get();","  },","  set: function(lib) {","    PromiseProvider.set(lib);","  }","});","","/**"," * Storage layer for mongoose promises"," *"," * @method PromiseProvider"," * @api public"," */","","exports.PromiseProvider = PromiseProvider;","","/**"," * The [MongooseError](#error_MongooseError) constructor."," *"," * @method Error"," * @api public"," */","","exports.Error = require('./error');","","/**"," * The Mongoose [Schema](#schema_Schema) constructor"," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var Schema = mongoose.Schema;"," *     var CatSchema = new Schema(..);"," *"," * @method Schema"," * @api public"," */","","exports.Schema = require('./schema');","","/**"," * The various Mongoose Types."," *"," * ####Example:"," *"," *     var mongoose = require('mongoose');"," *     var array = mongoose.Types.Array;"," *"," * ####Types:"," *"," * - [ObjectId](#types-objectid-js)"," * - [Buffer](#types-buffer-js)"," * - [SubDocument](#types-embedded-js)"," * - [Array](#types-array-js)"," * - [DocumentArray](#types-documentarray-js)"," *"," * Using this exposed access to the `ObjectId` type, we can construct ids on demand."," *"," *     var ObjectId = mongoose.Types.ObjectId;"," *     var id1 = new ObjectId;"," *"," * @property Types"," * @api public"," */","exports.Types = require('./types');","","/**"," * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor"," *"," * @method VirtualType"," * @api public"," */","exports.VirtualType = require('./virtualtype');","","/**"," * The various Mongoose SchemaTypes."," *"," * ####Note:"," *"," * _Alias of mongoose.Schema.Types for backwards compatibility._"," *"," * @property SchemaTypes"," * @see Schema.SchemaTypes #schema_Schema.Types"," * @api public"," */","","exports.SchemaType = require('./schematype.js');","","/**"," * Internal utils"," *"," * @property utils"," * @api private"," */","","exports.utils = require('./utils.js');","","/**"," * The Mongoose browser [Document](#document-js) constructor."," *"," * @method Document"," * @api public"," */","exports.Document = require('./document_provider.js')();","","/*!"," * Module exports."," */","","if (typeof window !== 'undefined') {","  window.mongoose = module.exports;","  window.Buffer = Buffer;","}",""],"l":{"3":1,"12":1,"14":0,"17":0,"28":1,"37":1,"52":1,"78":1,"86":1,"100":1,"109":1,"117":1,"123":1,"124":0,"125":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document_provider.web.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/lib/document_provider.web.js","s":{"1":1,"2":1,"3":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":17},"end":{"line":15,"column":28}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":54}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}}},"branchMap":{},"code":["'use strict';","","/* eslint-env browser */","","/*!"," * Module dependencies."," */","var BrowserDocument = require('./browserDocument.js');","","/**"," * Returns the Document constructor for the current context"," *"," * @api private"," */","module.exports = function() {","  return BrowserDocument;","};",""],"l":{"8":1,"15":1,"16":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/static.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/static.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":29},"end":{"line":5,"column":48}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":27}}},"3":{"name":"(anonymous_3)","line":13,"loc":{"start":{"line":13,"column":27},"end":{"line":13,"column":41}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":36}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":48}},"3":{"start":{"line":5,"column":0},"end":{"line":22,"column":16}},"4":{"start":{"line":6,"column":2},"end":{"line":10,"column":3}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":18}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":25}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":21}},"8":{"start":{"line":12,"column":2},"end":{"line":20,"column":5}},"9":{"start":{"line":13,"column":4},"end":{"line":19,"column":7}},"10":{"start":{"line":14,"column":6},"end":{"line":18,"column":7}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":47}},"13":{"start":{"line":17,"column":8},"end":{"line":17,"column":18}},"14":{"start":{"line":21,"column":2},"end":{"line":21,"column":15}},"15":{"start":{"line":24,"column":0},"end":{"line":24,"column":56}}},"branchMap":{"1":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":6},"end":{"line":14,"column":6}},{"start":{"line":14,"column":6},"end":{"line":14,"column":6}}]}},"code":["","var static = require('node-static');","var server = new static.Server('.', {cache: 0});","","require('http').createServer(function(req, res) {","  if (req.url === '/favicon.ico') {","    req.destroy();","    res.statusCode = 204;","    return res.end();","  }","","  req.on('end', function() {","    server.serve(req, res, function(err) {","      if (err) {","        console.error(err, req.url);","        res.writeHead(err.status, err.headers);","        res.end();","      }","    });","  });","  req.resume();","}).listen(8088);","","console.error('now listening on http://localhost:8088');",""],"l":{"2":2,"3":0,"5":0,"6":0,"7":0,"8":0,"9":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"21":0,"24":0}},"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/website.js":{"path":"/home/travis/build/npmtest/node-npmtest-mongoose/node_modules/mongoose/website.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"getVersion","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":22}}},"2":{"name":"getUnstable","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":26}}},"3":{"name":"(anonymous_3)","line":30,"loc":{"start":{"line":30,"column":16},"end":{"line":30,"column":28}}},"4":{"name":"jadeify","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":45}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":37},"end":{"line":52,"column":56}}},"6":{"name":"(anonymous_6)","line":59,"loc":{"start":{"line":59,"column":31},"end":{"line":59,"column":45}}},"7":{"name":"(anonymous_7)","line":69,"loc":{"start":{"line":69,"column":14},"end":{"line":69,"column":29}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":45},"end":{"line":74,"column":65}}},"9":{"name":"(anonymous_9)","line":84,"loc":{"start":{"line":84,"column":20},"end":{"line":84,"column":35}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":23}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":27}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":45}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":50}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":42}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":40}},"9":{"start":{"line":12,"column":0},"end":{"line":25,"column":1}},"10":{"start":{"line":13,"column":2},"end":{"line":13,"column":86}},"11":{"start":{"line":14,"column":2},"end":{"line":23,"column":3}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":38}},"13":{"start":{"line":16,"column":4},"end":{"line":18,"column":5}},"14":{"start":{"line":17,"column":6},"end":{"line":17,"column":15}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":44}},"16":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"17":{"start":{"line":21,"column":6},"end":{"line":21,"column":22}},"18":{"start":{"line":24,"column":2},"end":{"line":24,"column":36}},"19":{"start":{"line":27,"column":0},"end":{"line":36,"column":1}},"20":{"start":{"line":28,"column":2},"end":{"line":28,"column":28}},"21":{"start":{"line":29,"column":2},"end":{"line":29,"column":27}},"22":{"start":{"line":30,"column":2},"end":{"line":32,"column":5}},"23":{"start":{"line":31,"column":4},"end":{"line":31,"column":27}},"24":{"start":{"line":33,"column":2},"end":{"line":33,"column":11}},"25":{"start":{"line":34,"column":2},"end":{"line":34,"column":15}},"26":{"start":{"line":35,"column":2},"end":{"line":35,"column":23}},"27":{"start":{"line":39,"column":0},"end":{"line":39,"column":31}},"28":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}},"29":{"start":{"line":42,"column":0},"end":{"line":42,"column":39}},"30":{"start":{"line":43,"column":0},"end":{"line":43,"column":33}},"31":{"start":{"line":45,"column":0},"end":{"line":67,"column":1}},"32":{"start":{"line":46,"column":2},"end":{"line":46,"column":26}},"33":{"start":{"line":47,"column":2},"end":{"line":47,"column":28}},"34":{"start":{"line":48,"column":2},"end":{"line":48,"column":18}},"35":{"start":{"line":49,"column":2},"end":{"line":49,"column":30}},"36":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"37":{"start":{"line":51,"column":2},"end":{"line":51,"column":24}},"38":{"start":{"line":52,"column":2},"end":{"line":66,"column":5}},"39":{"start":{"line":53,"column":4},"end":{"line":56,"column":5}},"40":{"start":{"line":54,"column":6},"end":{"line":54,"column":31}},"41":{"start":{"line":55,"column":6},"end":{"line":55,"column":13}},"42":{"start":{"line":58,"column":4},"end":{"line":58,"column":60}},"43":{"start":{"line":59,"column":4},"end":{"line":65,"column":7}},"44":{"start":{"line":60,"column":6},"end":{"line":64,"column":7}},"45":{"start":{"line":61,"column":8},"end":{"line":61,"column":52}},"46":{"start":{"line":63,"column":8},"end":{"line":63,"column":57}},"47":{"start":{"line":69,"column":0},"end":{"line":80,"column":3}},"48":{"start":{"line":70,"column":2},"end":{"line":70,"column":40}},"49":{"start":{"line":71,"column":2},"end":{"line":71,"column":35}},"50":{"start":{"line":73,"column":2},"end":{"line":79,"column":3}},"51":{"start":{"line":74,"column":4},"end":{"line":78,"column":7}},"52":{"start":{"line":75,"column":6},"end":{"line":77,"column":7}},"53":{"start":{"line":76,"column":8},"end":{"line":76,"column":41}},"54":{"start":{"line":82,"column":0},"end":{"line":82,"column":45}},"55":{"start":{"line":83,"column":0},"end":{"line":83,"column":38}},"56":{"start":{"line":84,"column":0},"end":{"line":87,"column":3}},"57":{"start":{"line":85,"column":2},"end":{"line":85,"column":49}},"58":{"start":{"line":86,"column":2},"end":{"line":86,"column":63}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":16},"end":{"line":15,"column":23}},{"start":{"line":15,"column":27},"end":{"line":15,"column":29}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":4}},{"start":{"line":16,"column":4},"end":{"line":16,"column":4}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":13}},{"start":{"line":20,"column":17},"end":{"line":20,"column":25}}]},"5":{"line":46,"type":"binary-expr","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":19}},{"start":{"line":46,"column":23},"end":{"line":46,"column":25}}]},"6":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"7":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":14},"end":{"line":58,"column":21}},{"start":{"line":58,"column":25},"end":{"line":58,"column":59}}]},"8":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"9":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":2},"end":{"line":73,"column":2}},{"start":{"line":73,"column":2},"end":{"line":73,"column":2}}]},"10":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]}},"code":["var fs = require('fs');","var jade = require('jade');","var package = require('./package');","var hl = require('./docs/helpers/highlight');","var linktype = require('./docs/helpers/linktype');","var href = require('./docs/helpers/href');","var klass = require('./docs/helpers/klass');","","// add custom jade filters","require('./docs/helpers/filters')(jade);","","function getVersion() {","  var hist = fs.readFileSync('./History.md', 'utf8').replace(/\\r/g, '\\n').split('\\n');","  for (var i = 0; i < hist.length; ++i) {","    var line = (hist[i] || '').trim();","    if (!line) {","      continue;","    }","    var match = /^\\s*([^\\s]+)\\s/.exec(line);","    if (match && match[1]) {","      return match[1];","    }","  }","  throw new Error('no match found');","}","","function getUnstable(ver) {","  ver = ver.replace('-pre');","  var spl = ver.split('.');","  spl = spl.map(function(i) {","    return parseInt(i, 10);","  });","  spl[1]++;","  spl[2] = 'x';","  return spl.join('.');","}","","// use last release","package.version = getVersion();","package.unstable = getUnstable(package.version);","","var filemap = require('./docs/source');","var files = Object.keys(filemap);","","function jadeify(filename, options, newfile) {","  options = options || {};","  options.package = package;","  options.hl = hl;","  options.linktype = linktype;","  options.href = href;","  options.klass = klass;","  jade.renderFile(filename, options, function(err, str) {","    if (err) {","      console.error(err.stack);","      return;","    }","","    newfile = newfile || filename.replace('.jade', '.html');","    fs.writeFile(newfile, str, function(err) {","      if (err) {","        console.error('could not write', err.stack);","      } else {","        console.log('%s : rendered ', new Date, newfile);","      }","    });","  });","}","","files.forEach(function(file) {","  var filename = __dirname + '/' + file;","  jadeify(filename, filemap[file]);","","  if (process.argv[2] === '--watch') {","    fs.watchFile(filename, {interval: 1000}, function(cur, prev) {","      if (cur.mtime > prev.mtime) {","        jadeify(filename, filemap[file]);","      }","    });","  }","});","","var acquit = require('./docs/source/acquit');","var acquitFiles = Object.keys(acquit);","acquitFiles.forEach(function(file) {","  var filename = __dirname + '/docs/acquit.jade';","  jadeify(filename, acquit[file], __dirname + '/docs/' + file);","});",""],"l":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"10":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"21":0,"24":0,"27":1,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"39":0,"40":0,"42":0,"43":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"59":0,"60":0,"61":0,"63":0,"69":0,"70":0,"71":0,"73":0,"74":0,"75":0,"76":0,"82":0,"83":0,"84":0,"85":0,"86":0}}}